From a94454e7a94358967d0a2a3f787e764bba7bde51 Mon Sep 17 00:00:00 2001
From: Florent Revest <revestflo@gmail.com>
Date: Sat, 21 Jul 2018 00:10:46 +0200
Subject: [PATCH] it7260_ts_i2c: Remove the differenciation of 'Ambient mode
 handling' which would cause touch issues on Asteroid once the device becomes
 suspended once

---
 drivers/input/touchscreen/it7260_ts_i2c.c | 76 +------------------------------
 1 file changed, 1 insertion(+), 75 deletions(-)

diff --git a/drivers/input/touchscreen/it7260_ts_i2c.c b/drivers/input/touchscreen/it7260_ts_i2c.c
index d84a11a6b588..13ab929cfb37 100644
--- a/drivers/input/touchscreen/it7260_ts_i2c.c
+++ b/drivers/input/touchscreen/it7260_ts_i2c.c
@@ -1015,81 +1015,7 @@ static void readTouchDataPoint_Ambient(void)
 	uint16_t x2, y2;
 
 	if (!isTouchLocked) {
-		i2c_read_data(BUF_QUERY, &devStatus, sizeof(devStatus));
-		if (!((devStatus & PT_INFO_BITS) & PT_INFO_YES)) {
-			/* LOGE("readTouchDataPoint_Ambient() called when no data available (0x%02X)\n", devStatus);*/
-			isTouchLocked = true;
-			wake_unlock(&touch_lock);
-			return;
-		}
-		if (i2c_read_data(BUF_POINT_INFO, (void *)&pointData, sizeof(pointData)) < 0) {
-			LOGE("readTouchDataPoint_Ambient() failed to read point data buffer\n");
-			isTouchLocked = true;
-			wake_unlock(&touch_lock);
-			return;
-		}
-		if ((pointData.flags & PD_FLAGS_DATA_TYPE_BITS) != PD_FLAGS_DATA_TYPE_TOUCH) {
-			if (pointData.flags == 16) {
-				LOGE("readTouchDataPoint_Ambient() send touch event by type 0x%02X\n", pointData.flags);
-			} else {
-				LOGE("readTouchDataPoint_Ambient() dropping non-point data of type 0x%02X\n", pointData.flags);
-				isTouchLocked = true;
-				wake_unlock(&touch_lock);
-				return;
-			}
-		}
-
-		if ((pointData.flags & PD_FLAGS_HAVE_FINGERS) & 0x03)
-			readFingerData(&x1, &y1, &pressure1, &x2, &y2, &pressure2, pointData.fd);
-
-		if ((pointData.palm & PD_PALM_FLAG_BIT)) {
-			if (hadFingerDown)
-				cancel_delayed_work(&gl_ts->exit_idle_work);
-			hadFingerDown = false;
-		}
-
-		if (pressure1 >= FD_PRESSURE_LIGHT || pressure2 >= FD_PRESSURE_LIGHT) {
-			if (hadFingerDown)
-				cancel_delayed_work(&gl_ts->exit_idle_work);
-			else
-				hadFingerDown = true;
-		} else if (hadFingerDown && (!(pointData.palm & PD_PALM_FLAG_BIT))) {
-			hadFingerDown = false;
-			suspend_touch_up = getMsTime();
-
-			cancel_delayed_work(&gl_ts->exit_idle_work);
-			if (lastTouch == TOUCH_UP)
-				touchMissed = true;
-			else
-				lastTouch = TOUCH_UP;
-
-			if (touchMissed || suspend_touch_up - suspend_touch_down < 700) {
-				if (touchMissed) {
-					LOGI("%s: touch down missed, send touch up\n",
-					     __func__);
-					touchMissed = false;
-				}
-				input_mt_slot(gl_ts->touch_dev, 0);
-				input_mt_report_slot_state(gl_ts->touch_dev, MT_TOOL_FINGER, true);
-				input_report_abs(gl_ts->touch_dev, ABS_MT_POSITION_X, 160);
-				input_report_abs(gl_ts->touch_dev, ABS_MT_POSITION_Y, 160);
-				input_sync(gl_ts->touch_dev);
-				input_mt_slot(gl_ts->touch_dev, 0);
-				input_mt_report_slot_state(gl_ts->touch_dev, MT_TOOL_FINGER, false);
-				input_sync(gl_ts->touch_dev);
-				wake_lock_timeout(&touch_time_lock, WAKELOCK_HOLD_MS);
-				last_time_exit_low = jiffies;
-			}
-			isTouchLocked = true;
-			wake_unlock(&touch_lock);
-		} else if (pointData.flags == 16) {
-			hadFingerDown = true;
-			queue_delayed_work(IT7260_wq, &gl_ts->exit_idle_work, 5);
-		} else if (pressure1 == 0 && pressure2 == 0 && (!(pointData.palm & PD_PALM_FLAG_BIT))) {
-			isTouchLocked = true;
-			wake_unlock(&touch_lock);
-		}
-
+        readTouchDataPoint();
 	} else if (isTouchLocked) {
 		msleep(10);
 		if (isDriverAvailable) {

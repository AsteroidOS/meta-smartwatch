From 5ff7361a4f195c451267677979d7b1213213614f Mon Sep 17 00:00:00 2001
From: Florent Revest <revestflo@gmail.com>
Date: Fri, 7 Jul 2017 23:11:13 +0100
Subject: [PATCH 05/11] Removes some Android build process files that shouldn't
 be used

---
 Android.mk                              | 139 ---------------
 CleanSpec.mk                            |   2 -
 android/configs/README                  |  15 --
 android/configs/android-base.cfg        | 144 ----------------
 android/configs/android-recommended.cfg | 121 -------------
 build.sh                                | 216 ------------------------
 6 files changed, 637 deletions(-)
 delete mode 100644 Android.mk
 delete mode 100644 CleanSpec.mk
 delete mode 100644 android/configs/README
 delete mode 100644 android/configs/android-base.cfg
 delete mode 100644 android/configs/android-recommended.cfg
 delete mode 100755 build.sh

diff --git a/Android.mk b/Android.mk
deleted file mode 100644
index b0cccf8fe..000000000
--- a/Android.mk
+++ /dev/null
@@ -1,139 +0,0 @@
-LOCAL_PATH := $(call my-dir)
-KERNEL_ROOT_DIR := $(PWD)
-
-define touch-kernel-image-timestamp
-if [ -e $(1) ] && [ -e $(2) ] && cmp -s $(1) $(2); then \
- echo $(2) has no change;\
- mv -f $(1) $(2);\
-else \
- rm -f $(1);\
-fi
-endef
-
-define move-kernel-module-files
-v=`cat $(2)/include/config/kernel.release`;\
-for i in `grep -h '\.ko' /dev/null $(2)/.tmp_versions/*.mod`; do \
- o=`basename $$i`;\
- if [ -e $(1)/lib/modules/$$o ] && cmp -s $(1)/lib/modules/$$v/kernel/$$i $(1)/lib/modules/$$o; then \
-  echo $(1)/lib/modules/$$o has no change;\
- else \
-  echo Update $(1)/lib/modules/$$o;\
-  mv -f $(1)/lib/modules/$$v/kernel/$$i $(1)/lib/modules/$$o;\
- fi;\
-done
-endef
-
-define clean-kernel-module-dirs
-rm -rf $(1)/lib/modules/$(if $(2),`cat $(2)/include/config/kernel.release`,*/)
-endef
-
-# '\\' in command is wrongly replaced to '\\\\' in kernel/out/arch/arm/boot/compressed/.piggy.xzkern.cmd
-define fixup-kernel-cmd-file
-if [ -e $(1) ]; then cp $(1) $(1).bak; sed -e 's/\\\\\\\\/\\\\/g' < $(1).bak > $(1); rm -f $(1).bak; fi
-endef
-
-ifeq ($(notdir $(LOCAL_PATH)),$(strip $(LINUX_KERNEL_VERSION)))
-ifneq ($(strip $(TARGET_NO_KERNEL)),true)
-    KERNEL_DIR := $(LOCAL_PATH)
-    BUILT_SYSTEMIMAGE := $(call intermediates-dir-for,PACKAGING,systemimage)/system.img
-
-  ifeq ($(KERNEL_CROSS_COMPILE),)
-  ifeq ($(TARGET_ARCH), arm64)
-    KERNEL_CROSS_COMPILE := $(KERNEL_ROOT_DIR)/$(TARGET_TOOLS_PREFIX)
-  else
-    KERNEL_CROSS_COMPILE := $(KERNEL_ROOT_DIR)/prebuilts/gcc/$(HOST_PREBUILT_TAG)/arm/arm-eabi-$(TARGET_GCC_VERSION)/bin/arm-eabi-
-  endif
-  endif
-  ifeq ($(wildcard $(TARGET_PREBUILT_KERNEL)),)
-    KERNEL_OUT ?= $(if $(filter /% ~%,$(TARGET_OUT_INTERMEDIATES)),,$(KERNEL_ROOT_DIR)/)$(TARGET_OUT_INTERMEDIATES)/KERNEL_OBJ
-    ifeq ($(TARGET_ARCH), arm64)
-      ifeq ($(MTK_APPENDED_DTB_SUPPORT), yes)
-        KERNEL_ZIMAGE_OUT := $(KERNEL_OUT)/arch/$(TARGET_ARCH)/boot/Image.gz-dtb
-      else
-        KERNEL_ZIMAGE_OUT := $(KERNEL_OUT)/arch/$(TARGET_ARCH)/boot/Image.gz
-      endif
-    else
-      ifeq ($(MTK_APPENDED_DTB_SUPPORT), yes)
-        KERNEL_ZIMAGE_OUT := $(KERNEL_OUT)/arch/$(TARGET_ARCH)/boot/zImage-dtb
-      else
-        KERNEL_ZIMAGE_OUT := $(KERNEL_OUT)/arch/$(TARGET_ARCH)/boot/zImage
-      endif
-    endif
-    BUILT_KERNEL_TARGET := $(KERNEL_ZIMAGE_OUT).bin
-    INSTALLED_KERNEL_TARGET := $(PRODUCT_OUT)/kernel
-    TARGET_KERNEL_CONFIG := $(KERNEL_OUT)/.config
-    KERNEL_HEADERS_INSTALL := $(KERNEL_OUT)/usr
-    KERNEL_CONFIG_FILE := $(KERNEL_DIR)/arch/$(TARGET_ARCH)/configs/$(KERNEL_DEFCONFIG)
-    KERNEL_CONFIG_MODULES := $(shell grep ^CONFIG_MODULES=y $(KERNEL_CONFIG_FILE))
-    KERNEL_MODULES_OUT := $(if $(filter /% ~%,$(TARGET_OUT)),,$(KERNEL_ROOT_DIR)/)$(TARGET_OUT)
-    KERNEL_MODULES_DEPS := $(if $(wildcard $(KERNEL_MODULES_OUT)/lib/modules/*.ko),$(wildcard $(KERNEL_MODULES_OUT)/lib/modules/*.ko),$(KERNEL_MODULES_OUT)/lib/modules)
-    KERNEL_MODULES_SYMBOLS_OUT := $(if $(filter /% ~%,$(TARGET_OUT_UNSTRIPPED)),,$(KERNEL_ROOT_DIR)/)$(TARGET_OUT_UNSTRIPPED)/system
-    KERNEL_MAKE_OPTION := O=$(KERNEL_OUT) ARCH=$(TARGET_ARCH) CROSS_COMPILE=$(KERNEL_CROSS_COMPILE) ROOTDIR=$(KERNEL_ROOT_DIR) $(if $(strip $(SHOW_COMMANDS)),V=1)
-
-# .config cannot be PHONY due to config_data.gz
-$(TARGET_KERNEL_CONFIG): $(KERNEL_CONFIG_FILE)
-	$(hide) mkdir -p $(KERNEL_OUT)
-	$(MAKE) -C $(KERNEL_DIR) $(KERNEL_MAKE_OPTION) $(KERNEL_DEFCONFIG)
-
-$(KERNEL_MODULES_DEPS): $(KERNEL_ZIMAGE_OUT) ;
-
-$(KERNEL_ZIMAGE_OUT): $(TARGET_KERNEL_CONFIG) FORCE
-	$(hide) mkdir -p $(KERNEL_OUT)
-	$(MAKE) -C $(KERNEL_DIR) $(KERNEL_MAKE_OPTION)
-	$(hide) $(call fixup-kernel-cmd-file,$(KERNEL_OUT)/arch/$(TARGET_ARCH)/boot/compressed/.piggy.xzkern.cmd)
-ifneq ($(KERNEL_CONFIG_MODULES),)
-	$(MAKE) -C $(KERNEL_DIR) $(KERNEL_MAKE_OPTION) modules
-	$(MAKE) -C $(KERNEL_DIR) $(KERNEL_MAKE_OPTION) INSTALL_MOD_PATH=$(KERNEL_MODULES_SYMBOLS_OUT) modules_install
-	$(hide) $(call move-kernel-module-files,$(KERNEL_MODULES_SYMBOLS_OUT),$(KERNEL_OUT))
-	$(hide) $(call clean-kernel-module-dirs,$(KERNEL_MODULES_SYMBOLS_OUT),$(KERNEL_OUT))
-	$(MAKE) -C $(KERNEL_DIR) $(KERNEL_MAKE_OPTION) INSTALL_MOD_PATH=$(KERNEL_MODULES_OUT) modules_install
-	$(hide) $(call move-kernel-module-files,$(KERNEL_MODULES_OUT),$(KERNEL_OUT))
-	$(hide) $(call clean-kernel-module-dirs,$(KERNEL_MODULES_OUT),$(KERNEL_OUT))
-endif
-
-ifeq ($(strip $(MTK_HEADER_SUPPORT)), yes)
-$(BUILT_KERNEL_TARGET): $(KERNEL_ZIMAGE_OUT) $(TARGET_KERNEL_CONFIG) | $(HOST_OUT_EXECUTABLES)/mkimage$(HOST_EXECUTABLE_SUFFIX)
-	$(hide) $(HOST_OUT_EXECUTABLES)/mkimage$(HOST_EXECUTABLE_SUFFIX) $< KERNEL 0xffffffff > $@
-
-else
-$(BUILT_KERNEL_TARGET): $(KERNEL_ZIMAGE_OUT) $(TARGET_KERNEL_CONFIG) | $(ACP)
-	$(copy-file-to-target)
-
-endif
-
-$(TARGET_PREBUILT_KERNEL): $(BUILT_KERNEL_TARGET) | $(ACP)
-	$(copy-file-to-new-target)
-
-  else
-    BUILT_KERNEL_TARGET := $(TARGET_PREBUILT_KERNEL)
-  endif#TARGET_PREBUILT_KERNEL
-
-$(INSTALLED_KERNEL_TARGET): $(BUILT_KERNEL_TARGET) | $(ACP)
-	$(copy-file-to-target)
-
-ifneq ($(KERNEL_CONFIG_MODULES),)
-$(BUILT_SYSTEMIMAGE): $(KERNEL_MODULES_DEPS)
-endif
-
-.PHONY: kernel install-kernel savedefconfig-kernel %config-kernel clean-kernel
-kernel: $(INSTALLED_KERNEL_TARGET)
-all_modules: $(INSTALLED_KERNEL_TARGET)
-save-kernel: $(TARGET_PREBUILT_KERNEL)
-
-#TODO
-savedefconfig-kernel:
-
-%config-kernel:
-	$(hide) mkdir -p $(KERNEL_OUT)
-	$(MAKE) -C $(KERNEL_DIR) $(KERNEL_MAKE_OPTION) $(patsubst %config-kernel,%config,$@)
-
-clean-kernel:
-	$(hide) rm -rf $(KERNEL_OUT) $(KERNEL_MODULES_OUT) $(INSTALLED_KERNEL_TARGET)
-
-droid: check-kernel-config
-check-mtk-config: check-kernel-config
-check-kernel-config:
-	-python device/mediatek/build/build/tools/check_kernel_config.py -c $(MTK_TARGET_PROJECT_FOLDER)/ProjectConfig.mk -k $(KERNEL_DIR)/arch/$(TARGET_ARCH)/configs/$(KERNEL_DEFCONFIG) -p $(MTK_PROJECT_NAME)
-
-endif#TARGET_NO_KERNEL
-endif#LINUX_KERNEL_VERSION
diff --git a/CleanSpec.mk b/CleanSpec.mk
deleted file mode 100644
index d01c98a7b..000000000
--- a/CleanSpec.mk
+++ /dev/null
@@ -1,2 +0,0 @@
-# dummy file
-# To avoid scanning kernel when using findleaves.py to search CleanSpec.mk
diff --git a/android/configs/README b/android/configs/README
deleted file mode 100644
index 8798731f8..000000000
--- a/android/configs/README
+++ /dev/null
@@ -1,15 +0,0 @@
-The files in this directory are meant to be used as a base for an Android
-kernel config. All devices should have the options in android-base.cfg enabled.
-While not mandatory, the options in android-recommended.cfg enable advanced
-Android features.
-
-Assuming you already have a minimalist defconfig for your device, a possible
-way to enable these options would be:
-
-     ARCH=<arch> scripts/kconfig/merge_config.sh <path_to>/<device>_defconfig android/configs/android-base.cfg android/configs/android-recommended.cfg
-
-This will generate a .config that can then be used to save a new defconfig or
-compile a new kernel with Android features enabled.
-
-Because there is no tool to consistently generate these config fragments,
-lets keep them alphabetically sorted instead of random.
diff --git a/android/configs/android-base.cfg b/android/configs/android-base.cfg
deleted file mode 100644
index f9781d278..000000000
--- a/android/configs/android-base.cfg
+++ /dev/null
@@ -1,144 +0,0 @@
-#  KEEP ALPHABETICALLY SORTED
-# CONFIG_DEVKMEM is not set
-# CONFIG_DEVMEM is not set
-# CONFIG_INET_LRO is not set
-# CONFIG_MODULES is not set
-# CONFIG_OABI_COMPAT is not set
-CONFIG_ANDROID=y
-CONFIG_ANDROID_BINDER_IPC=y
-CONFIG_ANDROID_INTF_ALARM_DEV=y
-CONFIG_ANDROID_BINDER_DEVICES=binder,hwbinder,vndbinder
-CONFIG_ANDROID_LOW_MEMORY_KILLER=y
-CONFIG_ARMV7_COMPAT=y
-CONFIG_ASHMEM=y
-CONFIG_BLK_DEV_DM=y
-CONFIG_BLK_DEV_INITRD=y
-CONFIG_CGROUPS=y
-CONFIG_CGROUP_CPUACCT=y
-CONFIG_CGROUP_DEBUG=y
-CONFIG_CGROUP_FREEZER=y
-CONFIG_CGROUP_SCHED=y
-CONFIG_DM_CRYPT=y
-CONFIG_DM_VERITY=y
-CONFIG_EMBEDDED=y
-CONFIG_FB=y
-CONFIG_HIGH_RES_TIMERS=y
-CONFIG_INET6_AH=y
-CONFIG_INET6_ESP=y
-CONFIG_INET6_IPCOMP=y
-CONFIG_INET=y
-CONFIG_INET_ESP=y
-CONFIG_INET_XFRM_MODE_TUNNEL=y
-CONFIG_IP6_NF_FILTER=y
-CONFIG_IP6_NF_IPTABLES=y
-CONFIG_IP6_NF_MANGLE=y
-CONFIG_IP6_NF_RAW=y
-CONFIG_IP6_NF_TARGET_REJECT=y
-CONFIG_IP6_NF_TARGET_REJECT_SKERR=y
-CONFIG_IPV6_MIP6=y
-CONFIG_IPV6_MULTIPLE_TABLES=y
-CONFIG_IPV6_OPTIMISTIC_DAD=y
-CONFIG_IPV6_PRIVACY=y
-CONFIG_IPV6_ROUTER_PREF=y
-CONFIG_IPV6_ROUTE_INFO=y
-CONFIG_IP_ADVANCED_ROUTER=y
-CONFIG_IP_MULTIPLE_TABLES=y
-CONFIG_IP_NF_ARPFILTER=y
-CONFIG_IP_NF_ARPTABLES=y
-CONFIG_IP_NF_ARP_MANGLE=y
-CONFIG_IP_NF_FILTER=y
-CONFIG_IP_NF_IPTABLES=y
-CONFIG_IP_NF_MANGLE=y
-CONFIG_IP_NF_MATCH_AH=y
-CONFIG_IP_NF_MATCH_ECN=y
-CONFIG_IP_NF_MATCH_TTL=y
-CONFIG_IP_NF_RAW=y
-CONFIG_IP_NF_TARGET_MASQUERADE=y
-CONFIG_IP_NF_TARGET_NETMAP=y
-CONFIG_IP_NF_TARGET_REDIRECT=y
-CONFIG_IP_NF_TARGET_REJECT=y
-CONFIG_IP_NF_TARGET_REJECT_SKERR=y
-CONFIG_NET=y
-CONFIG_NETDEVICES=y
-CONFIG_NETFILTER=y
-CONFIG_NETFILTER_TPROXY=y
-CONFIG_NETFILTER_XT_MATCH_COMMENT=y
-CONFIG_NETFILTER_XT_MATCH_CONNLIMIT=y
-CONFIG_NETFILTER_XT_MATCH_CONNMARK=y
-CONFIG_NETFILTER_XT_MATCH_CONNTRACK=y
-CONFIG_NETFILTER_XT_MATCH_HASHLIMIT=y
-CONFIG_NETFILTER_XT_MATCH_HELPER=y
-CONFIG_NETFILTER_XT_MATCH_IPRANGE=y
-CONFIG_NETFILTER_XT_MATCH_LENGTH=y
-CONFIG_NETFILTER_XT_MATCH_LIMIT=y
-CONFIG_NETFILTER_XT_MATCH_MAC=y
-CONFIG_NETFILTER_XT_MATCH_MARK=y
-CONFIG_NETFILTER_XT_MATCH_PKTTYPE=y
-CONFIG_NETFILTER_XT_MATCH_POLICY=y
-CONFIG_NETFILTER_XT_MATCH_QTAGUID=y
-CONFIG_NETFILTER_XT_MATCH_QUOTA2=y
-CONFIG_NETFILTER_XT_MATCH_QUOTA2_LOG=y
-CONFIG_NETFILTER_XT_MATCH_QUOTA=y
-CONFIG_NETFILTER_XT_MATCH_SOCKET=y
-CONFIG_NETFILTER_XT_MATCH_STATE=y
-CONFIG_NETFILTER_XT_MATCH_STATISTIC=y
-CONFIG_NETFILTER_XT_MATCH_STRING=y
-CONFIG_NETFILTER_XT_MATCH_TIME=y
-CONFIG_NETFILTER_XT_MATCH_U32=y
-CONFIG_NETFILTER_XT_TARGET_CLASSIFY=y
-CONFIG_NETFILTER_XT_TARGET_CONNMARK=y
-CONFIG_NETFILTER_XT_TARGET_IDLETIMER=y
-CONFIG_NETFILTER_XT_TARGET_MARK=y
-CONFIG_NETFILTER_XT_TARGET_NFLOG=y
-CONFIG_NETFILTER_XT_TARGET_NFQUEUE=y
-CONFIG_NETFILTER_XT_TARGET_TCPMSS=y
-CONFIG_NETFILTER_XT_TARGET_TPROXY=y
-CONFIG_NETFILTER_XT_TARGET_TRACE=y
-CONFIG_NET_CLS_ACT=y
-CONFIG_NET_CLS_U32=y
-CONFIG_NET_EMATCH=y
-CONFIG_NET_EMATCH_U32=y
-CONFIG_NET_KEY=y
-CONFIG_NET_SCHED=y
-CONFIG_NET_SCH_HTB=y
-CONFIG_NF_CONNTRACK=y
-CONFIG_NF_CONNTRACK_AMANDA=y
-CONFIG_NF_CONNTRACK_EVENTS=y
-CONFIG_NF_CONNTRACK_FTP=y
-CONFIG_NF_CONNTRACK_H323=y
-CONFIG_NF_CONNTRACK_IPV4=y
-CONFIG_NF_CONNTRACK_IPV6=y
-CONFIG_NF_CONNTRACK_IRC=y
-CONFIG_NF_CONNTRACK_NETBIOS_NS=y
-CONFIG_NF_CONNTRACK_PPTP=y
-CONFIG_NF_CONNTRACK_SANE=y
-CONFIG_NF_CONNTRACK_TFTP=y
-CONFIG_NF_CT_NETLINK=y
-CONFIG_NF_CT_PROTO_DCCP=y
-CONFIG_NF_CT_PROTO_SCTP=y
-CONFIG_NF_CT_PROTO_UDPLITE=y
-CONFIG_NF_NAT=y
-CONFIG_NO_HZ=y
-CONFIG_PACKET=y
-CONFIG_PM_AUTOSLEEP=y
-CONFIG_PM_WAKELOCKS=y
-CONFIG_PPP=y
-CONFIG_PPPOLAC=y
-CONFIG_PPPOPNS=y
-CONFIG_PPP_BSDCOMP=y
-CONFIG_PPP_DEFLATE=y
-CONFIG_PPP_MPPE=y
-CONFIG_PREEMPT=y
-CONFIG_RESOURCE_COUNTERS=y
-CONFIG_RTC_CLASS=y
-CONFIG_RT_GROUP_SCHED=y
-CONFIG_STAGING=y
-CONFIG_SWITCH=y
-CONFIG_SYNC=y
-CONFIG_SYSVIPC=y
-CONFIG_TUN=y
-CONFIG_UNIX=y
-CONFIG_USB_GADGET=y
-CONFIG_USB_G_ANDROID=y
-CONFIG_USB_OTG_WAKELOCK=y
-CONFIG_XFRM_USER=y
diff --git a/android/configs/android-recommended.cfg b/android/configs/android-recommended.cfg
deleted file mode 100644
index 960b9de28..000000000
--- a/android/configs/android-recommended.cfg
+++ /dev/null
@@ -1,121 +0,0 @@
-#  KEEP ALPHABETICALLY SORTED
-# CONFIG_CORE_DUMP_DEFAULT_ELF_HEADERS is not set
-# CONFIG_INPUT_MOUSE is not set
-# CONFIG_LEGACY_PTYS is not set
-# CONFIG_NF_CONNTRACK_SIP is not set
-# CONFIG_PM_WAKELOCKS_GC is not set
-# CONFIG_VT is not set
-CONFIG_ANDROID_TIMED_GPIO=y
-CONFIG_BACKLIGHT_LCD_SUPPORT=y
-CONFIG_BLK_DEV_LOOP=y
-CONFIG_BLK_DEV_RAM=y
-CONFIG_BLK_DEV_RAM_SIZE=8192
-CONFIG_COMPACTION=y
-CONFIG_DM_UEVENT=y
-CONFIG_DRAGONRISE_FF=y
-CONFIG_ENABLE_DEFAULT_TRACERS=y
-CONFIG_EXT4_FS=y
-CONFIG_EXT4_FS_SECURITY=y
-CONFIG_FUSE_FS=y
-CONFIG_GREENASIA_FF=y
-CONFIG_HIDRAW=y
-CONFIG_HID_A4TECH=y
-CONFIG_HID_ACRUX=y
-CONFIG_HID_ACRUX_FF=y
-CONFIG_HID_APPLE=y
-CONFIG_HID_BELKIN=y
-CONFIG_HID_CHERRY=y
-CONFIG_HID_CHICONY=y
-CONFIG_HID_CYPRESS=y
-CONFIG_HID_DRAGONRISE=y
-CONFIG_HID_ELECOM=y
-CONFIG_HID_EMS_FF=y
-CONFIG_HID_EZKEY=y
-CONFIG_HID_GREENASIA=y
-CONFIG_HID_GYRATION=y
-CONFIG_HID_HOLTEK=y
-CONFIG_HID_KENSINGTON=y
-CONFIG_HID_KEYTOUCH=y
-CONFIG_HID_KYE=y
-CONFIG_HID_LCPOWER=y
-CONFIG_HID_LOGITECH=y
-CONFIG_HID_LOGITECH_DJ=y
-CONFIG_HID_MAGICMOUSE=y
-CONFIG_HID_MICROSOFT=y
-CONFIG_HID_MONTEREY=y
-CONFIG_HID_MULTITOUCH=y
-CONFIG_HID_NTRIG=y
-CONFIG_HID_ORTEK=y
-CONFIG_HID_PANTHERLORD=y
-CONFIG_HID_PETALYNX=y
-CONFIG_HID_PICOLCD=y
-CONFIG_HID_PRIMAX=y
-CONFIG_HID_PRODIKEYS=y
-CONFIG_HID_ROCCAT=y
-CONFIG_HID_SAITEK=y
-CONFIG_HID_SAMSUNG=y
-CONFIG_HID_SMARTJOYPLUS=y
-CONFIG_HID_SONY=y
-CONFIG_HID_SPEEDLINK=y
-CONFIG_HID_SUNPLUS=y
-CONFIG_HID_THRUSTMASTER=y
-CONFIG_HID_TIVO=y
-CONFIG_HID_TOPSEED=y
-CONFIG_HID_TWINHAN=y
-CONFIG_HID_UCLOGIC=y
-CONFIG_HID_WACOM=y
-CONFIG_HID_WALTOP=y
-CONFIG_HID_WIIMOTE=y
-CONFIG_HID_ZEROPLUS=y
-CONFIG_HID_ZYDACRON=y
-CONFIG_INPUT_EVDEV=y
-CONFIG_INPUT_GPIO=y
-CONFIG_INPUT_JOYSTICK=y
-CONFIG_INPUT_KEYCHORD=y
-CONFIG_INPUT_KEYRESET=y
-CONFIG_INPUT_MISC=y
-CONFIG_INPUT_TABLET=y
-CONFIG_INPUT_UINPUT=y
-CONFIG_ION=y
-CONFIG_JOYSTICK_XPAD=y
-CONFIG_JOYSTICK_XPAD_FF=y
-CONFIG_JOYSTICK_XPAD_LEDS=y
-CONFIG_KALLSYMS_ALL=y
-CONFIG_KSM=y
-CONFIG_LOGIG940_FF=y
-CONFIG_LOGIRUMBLEPAD2_FF=y
-CONFIG_LOGITECH_FF=y
-CONFIG_MD=y
-CONFIG_MEDIA_SUPPORT=y
-CONFIG_MSDOS_FS=y
-CONFIG_PANIC_TIMEOUT=5
-CONFIG_PANTHERLORD_FF=y
-CONFIG_PERF_EVENTS=y
-CONFIG_PM_DEBUG=y
-CONFIG_PM_RUNTIME=y
-CONFIG_PM_WAKELOCKS_LIMIT=0
-CONFIG_POWER_SUPPLY=y
-CONFIG_PSTORE=y
-CONFIG_PSTORE_CONSOLE=y
-CONFIG_PSTORE_RAM=y
-CONFIG_SCHEDSTATS=y
-CONFIG_SMARTJOYPLUS_FF=y
-CONFIG_SND=y
-CONFIG_SOUND=y
-CONFIG_SUSPEND_TIME=y
-CONFIG_TABLET_USB_ACECAD=y
-CONFIG_TABLET_USB_AIPTEK=y
-CONFIG_TABLET_USB_GTCO=y
-CONFIG_TABLET_USB_HANWANG=y
-CONFIG_TABLET_USB_KBTAB=y
-CONFIG_TABLET_USB_WACOM=y
-CONFIG_TIMER_STATS=y
-CONFIG_TMPFS=y
-CONFIG_TMPFS_POSIX_ACL=y
-CONFIG_UHID=y
-CONFIG_UID_STAT=y
-CONFIG_USB_ANNOUNCE_NEW_DEVICES=y
-CONFIG_USB_EHCI_HCD=y
-CONFIG_USB_HIDDEV=y
-CONFIG_USB_USBNET=y
-CONFIG_VFAT_FS=y
diff --git a/build.sh b/build.sh
deleted file mode 100755
index 0dd5f726a..000000000
--- a/build.sh
+++ /dev/null
@@ -1,216 +0,0 @@
-#!/bin/bash
-# Default settings
-verfile="android.ver"
-curcfg=".config"
-release="n"
-rebuild="n"
-clean="n"
-makeflags="-w"
-makedefs="V=0"
-makejobs=${MAKEJOBS}
-curdir=`pwd`
-if [ "${KBUILD_OUTPUT_SUPPORT}" == "yes" ];then
-  outdir=../${MTK_ROOT_OUT}/KERNEL_OBJ
-  mkdir -p $outdir
-  mkdir -p mediatek/custom
-  ln -fns ../../../${MTK_ROOT_CUSTOM_OUT} mediatek/custom/out
-fi
-
-usage() {
-    echo "Usage: $0 {release|rebuild|clean|silent|verbose|single} [config-xxx]"
-    echo "  config file will be generated if build with TARGET_PRODUCT"
-    exit 1
-}
-
-make_clean() {
-    echo "**** Cleaning ****"
-    nice make ${makeflags} ${makedefs} distclean
-}
-
-
-# Main starts here
-while test -n "$1"; do
-    case "$1" in
-    release)
-        release="y"
-    ;;
-    rebuild)
-        rebuild="y"
-    ;;
-    clean)
-        clean="y"
-    ;;
-    mrproper)
-        mrproper="y"
-    ;;
-    silent)
-        makeflags="-ws"
-        makedefs="V=0"
-    ;;
-    verbose)
-        makeflags="-w"
-        makedefs="V=1"
-    ;;
-    single)
-        makejobs=""
-    ;;
-    *)
-        export TARGET_PRODUCT=$1
-    ;;
-    esac
-    shift
-done
-
-source ../mediatek/build/shell.sh ../ kernel
-defcfg="${MTK_ROOT_GEN_CONFIG}/kconfig"
-if [ "${KBUILD_OUTPUT_SUPPORT}" == "yes" ]; then
-  makeflags+=" O=$outdir"
-fi
-
-if [ ! -z $KMOD_PATH ]; then
-  if [ ! -e $KMOD_PATH ]; then
-     echo "Invalid KMOD_PATH:$KMOD_PATH"
-     echo "CURDIR=$curdir"
-     exit 1;
-  fi
-fi
-
-# clean if it is necessary
-if [ "${clean}" == "y" ]; then
-   if [ ! -z $KMOD_PATH ]; then
-      echo "Clean kernel module PROJECT=$MTK_PROJECT PATH=$KMOD_PATH";
-      if [ "${KBUILD_OUTPUT_SUPPORT}" == "yes" ]; then
-        make M="$KMOD_PATH" O=$outdir clean
-      else
-        make M="$KMOD_PATH" clean
-      fi
-      exit $?
-   else
-      make_clean; exit $?;
-   fi
-fi
-
-if [ "${mrproper}" == "y" ]; then
-  make mrproper; exit $?;
-fi
-
-if [ "${rebuild}" == "y" ]; then make_clean; fi
-
-echo "**** Configuring / $defcfg / ****"
-# select correct configuration file
-if [ "${KBUILD_OUTPUT_SUPPORT}" == "yes" ]; then
-  make mediatek-configs O=$outdir
-else
-  make mediatek-configs
-fi
-
-# Config DRAM size according to central Project Configuration file setting
-# Todo:
-# Need a robust mechanism to control Kconfig content by central Config setting
-# Move below segment to a configuration file for extension
-if [ "$CUSTOM_DRAM_SIZE" == "3G" ]; then
-    # Config DRAM size as 3G (0x18000000).
-    sed --in-place=.orig \
-        -e 's/\(CONFIG_MAX_DRAM_SIZE_SUPPORT=\).*/\10x18000000/' \
-        $outdir/.config
-else
-  if [ "$CUSTOM_DRAM_SIZE" == "2G" ]; then
-      # Config DRAM size as 2G (0x10000000).
-      sed --in-place=.orig \
-          -e 's/\(CONFIG_MAX_DRAM_SIZE_SUPPORT=\).*/\10x10000000/' \
-          -e 's/\(CONFIG_RESERVED_MEM_SIZE_FOR_PMEM=\).*/\10x1700000/' \
-          $outdir/.config
-  else
-    if [ "$CUSTOM_DRAM_SIZE" == "4G" ]; then
-        # Config DRAM size as 4G (0x20000000).
-        sed --in-place=.orig \
-            -e 's/\(CONFIG_MAX_DRAM_SIZE_SUPPORT=\).*/\10x20000000/' \
-            $outdir/.config
-    else
-      if [ "$CUSTOM_DRAM_SIZE" == "6G" ]; then
-          # Config DRAM size as 6G (0x30000000).
-          sed --in-place=.orig \
-              -e 's/\(CONFIG_MAX_DRAM_SIZE_SUPPORT=\).*/\10x30000000/' \
-              -e 's/\(CONFIG_CMDLINE=.*\)"/\1 vmalloc=280M"/' \
-              -e 's/.*\(CONFIG_HIGHMEM\).*/\1=y/' \
-              -e '$ a\# CONFIG_HIGHPTE is not set' \
-              -e '$ a\# CONFIG_DEBUG_HIGHMEM is not set' \
-              $outdir/.config
-      else
-        if [ "$CUSTOM_DRAM_SIZE" == "8G" ]; then
-            # Config DRAM size as 8G (0x40000000).
-            sed --in-place=.orig \
-                -e 's/\(CONFIG_MAX_DRAM_SIZE_SUPPORT=\).*/\10x40000000/' \
-                -e 's/\(CONFIG_CMDLINE=.*\)"/\1 vmalloc=280M"/' \
-                -e 's/.*\(CONFIG_HIGHMEM\).*/\1=y/' \
-                -e '$ a\# CONFIG_HIGHPTE is not set' \
-                -e '$ a\# CONFIG_DEBUG_HIGHMEM is not set' \
-                $outdir/.config
-        fi
-      fi
-    fi
-  fi
-fi
-
-# update configuration
-nice make ${makeflags} ${makedefs} silentoldconfig
-
-if [ ! -z $KMOD_PATH ]; then
-  echo "Build kernel module PROJECT=$MTK_PROJECT PATH=$KMOD_PATH";
-  if [ "${KBUILD_OUTPUT_SUPPORT}" == "yes" ]; then
-    make M="$KMOD_PATH" O=$outdir modules
-  else
-    make M="$KMOD_PATH" modules
-  fi
-  exit $?
-fi
-
-echo "**** Building ****"
-make ${makeflags} ${makejobs} ${makedefs}
-
-if [ $? -ne 0 ]; then exit 1; fi
-
-echo "**** Successfully built kernel ****"
-
-mkimg="${MTK_ROOT_BUILD}/tools/mkimage"
-if [ "${KBUILD_OUTPUT_SUPPORT}" == "yes" ]; then
-  if [ "${TARGET_ARCH}" == "arm64" ]; then
-    kernel_img="${outdir}/arch/arm64/boot/Image"
-    if [ "${MTK_APPENDED_DTB_SUPPORT}" == "yes" ]; then
-      kernel_zimg="${outdir}/arch/arm64/boot/Image.gz-dtb"
-    else
-      kernel_zimg="${outdir}/arch/arm64/boot/Image.gz"
-  else
-    kernel_img="${outdir}/arch/arm/boot/Image"
-    if [ "${MTK_APPENDED_DTB_SUPPORT}" == "yes" ]; then
-      kernel_zimg="${outdir}/arch/arm/boot/zImage-dtb"
-    else
-      kernel_zimg="${outdir}/arch/arm/boot/zImage"
-  fi
-else
-  if [ "${TARGET_ARCH}" == "arm64" ]; then
-    kernel_img="${curdir}/arch/arm64/boot/Image"
-    if [ "${MTK_APPENDED_DTB_SUPPORT}" == "yes" ]; then
-      kernel_zimg="${curdir}/arch/arm64/boot/Image.gz-dtb"
-    else
-      kernel_zimg="${curdir}/arch/arm64/boot/Image.gz"
-  else
-    kernel_img="${curdir}/arch/arm/boot/Image"
-    if [ "${MTK_APPENDED_DTB_SUPPORT}" == "yes" ]; then
-      kernel_zimg="${curdir}/arch/arm/boot/zImage-dtb"
-    else
-      kernel_zimg="${curdir}/arch/arm/boot/zImage"
-  fi
-fi
-
-echo "**** Generate download images ****"
-
-if [ ! -x ${mkimg} ]; then chmod a+x ${mkimg}; fi
-
-if [ "${KBUILD_OUTPUT_SUPPORT}" == "yes" ]; then
-  ${mkimg} ${kernel_zimg} KERNEL > $outdir/kernel_${MTK_PROJECT}.bin
-else
-  ${mkimg} ${kernel_zimg} KERNEL > kernel_${MTK_PROJECT}.bin
-fi
-
-copy_to_legacy_download_flash_folder   $outdir/kernel_${MTK_PROJECT}.bin rootfs_${MTK_PROJECT}.bin
-- 
2.19.0


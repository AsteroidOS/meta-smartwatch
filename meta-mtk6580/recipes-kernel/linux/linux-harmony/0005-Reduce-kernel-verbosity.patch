From 01aa43160a6fadbb2078d1145661623e7828ebfb Mon Sep 17 00:00:00 2001
From: Florent Revest <revestflo@gmail.com>
Date: Fri, 30 Jun 2017 22:45:57 +0200
Subject: [PATCH 04/11] Reduce kernel verbosity

---
 arch/arm/kernel/devtree.c                     |   1 -
 arch/arm/kernel/smp.c                         |  10 -
 arch/arm/kernel/swp_emulate.c                 |   1 -
 arch/arm/kernel/topology.c                    |   8 -
 arch/arm/mm/init.c                            |   6 -
 arch/arm/mm/mmu.c                             |   8 -
 block/partition-generic.c                     |   1 -
 drivers/base/power/wakeup.c                   |  34 -
 drivers/block/loop.c                          |   1 -
 .../pixart_hc/pixart_pah8001_driver.c         |  27 +-
 drivers/input/mousedev.c                      |   2 -
 .../mediatek/focaltech_all/focaltech_core.c   |  55 --
 .../mediatek/it7250/IT7260_driver.c           |  49 --
 drivers/input/touchscreen/mediatek/mtk_tpd.c  |  27 -
 .../input/touchscreen/mediatek/tpd_debug.c    |   3 -
 drivers/irqchip/irq-mt-eic.c                  | 127 +---
 drivers/misc/mediatek/accdet/accdet_drv.c     |  12 +-
 drivers/misc/mediatek/accdet/mt6580/accdet.c  |   2 +-
 drivers/misc/mediatek/accelerometer/accel.c   |  36 --
 .../mediatek/accelerometer/accel_factory.c    |   3 -
 drivers/misc/mediatek/alsps/aal_control.c     |   1 -
 drivers/misc/mediatek/alsps/alsps.c           |  48 --
 drivers/misc/mediatek/alsps/alsps_factory.c   |   8 -
 .../mediatek/auxadc/mt6580/mt_auxadc_hal.c    |   5 -
 drivers/misc/mediatek/auxadc/mt_auxadc.c      | 121 ----
 drivers/misc/mediatek/boot/mt6580/mt_boot.c   |   2 -
 drivers/misc/mediatek/boot/mt_boot_common.c   |  13 +-
 .../mediatek/boot_reason/mt_boot_reason.c     |   8 -
 .../mediatek/bosch/bosch_bha250/bhy_core.c    |  60 --
 .../mediatek/bosch/bosch_bha250/bhy_i2c.c     |   6 -
 .../mediatek/bosch/bosch_bha250/bstclass.c    |   5 -
 .../mediatek/btcvsd/mt6580/AudDrv_BTCVSD.c    |  47 --
 drivers/misc/mediatek/btif/mt6580/hal_btif.c  |  20 -
 .../misc/mediatek/btif/mt6580/hal_btif_dma.c  |  18 -
 drivers/misc/mediatek/btif/mtk_btif.c         | 193 +-----
 drivers/misc/mediatek/btif/mtk_btif_exp.c     |   9 -
 drivers/misc/mediatek/c2k_ccci/f_rawbulk.c    |  27 -
 .../misc/mediatek/ccci_util/ccci_util_dummy.c |  10 +-
 .../mediatek/ccci_util/ccci_util_lib_fo.c     |   5 -
 drivers/misc/mediatek/chip/mt6580/mt_chip.c   |   8 -
 drivers/misc/mediatek/chip/mt_chip_common.c   |   1 -
 drivers/misc/mediatek/cirq/mt_sys_cirq.c      |   3 -
 .../misc/mediatek/cmdq/cmdq_device_common.c   |   5 -
 drivers/misc/mediatek/cmdq/cmdq_record.c      |  17 -
 .../misc/mediatek/cmdq/mt6580/cmdq_device.c   |   5 -
 drivers/misc/mediatek/conn_md/conn_md.c       |  20 -
 drivers/misc/mediatek/conn_md/conn_md_dump.c  |   1 -
 .../connectivity/combo/common/core/btm_core.c |   1 -
 .../connectivity/combo/common/linux/wmt_tm.c  | 173 +----
 .../common_detect/mtk_wcn_stub_alps.c         |  28 +-
 .../connectivity/common_detect/sdio_detect.c  |  18 -
 .../connectivity/common_detect/wmt_detect.c   |  29 -
 .../common/mt6580/mtk_wcn_consys_hw.c         |  74 ---
 drivers/misc/mediatek/cqdma/cqdma.c           |  21 -
 drivers/misc/mediatek/devapc/mt6580/devapc.c  |  12 -
 .../misc/mediatek/devinfo/mt6580/devinfo.c    |   2 -
 .../misc/mediatek/dispsys/mt6580/ddp_color.c  |  25 -
 .../misc/mediatek/dispsys/mt6580/ddp_drv.c    |  10 -
 .../misc/mediatek/dispsys/mt6580/ddp_dsi.c    |  90 ---
 .../misc/mediatek/dispsys/mt6580/ddp_dump.c   |   9 -
 .../misc/mediatek/dispsys/mt6580/ddp_gamma.c  |  10 -
 .../misc/mediatek/dispsys/mt6580/ddp_pwm.c    |  23 -
 .../misc/mediatek/dispsys/mt6580/ddp_rdma.c   |   2 -
 drivers/misc/mediatek/dual_ccci/ccci_init.c   |  22 +-
 drivers/misc/mediatek/dual_ccci/ccmni.c       |   1 -
 .../dual_ccci/mt6580/src/ccci_platform.c      | 130 ----
 drivers/misc/mediatek/emd_ctl/emd_ctl_init.c  |   2 -
 .../misc/mediatek/emi_bwl/mt6580/emi_bwl.c    |   1 -
 .../misc/mediatek/emi_mpu/mt6580/emi_mpu.c    |  41 +-
 .../misc/mediatek/gpio/mt6580/mt_gpio_base.c  |   5 -
 drivers/misc/mediatek/gpio/mt_gpio_core.c     |   2 -
 drivers/misc/mediatek/gpu/ged/src/ged_log.c   |   4 -
 drivers/misc/mediatek/gpu/ged/src/ged_main.c  |   2 -
 .../mali/mali/common/mali_kernel_common.h     |   5 +-
 .../mali/mali/linux/mali_kernel_linux.c       |   2 +-
 .../mediatek/hibcore/mtk_hibernate_core.c     |  17 -
 .../misc/mediatek/hibcore/mtk_hibernate_dpm.c |   5 -
 drivers/misc/mediatek/hwmon/batchsen/batch.c  |  51 --
 .../misc/mediatek/hwmon/hwmsen/hwmsen_dev.c   |  28 -
 drivers/misc/mediatek/i2c/mt6580/i2c.c        |   5 -
 drivers/misc/mediatek/i2c/mt6580/i2c_common.c |  14 -
 drivers/misc/mediatek/irq/mt6580/irq.c        |   6 -
 drivers/misc/mediatek/keypad/kpd.c            |  69 --
 drivers/misc/mediatek/keypad/mt6580/hal_kpd.c |   6 +-
 .../misc/mediatek/lastpc/mt6580/lastpc_plt.c  |   1 -
 .../rm67160_400x400_dsi_cmd_oled.c            |   4 -
 .../rm67160_400x400_dsi_cmd_oled_hehui.c      |   1 -
 drivers/misc/mediatek/leds/leds_drv.c         |   2 +-
 drivers/misc/mediatek/leds/mt6580/leds.c      |  24 +-
 drivers/misc/mediatek/lsq/lsq.c               |   4 -
 drivers/misc/mediatek/m4u/mt6580/m4u_hw.c     |  18 -
 drivers/misc/mediatek/mach/mt6580/ca7_timer.c |   4 -
 drivers/misc/mediatek/mach/mt6580/core.c      |   1 -
 drivers/misc/mediatek/mach/mt6580/hotplug.c   |   5 -
 drivers/misc/mediatek/mach/mt6580/mt-smp.c    |   8 -
 drivers/misc/mediatek/mach/mt6580/mt_clkmgr.c |  40 --
 .../misc/mediatek/mach/mt6580/mt_cpufreq.c    | 115 ----
 drivers/misc/mediatek/mach/mt6580/mt_dcm.c    |  60 --
 drivers/misc/mediatek/mach/mt6580/mt_devs.c   |  40 +-
 drivers/misc/mediatek/mach/mt6580/mt_gpt.c    |   8 -
 .../misc/mediatek/mach/mt6580/mt_gpufreq.c    |  68 --
 .../mach/mt6580/mt_hotplug_strategy_algo.c    |  18 -
 .../mach/mt6580/mt_hotplug_strategy_core.c    |   9 -
 .../mach/mt6580/mt_hotplug_strategy_cpu.c     |  10 +-
 .../mach/mt6580/mt_hotplug_strategy_main.c    |  23 -
 .../mach/mt6580/mt_hotplug_strategy_procfs.c  |   2 -
 drivers/misc/mediatek/mach/mt6580/mt_idle.c   |  50 --
 .../misc/mediatek/mach/mt6580/mt_pm_init.c    |   1 -
 drivers/misc/mediatek/mach/mt6580/mt_ptp.c    |  87 ---
 drivers/misc/mediatek/mach/mt6580/mt_sleep.c  |  50 --
 .../mediatek/mach/mt6580/mtk_ccci_helper.c    |  47 --
 .../sf6580_weg_l/leds/mt65xx/cust_leds.c      |  21 -
 .../mediatek/masp/mt6580/module/sec_mod.c     |  10 -
 drivers/misc/mediatek/mem/mtk_memcfg.c        |  57 --
 drivers/misc/mediatek/mem/mtk_meminfo.c       |   3 -
 drivers/misc/mediatek/mem/mtk_mrdump_setup.c  |   7 -
 drivers/misc/mediatek/mmc-host/emmc_rpmb.c    |   2 +-
 drivers/misc/mediatek/mmc-host/mt6580/dbg.c   |   7 -
 .../mediatek/mmc-host/mt6580/mt_sd_misc.c     | 117 ----
 drivers/misc/mediatek/mmc-host/mt6580/sd.c    | 325 +---------
 .../mediatek/mt_logger/mt_storage_logger.c    |   7 -
 drivers/misc/mediatek/mu3d/drv/musb_gadget.c  |  79 ---
 .../mediatek/pmic_wrap/mt6580/pwrap_hal.c     |   8 -
 .../misc/mediatek/pmic_wrap/mt_pmic_wrap.c    |   1 -
 .../mediatek/power/mt6580/battery_meter_hal.c |  23 -
 .../mediatek/power/mt6580/charging_hw_pmic.c  |  44 --
 drivers/misc/mediatek/power/mt6580/pmic.c     | 401 +-----------
 .../misc/mediatek/power/mt6580/pmic_auxadc.c  |   3 -
 .../mediatek/power/mt6580/pmic_chr_type_det.c |  13 +-
 .../mediatek/ram_console/mtk_ram_console.c    |  23 -
 .../misc/mediatek/rtc/mt6580/mtk_rtc_hal.c    |  17 -
 drivers/misc/mediatek/rtc/mtk_rtc_common.c    |  25 +-
 .../mediatek/sched/mt_cpu_affinity/mt_sched.c |   3 -
 drivers/misc/mediatek/sched/mt_sched.c        |   3 -
 drivers/misc/mediatek/smi/mt6580/smi_common.c |  49 +-
 drivers/misc/mediatek/spi/mt6580/spi-dev.c    |  34 +-
 drivers/misc/mediatek/spi/mt6580/spi.c        |   6 -
 drivers/misc/mediatek/spm/mt6580/mt_spm.c     |   3 -
 .../misc/mediatek/spm/mt6580/mt_spm_dpidle.c  |   3 -
 .../mediatek/spm/mt6580/mt_spm_internal.c     |   8 -
 .../misc/mediatek/spm/mt6580/mt_spm_sleep.c   |   6 -
 .../systracker/systracker_interface.c         |  10 -
 .../systracker/systracker_interface_v2.c      |  14 -
 .../mediatek/thermal/mt6580/mtk_ts_6311buck.c |  43 --
 .../mediatek/thermal/mt6580/mtk_ts_all_ts.c   | 131 ----
 .../mediatek/thermal/mt6580/mtk_ts_battery.c  |  50 --
 .../mediatek/thermal/mt6580/mtk_ts_buck.c     |  82 ---
 .../misc/mediatek/thermal/mt6580/mtk_ts_cpu.c | 208 ------
 .../misc/mediatek/thermal/mt6580/mtk_ts_pa.c  |  55 --
 .../mediatek/thermal/mt6580/mtk_ts_pmic.c     |  76 ---
 .../misc/mediatek/thermal/mt6580/mtk_ts_wmt.c |  51 --
 .../misc/mediatek/uart/mt6580/platform_uart.c |  26 +-
 drivers/misc/mediatek/uart/uart.c             |  40 --
 .../misc/mediatek/usb11/mt6580/musbfsh_core.c |  61 --
 .../mediatek/usb11/mt6580/musbfsh_debugfs.c   |   2 -
 .../mediatek/usb11/mt6580/musbfsh_mt65xx.c    |  47 --
 drivers/misc/mediatek/usb11/musbfsh_icusb.c   |  48 --
 drivers/misc/mediatek/usb11/musbfsh_virthub.c |  12 -
 drivers/misc/mediatek/usb20/mt6580/usb20.c    |  58 --
 .../misc/mediatek/usb20/mt6580/usb20_phy.c    |  26 -
 drivers/misc/mediatek/usb20/musb_core.c       |  66 --
 drivers/misc/mediatek/usb20/musb_gadget.c     |  83 ---
 drivers/misc/mediatek/usb20/musb_host.c       |   7 -
 drivers/misc/mediatek/usb20/musb_virthub.c    |   7 -
 .../misc/mediatek/vibrator/mt6580/vibrator.c  |   1 -
 drivers/misc/mediatek/vibrator/vibrator_drv.c |  22 +-
 .../mt6580/videocodec_kernel_driver.c         |  54 --
 .../videox/mt6580/disp_assert_layer.c         |  10 -
 .../mediatek/videox/mt6580/disp_drv_log.h     |   2 +-
 .../misc/mediatek/videox/mt6580/disp_helper.c |   2 -
 .../misc/mediatek/videox/mt6580/disp_lcm.c    |   2 -
 .../misc/mediatek/videox/mt6580/disp_utils.c  |   1 -
 .../mediatek/videox/mt6580/mtk_disp_mgr.c     |   2 -
 drivers/misc/mediatek/videox/mt6580/mtkfb.c   |  32 -
 .../misc/mediatek/videox/mt6580/mtkfb_dummy.c |  47 --
 .../mediatek/videox/mt6580/primary_display.c  | 238 -------
 .../mt6580/aarch32/hw_watchpoint_aarch32.c    |  14 -
 .../mt6580/aarch32/mt_dbg_aarch32.c           |   2 -
 drivers/misc/mediatek/wdk/wd_api.c            |  27 -
 drivers/misc/mediatek/wdk/wd_common_drv.c     |  46 --
 drivers/misc/mediatek/wdt/mt6580/mtk_wdt.c    |  42 --
 drivers/misc/mediatek/xlog/xlog_filter.c      |   2 -
 drivers/mmc/card/block.c                      |  24 +-
 drivers/mmc/core/core.c                       |  12 -
 drivers/mmc/core/mmc.c                        |   4 -
 drivers/mmc/core/sd_ops.c                     |   1 -
 drivers/mtd/mtdcore.c                         |   4 -
 drivers/of/of_reserved_mem.c                  |   9 -
 drivers/power/mediatek/battery_common.c       | 401 ------------
 drivers/power/mediatek/battery_meter.c        | 598 ------------------
 drivers/power/mediatek/battery_meter_fg_20.c  | 365 +----------
 drivers/power/mediatek/linear_charging.c      |  69 --
 drivers/power/mediatek/switch_charging.c      |   9 -
 drivers/regulator/core.c                      |   4 -
 drivers/spi/spi.c                             |   4 +-
 drivers/staging/android/ion/ion.c             |   1 -
 drivers/staging/android/ion/mtk/ion_drv.c     |   4 -
 drivers/staging/android/ion/mtk/ion_fb_heap.c |   5 -
 drivers/staging/zram/zram_drv.c               |   7 +-
 drivers/tty/serial/serial_core.c              |   7 -
 drivers/usb/class/cdc-acm.c                   |  15 -
 drivers/usb/core/devio.c                      |   3 -
 drivers/usb/core/driver.c                     |  58 --
 drivers/usb/core/generic.c                    |   9 -
 drivers/usb/core/hub.c                        |  51 +-
 drivers/usb/core/usb.c                        |   2 -
 drivers/usb/gadget/android.c                  |  83 ---
 drivers/usb/gadget/composite.c                |  76 ---
 drivers/usb/gadget/f_acm.c                    |   7 +-
 drivers/usb/gadget/f_ecm.c                    |  34 +-
 drivers/usb/gadget/f_eem.c                    |  15 -
 drivers/usb/gadget/f_fs.c                     |   7 +-
 drivers/usb/gadget/f_mass_storage.c           |   9 -
 drivers/usb/gadget/f_ncm.c                    |  45 --
 drivers/usb/gadget/f_rndis.c                  |  66 +-
 drivers/usb/gadget/f_uac1.c                   |  20 -
 fs/bio.c                                      |   1 -
 fs/pstore/ram.c                               |   8 -
 include/linux/hwmsen_helper.h                 |   2 +-
 include/linux/kpd.h                           |   2 +-
 include/linux/musb/musb_io.h                  |   6 -
 ipc/msg.c                                     |   3 -
 kernel/cpu.c                                  |  17 -
 kernel/exit.c                                 |   1 -
 kernel/fork.c                                 |  12 -
 kernel/irq/irqdesc.c                          |   3 -
 kernel/mutex-debug.c                          |  40 +-
 kernel/power/autosleep.c                      |  21 +-
 kernel/power/earlysuspend.c                   |  33 -
 kernel/power/main.c                           |  13 +-
 kernel/power/process.c                        |  19 -
 kernel/power/sbsuspend.c                      |  47 --
 kernel/power/suspend.c                        |  18 -
 kernel/power/tuxonice_bio_core.c              |   2 -
 kernel/power/tuxonice_highlevel.c             |  19 -
 kernel/power/wakelock.c                       |   9 +-
 kernel/printk.c                               |   8 -
 kernel/sched/core.c                           |   1 -
 kernel/signal.c                               |   4 -
 kernel/time/clocksource.c                     |   3 -
 kernel/time/sched_clock.c                     |   3 -
 kernel/workqueue.c                            |   3 -
 lib/lz4k/lz4k_init.c                          |   1 -
 lib/swiotlb.c                                 |   5 -
 mm/memblock.c                                 |  12 -
 mm/page_alloc.c                               |   5 -
 mm/percpu.c                                   |  27 -
 mm/slub.c                                     |   7 -
 net/ipv6/addrconf.c                           |   4 -
 net/sched/act_mirred.c                        |   1 -
 net/sched/cls_u32.c                           |   4 -
 net/sched/sch_generic.c                       |   3 -
 .../mediatek/mt_soc_audio_6580/AudDrv_Clk.c   |  46 --
 .../mt_soc_audio_6580/mt_soc_afe_control.c    | 171 +----
 .../mt_soc_audio_6580/mt_soc_codec_63xx.c     | 281 --------
 .../mt_soc_audio_6580/mt_soc_codec_dummy.c    |   6 -
 .../mt_soc_codec_speaker_63xx.c               |  13 -
 .../mt_soc_audio_6580/mt_soc_dai_routing.c    |   4 -
 .../mt_soc_audio_6580/mt_soc_dai_stub.c       |   7 -
 .../mt_soc_audio_6580/mt_soc_machine.c        |  34 -
 .../mt_soc_audio_6580/mt_soc_pcm_bt_dai.c     |  81 ---
 .../mt_soc_audio_6580/mt_soc_pcm_capture.c    |  69 --
 .../mt_soc_audio_6580/mt_soc_pcm_capture2.c   |  65 --
 .../mt_soc_audio_6580/mt_soc_pcm_common.c     |   2 -
 .../mt_soc_audio_6580/mt_soc_pcm_dl1.c        |  94 ---
 .../mt_soc_audio_6580/mt_soc_pcm_dl1_awb.c    |  77 ---
 .../mt_soc_audio_6580/mt_soc_pcm_dl1_bt.c     |  55 --
 .../mt_soc_audio_6580/mt_soc_pcm_dl1_i2s0.c   |  65 --
 .../mt_soc_pcm_dl1_i2s0Dl1.c                  |  56 --
 .../mt_soc_audio_6580/mt_soc_pcm_dummy.c      |  29 -
 .../mt_soc_audio_6580/mt_soc_pcm_fm_i2s.c     |  26 -
 .../mt_soc_audio_6580/mt_soc_pcm_fm_i2s_awb.c |  66 --
 .../mt_soc_audio_6580/mt_soc_pcm_fmtx.c       |  10 -
 .../mt_soc_audio_6580/mt_soc_pcm_hdmi.c       |  85 ---
 .../mt_soc_pcm_hp_impedance.c                 |  52 --
 .../mt_soc_audio_6580/mt_soc_pcm_i2s0_awb.c   |  66 --
 .../mt_soc_audio_6580/mt_soc_pcm_mrgrx.c      |  35 -
 .../mt_soc_audio_6580/mt_soc_pcm_mrgrx_awb.c  |  82 ---
 .../mt_soc_audio_6580/mt_soc_pcm_routing.c    |  80 ---
 .../mt_soc_pcm_uldlloopback.c                 |  19 -
 .../mt_soc_audio_6580/mt_soc_pcm_voice_md1.c  |  30 -
 .../mt_soc_pcm_voice_md1_bt.c                 |  26 -
 .../mt_soc_audio_6580/mt_soc_pcm_voice_md2.c  |  30 -
 .../mt_soc_pcm_voice_md2_bt.c                 |  24 -
 .../mt_soc_audio_6580/mt_soc_tdm_capture.c    |  87 ---
 .../mediatek/mt_soc_audio_8163/AudDrv_Ana.c   |   2 -
 .../mt_soc_audio_8163/mt_soc_codec_63xx.c     | 249 --------
 .../mt_soc_audio_8163/mt_soc_pcm_routing.c    |  65 --
 sound/soc/soc-compress.c                      |   2 -
 sound/soc/soc-pcm.c                           |   2 -
 290 files changed, 67 insertions(+), 10302 deletions(-)

diff --git a/arch/arm/kernel/devtree.c b/arch/arm/kernel/devtree.c
index f8414182a..af32eb577 100644
--- a/arch/arm/kernel/devtree.c
+++ b/arch/arm/kernel/devtree.c
@@ -236,7 +236,6 @@ struct machine_desc * __init setup_machine_fdt(unsigned int dt_phys)
 		model = of_get_flat_dt_prop(dt_root, "compatible", NULL);
 	if (!model)
 		model = "<unknown>";
-	pr_info("Machine: %s, model: %s\n", mdesc_best->name, model);
 
 	/* Retrieve various information from the /chosen node */
 	of_scan_flat_dt(early_init_dt_scan_chosen, boot_command_line);
diff --git a/arch/arm/kernel/smp.c b/arch/arm/kernel/smp.c
index 5c5842d69..1a26bd8a5 100644
--- a/arch/arm/kernel/smp.c
+++ b/arch/arm/kernel/smp.c
@@ -220,7 +220,6 @@ void __cpuinit __cpu_die(unsigned int cpu)
 		pr_err("CPU%u: cpu didn't die\n", cpu);
 		return;
 	}
-	printk(KERN_NOTICE "CPU%u: shutdown\n", cpu);
 
 	/*
 	 * platform_cpu_kill() is generally expected to do the powering off
@@ -356,8 +355,6 @@ asmlinkage void __cpuinit secondary_start_kernel(void)
 	cpu_init();
 	aee_rr_rec_hoplug(cpu, 5, 0);
 
-	printk("CPU%u: Booted secondary processor\n", cpu);
-
 	preempt_disable();
 	aee_rr_rec_hoplug(cpu, 6, 0);
 	trace_hardirqs_off();
@@ -415,12 +412,6 @@ void __init smp_cpus_done(unsigned int max_cpus)
 	for_each_online_cpu(cpu)
 		bogosum += per_cpu(cpu_data, cpu).loops_per_jiffy;
 
-	printk(KERN_INFO "SMP: Total of %d processors activated "
-	       "(%lu.%02lu BogoMIPS).\n",
-	       num_online_cpus(),
-	       bogosum / (500000/HZ),
-	       (bogosum / (5000/HZ)) % 100);
-
 	hyp_mode_check();
 }
 
@@ -615,7 +606,6 @@ static void ipi_cpu_stop(unsigned int cpu)
 	if (system_state == SYSTEM_BOOTING ||
 	    system_state == SYSTEM_RUNNING) {
 		raw_spin_lock(&stop_lock);
-		printk(KERN_CRIT "CPU%u: stopping\n", cpu);
 		dump_stack();
 		raw_spin_unlock(&stop_lock);
 	}
diff --git a/arch/arm/kernel/swp_emulate.c b/arch/arm/kernel/swp_emulate.c
index b1b89882b..dbd473c49 100644
--- a/arch/arm/kernel/swp_emulate.c
+++ b/arch/arm/kernel/swp_emulate.c
@@ -271,7 +271,6 @@ static int __init swp_emulation_init(void)
 		return -ENOMEM;
 #endif /* CONFIG_PROC_FS */
 
-	printk(KERN_NOTICE "Registering SWP/SWPB emulation handler\n");
 	register_undef_hook(&swp_hook);
 
 	return 0;
diff --git a/arch/arm/kernel/topology.c b/arch/arm/kernel/topology.c
index ba1cc284a..2b677ca46 100644
--- a/arch/arm/kernel/topology.c
+++ b/arch/arm/kernel/topology.c
@@ -249,9 +249,6 @@ void update_cpu_power(unsigned int cpu, unsigned long hwid)
 		return;
 
 	set_power_scale(cpu, cpu_capacity[idx].capacity / middle_capacity);
-
-	printk(KERN_INFO "CPU%u: update cpu_power %lu\n",
-		   cpu, arch_scale_freq_power(NULL, cpu));
 }
 
 #else
@@ -874,11 +871,6 @@ void store_cpu_topology(unsigned int cpuid)
 	update_siblings_masks(cpuid);
 
 	update_cpu_power(cpuid, mpidr & MPIDR_HWID_BITMASK);
-
-	printk(KERN_INFO "CPU%u: thread %d, cpu %d, socket %d, mpidr %x\n",
-		   cpuid, cpu_topology[cpuid].thread_id,
-		   cpu_topology[cpuid].core_id,
-		   cpu_topology[cpuid].socket_id, mpidr);
 }
 
 /*
diff --git a/arch/arm/mm/init.c b/arch/arm/mm/init.c
index f39df9cc9..b293e41a1 100644
--- a/arch/arm/mm/init.c
+++ b/arch/arm/mm/init.c
@@ -331,12 +331,6 @@ phys_addr_t __init arm_memblock_steal(phys_addr_t size, phys_addr_t align)
 	phys = memblock_alloc_base(size, align, MEMBLOCK_ALLOC_NOPASR);
 	memblock_free(phys, size);
 	memblock_remove(phys, size);
-	if (phys) {
-		MTK_MEMCFG_LOG_AND_PRINTK(KERN_ALERT"[PHY layout]%ps   :   0x%08llx - 0x%08llx (0x%08llx)\n",
-			__builtin_return_address(0), (unsigned long long)phys, 
-		(unsigned long long)phys + size - 1,
-		(unsigned long long)size);
-	}
 
 	return phys;
 }
diff --git a/arch/arm/mm/mmu.c b/arch/arm/mm/mmu.c
index 232bc22b7..5bdcb721b 100644
--- a/arch/arm/mm/mmu.c
+++ b/arch/arm/mm/mmu.c
@@ -1338,10 +1338,6 @@ static void __init map_lowmem(void)
 	for_each_memblock(memory, reg) {
 		start = reg->base;
 		end = start + reg->size;
-                MTK_MEMCFG_LOG_AND_PRINTK(KERN_ALERT"[PHY layout]kernel   :   0x%08llx - 0x%08llx (0x%08llx)\n",
-                      (unsigned long long)start,
-                      (unsigned long long)end - 1,
-                      (unsigned long long)reg->size);
 
 		if (end > arm_lowmem_limit)
 			end = arm_lowmem_limit;
@@ -1358,10 +1354,6 @@ static void __init map_lowmem(void)
 			limit = end;
 			memblock_set_current_limit(limit);
 		}
-                printk(KERN_ALERT"creating mapping start pa: 0x%08llx @ 0x%08llx "
-                        ", end pa: 0x%08llx @ 0x%08llx\n",
-                       (unsigned long long)start, (unsigned long long)map.virtual,
-                       (unsigned long long)end, (unsigned long long)__phys_to_virt(end));
 		create_mapping(&map, false);
 	}
 
diff --git a/block/partition-generic.c b/block/partition-generic.c
index a2062d610..47284e712 100644
--- a/block/partition-generic.c
+++ b/block/partition-generic.c
@@ -523,7 +523,6 @@ rescan:
 
 		if (state->parts[p].has_info)
 			info = &state->parts[p].info;
-		printk("add_partition==[%s:p%d]==start = %llu,size = %llu\n", disk->disk_name, p, (unsigned long long)from, (unsigned long long)size);
 		part = add_partition(disk, p, from, size,
 				     state->parts[p].flags,
 				     &state->parts[p].info);
diff --git a/drivers/base/power/wakeup.c b/drivers/base/power/wakeup.c
index d6d625af1..d78ff2241 100644
--- a/drivers/base/power/wakeup.c
+++ b/drivers/base/power/wakeup.c
@@ -701,31 +701,6 @@ void pm_get_active_wakeup_sources(char *pending_wakeup_source, size_t max)
 }
 EXPORT_SYMBOL_GPL(pm_get_active_wakeup_sources);
 
-static void print_active_wakeup_sources(void)
-{
-	struct wakeup_source *ws;
-	int active = 0;
-	struct wakeup_source *last_activity_ws = NULL;
-
-	rcu_read_lock();
-	list_for_each_entry_rcu(ws, &wakeup_sources, entry) {
-		if (ws->active) {
-			pr_info("active wakeup source: %s\n", ws->name);
-			active = 1;
-		} else if (!active &&
-			   (!last_activity_ws ||
-			    ktime_to_ns(ws->last_time) >
-			    ktime_to_ns(last_activity_ws->last_time))) {
-			last_activity_ws = ws;
-		}
-	}
-
-	if (!active && last_activity_ws)
-		pr_info("last active wakeup source: %s\n",
-			last_activity_ws->name);
-	rcu_read_unlock();
-}
-
 /**
  * pm_wakeup_pending - Check if power transition in progress should be aborted.
  *
@@ -746,16 +721,9 @@ bool pm_wakeup_pending(void)
 		split_counters(&cnt, &inpr);
 		ret = (cnt != saved_count || inpr > 0);
 		events_check_enabled = !ret;
-
-		//<20130327> <marc.huang> add wakeup source dubug log
-		if (ret)
-			wakeup_warn("cnt: %d, saved_count: %d, inpr: %d\n", cnt, saved_count, inpr);
 	}
 	spin_unlock_irqrestore(&events_lock, flags);
 
-	if (ret)
-		print_active_wakeup_sources();
-
 	return ret;
 }
 EXPORT_SYMBOL_GPL(pm_wakeup_pending);
@@ -786,8 +754,6 @@ bool pm_get_wakeup_count(unsigned int *count, bool block)
 			if (inpr == 0 || signal_pending(current))
 				break;
 
-			//<20130327> <marc.huang> add wakeup source dubug log
-			print_active_wakeup_sources();
 			schedule();
 		}
 		finish_wait(&wakeup_count_wait_queue, &wait);
diff --git a/drivers/block/loop.c b/drivers/block/loop.c
index 4a8116547..1c2637053 100644
--- a/drivers/block/loop.c
+++ b/drivers/block/loop.c
@@ -1883,7 +1883,6 @@ static int __init loop_init(void)
 		loop_add(&lo, i);
 	mutex_unlock(&loop_index_mutex);
 
-	printk(KERN_INFO "loop: module loaded\n");
 	return 0;
 
 misc_out:
diff --git a/drivers/input/keyboard/pixart_hc/pixart_pah8001_driver.c b/drivers/input/keyboard/pixart_hc/pixart_pah8001_driver.c
index 738e2f6b8..7e611cc0d 100755
--- a/drivers/input/keyboard/pixart_hc/pixart_pah8001_driver.c
+++ b/drivers/input/keyboard/pixart_hc/pixart_pah8001_driver.c
@@ -214,13 +214,10 @@ static int pah8001_init_reg(void)
 	u8 data0 = 0, data1 = 0;
 	int ret = -1;
 	
-	printk("%s (%d) : pah8001 register initialize\n", __func__, __LINE__);
-
 	pah8001_write_reg(127, 0);		
 	pah8001_read_reg(0, &data0);	
 	pah8001_read_reg(1, &data1) ;
 	
-	printk("%s (%d) : ADDR0 = 0x%x, ADDR1 = 0x%x.\n", __func__, __LINE__, data0, data1);     // ADDR0 = 0x30, ADDR1= 0xd3
 	if( (data0 != 0x30 ) || ((data1&0xF0) != 0xD0) )
 	{
 		return -1 ;
@@ -232,8 +229,6 @@ static int pah8001_init_reg(void)
 		return ret ;
 	}
 
-	printk("%s (%d) : pah8001 initialize register.\n", __func__, __LINE__);
-	
 	return 0;
 }
 
@@ -280,7 +275,6 @@ static void pah8001_ppg(void)
 			input_report_abs(pah8001data.pah8001_input_dev, ABS_Y, *(uint32_t *)(pah8001data.ppg_mems_data.HRD_Data + 4));
 			input_report_abs(pah8001data.pah8001_input_dev, ABS_Z, *(uint32_t *)(pah8001data.ppg_mems_data.HRD_Data + 8));
 			input_sync(pah8001data.pah8001_input_dev);		
-			printk(">>>%s (%d)(%d)(%d)(%d) \n", __func__,pah8001data.ppg_mems_data.HRD_Data[0], pah8001data.ppg_mems_data.HRD_Data[1], pah8001data.ppg_mems_data.HRD_Data[2], pah8001data.ppg_mems_data.HRD_Data[3]);
 //			printk(">>>%s (%d)(%d)(%d)(%d) \n", __func__,pah8001data.ppg_mems_data.HRD_Data[4], pah8001data.ppg_mems_data.HRD_Data[5], pah8001data.ppg_mems_data.HRD_Data[6], pah8001data.ppg_mems_data.HRD_Data[7]);
 //			printk(">>>%s (%d)(%d)(%d)(%d) \n", __func__,pah8001data.ppg_mems_data.HRD_Data[8], pah8001data.ppg_mems_data.HRD_Data[9], pah8001data.ppg_mems_data.HRD_Data[10], pah8001data.ppg_mems_data.HRD_Data[11]);
 			
@@ -302,20 +296,17 @@ static void pah8001_x_work_func(struct work_struct *work)
 
 static int pah8001_input_open(struct input_dev *dev)
 {
-	printk(">>> %s (%d) \n", __func__, __LINE__);
 	return 0;
 }
 
 static void pah8001_input_close(struct input_dev *dev)
 {
-	printk(">>> %s (%d) \n", __func__, __LINE__);
 }
 
 static int pah8001_init_input_data(void)
 {
 	int ret = 0;
 
-	printk("%s (%d) : initialize data\n", __func__, __LINE__);
 	
 	pah8001data.pah8001_input_dev = input_allocate_device();
 	
@@ -352,33 +343,28 @@ static int pah8001_init_input_data(void)
 
 static ssize_t pah8001_read(struct file *filp,char *buf,size_t count,loff_t *l)
 {
-	printk(">>>%s (%d) \n", __func__, __LINE__);
 	return 0;
 }
 
 static ssize_t pah8001_write(struct file *filp,const char *buf,size_t count,loff_t *f_ops)
 {
-	printk(">>>%s (%d) \n", __func__, __LINE__);
 	return count;
 }
 
 static long pah8001_ioctl(struct file *file, unsigned int cmd, unsigned long arg)
 //static int pah8001_ioctl(struct inode *inode, struct file *file, unsigned int cmd, unsigned long arg)
 {
-	printk(">>> %s (%d) \n", __func__, __LINE__);	
 	//cancel_delayed_work_sync(&pah8001data.work);
 	return 0;
 }
 
 static int pah8001_open(struct inode *inode, struct file *filp)
 {
-	printk(">>>%s (%d) \n", __func__, __LINE__);
 	return 0;
 }
 
 static int pah8001_release(struct inode *inode, struct file *filp)
 {
-	printk(">>> %s (%d) \n", __func__, __LINE__);
 
 	return 0;
 }
@@ -401,17 +387,14 @@ struct miscdevice pixart_device = {
 static ssize_t pah8001_enable_store(struct device* dev, 
                                    struct device_attribute *attr, const char *buf, size_t count)
 {
-	printk("%s (%d) :\n", __func__, __LINE__);
 	if((buf != NULL) && ( (1 == buf[0]) || ('1' == buf[0]) ))
 	{
-		printk("Enable!!\n");		
 		pah8001data.run_ppg = true;
 		schedule_delayed_work(&pah8001data.x_work, msecs_to_jiffies(100));
 		//pah8011_start();
 	}
 	else
 	{
-		printk("Disable!!\n");	
 		pah8001data.run_ppg = false ;
 	}
 	return count;
@@ -421,7 +404,6 @@ static ssize_t pah8001_enable_show(struct device *dev, struct device_attribute *
 {
 	
 	//cat rw_reg	
-	printk("%s (%d) : \n", __func__, __LINE__);
 	
 	return 0; 
 }
@@ -446,7 +428,6 @@ static int pah8001_create_attr(struct device *dev)
 	{
 		if((err = device_create_file(dev, pah8001_attr_list[idx])))
 		{            
-			printk("device_create_file (%s) = %d\n", pah8001_attr_list[idx]->attr.name, err);        
 			break;
 		}
 	}
@@ -480,8 +461,6 @@ static int pah8001_i2c_probe(struct i2c_client *client, const struct i2c_device_
 	struct regulator *reg = NULL;		 
 	reg = regulator_get(&(client->dev), "VGP1");
 
-	printk("%s (%d) \n", __func__, __LINE__);
- 
 	if (!i2c_check_functionality(adapter, I2C_FUNC_SMBUS_BYTE)) {
 		err = -EIO;
 		return err;
@@ -538,13 +517,12 @@ static int pah8001_i2c_remove(struct i2c_client *client)
 }
 
 static int pah8001_suspend(struct device *dev)
-{   printk("%s (%d) : pah8001 suspend \n", __func__, __LINE__);
+{
 	return 0;
 }
 
 static int pah8001_resume(struct device *dev)
 {
-	printk("%s (%d) : pah8001 resume \n", __func__, __LINE__);
 	return 0;
 }
 
@@ -580,8 +558,6 @@ static struct i2c_driver pah8001_i2c_driver = {
 
 static int __init pah8001_init(void)
 {
-	printk("%s (%d) :init module\n", __func__, __LINE__);
-	
 	#ifdef MTK_PLATFORM	
 	if(1)
 	{		
@@ -602,7 +578,6 @@ static int __init pah8001_init(void)
 
 static void __exit pah8001_exit(void)
 {
-	printk("%s (%d) : exit module\n", __func__, __LINE__);	
 	misc_register(&pixart_device);
 	pah8001_delete_attr(pah8001data.pah8001_device);
 	i2c_del_driver(&pah8001_i2c_driver);
diff --git a/drivers/input/mousedev.c b/drivers/input/mousedev.c
index b604564de..4f8ce7ae0 100644
--- a/drivers/input/mousedev.c
+++ b/drivers/input/mousedev.c
@@ -1112,8 +1112,6 @@ static int __init mousedev_init(void)
 
 	mousedev_psaux_register();
 
-	pr_info("PS/2 mouse device common for all mice\n");
-
 	return 0;
 }
 
diff --git a/drivers/input/touchscreen/mediatek/focaltech_all/focaltech_core.c b/drivers/input/touchscreen/mediatek/focaltech_all/focaltech_core.c
index 0e03dfd9f..ae0267f51 100755
--- a/drivers/input/touchscreen/mediatek/focaltech_all/focaltech_core.c
+++ b/drivers/input/touchscreen/mediatek/focaltech_all/focaltech_core.c
@@ -423,7 +423,6 @@ static	void tpd_power_switch(s32 state)
 		case POWER_ON:
 			if(power_flag==0)
 			{
-				printk("Power switch on!\n");
 				if(NULL == tpd->reg)
 				{
 					tpd->reg=regulator_get(tpd->tpd_dev,TPD_POWER_SOURCE_CUSTOM); // get pointer to regulator structure
@@ -432,13 +431,10 @@ static	void tpd_power_switch(s32 state)
 						return;
 					}else
 					{
-						printk("regulator_get() Ok!\n");
 					}
 				}
 	
-				printk("regulator_set_voltage--begin\r\n");
 				ret=regulator_set_voltage(tpd->reg, 2800000, 2800000);	// set 2.8v
-				printk("regulator_set_voltage--end\r\n");
 				if (ret)
 					printk("regulator_set_voltage() failed!\n");
 				ret=regulator_enable(tpd->reg);  //enable regulator
@@ -447,15 +443,10 @@ static	void tpd_power_switch(s32 state)
 
 				power_flag=1;
 			}
-			else
-			{
-				printk("######Power already is on!#######\n");
-			}
 			break;
 		case POWER_OFF:
 			if(power_flag==1)
 			{
-				printk("Power switch off!\n");
 				if(!IS_ERR_OR_NULL(tpd->reg))
 				{
 					ret=regulator_disable(tpd->reg); //disable regulator
@@ -466,10 +457,6 @@ static	void tpd_power_switch(s32 state)
 					power_flag=0;
 				}
 			}
-			else
-			{
-				printk("#######Power already is off!########\n");
-			}
 			break;
 		  default:
 			printk("Invalid power switch command!");
@@ -505,7 +492,6 @@ __probe_retry:
 	uc_reg_addr = FTS_REG_CHIP_ID;
 	fts_i2c_write(fts_i2c_client, &uc_reg_addr, 1);
 	retval=fts_i2c_read(fts_i2c_client, &uc_reg_addr, 0, &uc_reg_value, 1);
-	printk("mtk_tpd[FTS] chip id is %d.\n",uc_reg_value);
 	if(retval<0)
 	{
 		if(retry_count++ < 3)
@@ -823,7 +809,6 @@ static int fts_read_Touchdata(struct ts_event *pinfo)
 	//u8 pt00f=0;
 	if (tpd_halt)
 	{
-		TPD_DMESG( "tpd_touchinfo return ..\n");
 		return false;
 	}
 
@@ -1042,19 +1027,15 @@ static int tpd_enable_ps(int enable)
 		//return ret;
 	}
 	
-	printk("[proxi_fts]read: 999 0xb0's value is 0x%02X\n", state);
-
 	if (enable)
 	{
 		state |= 0x01;
 		tpd_proximity_flag = 1;
-		TPD_PROXIMITY_DEBUG("[proxi_fts]ps function is on\n");	
 	}
 	else
 	{
 		state &= 0x00;	
 		tpd_proximity_flag = 0;
-		TPD_PROXIMITY_DEBUG("[proxi_fts]ps function is off\n");
 	}
 	
 	//ret = i2c_smbus_write_i2c_block_data(fts_i2c_client, 0xB0, 1, &state);
@@ -1064,7 +1045,6 @@ static int tpd_enable_ps(int enable)
 		printk("[Focal][Touch] write value fail");
 		//return ret;
 	}
-	TPD_PROXIMITY_DEBUG("[proxi_fts]write: 0xB0's value is 0x%02X\n", state);
 	return 0;
 }
  /************************************************************************
@@ -1106,7 +1086,6 @@ int tpd_ps_operate(void* self, uint32_t command, void* buff_in, int size_in,
 				{		
 					if((tpd_enable_ps(1) != 0))
 					{
-						APS_ERR("enable ps fail: %d\n", err); 
 						return -1;
 					}
 				}
@@ -1114,7 +1093,6 @@ int tpd_ps_operate(void* self, uint32_t command, void* buff_in, int size_in,
 				{
 					if((tpd_enable_ps(0) != 0))
 					{
-						APS_ERR("disable ps fail: %d\n", err); 
 						return -1;
 					}
 				}
@@ -1123,7 +1101,6 @@ int tpd_ps_operate(void* self, uint32_t command, void* buff_in, int size_in,
 		case SENSOR_GET_DATA:
 			if((buff_out == NULL) || (size_out< sizeof(hwm_sensor_data)))
 			{
-				APS_ERR("get sensor data parameter error!\n");
 				err = -EINVAL;
 			}
 			else
@@ -1136,14 +1113,12 @@ int tpd_ps_operate(void* self, uint32_t command, void* buff_in, int size_in,
 				else
 				{
 					sensor_data->values[0] = tpd_get_ps_value();
-					TPD_PROXIMITY_DEBUG("huang sensor_data->values[0] 1082 = %d\n", sensor_data->values[0]);
 					sensor_data->value_divide = 1;
 					sensor_data->status = SENSOR_STATUS_ACCURACY_MEDIUM;
 				}					
 			}
 			break;
 		default:
-			APS_ERR("proxmy sensor operate function no this parameter %d!\n", command);
 			err = -1;
 			break;
 	}
@@ -1213,7 +1188,6 @@ int tpd_ps_operate(void* self, uint32_t command, void* buff_in, int size_in,
 					printk("[Focal][Touch] read value fail");
 					//return ret;
 				}
-	           		TPD_PROXIMITY_DEBUG("proxi_fts 0xB0 state value is 1131 0x%02X\n", state);
 				if(!(state&0x01))
 				{
 					tpd_enable_ps(1);
@@ -1235,10 +1209,8 @@ int tpd_ps_operate(void* self, uint32_t command, void* buff_in, int size_in,
 					tpd_proximity_detect = 1;
 				}
 
-				TPD_PROXIMITY_DEBUG("tpd_proximity_detect 1149 = %d\n", tpd_proximity_detect);
 				if ((err = tpd_read_ps()))
 				{
-					TPD_PROXIMITY_DMESG("proxi_fts read ps data 1156: %d\n", err);	
 				}
 				sensor_data.values[0] = tpd_get_ps_value();
 				sensor_data.value_divide = 1;
@@ -1261,7 +1233,6 @@ int tpd_ps_operate(void* self, uint32_t command, void* buff_in, int size_in,
 		{
 			if (tpd_touchinfo(&cinfo, &pinfo)) 
 			{
-		    		printk("tpd point_num = %d\n",point_num);
 				TPD_DEBUG_SET_TIME;
 				if(point_num >0) 
 				{
@@ -1358,19 +1329,16 @@ int tpd_ps_operate(void* self, uint32_t command, void* buff_in, int size_in,
 
 	if ( 0 > tpd_power_init(1))
 	{
-		printk("mtk_tpd[FTS] Touch panel probe fail\n");
 		return -1;
 	}
 
 	uc_reg_addr = FTS_REG_POINT_RATE;				
 	fts_i2c_write(fts_i2c_client, &uc_reg_addr, 1);
 	fts_i2c_read(fts_i2c_client, &uc_reg_addr, 0, &uc_reg_value, 1);
-	printk("mtk_tpd[FTS] report rate is %dHz.\n",uc_reg_value * 10);
 
 	uc_reg_addr = FTS_REG_FW_VER;
 	fts_i2c_write(fts_i2c_client, &uc_reg_addr, 1);
 	fts_i2c_read(fts_i2c_client, &uc_reg_addr, 0, &uc_reg_value, 1);
-	printk("mtk_tpd[FTS] Firmware version = 0x%x\n", uc_reg_value);
 	
 	tpd_load_status = 1;
 	
@@ -1410,7 +1378,6 @@ int tpd_ps_operate(void* self, uint32_t command, void* buff_in, int size_in,
 	#endif
 	
 	#ifdef TPD_AUTO_UPGRADE
-		printk("********************Enter CTP Auto Upgrade********************\n");
 		fts_ctpm_auto_upgrade(fts_i2c_client);
 	#endif
 
@@ -1443,7 +1410,6 @@ int tpd_ps_operate(void* self, uint32_t command, void* buff_in, int size_in,
 		input_set_abs_params(tpd->dev, ABS_MT_POSITION_Y, 0, TPD_RES_Y, 0, 0);
 		input_set_abs_params(tpd->dev, ABS_MT_PRESSURE, 0, 255, 0, 0);
 	#endif
-   	printk("fts Touch Panel Device Probe %s\n", (retval < TPD_OK) ? "FAIL" : "PASS");
    	return 0;
    
  }
@@ -1473,8 +1439,6 @@ int tpd_ps_operate(void* self, uint32_t command, void* buff_in, int size_in,
      		fts_release_apk_debug_channel();
      #endif
 
-	TPD_DEBUG("TPD removed\n");
- 
    return 0;
  }
 #if GTP_ESD_PROTECT
@@ -1556,7 +1520,6 @@ static void gtp_esd_check_func(struct work_struct *work)
 		printk("[Focal][Touch] read value fail");
 		//return ret;
 	}
-	printk("0x8F:%d, count_irq is %d\n", data, count_irq);
 			
 	flag_error = 0;
 	if((count_irq - data) > 10) 
@@ -1574,7 +1537,6 @@ static void gtp_esd_check_func(struct work_struct *work)
 		
 	if(1 == flag_error) 
 	{	
-		printk("focal--tpd reset.1 == flag_error...data=%d	count_irq=%d\n ", data, count_irq);
 	    	force_reset_guitar();
 		reset_flag = 1;
 		goto FOCAL_RESET_INT;
@@ -1588,7 +1550,6 @@ static void gtp_esd_check_func(struct work_struct *work)
 		printk("[Focal][Touch] read value fail");
 		//return ret;
 	}
-	printk("focal---------91 register value = 0x%02x	old value = 0x%02x\n",	data, g_old_91_Reg_Value);
 	if(0x01 == g_first_read_91) 
 	{
 		g_old_91_Reg_Value = data;
@@ -1599,11 +1560,9 @@ static void gtp_esd_check_func(struct work_struct *work)
 		if(g_old_91_Reg_Value == data)
 		{
 			g_91value_same_count++;
-			printk("focal 91 value ==============, g_91value_same_count=%d\n", g_91value_same_count);
 			if(RESET_91_REGVALUE_SAMECOUNT == g_91value_same_count) 
 			{
 				force_reset_guitar();
-				printk("focal--tpd reset. g_91value_same_count = 5\n");
 				g_91value_same_count = 0;
 				reset_flag = 1;
 			}
@@ -1666,7 +1625,6 @@ FOCAL_RESET_A3_REGISTER:
 ***********************************************************************/
  static int tpd_local_init(void)
  {
-  	TPD_DMESG("Focaltech fts I2C Touchscreen Driver (Built %s @ %s)\n", __DATE__, __TIME__);
    	if(i2c_add_driver(&tpd_i2c_driver)!=0)
    	{
         	TPD_DMESG("fts unable to add i2c driver.\n");
@@ -1701,7 +1659,6 @@ FOCAL_RESET_A3_REGISTER:
     		memcpy(tpd_calmat, tpd_def_calmat_local, 8*4);
     		memcpy(tpd_def_calmat, tpd_def_calmat_local, 8*4);	
 	#endif  
-	TPD_DMESG("end %s, %d\n", __FUNCTION__, __LINE__);  
 	tpd_type_cap = 1;
     	return 0; 
  }
@@ -1716,8 +1673,6 @@ FOCAL_RESET_A3_REGISTER:
  {
 	int i=0,ret = 0;
 	
- 	TPD_DMESG("TPD wake up\n");
-
 #ifdef TPD_CLOSE_POWER_IN_SLEEP 
 	tpd_power_init(1);
 #else
@@ -1763,9 +1718,6 @@ FOCAL_RESET_A3_REGISTER:
     count_irq = 0;
 	queue_delayed_work(gtp_esd_check_workqueue, &gtp_esd_check_work, TPD_ESD_CHECK_CIRCLE);
 	#endif
-
-	TPD_DMESG("TPD wake up done\n");
-
  }
  /************************************************************************
 * Name: tpd_suspend
@@ -1791,8 +1743,6 @@ FOCAL_RESET_A3_REGISTER:
 		}
 	}
 
-			
-	TPD_DMESG("TPD enter sleep\n");
 	#ifdef TPD_PROXIMITY
 	if (tpd_proximity_flag == 1)
 	{
@@ -1865,9 +1815,6 @@ FOCAL_RESET_A3_REGISTER:
 	}
 	input_mt_report_pointer_emulation(fts_input_dev, false);
 	input_sync(fts_input_dev);
-	
-    	TPD_DMESG("TPD enter sleep done\n");
-
  } 
 
 
@@ -1893,7 +1840,6 @@ FOCAL_RESET_A3_REGISTER:
 * Return: 0
 ***********************************************************************/
  static int __init tpd_driver_init(void) {
-    printk("MediaTek fts touch panel driver init\n");
     i2c_register_board_info(IIC_PORT, &fts_i2c_tpd, 1);
 	if(tpd_driver_add(&tpd_device_driver) < 0)
        	TPD_DMESG("add fts driver failed\n");
@@ -1910,7 +1856,6 @@ FOCAL_RESET_A3_REGISTER:
 ***********************************************************************/
  static void __exit tpd_driver_exit(void) 
  {
-        TPD_DMESG("MediaTek fts touch panel driver exit\n");
 	 //input_unregister_device(tpd->dev);
 	 tpd_driver_remove(&tpd_device_driver);
  }
diff --git a/drivers/input/touchscreen/mediatek/it7250/IT7260_driver.c b/drivers/input/touchscreen/mediatek/it7250/IT7260_driver.c
index 578c9815c..3cb0640ab 100755
--- a/drivers/input/touchscreen/mediatek/it7250/IT7260_driver.c
+++ b/drivers/input/touchscreen/mediatek/it7250/IT7260_driver.c
@@ -116,7 +116,6 @@ static  void it7260_power_switch(s32 state)
 		case POWER_ON:
 			if(power_flag==0)
 			{
-				printk("Power switch on!\n");
 				if(NULL == tpd->reg)
 				{
 				  	tpd->reg=regulator_get(tpd->tpd_dev,TPD_POWER_SOURCE_CUSTOM); // get pointer to regulator structure
@@ -125,13 +124,10 @@ static  void it7260_power_switch(s32 state)
 						return;
 					}else
 					{
-						printk("regulator_get() Ok!\n");
 					}
 				}
 	
-				printk("regulator_set_voltage--begin\r\n");
 				ret=regulator_set_voltage(tpd->reg, 2800000, 2800000);  // set 2.8v
-				printk("regulator_set_voltage--end\r\n");
 				if (ret)
 					printk("regulator_set_voltage() failed!\n");
 				ret=regulator_enable(tpd->reg);  //enable regulator
@@ -142,7 +138,6 @@ static  void it7260_power_switch(s32 state)
 			}
 			else
 			{
-		  		printk("######Power already is on!#######\n");
 		  	}
 			break;
 		case POWER_OFF:
@@ -161,7 +156,6 @@ static  void it7260_power_switch(s32 state)
 			}
 			else
 			{
-				printk("#######Power already is off!########\n");
 			}
 			break;
 		  default:
@@ -266,14 +260,12 @@ struct ioctl_cmd168 {
 
 static ssize_t IT7260_upgrade_store(struct device *dev, struct device_attribute *attr, const char *buf, size_t count)
 {
-	printk("[IT7260] %s():\n", __func__);
 	int bitsmask = 0;
 
 	mt_eint_mask(CUST_EINT_TOUCH_PANEL_NUM);
 	bitsmask = tpd_print_version();
 	if((bitsmask / 2)==1)
 	{
-		printk("FirmwareDownload");
 		if(!fnFirmwareDownload(fw_size,rawData,0,NULL))
 		{
 			printk("FirmwareDownload_fail");
@@ -281,7 +273,6 @@ static ssize_t IT7260_upgrade_store(struct device *dev, struct device_attribute
 	}
 	if((bitsmask % 2)==1)
 	{
-		printk("ConfigDownload");
 		if(!fnFirmwareDownload(0,NULL,config_size,cfg_rawData))
 		{
 			printk("ConfigDownload_fail");
@@ -420,7 +411,6 @@ int ite7260_ioctl(struct file *filp, unsigned int cmd, unsigned long arg) {
 		}
 
 		datalen = (unsigned char) (data.length + 1);
-		printk("IOCTL_SET: datalen=%d.\n",datalen);
 		retval = tpd_i2c_write(i2c_client, &buffer[0], datalen);
 		pr_info("SET:retval=%x\n", retval);
 		retval = 0;
@@ -526,7 +516,6 @@ static int tpd_i2c_write(struct i2c_client *client, uint8_t *buf, int len)
     int ret = 0;
 #ifdef I2C_SUPPORT_RS_DMA
     int i = 0;
-    printk("start tpd_i2c_write len=%d.\n",len);
     for(i = 0 ; i < len; i++){
         I2CDMABuf_va[i] = buf[i];
     }
@@ -679,11 +668,9 @@ static int tpd_print_version(void) {
 #endif
 	uint8_t pucCommandBuffer[8];
     int ret = -1;
-    printk("[mtk-tpd] enter tpd_print_version .\n");
 //get chip FW version
 	waitCommandDone();
 
-	printk("[mtk-tpd] tpd_print_version 413line.\n");
     pucCommandBuffer[0] = 0x20;
     pucCommandBuffer[1] = 0xE1;
     pucCommandBuffer[2] = 0x04;
@@ -697,12 +684,9 @@ static int tpd_print_version(void) {
     waitCommandDone();
     ret = tpd_i2c_read(i2c_client, &verFw[0], 4, 0xA0);
 
-    printk("[mtk-tpd] ITE7260 Touch Panel Firmware Version %x %x %x %x \n", 
-            verFw[0], verFw[1], verFw[2], verFw[3]); 
 //get chip config version	
 	msleep(10);
 	waitCommandDone();
-	printk("[mtk-tpd] tpd_print_version 413line.\n");
     buffer[0] = 0x20;
     buffer[1] = 0x01;
     buffer[2] = 0x06;
@@ -710,8 +694,6 @@ static int tpd_print_version(void) {
     msleep(10);
     waitCommandDone();
 	ret = tpd_i2c_read(i2c_client, &verCfg[0], 8, 0xA0);
-    printk("[mtk-tpd] ITE7260 Touch Panel config Version %x %x %x %x \n", 
-            verCfg[1], verCfg[2], verCfg[3], verCfg[4]); 
 	
 	
 	if ((verCfg[1] != cfg_rawData[config_size-8]) || (verCfg[2] != cfg_rawData[config_size-7]) || (verCfg[3] != cfg_rawData[config_size-6]) || (verCfg[4] != cfg_rawData[config_size-5]))
@@ -723,7 +705,6 @@ static int tpd_print_version(void) {
 		sum += 2;
 		}
 		
-		printk("print sum = %d\n", sum); 
 		return sum;
 }
 static int tpd_FW_version(void) {
@@ -737,11 +718,9 @@ static int tpd_FW_version(void) {
 #endif
 	uint8_t pucCommandBuffer[8];
     int ret = -1;
-    printk("[mtk-tpd] enter tpd_print_version .\n");
 //get chip FW version
 	waitCommandDone();
 
-	printk("[mtk-tpd] tpd_print_version 413line.\n");
     pucCommandBuffer[0] = 0x20;
     pucCommandBuffer[1] = 0xE1;
     pucCommandBuffer[2] = 0x04;
@@ -759,7 +738,6 @@ static int tpd_FW_version(void) {
 }
 static void IT7260_upgrade(void)
 {
-	printk("[IT7260] %s():\n", __func__);
 	int bitsmask = 0;
 
 	bitsmask = tpd_print_version();
@@ -807,17 +785,12 @@ static int tpd_i2c_probe(struct i2c_client *client, const struct i2c_device_id *
 #endif
 	char buffer1[14];
     i2c_client = client;
-    printk("MediaTek it7260 touch panel i2c probe\n");
-
-	
 	
 	mt_set_gpio_mode(GPIO_CTP_RST_PIN, GPIO_CTP_RST_PIN_M_GPIO);
     mt_set_gpio_dir(GPIO_CTP_RST_PIN, GPIO_DIR_OUT);
 	mt_set_gpio_out(GPIO_CTP_RST_PIN, GPIO_OUT_ONE); 
 	msleep(10);
-	printk("TPd enter power on---begin-\r\n");
 	it7260_power_switch(POWER_ON);
-	printk("TPd enter power on---end-\r\n");
 	msleep(40);
 	mt_set_gpio_out(GPIO_CTP_RST_PIN, GPIO_OUT_ZERO); 
 	msleep(100);
@@ -826,7 +799,6 @@ static int tpd_i2c_probe(struct i2c_client *client, const struct i2c_device_id *
     if(FWversion&0x05170000) //7258
     //if(0)
     {
-    	printk("FWversion 1\n");
 		/*
 		msleep(20);
     	mt_set_gpio_out(GPIO_CTP_RST_PIN, GPIO_OUT_ONE); 
@@ -837,7 +809,6 @@ static int tpd_i2c_probe(struct i2c_client *client, const struct i2c_device_id *
     else
     {
     	
-    	printk("Not 7258 touch IC\n");
    		//mt_set_gpio_out(GPIO_CTP_RST_PIN, GPIO_OUT_ONE );
 		//msleep(100);
 		goto __probe_fail;
@@ -889,7 +860,6 @@ static int tpd_i2c_probe(struct i2c_client *client, const struct i2c_device_id *
 	#endif
 	
     tpd_load_status = 1;  
-    printk("DDD_____ 0xA0 : %X, %X\n", buffer[0], buffer[1]);  // add FAE   End
     return TPD_OK;
 
 __probe_fail:
@@ -979,9 +949,6 @@ void tpd_up(int raw_x, int raw_y, int x, int y, int p) {
 #ifdef DOUBLE_CLICK_WAKE
 static void check_gesture(int gesture_id)
 {
-	
-    printk("it7260 gesture_id==0x%x\n ",gesture_id);
-    
 	switch(gesture_id)
 	{
 		case GESTURE_DOUBLECLICK:	
@@ -1296,7 +1263,6 @@ static int tpd_local_init(void)
 {
     int r;
     
-	TPD_DMESG("Focaltech it7260 I2C Touchscreen Driver (Built %s @ %s)\n", __DATE__, __TIME__);
 		//power on, need confirm with SA
 
     if(i2c_add_driver(&tpd_i2c_driver)!=0) {
@@ -1323,7 +1289,6 @@ static int tpd_local_init(void)
     memcpy(tpd_calmat, tpd_def_calmat_local, 8*4);
     memcpy(tpd_def_calmat, tpd_def_calmat_local, 8*4);	
 #endif  
-    printk("end %s, %d\n", __FUNCTION__, __LINE__);  
 
     tpd_type_cap = 1;
     
@@ -1334,7 +1299,6 @@ static int tpd_local_init(void)
 static void tpd_suspend(struct i2c_client *client, pm_message_t message)
 {
     int ret = 0;
-    printk("it7260 tpd_suspend start\n");
 
 #ifdef  DOUBLE_CLICK_WAKE
     unsigned char Wrbuf_sleep[4] = { 0x20, 0x04, 0x00, 0x02 };
@@ -1348,7 +1312,6 @@ static void tpd_suspend(struct i2c_client *client, pm_message_t message)
         TPD_DEBUG("[mtk-tpd] i2c write communcate error during suspend: 0x%x\n", ret);
     }else
     {
-    	 printk("IT7260 call suspend OK\n");
     }
   }else
 #endif
@@ -1357,7 +1320,6 @@ static void tpd_suspend(struct i2c_client *client, pm_message_t message)
 		mt_eint_mask(CUST_EINT_TOUCH_PANEL_NUM); 
 		it7260_power_switch(POWER_OFF);
   	}
-	printk("it7260 tpd_suspend end\n");
 }
 
 /* Function to manage power-on resume */
@@ -1368,7 +1330,6 @@ static void tpd_resume(struct i2c_client *client)
     unsigned char Wrbuf[2] = { 0x20, 0x6F};
     char gsbuffer[2];
 
-	printk("it7260 tpd_resume start\n");
 	it7260_power_switch(POWER_ON);
 	mt_set_gpio_mode(GPIO_CTP_RST_PIN, GPIO_CTP_RST_PIN_M_GPIO);
     mt_set_gpio_dir(GPIO_CTP_RST_PIN, GPIO_DIR_OUT);
@@ -1392,7 +1353,6 @@ static void tpd_resume(struct i2c_client *client)
 //	tpd_up(0, 0, 0, 0, 0);
 	tpd_up(0, 0, 0, 0, 0);
 	input_sync(tpd->dev);
-	printk("it7260 tpd_resume end\n");
 }
 		
 static struct tpd_driver_t tpd_device_driver = {
@@ -1423,7 +1383,6 @@ static bool waitCommandDone(void)
 	if( !(ucQuery & 0x01) ){
 	        return  true;
 	}else{
-		printk("XXX %s, %d\n", __FUNCTION__, __LINE__);
 		return  false;
 	}
 }
@@ -1661,14 +1620,12 @@ bool fnFirmwareDownload(unsigned int unFirmwareLength, u8* pFirmware, unsigned i
 		printk("[IT7260] XXX %s, %d\n", __FUNCTION__, __LINE__);
 		return false;
 	}
-	printk("2\n");
 	//printk("[IT7260] fnFirmwareDownload %s, %d\n", __FUNCTION__, __LINE__);
 
 	if(!fnEnterFirmwareUpgradeMode()){
 		printk("[IT7260] XXX %s, %d\n", __FUNCTION__, __LINE__);
 		return false;
 	}
-	printk("3\n");
 	//printk("[IT7260] fnEnterFirmwareUpgradeMode %s, %d\n", __FUNCTION__, __LINE__);
 
    mtk_wdt_enable ( WK_WDT_DIS );//	mtk_kick_wdt();
@@ -1680,7 +1637,6 @@ bool fnFirmwareDownload(unsigned int unFirmwareLength, u8* pFirmware, unsigned i
 		}
 	}
 	//printk("[IT7260] fnWriteAndCompareFlash Fireware %s, %d\n", __FUNCTION__, __LINE__);
-	printk("4\n");
 
 //	mtk_kick_wdt();
 	if(unConfigLength != 0 && pConfig != NULL){
@@ -1692,7 +1648,6 @@ bool fnFirmwareDownload(unsigned int unFirmwareLength, u8* pFirmware, unsigned i
 		}
 	}
 	//printk("[IT7260] fnWriteAndCompareFlash Config %s, %d\n", __FUNCTION__, __LINE__);
-	printk("5\n");
 
 //	mtk_kick_wdt();
 	if(!fnExitFirmwareUpgradeMode()){
@@ -1700,14 +1655,12 @@ bool fnFirmwareDownload(unsigned int unFirmwareLength, u8* pFirmware, unsigned i
 		return false;
 	}
 //	mtk_kick_wdt();
-	printk("[IT7260] fnExitFirmwareUpgradeMode %s, %d\n", __FUNCTION__, __LINE__);
 
 	if(!fnFirmwareReinitialize()){
 		printk("[IT7260] XXX %s, %d\n", __FUNCTION__, __LINE__);
 		return false;
 	}
 //	mtk_kick_wdt();
-	printk("[IT7260] OOO %s, %d\n", __FUNCTION__, __LINE__);
 
 	mtk_wdt_enable (WK_WDT_EN );
 	return true;
@@ -1717,7 +1670,6 @@ bool fnFirmwareDownload(unsigned int unFirmwareLength, u8* pFirmware, unsigned i
 /* called when loaded into kernel */
 static int __init tpd_driver_init(void)
 {
-    printk("MediaTek IT7260 touch panel driver init\n");
 #if defined(TPD_I2C_NUMBER)	//lshun modify 20130615
     i2c_register_board_info(TPD_I2C_NUMBER, &it7260_i2c_tpd, 1);
 #else
@@ -1732,7 +1684,6 @@ static int __init tpd_driver_init(void)
 /* should never be called */
 static void __exit tpd_driver_exit(void)
 {
-    printk("MediaTek IT7260 touch panel driver exit\n");
     //input_unregister_device(tpd->dev);
     tpd_driver_remove(&tpd_device_driver);
 }
diff --git a/drivers/input/touchscreen/mediatek/mtk_tpd.c b/drivers/input/touchscreen/mediatek/mtk_tpd.c
index 23ecce16f..5f7ce3bb8 100755
--- a/drivers/input/touchscreen/mediatek/mtk_tpd.c
+++ b/drivers/input/touchscreen/mediatek/mtk_tpd.c
@@ -70,20 +70,12 @@ void tpd_get_dts_info(void)
 	node1 = of_find_compatible_node(NULL,NULL,"mediatek, TPD");
 	if(node1) {
 		of_property_read_u32(node1,"use-tpd-button",&tpd_dts_data.use_tpd_button);
-		printk("[tpd]use-tpd-button = %d\n", tpd_dts_data.use_tpd_button);
 		of_property_read_u32_array(node1,"tpd-resolution",tpd_dts_data.tpd_resolution,ARRAY_SIZE(tpd_dts_data.tpd_resolution));
 		if(tpd_dts_data.use_tpd_button){
 			of_property_read_u32(node1,"tpd-key-num",&tpd_dts_data.tpd_key_num);
 			of_property_read_u32_array(node1,"tpd-key-local",tpd_dts_data.tpd_key_local,ARRAY_SIZE(tpd_dts_data.tpd_key_local));
 			of_property_read_u32_array(node1,"tpd-key-dim-local",key_dim_local,ARRAY_SIZE(key_dim_local));
 			memcpy(tpd_dts_data.tpd_key_dim_local,key_dim_local, sizeof(key_dim_local));
-			
-			for(i = 0;i<4; i++){
-				printk("[tpd]tpd_dts_data.tpd_key_dim_local[%d].key_x = %d\n", i,tpd_dts_data.tpd_key_dim_local[i].key_x);
-				printk("[tpd]tpd_dts_data.tpd_key_dim_local[%d].key_y = %d\n", i,tpd_dts_data.tpd_key_dim_local[i].key_y);
-				printk("[tpd]tpd_dts_data.tpd_key_dim_local[%d].key_W = %d\n", i,tpd_dts_data.tpd_key_dim_local[i].key_width);
-				printk("[tpd]tpd_dts_data.tpd_key_dim_local[%d].key_H = %d\n", i,tpd_dts_data.tpd_key_dim_local[i].key_height);
-			}
 		}
 		
 	} else {
@@ -93,7 +85,6 @@ void tpd_get_dts_info(void)
 }
 void tpd_gpio_as_int(int pin)
 {
-	printk("[tpd]tpd_gpio_as_int\n");
 	//printk("[tpd] fwq before  chage   gpio eint pin mode=%d\n",mt_get_gpio_mode(GPIO_CTP_EINT_PIN));
 	//printk("[tpd] fwq before  chage   gpio rst pin mode=%d\n",mt_get_gpio_mode(GPIO_CTP_RST_PIN));
 	if(pin==1){
@@ -107,7 +98,6 @@ void tpd_gpio_as_int(int pin)
 }
 void tpd_gpio_output(int pin, int level)
 {
-	printk("[tpd]tpd_gpio_output pin = %d, level = %d\n", pin, level);
 	//printk("[tpd] fwq before  chage   gpio eint pin mode=%d\n",mt_get_gpio_mode(GPIO_CTP_EINT_PIN));
 	//printk("[tpd] fwq before  chage   gpio rst pin mode=%d\n",mt_get_gpio_mode(GPIO_CTP_RST_PIN));
 	if(pin==1){
@@ -125,7 +115,6 @@ void tpd_gpio_output(int pin, int level)
 int tpd_get_gpio_info(struct platform_device *pdev)
 {
 	int ret;
-	printk("[tpd %d] mt_tpd_pinctrl+++++++++++++++++\n",pdev->id);
 	
 	pinctrl1 = devm_pinctrl_get(&pdev->dev);
 	if (IS_ERR(pinctrl1)) {
@@ -167,7 +156,6 @@ int tpd_get_gpio_info(struct platform_device *pdev)
 		  dev_err(&pdev->dev, "fwq Cannot find touch pinctrl state_rst_output1!\n");
 		  return ret;
 	}
-	printk("[tpd%d] mt_tpd_pinctrl----------\n",pdev->id);
 }
 #endif
 static int tpd_misc_open(struct inode *inode, struct file *file)
@@ -388,8 +376,6 @@ static struct notifier_block tpd_fb_notifier;
 /* use fb_notifier */
 static int tpd_fb_notifier_callback(struct notifier_block *self, unsigned long event, void *data)
 {
-	TPD_DMESG("tpd_fb_notifier_callback\n");
-
 	struct fb_event *evdata = data;
 	int blank;
 	int i;
@@ -399,16 +385,13 @@ static int tpd_fb_notifier_callback(struct notifier_block *self, unsigned long e
 		return 0;
 
 	blank = *(int *)evdata->data;
-	TPD_DMESG("fb_notify(blank=%d)\n", blank);
 	switch (blank) {
 	case FB_BLANK_UNBLANK:
-		TPD_DMESG("LCD ON Notify\n");
 		if (g_tpd_drv && tpd_suspend_flag) 
 			g_tpd_drv->resume(NULL);
 		tpd_suspend_flag = 0;
 		break;
 	case FB_BLANK_POWERDOWN:
-		TPD_DMESG("LCD OFF Notify\n");
 		if (g_tpd_drv) g_tpd_drv->suspend(NULL);
 		tpd_suspend_flag = 1;
 		break;
@@ -424,7 +407,6 @@ int tpd_driver_add(struct tpd_driver_t *tpd_drv)
 	int i;
 
 	if (g_tpd_drv != NULL) {
-		TPD_DMESG("touch driver exist\n");
 		return -1;
 	}
 	/* check parameter */
@@ -500,7 +482,6 @@ static int tpd_probe(struct platform_device *pdev)
 {
 	int touch_type = 1;	/* 0:R-touch, 1: Cap-touch */
 	int i = 0;
-	TPD_DMESG("enter %s, %d\n", __func__, __LINE__);
 	/* Select R-Touch */
 	/* if(g_tpd_drv == NULL||tpd_load_status == 0) */
 #if 0
@@ -555,8 +536,6 @@ static int tpd_probe(struct platform_device *pdev)
 #endif     
     }
 
-	printk("mtk_tpd: TPD_RES_X = %d, TPD_RES_Y = %d\n", TPD_RES_X, TPD_RES_Y);
-
 	tpd_mode = TPD_MODE_NORMAL;
 	tpd_mode_axis = 0;
 	tpd_mode_min = TPD_RES_Y / 2;
@@ -583,8 +562,6 @@ static int tpd_probe(struct platform_device *pdev)
 			tpd_driver_list[i].tpd_local_init();
 			/* msleep(1); */
 			if (tpd_load_status == 1) {
-				TPD_DMESG("[mtk-tpd]tpd_probe, tpd_driver_name=%s\n",
-					  tpd_driver_list[i].tpd_device_name);
 				g_tpd_drv = &tpd_driver_list[i];
 				v_set_dev_name(2, g_tpd_drv->tpd_device_name);
 				break;
@@ -598,7 +575,6 @@ static int tpd_probe(struct platform_device *pdev)
 			/* touch_type:0: r-touch, 1: C-touch */
 			touch_type = 0;
 			g_tpd_drv->tpd_local_init();
-			TPD_DMESG("[mtk-tpd]Generic touch panel driver\n");
 		} else {
 			TPD_DMESG("[mtk-tpd]cap touch and Generic touch both are not loaded!!\n");
 			return 0;
@@ -648,7 +624,6 @@ static int tpd_probe(struct platform_device *pdev)
 		input_set_abs_params(tpd->dev, ABS_MT_TOUCH_MINOR, 0, 100, 0, 0);
 #endif /* CONFIG_MTK_S3320 */
 #endif
-		TPD_DMESG("Cap touch panel driver\n");
 	}
 /* #endif */
 #if 0				/* linux kernel update from 2.6.35 --> 3.0 */
@@ -721,7 +696,6 @@ static int tpd_remove(struct platform_device *pdev)
 /* called when loaded into kernel */
 static int __init tpd_device_init(void)
 {
-	printk("MediaTek touch panel driver init\n");
 #if defined(CONFIG_MTK_LEGACY)
 #ifdef CONFIG_OF
 	if(platform_device_register(&tpd_device)!=0) {
@@ -740,7 +714,6 @@ static int __init tpd_device_init(void)
 /* should never be called */
 static void __exit tpd_device_exit(void)
 {
-	TPD_DMESG("MediaTek touch panel driver exit\n");
 	/* input_unregister_device(tpd->dev); */
 	platform_driver_unregister(&tpd_driver);
 #ifdef CONFIG_HAS_EARLYSUSPEND
diff --git a/drivers/input/touchscreen/mediatek/tpd_debug.c b/drivers/input/touchscreen/mediatek/tpd_debug.c
index 52370cbe2..2516bba3d 100644
--- a/drivers/input/touchscreen/mediatek/tpd_debug.c
+++ b/drivers/input/touchscreen/mediatek/tpd_debug.c
@@ -252,14 +252,12 @@ static int tpd_debug_log_open(struct inode *inode, struct file *file)
 	spin_lock_init(&tpd_buf.buffer_lock);
 
 	file->private_data = &tpd_buf;
-	printk("[tpd_em_log]: open log file\n");
 	return 0;
 }
 
 static int tpd_debug_log_release(struct inode *inode, struct file *file)
 {
 	/* struct tpd_debug_log_buf *tpd_buf = (tpd_debug_log_buf *)file->private_data; */
-	printk("[tpd_em_log]: close log file\n");
 	vfree(tpd_buf.buffer);
 	/* free(tpd_buf); */
 	return 0;
@@ -478,7 +476,6 @@ static int __init tpd_log_init(void)
 		printk("[tpd_em_log] :register device failed\n");
 		return -1;
 	}
-	printk("[tpd_em_log] :register device successfully\n");
 	return 0;
 }
 
diff --git a/drivers/irqchip/irq-mt-eic.c b/drivers/irqchip/irq-mt-eic.c
index ad508cda1..7c50d59d9 100644
--- a/drivers/irqchip/irq-mt-eic.c
+++ b/drivers/irqchip/irq-mt-eic.c
@@ -1150,7 +1150,6 @@ void mt_eint_registration(unsigned int eint_num, unsigned int flag,
 			  unsigned int is_auto_umask)
 {
 	if (eint_num < EINT_MAX_CHANNEL) {
-		pr_notice("eint register for %d\n", eint_num);
 		spin_lock(&eint_lock);
 		mt_eint_mask(eint_num);
 
@@ -1271,67 +1270,51 @@ int get_eint_attribute(char *name, unsigned int name_len, unsigned int type,
 	int ret = 0;
 	int *sim_info = (int *)result;
 
-	pr_notice("query info: name:%s, type:%d, len:%d\n", name, type, name_len);
 	if (len == NULL || name == NULL || result == NULL)
 		return ERR_SIM_HOT_PLUG_NULL_POINTER;
 
 	for (i = 0; i < md_sim_counter; i++) {
-		pr_notice("compare string:%s\n", md_sim_info[i].name);
 		if (!strncmp(name, md_sim_info[i].name, name_len)) {
 			switch (type) {
 			case SIM_HOT_PLUG_EINT_NUMBER:
 				*len = sizeof(md_sim_info[i].eint_num);
 				memcpy(sim_info, &md_sim_info[i].eint_num,
 				       *len);
-				pr_notice("[EINT]eint_num:%d\n",
-				       md_sim_info[i].eint_num);
 				break;
 
 			case SIM_HOT_PLUG_EINT_DEBOUNCETIME:
 				*len = sizeof(md_sim_info[i].eint_deb);
 				memcpy(sim_info, &md_sim_info[i].eint_deb,
 				       *len);
-				pr_notice("[EINT]eint_deb:%d\n",
-				       md_sim_info[i].eint_deb);
 				break;
 
 			case SIM_HOT_PLUG_EINT_POLARITY:
 				*len = sizeof(md_sim_info[i].eint_pol);
 				memcpy(sim_info, &md_sim_info[i].eint_pol,
 				       *len);
-				pr_notice("[EINT]eint_pol:%d\n",
-				       md_sim_info[i].eint_pol);
 				break;
 
 			case SIM_HOT_PLUG_EINT_SENSITIVITY:
 				*len = sizeof(md_sim_info[i].eint_sens);
 				memcpy(sim_info, &md_sim_info[i].eint_sens,
 				       *len);
-				pr_notice("[EINT]eint_sens:%d\n",
-				       md_sim_info[i].eint_sens);
 				break;
 
 			case SIM_HOT_PLUG_EINT_SOCKETTYPE:
 				*len = sizeof(md_sim_info[i].socket_type);
 				memcpy(sim_info, &md_sim_info[i].socket_type,
 				       *len);
-				pr_notice("[EINT]socket_type:%d\n",
-				       md_sim_info[i].socket_type);
 				break;
 
 			case SIM_HOT_PLUG_EINT_DEDICATEDEN:
 				*len = sizeof(md_sim_info[i].dedicatedEn);
 				memcpy(sim_info, &md_sim_info[i].dedicatedEn,
 				       *len);
-				pr_notice("[EINT]dedicatedEn:%d\n",
-				       md_sim_info[i].dedicatedEn);
 				break;
 
 			case SIM_HOT_PLUG_EINT_SRCPIN:
 				*len = sizeof(md_sim_info[i].srcPin);
 				memcpy(sim_info, &md_sim_info[i].srcPin, *len);
-				pr_notice("[EINT]srcPin:%d\n",
-				       md_sim_info[i].srcPin);
 				break;
 
 			default:
@@ -1406,9 +1389,6 @@ static void setup_MD_eint(void)
 #ifdef CUST_EINT_MD1_0_SRCPIN
 	md_sim_info[md_sim_counter].srcPin = CUST_EINT_MD1_0_SRCPIN;
 #endif
-	pr_notice("[EINT] MD1 name = %s\n", md_sim_info[md_sim_counter].name);
-	pr_notice("[EINT] MD1 type = %d\n",
-	       md_sim_info[md_sim_counter].socket_type);
 	md_sim_counter++;
 #endif
 #if defined(CUST_EINT_MD1_1_NAME)
@@ -1425,9 +1405,6 @@ static void setup_MD_eint(void)
 #ifdef CUST_EINT_MD1_1_SRCPIN
 	md_sim_info[md_sim_counter].srcPin = CUST_EINT_MD1_1_SRCPIN;
 #endif
-	pr_notice("[EINT] MD1 name = %s\n", md_sim_info[md_sim_counter].name);
-	pr_notice("[EINT] MD1 type = %d\n",
-	       md_sim_info[md_sim_counter].socket_type);
 	md_sim_counter++;
 #endif
 #if defined(CUST_EINT_MD1_2_NAME)
@@ -1444,9 +1421,6 @@ static void setup_MD_eint(void)
 #ifdef CUST_EINT_MD1_2_SRCPIN
 	md_sim_info[md_sim_counter].srcPin = CUST_EINT_MD1_2_SRCPIN;
 #endif
-	pr_notice("[EINT] MD1 name = %s\n", md_sim_info[md_sim_counter].name);
-	pr_notice("[EINT] MD1 type = %d\n",
-	       md_sim_info[md_sim_counter].socket_type);
 	md_sim_counter++;
 #endif
 #if defined(CUST_EINT_MD1_3_NAME)
@@ -1463,9 +1437,6 @@ static void setup_MD_eint(void)
 #ifdef CUST_EINT_MD1_3_SRCPIN
 	md_sim_info[md_sim_counter].srcPin = CUST_EINT_MD1_3_SRCPIN;
 #endif
-	pr_notice("[EINT] MD1 name = %s\n", md_sim_info[md_sim_counter].name);
-	pr_notice("[EINT] MD1 type = %d\n",
-	       md_sim_info[md_sim_counter].socket_type);
 	md_sim_counter++;
 #endif
 #if defined(CUST_EINT_MD1_4_NAME)
@@ -1476,9 +1447,6 @@ static void setup_MD_eint(void)
 	md_sim_info[md_sim_counter].socket_type =
 	    get_type(md_sim_info[md_sim_counter].name);
 	md_sim_info[md_sim_counter].eint_deb = CUST_EINT_MD1_4_DEBOUNCE_CN;
-	pr_notice("[EINT] MD1 name = %s\n", md_sim_info[md_sim_counter].name);
-	pr_notice("[EINT] MD1 type = %d\n",
-	       md_sim_info[md_sim_counter].socket_type);
 	md_sim_counter++;
 #endif
 
@@ -1490,9 +1458,6 @@ static void setup_MD_eint(void)
 	md_sim_info[md_sim_counter].socket_type =
 	    get_type(md_sim_info[md_sim_counter].name);
 	md_sim_info[md_sim_counter].eint_deb = CUST_EINT_MD2_0_DEBOUNCE_CN;
-	pr_notice("[EINT] MD2 name = %s\n", md_sim_info[md_sim_counter].name);
-	pr_notice("[EINT] MD2 type = %d\n",
-	       md_sim_info[md_sim_counter].socket_type);
 	md_sim_counter++;
 #endif
 #if defined(CUST_EINT_MD2_1_NAME)
@@ -1503,9 +1468,6 @@ static void setup_MD_eint(void)
 	md_sim_info[md_sim_counter].socket_type =
 	    get_type(md_sim_info[md_sim_counter].name);
 	md_sim_info[md_sim_counter].eint_deb = CUST_EINT_MD2_1_DEBOUNCE_CN;
-	pr_notice("[EINT] MD2 name = %s\n", md_sim_info[md_sim_counter].name);
-	pr_notice("[EINT] MD2 type = %d\n",
-	       md_sim_info[md_sim_counter].socket_type);
 	md_sim_counter++;
 #endif
 #if defined(CUST_EINT_MD2_2_NAME)
@@ -1516,9 +1478,6 @@ static void setup_MD_eint(void)
 	md_sim_info[md_sim_counter].socket_type =
 	    get_type(md_sim_info[md_sim_counter].name);
 	md_sim_info[md_sim_counter].eint_deb = CUST_EINT_MD2_2_DEBOUNCE_CN;
-	pr_notice("[EINT] MD2 name = %s\n", md_sim_info[md_sim_counter].name);
-	pr_notice("[EINT] MD2 type = %d\n",
-	       md_sim_info[md_sim_counter].socket_type);
 	md_sim_counter++;
 #endif
 #if defined(CUST_EINT_MD2_3_NAME)
@@ -1529,9 +1488,6 @@ static void setup_MD_eint(void)
 	md_sim_info[md_sim_counter].socket_type =
 	    get_type(md_sim_info[md_sim_counter].name);
 	md_sim_info[md_sim_counter].eint_deb = CUST_EINT_MD2_3_DEBOUNCE_CN;
-	pr_notice("[EINT] MD2 name = %s\n", md_sim_info[md_sim_counter].name);
-	pr_notice("[EINT] MD2 type = %d\n",
-	       md_sim_info[md_sim_counter].socket_type);
 	md_sim_counter++;
 #endif
 #if defined(CUST_EINT_MD2_4_NAME)
@@ -1542,9 +1498,6 @@ static void setup_MD_eint(void)
 	md_sim_info[md_sim_counter].socket_type =
 	    get_type(md_sim_info[md_sim_counter].name);
 	md_sim_info[md_sim_counter].eint_deb = CUST_EINT_MD2_4_DEBOUNCE_CN;
-	pr_notice("[EINT] MD2 name = %s\n", md_sim_info[md_sim_counter].name);
-	pr_notice("[EINT] MD2 type = %d\n",
-	       md_sim_info[md_sim_counter].socket_type);
 	md_sim_counter++;
 #endif
 #endif /* end of MD_EINT */
@@ -1575,10 +1528,7 @@ static irqreturn_t mt_eint_soft_revert_isr(unsigned irq, struct irq_desc *desc)
 {
 	int eint_num = 0;
 	eint_num = DEMUX_EINT_IRQ(irq);
-	pr_notice("======EINT_SOFT_REVERT_ISR======\n");
-	pr_notice("EINT %d, in %s\n", eint_num, __func__);
 	mt_eint_revert_polarity(eint_num);
-	pr_notice("======EINT_SOFT_REVERT_ISR_END======\n");
 	return IRQ_HANDLED;
 }
 
@@ -1589,10 +1539,7 @@ static irqreturn_t mt_eint_soft_debounce_isr(unsigned irq,
 {
 	int eint_num = 0;
 	eint_num = DEMUX_EINT_IRQ(irq);
-	pr_notice("======EINT_SOFT_DEBOUNCE_ISR======\n");
-	pr_notice("EINT %d, in %s\n", eint_num, __func__);
 	mt_eint_revert_polarity(eint_num);
-	pr_notice("======EINT_SOFT_DEBOUNCE_ISR_END======\n");
 	sw_debounce = 1;
 	return IRQ_HANDLED;
 }
@@ -1602,11 +1549,8 @@ static irqreturn_t mt_eint_soft_nonauto_unmask_isr(unsigned irq,
 {
 	int eint_num = 0;
 	eint_num = DEMUX_EINT_IRQ(irq);
-	pr_notice("======EINT_NONAUTO_SOFT_ISR======\n");
-	pr_notice("EINT %d, in %s\n", eint_num, __func__);
 	mt_eint_revert_polarity(eint_num);
 	disable_irq_nosync(irq);
-	pr_notice("======EINT_NONAUTO_SOFT_ISR_END======\n");
 	return IRQ_HANDLED;
 }
 
@@ -1625,9 +1569,6 @@ static irqreturn_t mt_eint_hw_debounce_isr(unsigned irq, struct irq_desc *desc)
 	eint_num = DEMUX_EINT_IRQ(irq);
 	hw_debounce_end = sched_clock();
 	EINT_waiting = 0;
-	pr_notice("======EINT_HW_DEBOUNCE_ISR======\n");
-	pr_notice("EINT %d, in %s\n", eint_num, __func__);
-	pr_notice("======EINT_HW_DEBOUNCE_ISR_END======\n");
 	mt_set_gpio_out(gpio_debounce[EINT_OUT], 0);
 	return IRQ_HANDLED;
 }
@@ -1674,7 +1615,6 @@ static void mt_eint_autounmask_test(void)
 {
 	int ret = 0;
 	struct irq_desc *desc;
-	pr_notice("%s for EINT %d\n", __func__, eint_num);
 	setup_level_trigger_env(eint_num);
 	ret =
 	    request_irq(EINT_IRQ(eint_num),
@@ -1686,19 +1626,13 @@ static void mt_eint_autounmask_test(void)
 		return;
 	}
 	desc = irq_to_desc(EINT_IRQ(eint_num));
-	pr_notice("EINT %d request_irq done\n", eint_num);
 	mt_eint_revert_polarity(eint_num);
-	pr_notice("trigger EINT %d done\n", eint_num);
-	pr_notice("EINT %d, MASK 0x%d\n", eint_num, mt_eint_get_mask(eint_num));
 	free_irq(EINT_IRQ(eint_num), NULL);
 }
 
 static irqreturn_t mt_deint_soft_revert_isr(unsigned irq, struct irq_desc *desc)
 {
-	pr_notice("======DEINT_SOFT_REVERT_ISR======\n");
-	pr_notice("irq = %d\n", irq);
 	irq_set_irq_type(irq, IRQF_TRIGGER_HIGH);
-	pr_notice("======DEINT_SOFT_REVERT_ISR_END======\n");
 	return IRQ_HANDLED;
 }
 
@@ -1706,11 +1640,8 @@ static void mt_deint_test(void)
 {
 	int ret = 0;
 
-	pr_notice("%s for EINT %d\n", __func__, eint_num);
-
 	ret = mt_eint_set_deint(eint_num, 189);
 	if (ret == 0) {
-		pr_notice("mt_eint_set_deint done\n");
 	} else {
 		pr_err("mt_eint_set_deint fail\n");
 		return;
@@ -1723,12 +1654,8 @@ static void mt_deint_test(void)
 		pr_err("EINT IRQ LINE NOT AVAILABLE!!\n");
 		return;
 	}
-	pr_notice("EINT %d request_irq done\n", eint_num);
 	irq_set_irq_type(189, IRQF_TRIGGER_LOW);
 
-	pr_notice("trigger EINT %d done\n", eint_num);
-	pr_notice("EINT %d, MASK 0x%d\n", eint_num, mt_eint_get_mask(eint_num));
-
 	free_irq(189, NULL);
 	mt_eint_clr_deint(eint_num);
 }
@@ -1739,7 +1666,6 @@ static int mt_eint_non_autounmask_test(void)
 
 	setup_level_trigger_env(eint_num);
 	EINT_FUNC.eint_func[eint_num] = NULL;
-	pr_notice("%s for EINT %d\n", __func__, eint_num);
 	ret =
 	    request_irq(EINT_IRQ(eint_num),
 			(irq_handler_t) mt_eint_soft_nonauto_unmask_isr,
@@ -1749,10 +1675,7 @@ static int mt_eint_non_autounmask_test(void)
 		pr_err("EINT IRQ LINE NOT AVAILABLE!!\n");
 		return -1;
 	}
-	pr_notice("EINT %d request_irq done\n", eint_num);
 	mt_eint_revert_polarity(eint_num);
-	pr_notice("trigger EINT %d done\n", eint_num);
-	pr_notice("EINT %d, MASK 0x%d\n", eint_num, mt_eint_get_mask(eint_num));
 	free_irq(EINT_IRQ(eint_num), NULL);
 	return 1;
 }
@@ -1764,10 +1687,7 @@ void mt_eint_normal_test_based_on_sw_debounce(void)
 	unsigned int debounce_time = 30;
 
 	setup_level_trigger_env(eint_num);
-	pr_notice("%s for EINT %d\n", __func__, eint_num);
 	gpio_set_debounce(EINT_GPIO(eint_num), debounce_time);
-	pr_notice("EINT %d debounce enable %d\n", eint_num,
-	       mt_eint_is_debounce_en(eint_num));
 	ret =
 	    request_irq(EINT_IRQ(eint_num),
 			(irq_handler_t) mt_eint_soft_debounce_isr,
@@ -1775,14 +1695,10 @@ void mt_eint_normal_test_based_on_sw_debounce(void)
 			NULL);
 	if (ret > 0)
 		pr_err("EINT IRQ LINE NOT AVAILABLE!!\n");
-	pr_notice("EINT %d request_irq done\n", eint_num);
 	mt_eint_revert_polarity(eint_num);
-	pr_notice("trigger EINT %d done\n", eint_num);
-	pr_notice("start waiting sw_debounce\n");
 	while (!sw_debounce)
 		;
 	sw_debounce = 0;
-	pr_notice("EINT %d, MASK 0x%d\n", eint_num, mt_eint_get_mask(eint_num));
 	free_irq(EINT_IRQ(eint_num), NULL);
 }
 
@@ -1792,7 +1708,6 @@ void mt_eint_normal_test_based_on_hw_debounce(void)
 	unsigned int debounce_time = 16;
 	unsigned long long delay_start;
 
-	pr_notice("%s for EINT %d\n", __func__, eint_debounce[EINT_IN]);
 	gpio_set_debounce(EINT_GPIO(eint_debounce[EINT_IN]), debounce_time);
 
 	/* GPIO setting */
@@ -1803,7 +1718,6 @@ void mt_eint_normal_test_based_on_hw_debounce(void)
 	mt_set_gpio_mode(gpio_debounce[EINT_IN], GPIO_MODE_04);
 	mt_set_gpio_dir(gpio_debounce[EINT_IN], GPIO_DIR_IN);
 
-	pr_notice("before request_irq for EINT %d\n", eint_debounce[EINT_IN]);
 	EINT_waiting = 1;
 	ret =
 	    request_irq(EINT_IRQ(eint_debounce[EINT_IN]),
@@ -1811,33 +1725,21 @@ void mt_eint_normal_test_based_on_hw_debounce(void)
 			IRQF_TRIGGER_HIGH, "EINT-HWDEBOUNCE", NULL);
 	if (ret > 0)
 		pr_err("EINT IRQ LINE NOT AVAILABLE!!\n");
-	pr_notice("EINT %d request_irq done\n", eint_debounce[EINT_IN]);
 	mt_set_gpio_out(gpio_debounce[EINT_OUT], 1);
-	pr_notice("trigger EINT %d done\n", eint_debounce[EINT_IN]);
 	hw_debounce_start = delay_start = sched_clock();
-	pr_notice("waiting for EINT %d\n", eint_debounce[EINT_IN]);
 
 	while (EINT_waiting) {
 		delay_start = sched_clock();
 		if (!EINT_waiting)
 			break;
 	}
-	pr_notice("hw_debounce time t1=%llu ,t2=%llu, %llu ns\n",
-	       hw_debounce_start, hw_debounce_end,
-	       (hw_debounce_end - hw_debounce_start));
-	pr_notice("duration time t1=%llu ,t2=%llu, %llu ns\n", hw_debounce_start,
-	       delay_start, (delay_start - hw_debounce_start));
-
 	/* divide by 1m => ns to ms */
 	if (!EINT_waiting
 	    && (hw_debounce_start - hw_debounce_end) / 1000000 >
 	    debounce_time) {
-		pr_notice("...pass\n");
 	} else {
 		pr_notice("...failed\n");
 	}
-	pr_notice("EINT %d, MASK 0x%d\n", eint_debounce[EINT_IN],
-	       mt_eint_get_mask(eint_debounce[EINT_IN]));
 	free_irq(EINT_IRQ(eint_debounce[EINT_IN]), NULL);
 }
 
@@ -1921,7 +1823,6 @@ int get_supported_irq_num(void)
 #define GIC_DIST_CTR 0x4
 	ret = readl_relaxed(dist_base + GIC_DIST_CTR) & 0x1f;
 	ret = (ret + 1) * 32;
-	pr_notice("gic supported max = %d\n", ret);
 	return ret;
 }
 
@@ -2002,7 +1903,6 @@ static void pin_traverse(void)
 
 	for (r = rb_first(&root); r; r = rb_next(r)) {
 		p = rb_entry(r, struct pin_node, node);
-		pr_notice("gpio = %d, eint = %d\n", p->gpio_pin, p->eint_pin);
 	}
 }
 #endif
@@ -2110,7 +2010,6 @@ static int __init mt_eint_init(void)
 	node = of_find_compatible_node(NULL, NULL, "mtk,mt-eic");
 	if (node) {
 		EINT_BASE = of_iomap(node, 0);
-		pr_notice("get EINT_BASE @ %p\n", EINT_BASE);
 	} else {
 		pr_err("can't find compatible node\n");
 		return -1;
@@ -2173,7 +2072,6 @@ static int __init mt_eint_init(void)
 	}
 
 	if (of_property_read_u32(node, "max_deint_cnt", &MAX_DEINT_CNT)) {
-		pr_warn("[EIC] no max_deint_cnt specified\n");
 	} else {
 		deint_possible_irq =
 		    kzalloc(sizeof(u32) * MAX_DEINT_CNT, GFP_KERNEL);
@@ -2195,7 +2093,6 @@ static int __init mt_eint_init(void)
 	}
 
 	if (of_property_read_u32(node, "builtin_entry", &builtin_entry)) {
-		pr_warn("[EIC] no builtin_entry property\n");
 	} else {
 		builtin_mapping = kzalloc(sizeof(struct builtin_eint)*builtin_entry, GFP_KERNEL);
 		if (!builtin_mapping) {
@@ -2209,8 +2106,6 @@ static int __init mt_eint_init(void)
 		}
 		len /= sizeof(*spec);
 
-		pr_warn("[EIC] builtin_mapping: spec=%d, len=%d\n", be32_to_cpup(spec), len);
-
 		for (i = 0; i < builtin_entry ; ++i) {
 			builtin_mapping[i].gpio = be32_to_cpup(spec+(i*3));
 			builtin_mapping[i].func_mode = be32_to_cpup(spec+(i*3)+1);
@@ -2243,18 +2138,10 @@ static int __init mt_eint_init(void)
 #if defined(EINT_TEST_V2)
 		pin_traverse();
 		p = pin_search(31);
-		if (p)
-			pr_notice("gpio 31 = eint %d\n", p->eint_pin);
 
 		p = pin_search(37);
-		if (p)
-			pr_notice("gpio 37 = eint %d\n", p->eint_pin);
 
 		p = pin_search(GPIO_MAX);
-		if (p)
-			pr_notice("gpio GPIO_MAX = eint %d\n", p->eint_pin);
-		else
-			pr_notice("can't find for GPIO %d\n", GPIO_MAX);
 #endif
 	}
 
@@ -2264,7 +2151,6 @@ static int __init mt_eint_init(void)
 		pr_err("get_supported_irq_num returns %d\n", EINT_IRQ_BASE);
 		return -1;
 	}
-	pr_notice("EINT_IRQ_BASE = %d\n", EINT_IRQ_BASE);
 	irq_base =
 	    irq_alloc_descs(EINT_IRQ_BASE, EINT_IRQ_BASE, EINT_MAX_CHANNEL,
 			    numa_node_id());
@@ -2300,7 +2186,6 @@ static int __init mt_eint_init(void)
 	node = of_find_compatible_node(NULL, NULL, "mediatek, ACCDET-eint");
 	if (node) {
 		i = irq_of_parse_and_map(node, 0);
-		pr_notice("virq for ACCDET = %d\n", i);
 	} else {
 		pr_err("can't find compatible node for ACCDET\n");
 	}
@@ -2309,7 +2194,6 @@ static int __init mt_eint_init(void)
 	    of_find_compatible_node(NULL, NULL, "mediatek, TOUCH_PANEL-eint");
 	if (node) {
 		i = irq_of_parse_and_map(node, 0);
-		pr_notice("virq for TOUCH = %d\n", i);
 	} else {
 		pr_err("can't find compatible node for TOUCH\n");
 	}
@@ -2378,9 +2262,6 @@ void mt_eint_dump_status(unsigned int eint)
 {
 	if (eint >= EINT_MAX_CHANNEL)
 		return;
-	pr_notice("[EINT] eint:%d,mask:%x,pol:%x,deb:%x,sens:%x\n", eint,
-	       mt_eint_get_mask(eint), mt_eint_get_polarity(eint),
-	       mt_eint_get_debounce_cnt(eint), mt_eint_get_sens(eint));
 }
 #endif
 
@@ -2391,13 +2272,11 @@ void mt_eint_print_status(void)
 {
 	unsigned int status, index;
 	unsigned int offset, reg_base, status_check;
-	pr_notice("EINT_STA:");
 	for (reg_base = 0; reg_base < EINT_MAX_CHANNEL; reg_base += 32) {
 		/* read status register every 32 interrupts */
 		status = mt_eint_get_status(reg_base);
-		if (status)
-			pr_notice("EINT Module - index:%d,EINT_STA = 0x%x\n", reg_base, status);
-		else
+		if (status) {
+        }else
 			continue;
 
 		for (offset = 0; offset < 32; offset++) {
@@ -2407,14 +2286,12 @@ void mt_eint_print_status(void)
 
 			status_check = status & (1 << offset);
 			if (status_check) {
-				pr_notice("EINT %d is pending\n", index);
 #if (EINT_DEBUG == 1)
 				mt_eint_dump_status(index);
 #endif
 			}
 		}
 	}
-	pr_notice("\n");
 }
 EXPORT_SYMBOL(mt_eint_print_status);
 
diff --git a/drivers/misc/mediatek/accdet/accdet_drv.c b/drivers/misc/mediatek/accdet/accdet_drv.c
index da96aad24..3df0bc628 100644
--- a/drivers/misc/mediatek/accdet/accdet_drv.c
+++ b/drivers/misc/mediatek/accdet/accdet_drv.c
@@ -9,7 +9,7 @@
 
 static struct platform_driver accdet_driver;
 
-static int debug_enable_drv = 1;
+static int debug_enable_drv = 0;
 #define ACCDET_DEBUG_DRV(format, args...) do { \
 	if (debug_enable_drv) \
 	{\
@@ -123,17 +123,12 @@ static int accdet_mod_init(void)
 
 #if defined(CONFIG_OF)
     ret = platform_device_register(&accdet_device);
-    printk("[%s]: accdet_device, retval=%d \n!", __func__, ret);
 
 	if (ret != 0)
 	{
 		printk("platform_device_accdet_register error:(%d)\n", ret);
 		return ret;
 	}
-	else
-	{
-		printk("platform_device_accdet_register done!\n");
-	}
 #endif	
 
 	/* ------------------------------------------------------------------ */
@@ -144,11 +139,8 @@ static int accdet_mod_init(void)
 	if (ret) {
 		ACCDET_DEBUG_DRV("[Accdet]platform_driver_register error:(%d)\n", ret);
 		return ret;
-	} else {
-		ACCDET_DEBUG_DRV("[Accdet]platform_driver_register done!\n");
 	}
 
-	ACCDET_DEBUG_DRV("[Accdet]accdet_mod_init done!\n");
 	return 0;
 
 }
@@ -157,8 +149,6 @@ static void accdet_mod_exit(void)
 {
 	ACCDET_DEBUG_DRV("[Accdet]accdet_mod_exit\n");
 	platform_driver_unregister(&accdet_driver);
-
-	ACCDET_DEBUG_DRV("[Accdet]accdet_mod_exit Done!\n");
 }
 
 /*Patch for CR ALPS00804150 & ALPS00804802 PMIC temp not correct issue*/
diff --git a/drivers/misc/mediatek/accdet/mt6580/accdet.c b/drivers/misc/mediatek/accdet/mt6580/accdet.c
index d7685cfa1..0fb4a263f 100755
--- a/drivers/misc/mediatek/accdet/mt6580/accdet.c
+++ b/drivers/misc/mediatek/accdet/mt6580/accdet.c
@@ -24,7 +24,7 @@ static variable defination
 
 static int button_press_debounce = 0x400;
 
-static int debug_enable = 1;
+static int debug_enable = 0;
 int cur_key = 0;
 
 int accdet_irq;
diff --git a/drivers/misc/mediatek/accelerometer/accel.c b/drivers/misc/mediatek/accelerometer/accel.c
index af412fb5c..c98e70340 100755
--- a/drivers/misc/mediatek/accelerometer/accel.c
+++ b/drivers/misc/mediatek/accelerometer/accel.c
@@ -89,7 +89,6 @@ static struct acc_context *acc_context_alloc_object(void)
 {
 
 	struct acc_context *obj = kzalloc(sizeof(*obj), GFP_KERNEL);
-	ACC_LOG("acc_context_alloc_object++++\n");
 	if (!obj) {
 		ACC_ERR("Alloc accel object error!\n");
 		return NULL;
@@ -108,7 +107,6 @@ static struct acc_context *acc_context_alloc_object(void)
 	obj->cali_sw[ACC_AXIS_X]=0;
 	obj->cali_sw[ACC_AXIS_Y]=0;
 	obj->cali_sw[ACC_AXIS_Z]=0;
-	ACC_LOG("acc_context_alloc_object----\n");
 	return obj;
 }
 
@@ -130,7 +128,6 @@ static int acc_real_enable(int enable)
 							enable, err);
 				}
 			}
-			ACC_LOG("acc real enable \n");
 		}
 
 	}
@@ -140,7 +137,6 @@ static int acc_real_enable(int enable)
 			if (err) {
 				ACC_ERR("acc enable(%d) err = %d\n", enable, err);
 			}
-			ACC_LOG("acc real disable \n");
 		}
 
 	}
@@ -158,7 +154,6 @@ static int acc_enable_data(int enable)
 	}
 
 	if (1 == enable) {
-		ACC_LOG("ACC enable data\n");
 		cxt->is_active_data = true;
 		cxt->is_first_data_after_enable = true;
 		cxt->acc_ctl.open_report_data(1);
@@ -172,7 +167,6 @@ static int acc_enable_data(int enable)
 		}
 	}
 	if (0 == enable) {
-		ACC_LOG("ACC disable\n");
 
 		cxt->is_active_data = false;
 		cxt->acc_ctl.open_report_data(0);
@@ -219,7 +213,6 @@ int acc_enable_nodata(int enable)
 static ssize_t acc_show_enable_nodata(struct device *dev, struct device_attribute *attr, char *buf)
 {
 	int len = 0;
-	ACC_LOG(" not support now\n");
 	return len;
 }
 
@@ -227,7 +220,6 @@ static ssize_t acc_store_enable_nodata(struct device *dev, struct device_attribu
 				       const char *buf, size_t count)
 {
 	struct acc_context *cxt = NULL;
-	ACC_LOG("acc_store_enable nodata buf=%s\n", buf);
 	mutex_lock(&acc_context_obj->acc_op_mutex);
 	cxt = acc_context_obj;
 	if (NULL == cxt->acc_ctl.enable_nodata) {
@@ -252,7 +244,6 @@ static ssize_t acc_store_active(struct device *dev, struct device_attribute *att
 				const char *buf, size_t count)
 {
 	struct acc_context *cxt = NULL;
-	ACC_LOG("acc_store_active buf=%s\n", buf);
 	mutex_lock(&acc_context_obj->acc_op_mutex);
 	cxt = acc_context_obj;
 	if (NULL == cxt->acc_ctl.open_report_data) {
@@ -272,7 +263,6 @@ static ssize_t acc_store_active(struct device *dev, struct device_attribute *att
 		ACC_ERR(" acc_store_active error !!\n");
 	}
 	mutex_unlock(&acc_context_obj->acc_op_mutex);
-	ACC_LOG(" acc_store_active done\n");
 	return count;
 }
 
@@ -283,7 +273,6 @@ static ssize_t acc_show_active(struct device *dev, struct device_attribute *attr
 	int div = 0;
 	cxt = acc_context_obj;
 	div=cxt->acc_data.vender_div;
-	ACC_LOG("acc vender_div value: %d\n", div);
 	return snprintf(buf, PAGE_SIZE, "%d\n", div);
 }
 
@@ -312,7 +301,6 @@ static ssize_t acc_store_delay(struct device *dev, struct device_attribute *attr
 		atomic_set(&acc_context_obj->delay, mdelay);
 	}
 	cxt->acc_ctl.set_delay(delay);
-	ACC_LOG(" acc_delay %d ns\n", delay);
 	mutex_unlock(&acc_context_obj->acc_op_mutex);
 	return count;
 }
@@ -320,7 +308,6 @@ static ssize_t acc_store_delay(struct device *dev, struct device_attribute *attr
 static ssize_t acc_show_delay(struct device *dev, struct device_attribute *attr, char *buf)
 {
 	int len = 0;
-	ACC_LOG(" not support now\n");
 	return len;
 }
 
@@ -338,7 +325,6 @@ static ssize_t acc_store_batch(struct device* dev, struct device_attribute *attr
                                   const char *buf, size_t count)
 {
 	struct acc_context *cxt = NULL;
-	ACC_LOG("acc_store_batch buf=%s\n",buf);
 	mutex_lock(&acc_context_obj->acc_op_mutex);
 	cxt = acc_context_obj;
 	if(cxt->acc_ctl.is_support_batch){
@@ -372,10 +358,8 @@ static ssize_t acc_store_batch(struct device* dev, struct device_attribute *attr
 			ACC_ERR(" acc_store_batch error !!\n");
 		}
 	}else{
-		ACC_LOG(" acc_store_batch mot supported\n");
 	}
 	mutex_unlock(&acc_context_obj->acc_op_mutex);
-	ACC_LOG(" acc_store_batch done: %d\n", cxt->is_batch_enable);
     	return count;
 
 }
@@ -401,13 +385,11 @@ static ssize_t acc_show_flush(struct device* dev,
 }
 static int gsensor_remove(struct platform_device *pdev)
 {
-	ACC_LOG("gsensor_remove\n");
 	return 0;
 }
 
 static int gsensor_probe(struct platform_device *pdev)
 {
-	ACC_LOG("gsensor_probe\n");
 	return 0;
 }
 
@@ -432,15 +414,10 @@ static int acc_real_driver_init(void)
 {
 	int i = 0;
 	int err = 0;
-	ACC_LOG(" acc_real_driver_init +\n");
 	for (i = 0; i < MAX_CHOOSE_G_NUM; i++) {
-		ACC_LOG(" i=%d\n", i);
 		if (0 != gsensor_init_list[i]) {
-			ACC_LOG(" acc try to init driver %s\n", gsensor_init_list[i]->name);
 			err = gsensor_init_list[i]->init();
 			if (0 == err) {
-				ACC_LOG(" acc real driver %s probe ok\n",
-					gsensor_init_list[i]->name);
 				break;
 			}
 		}
@@ -458,14 +435,12 @@ int acc_driver_add(struct acc_init_info *obj)
 	int err = 0;
 	int i = 0;
 
-	ACC_FUN();
 	if (!obj) {
 		ACC_ERR("ACC driver add fail, acc_init_info is NULL \n");
 		return -1;
 	}
 	for (i = 0; i < MAX_CHOOSE_G_NUM; i++) {
         if ((i == 0) && (NULL == gsensor_init_list[0])) {
-			ACC_LOG("register gensor driver for the first time\n");
 			if (platform_driver_register(&gsensor_driver)) {
 				ACC_ERR("failed to register gensor driver already exist\n");
 			}
@@ -561,7 +536,6 @@ int acc_register_data_path(struct acc_data_path *data)
 	cxt->acc_data.get_data = data->get_data;
 	cxt->acc_data.get_raw_data = data->get_raw_data;
 	cxt->acc_data.vender_div = data->vender_div;
-	ACC_LOG("acc register data path vender_div: %d\n", cxt->acc_data.vender_div);
 	if (NULL == cxt->acc_data.get_data) {
 		ACC_LOG("acc register data path fail\n");
 		return -1;
@@ -621,7 +595,6 @@ static int acc_probe(struct platform_device *pdev)
 {
 
 	int err;
-	ACC_LOG("+++++++++++++accel_probe!!\n");
 
 	acc_context_obj = acc_context_alloc_object();
 	if (!acc_context_obj) {
@@ -664,7 +637,6 @@ static int acc_probe(struct platform_device *pdev)
 #endif
 
   
-	ACC_LOG("----accel_probe OK !!\n");
 	return 0;
 
 
@@ -675,7 +647,6 @@ static int acc_probe(struct platform_device *pdev)
  exit_alloc_data_failed:
 
 
-	ACC_LOG("----accel_probe fail !!!\n");
 	return err;
 }
 
@@ -684,7 +655,6 @@ static int acc_probe(struct platform_device *pdev)
 static int acc_remove(struct platform_device *pdev)
 {
 	int err=0;
-	ACC_FUN(f);
 	input_unregister_device(acc_context_obj->idev);
 	sysfs_remove_group(&acc_context_obj->idev->dev.kobj, &acc_attribute_group);
 
@@ -699,8 +669,6 @@ static int acc_remove(struct platform_device *pdev)
 static void acc_early_suspend(struct early_suspend *h)
 {
 	atomic_set(&(acc_context_obj->early_suspend), 1);
-	ACC_LOG(" acc_early_suspend ok------->hwm_obj->early_suspend=%d\n",
-		atomic_read(&(acc_context_obj->early_suspend)));
 	return;
 }
 
@@ -708,8 +676,6 @@ static void acc_early_suspend(struct early_suspend *h)
 static void acc_late_resume(struct early_suspend *h)
 {
 	atomic_set(&(acc_context_obj->early_suspend), 0);
-	ACC_LOG(" acc_late_resume ok------->hwm_obj->early_suspend=%d\n",
-		atomic_read(&(acc_context_obj->early_suspend)));
 	return;
 }
 #endif
@@ -746,8 +712,6 @@ static struct platform_driver acc_driver = {
 
 static int __init acc_init(void)
 {
-	ACC_FUN();
-
 	if (platform_driver_register(&acc_driver)) {
 		ACC_ERR("failed to register acc driver\n");
 		return -ENODEV;
diff --git a/drivers/misc/mediatek/accelerometer/accel_factory.c b/drivers/misc/mediatek/accelerometer/accel_factory.c
index 577dd6288..35014401a 100755
--- a/drivers/misc/mediatek/accelerometer/accel_factory.c
+++ b/drivers/misc/mediatek/accelerometer/accel_factory.c
@@ -271,20 +271,17 @@ int acc_factory_device_init()
 {
 	int error = 0;
 	struct acc_context *cxt = acc_context_obj;
-	printk("####1#########\n");
 	#ifndef CONFIG_BOSCH_SENSORHUB
 	if (!cxt->acc_ctl.is_use_common_factory) {
 		ACC_LOG("Node of '/dev/gsensor' has already existed!\n");
 		return -1;
 	}
 	#endif
-	printk("####2#########\n");
     if ((error = misc_register(&acc_factory_device)))
     {
         ACC_LOG("acc_factory_device register failed\n");
 		error = -1;
     }	
-	printk("####3#########\n");
 	return error;
 }
 
diff --git a/drivers/misc/mediatek/alsps/aal_control.c b/drivers/misc/mediatek/alsps/aal_control.c
index d452da3f6..9ae9bfa1b 100644
--- a/drivers/misc/mediatek/alsps/aal_control.c
+++ b/drivers/misc/mediatek/alsps/aal_control.c
@@ -103,7 +103,6 @@ static int __init AAL_init(void)
 	{
 		AAL_ERR("AAL_device misc_register failed: %d\n", err);
 	}
-	AAL_FUN("OK!\n");
 	return 0;
 }
 /*----------------------------------------------------------------------------*/
diff --git a/drivers/misc/mediatek/alsps/alsps.c b/drivers/misc/mediatek/alsps/alsps.c
index 4e69061a9..e604b2ec2 100755
--- a/drivers/misc/mediatek/alsps/alsps.c
+++ b/drivers/misc/mediatek/alsps/alsps.c
@@ -211,7 +211,6 @@ static struct alsps_context *alsps_context_alloc_object(void)
 {
 	
 	struct alsps_context *obj = kzalloc(sizeof(*obj), GFP_KERNEL); 
-    	ALSPS_LOG("alsps_context_alloc_object++++\n");
 	if(!obj)
 	{
 		ALSPS_ERR("Alloc alsps object error!\n");
@@ -240,7 +239,6 @@ static struct alsps_context *alsps_context_alloc_object(void)
 	obj->is_als_batch_enable = false;//for batch mode init
 	obj->is_ps_batch_enable = false;//for batch mode init
 
-	ALSPS_LOG("alsps_context_alloc_object----\n");
 	return obj;
 }
 
@@ -265,7 +263,6 @@ static int als_real_enable(int enable)
 					ALSPS_ERR("alsps enable(%d) err 3 timers = %d\n", enable, err);
 		   }
         }
-		ALSPS_LOG("alsps real enable  \n" );
      }
 	 
   }
@@ -273,7 +270,6 @@ static int als_real_enable(int enable)
   {
      if(false==cxt->is_als_active_data && false ==cxt->is_als_active_nodata)
      {
-     	ALSPS_LOG("AAL status is %d\n", aal_use);
      	if(aal_use == 0){
 	        err = cxt->als_ctl.enable_nodata(0);
 	        if(err)
@@ -281,7 +277,6 @@ static int als_real_enable(int enable)
 	          ALSPS_ERR("alsps enable(%d) err = %d\n", enable, err);
 	        }
      	}
-		ALSPS_LOG("alsps real disable  \n" );
      }
 	 
   }
@@ -301,7 +296,6 @@ static int als_enable_data(int enable)
 	
     	if(1 == enable)
     	{
-       	ALSPS_LOG("ALSPS enable data\n");
 	   	cxt->is_als_active_data =true;
       	cxt->is_als_first_data_after_enable = true;
 	   	cxt->als_ctl.open_report_data(1);
@@ -318,7 +312,6 @@ static int als_enable_data(int enable)
     	}
 	if(0 == enable)
 	{
-	   	ALSPS_LOG("ALSPS disable \n");
 	   	cxt->is_als_active_data =false;
 	   	cxt->als_ctl.open_report_data(0);
 	   	if(true == cxt->is_als_polling_run)
@@ -359,7 +352,6 @@ static int ps_real_enable(int enable)
 					ALSPS_ERR("ps enable(%d) err 3 timers = %d\n", enable, err);
 		   }
         }
-		ALSPS_LOG("ps real enable  \n" );
      }
 	 
   }
@@ -372,7 +364,6 @@ static int ps_real_enable(int enable)
         { 
           ALSPS_ERR("ps enable(%d) err = %d\n", enable, err);
         }
-		ALSPS_LOG("ps real disable  \n" );
      }
 	 
   }
@@ -392,7 +383,6 @@ static int ps_enable_data(int enable)
 	
     	if(1 == enable)
     	{
-       	ALSPS_LOG("PS enable data\n");
 	   	cxt->is_ps_active_data =true;
       	 	cxt->is_ps_first_data_after_enable = true;
 	   	cxt->ps_ctl.open_report_data(1);
@@ -409,7 +399,6 @@ static int ps_enable_data(int enable)
     	}
 	if(0 == enable)
 	{
-	   	ALSPS_LOG("PS disable \n");
 	   	cxt->is_ps_active_data =false;
 	   	cxt->ps_ctl.open_report_data(0);
 	   	if(true == cxt->is_ps_polling_run)
@@ -434,7 +423,6 @@ static ssize_t als_store_active(struct device* dev, struct device_attribute *att
 {  
 	struct alsps_context *cxt = NULL;
 	//int err =0;
-	ALSPS_LOG("als_store_active buf=%s\n",buf);
 	mutex_lock(&alsps_context_obj->alsps_op_mutex);
 	cxt = alsps_context_obj;
 
@@ -451,7 +439,6 @@ static ssize_t als_store_active(struct device* dev, struct device_attribute *att
 	  ALSPS_ERR(" alsps_store_active error !!\n");
 	}
 	mutex_unlock(&alsps_context_obj->alsps_op_mutex);
-	ALSPS_LOG(" alsps_store_active done\n");
     return count;
 }
 /*----------------------------------------------------------------------------*/
@@ -462,7 +449,6 @@ static ssize_t als_show_active(struct device* dev,
 	int div = 0;
 	cxt = alsps_context_obj;
 	div=cxt->als_data.vender_div;
-	ALSPS_LOG("als vender_div value: %d\n", div);
 	return snprintf(buf, PAGE_SIZE, "%d\n", div); 
 }
 
@@ -479,7 +465,6 @@ static ssize_t als_store_delay(struct device* dev, struct device_attribute *attr
 	cxt = alsps_context_obj;
 	if(NULL == cxt->als_ctl.set_delay)
 	{
-		ALSPS_LOG("als_ctl set_delay NULL\n");
 		mutex_unlock(&alsps_context_obj->alsps_op_mutex);
 	 	return count;
 	}
@@ -496,7 +481,6 @@ static ssize_t als_store_delay(struct device* dev, struct device_attribute *attr
     	atomic_set(&alsps_context_obj->delay_als, mdelay);
     }
     cxt->als_ctl.set_delay(delay);
-	ALSPS_LOG(" als_delay %d ns\n",delay);
 	mutex_unlock(&alsps_context_obj->alsps_op_mutex);
     return count;
 
@@ -506,7 +490,6 @@ static ssize_t als_show_delay(struct device* dev,
                                  struct device_attribute *attr, char *buf) 
 {
     int len = 0;
-	ALSPS_LOG(" not support now\n");
 	return len;
 }
 
@@ -516,7 +499,6 @@ static ssize_t als_store_batch(struct device* dev, struct device_attribute *attr
 {
 	struct alsps_context *cxt = NULL;
 	//int err =0;
-	ALSPS_LOG("als_store_batch buf=%s\n",buf);
 	mutex_lock(&alsps_context_obj->alsps_op_mutex);
 	cxt = alsps_context_obj;
 	if(cxt->als_ctl.is_support_batch){
@@ -554,7 +536,6 @@ static ssize_t als_store_batch(struct device* dev, struct device_attribute *attr
 		ALSPS_LOG(" als_store_batch not supported\n");
 	}
 	mutex_unlock(&alsps_context_obj->alsps_op_mutex);
-	ALSPS_LOG(" als_store_batch done: %d\n", cxt->is_als_batch_enable);
     return count;
 
 }
@@ -593,7 +574,6 @@ static ssize_t ps_store_active(struct device* dev, struct device_attribute *attr
 {
 	struct alsps_context *cxt = NULL;
 	//int err =0;
-	ALSPS_LOG("ps_store_active buf=%s\n",buf);
 	mutex_lock(&alsps_context_obj->alsps_op_mutex);
 	cxt = alsps_context_obj;
 
@@ -610,7 +590,6 @@ static ssize_t ps_store_active(struct device* dev, struct device_attribute *attr
 	  ALSPS_ERR(" ps_store_active error !!\n");
 	}
 	mutex_unlock(&alsps_context_obj->alsps_op_mutex);
-	ALSPS_LOG(" ps_store_active done\n");
     return count;
 }
 /*----------------------------------------------------------------------------*/
@@ -621,7 +600,6 @@ static ssize_t ps_show_active(struct device* dev,
 	int div = 0;
 	cxt = alsps_context_obj;
 	div=cxt->ps_data.vender_div;
-	ALSPS_LOG("ps vender_div value: %d\n", div);
 	return snprintf(buf, PAGE_SIZE, "%d\n", div); 
 }
 
@@ -638,7 +616,6 @@ static ssize_t ps_store_delay(struct device* dev, struct device_attribute *attr,
 	cxt = alsps_context_obj;
 	if(NULL == cxt->ps_ctl.set_delay)
 	{
-		ALSPS_LOG("ps_ctl set_delay NULL\n");
 		mutex_unlock(&alsps_context_obj->alsps_op_mutex);
 	 	return count;
 	}
@@ -655,7 +632,6 @@ static ssize_t ps_store_delay(struct device* dev, struct device_attribute *attr,
     	atomic_set(&alsps_context_obj->delay_ps, mdelay);
     }
     cxt->ps_ctl.set_delay(delay);
-	ALSPS_LOG(" ps_delay %d ns\n",delay);
 	mutex_unlock(&alsps_context_obj->alsps_op_mutex);
     return count;
 
@@ -665,7 +641,6 @@ static ssize_t ps_show_delay(struct device* dev,
                                  struct device_attribute *attr, char *buf) 
 {
     int len = 0;
-	ALSPS_LOG(" not support now\n");
 	return len;
 }
 
@@ -675,7 +650,6 @@ static ssize_t ps_store_batch(struct device* dev, struct device_attribute *attr,
 {
 	struct alsps_context *cxt = NULL;
 	//int err =0;
-	ALSPS_LOG("ps_store_batch buf=%s\n",buf);
 	mutex_lock(&alsps_context_obj->alsps_op_mutex);
 	cxt = alsps_context_obj;
 	if(cxt->ps_ctl.is_support_batch){
@@ -710,10 +684,8 @@ static ssize_t ps_store_batch(struct device* dev, struct device_attribute *attr,
 			ALSPS_ERR(" ps_store_batch error !!\n");
 		}
 	}else{
-		ALSPS_LOG(" ps_store_batch not supported\n");
 	}
 	mutex_unlock(&alsps_context_obj->alsps_op_mutex);
-	ALSPS_LOG(" ps_store_batch done: %d\n", cxt->is_ps_batch_enable);
     return count;
 
 }
@@ -749,13 +721,11 @@ static ssize_t ps_show_devnum(struct device* dev,
 }
 static int als_ps_remove(struct platform_device *pdev)
 {
-	ALSPS_LOG("als_ps_remove\n");
 	return 0;
 }
 
 static int als_ps_probe(struct platform_device *pdev) 
 {
-	ALSPS_LOG("als_ps_probe\n");
     return 0;
 }
 
@@ -782,17 +752,13 @@ static int alsps_real_driver_init()
 {
     int i =0;
 	int err=0;
-	printk(" alsps_real_driver_init +\n");
 	for(i = 0; i < MAX_CHOOSE_ALSPS_NUM; i++)
 	{
-	  ALSPS_LOG("alsps_real_driver_init i=%d\n",i);
 	  if(0 != alsps_init_list[i])
 	  {
-	    ALSPS_LOG(" alsps try to init driver %s\n", alsps_init_list[i]->name);
 	    err = alsps_init_list[i]->init();
 		if(0 == err)
 		{
-		   ALSPS_LOG(" alsps real driver %s probe ok\n", alsps_init_list[i]->name);
 		   break;
 		}
 	  }
@@ -811,7 +777,6 @@ static int alsps_real_driver_init()
     int err=0;
 	int i =0;
 	
-	ALSPS_FUN();
 	if (!obj) {
 		ALSPS_ERR("ALSPS driver add fail, alsps_init_info is NULL \n");
 		return -1;
@@ -820,7 +785,6 @@ static int alsps_real_driver_init()
 	for(i =0; i < MAX_CHOOSE_ALSPS_NUM; i++ )
 	{
         if((i == 0) && (NULL == alsps_init_list[0])){
-			ALSPS_LOG("register alsps driver for the first time\n");
 			if(platform_driver_register(&als_ps_driver))
 			{
                 ALSPS_ERR("failed to register alsps driver already exist\n");
@@ -960,7 +924,6 @@ int als_register_data_path(struct als_data_path *data)
 	cxt->als_data.get_data = data->get_data;
 	cxt->als_data.vender_div = data->vender_div;
 	cxt->als_data.als_get_raw_data = data->als_get_raw_data;
-	ALSPS_LOG("alsps register data path vender_div: %d\n", cxt->als_data.vender_div);
 	if(NULL == cxt->als_data.get_data)
 	{
 		ALSPS_LOG("als register data path fail \n");
@@ -977,7 +940,6 @@ int ps_register_data_path(struct ps_data_path *data)
 	cxt->ps_data.get_data = data->get_data;
 	cxt->ps_data.vender_div = data->vender_div;
 	cxt->ps_data.ps_get_raw_data = data->ps_get_raw_data;
-	ALSPS_LOG("alsps register data path vender_div: %d\n", cxt->ps_data.vender_div);
 	if(NULL == cxt->ps_data.get_data)
 	{
 		ALSPS_LOG("ps register data path fail \n");
@@ -1134,8 +1096,6 @@ static int alsps_probe(struct platform_device *pdev)
 
 	int err;
 	
-	ALSPS_LOG("+++++++++++++alsps_probe!!\n");
-	
 	pltfm_dev= pdev;
 	sensor_device_1=&pdev->dev;
 	alsps_context_obj = alsps_context_alloc_object();
@@ -1176,8 +1136,6 @@ static int alsps_probe(struct platform_device *pdev)
 	register_early_suspend(&alsps_context_obj->early_drv);
 #endif
 
-  
-	ALSPS_LOG("----alsps_probe OK !!\n");
 	return 0;
 
 	//exit_hwmsen_create_attr_failed:
@@ -1193,7 +1151,6 @@ static int alsps_probe(struct platform_device *pdev)
 	exit_alloc_data_failed:
 	
 
-	ALSPS_LOG("----alsps_probe fail !!!\n");
 	return err;
 }
 
@@ -1202,7 +1159,6 @@ static int alsps_probe(struct platform_device *pdev)
 static int alsps_remove(struct platform_device *pdev)
 {
 	int err=0;
-	ALSPS_FUN(f);
 	input_unregister_device(alsps_context_obj->idev);        
 	sysfs_remove_group(&alsps_context_obj->idev->dev.kobj,
 				&alsps_attribute_group);
@@ -1219,14 +1175,12 @@ static int alsps_remove(struct platform_device *pdev)
 static void alsps_early_suspend(struct early_suspend *h) 
 {
    atomic_set(&(alsps_context_obj->early_suspend), 1);
-   ALSPS_LOG(" alsps_early_suspend ok------->hwm_obj->early_suspend=%d \n",atomic_read(&(alsps_context_obj->early_suspend)));
    return ;
 }
 /*----------------------------------------------------------------------------*/
 static void alsps_late_resume(struct early_suspend *h)
 {
    atomic_set(&(alsps_context_obj->early_suspend), 0);
-   ALSPS_LOG(" alsps_late_resume ok------->hwm_obj->early_suspend=%d \n",atomic_read(&(alsps_context_obj->early_suspend)));
    return ;
 }
 
@@ -1264,8 +1218,6 @@ static struct platform_driver alsps_driver =
 
 static int __init alsps_init(void) 
 {
-	ALSPS_FUN();
-
 	if(platform_driver_register(&alsps_driver))
 	{
 		ALSPS_ERR("failed to register alsps driver\n");
diff --git a/drivers/misc/mediatek/alsps/alsps_factory.c b/drivers/misc/mediatek/alsps/alsps_factory.c
index ca94e1206..8c01a03db 100755
--- a/drivers/misc/mediatek/alsps/alsps_factory.c
+++ b/drivers/misc/mediatek/alsps/alsps_factory.c
@@ -9,13 +9,11 @@ extern  int alsps_init_flag;
 static int alsps_factory_open(struct inode *inode, struct file *file)
 {
     file->private_data = alsps_context_obj;
-	printk("alsps_factory_open\n");
     if (file->private_data == NULL)
     {
         ALSPS_ERR("null pointer!!\n");
         return -EINVAL;
     }
-	printk("alsps_factory_end\n");
     return nonseekable_open(inode, file);
 }
 
@@ -36,7 +34,6 @@ static long alsps_factory_unlocked_ioctl(struct file *file, unsigned int cmd, un
 	int ps_cali;
 	int threshold_data[2];
 
-	printk("alsps_factory_unlocked_ioctl 1\n");
     if (_IOC_DIR(cmd) & _IOC_READ)
     {
         err = !access_ok(VERIFY_WRITE, (void __user *)arg, _IOC_SIZE(cmd));
@@ -51,7 +48,6 @@ static long alsps_factory_unlocked_ioctl(struct file *file, unsigned int cmd, un
         ALSPS_LOG("access error: %08X, (%2d, %2d)\n", cmd, _IOC_DIR(cmd), _IOC_SIZE(cmd));
         return -EFAULT;
     }
-	printk("alsps_factory_unlocked_ioctl 2\n");
 	
     switch (cmd)
     {
@@ -74,7 +70,6 @@ static long alsps_factory_unlocked_ioctl(struct file *file, unsigned int cmd, un
 	    break;
     case ALSPS_GET_PS_RAW_DATA:	
 		#if 1 //defined(CONFIG_BOSCH_SENSORHUB)
-		printk("alsps_init_flag = %d\n",alsps_init_flag);
 		if(alsps_init_flag  == 0)
 		{
 			dat = 100;
@@ -119,7 +114,6 @@ static long alsps_factory_unlocked_ioctl(struct file *file, unsigned int cmd, un
         break;
     case ALSPS_GET_ALS_RAW_DATA:
 		#if 1 //defined(CONFIG_BOSCH_SENSORHUB)
-		printk("alsps_init_flag = %d\n",alsps_init_flag);
 		if(alsps_init_flag  == 0)
 		{
 			dat = 100;
@@ -280,7 +274,6 @@ static struct miscdevice alsps_factory_device = {
 int alsps_factory_device_init()
 {
 	int error = 0;
-	printk("alsps_factory_device_init 1\n");
 	struct alsps_context *cxt = alsps_context_obj;
 
 	#if 0
@@ -294,7 +287,6 @@ int alsps_factory_device_init()
         ALSPS_LOG("alsps_factory_device register failed\n");
 		error = -1;
     }	
-	printk("alsps_factory_device_init 2\n");
 	return error;
 }
 
diff --git a/drivers/misc/mediatek/auxadc/mt6580/mt_auxadc_hal.c b/drivers/misc/mediatek/auxadc/mt6580/mt_auxadc_hal.c
index 62d31b1fc..805a3b645 100644
--- a/drivers/misc/mediatek/auxadc/mt6580/mt_auxadc_hal.c
+++ b/drivers/misc/mediatek/auxadc/mt6580/mt_auxadc_hal.c
@@ -170,7 +170,6 @@ int IMM_auxadc_GetOneChannelValue(int dwChannel, int data[4], int* rawdata)
    //step1 check con2 if auxadc is busy
    while (AUXADC_DRV_ReadReg16((volatile u16 *)AUXADC_CON2) & 0x01) 
    {
-       printk("[adc_api]: wait for module idle\n");
        msleep(100);
 	   idle_count++;
 	   if(idle_count>30)
@@ -192,7 +191,6 @@ int IMM_auxadc_GetOneChannelValue(int dwChannel, int data[4], int* rawdata)
    //step3  read channle and make sure old ready bit ==0
    while (AUXADC_DRV_ReadReg16(AUXADC_DAT0 + dwChannel * 0x04) & (1<<12)) 
    {
-       printk("[adc_api]: wait for channel[%d] ready bit clear\n",dwChannel);
        msleep(10);
 	   data_ready_count++;
 	   if(data_ready_count>30)
@@ -213,7 +211,6 @@ int IMM_auxadc_GetOneChannelValue(int dwChannel, int data[4], int* rawdata)
    udelay(25);//we must dealay here for hw sample cahnnel data
    while (0==(AUXADC_DRV_ReadReg16(AUXADC_DAT0 + dwChannel * 0x04) & (1<<12))) 
    {
-       printk("[adc_api]: wait for channel[%d] ready bit ==1\n",dwChannel);
        msleep(10);
 	 data_ready_count++;
 
@@ -313,7 +310,6 @@ void mt_auxadc_hal_init(struct platform_device *dev)
 
 void mt_auxadc_hal_suspend(void)
 {	
-    printk("******** MT auxadc driver suspend!! ********\n" );
 #ifndef CONFIG_MTK_FPGA	
     if(disable_clock(MT_PDN_PERI_AUXADC,"AUXADC"))
     	printk("hwEnableClock AUXADC failed.");
@@ -322,7 +318,6 @@ void mt_auxadc_hal_suspend(void)
 
 void mt_auxadc_hal_resume(void)
 {
-    	printk("******** MT auxadc driver resume!! ********\n" );
 #ifndef CONFIG_MTK_FPGA
 	if(enable_clock(MT_PDN_PERI_AUXADC,"AUXADC"))
 	    printk("hwEnableClock AUXADC failed!!!.");
diff --git a/drivers/misc/mediatek/auxadc/mt_auxadc.c b/drivers/misc/mediatek/auxadc/mt_auxadc.c
index 4fa97b8b4..40a674857 100644
--- a/drivers/misc/mediatek/auxadc/mt_auxadc.c
+++ b/drivers/misc/mediatek/auxadc/mt_auxadc.c
@@ -116,8 +116,6 @@ int IMM_get_adc_channel_num(char *channel_name, int len)
 {
   unsigned int i;
 
-  printk("[ADC] name = %s\n", channel_name);
-  printk("[ADC] name_len = %d\n", len);
 	for (i = 0; i < ADC_CHANNEL_MAX; i++) {
 		if (!strncmp(channel_name, g_adc_info[i].channel_name, len)) {
       return g_adc_info[i].channel_number;
@@ -167,8 +165,6 @@ static long auxadc_cali_unlocked_ioctl(struct file *file, unsigned int cmd,unsig
                 }
             }
 		for (i = 0; i < ADC_CHANNEL_MAX; i++)
-			printk("auxadc_cali_slop[%d] = %d\n", i, *(auxadc_cali_slop + i));
-            printk("**** MT auxadc_cali ioctl : SET_ADC_CALI_Slop Done!\n");
             break;
 
         case SET_ADC_CALI_Offset:
@@ -176,8 +172,6 @@ static long auxadc_cali_unlocked_ioctl(struct file *file, unsigned int cmd,unsig
             ret = copy_from_user(auxadc_cali_offset, nvram_data_addr, 36);
             g_AUXADC_Cali = KAL_FALSE;
 		for (i = 0; i < ADC_CHANNEL_MAX; i++)
-			printk("auxadc_cali_offset[%d] = %d\n", i, *(auxadc_cali_offset + i));
-            printk("**** MT auxadc_cali ioctl : SET_ADC_CALI_Offset Done!\n");
             break;
 
         case SET_ADC_CALI_Cal :
@@ -189,9 +183,6 @@ static long auxadc_cali_unlocked_ioctl(struct file *file, unsigned int cmd,unsig
             } else {
                 g_AUXADC_Cali = KAL_FALSE;
             }
-		for (i = 0; i < 1; i++)
-			printk("auxadc_cali_cal[%d] = %d\n", i, *(auxadc_cali_cal + i));
-            printk("**** MT auxadc_cali ioctl : SET_ADC_CALI_Cal Done!\n");
             break;
 
         case ADC_CHANNEL_READ:
@@ -199,10 +190,7 @@ static long auxadc_cali_unlocked_ioctl(struct file *file, unsigned int cmd,unsig
             user_data_addr = (long *)arg;
             ret = copy_from_user(auxadc_in_data, user_data_addr, 8); /* 2*int = 2*4 */
 
-	    printk("this api is removed !! \n");
             ret = copy_to_user(user_data_addr, auxadc_out_data, 8);
-		printk("**** ioctl : AUXADC Channel %d * %d times = %d\n", auxadc_in_data[0],
-		       auxadc_in_data[1], auxadc_out_data[0]);
             break;
 
         default:
@@ -241,14 +229,12 @@ static ssize_t show_AUXADC_Channel_0_Slope(struct device *dev, struct device_att
 {
     int ret_value = 1;
     ret_value = (*(auxadc_cali_slop + 0));
-    printk("[EM] AUXADC_Channel_0_Slope : %d\n", ret_value);
     return sprintf(buf, "%u\n", ret_value);
 }
 
 static ssize_t store_AUXADC_Channel_0_Slope(struct device *dev, struct device_attribute *attr,
 					    const char *buf, size_t size)
 {
-    printk("[EM] Not Support Write Function\n");
     return size;
 }
 
@@ -259,14 +245,12 @@ static ssize_t show_AUXADC_Channel_0_Offset(struct device *dev, struct device_at
 {
     int ret_value = 1;
     ret_value = (*(auxadc_cali_offset + 0));
-    printk("[EM] AUXADC_Channel_0_Offset : %d\n", ret_value);
     return sprintf(buf, "%u\n", ret_value);
 }
 
 static ssize_t store_AUXADC_Channel_0_Offset(struct device *dev, struct device_attribute *attr,
 					     const char *buf, size_t size)
 {
-    printk("[EM] Not Support Write Function\n");
     return size;
 }
 
@@ -281,14 +265,12 @@ static ssize_t show_AUXADC_Channel_1_Slope(struct device *dev, struct device_att
 {
     int ret_value = 1;
     ret_value = (*(auxadc_cali_slop + 1));
-    printk("[EM] AUXADC_Channel_1_Slope : %d\n", ret_value);
     return sprintf(buf, "%u\n", ret_value);
 }
 
 static ssize_t store_AUXADC_Channel_1_Slope(struct device *dev, struct device_attribute *attr,
 					    const char *buf, size_t size)
 {
-    printk("[EM] Not Support Write Function\n");
     return size;
 }
 
@@ -299,14 +281,12 @@ static ssize_t show_AUXADC_Channel_1_Offset(struct device *dev, struct device_at
 {
     int ret_value = 1;
     ret_value = (*(auxadc_cali_offset + 1));
-    printk("[EM] AUXADC_Channel_1_Offset : %d\n", ret_value);
     return sprintf(buf, "%u\n", ret_value);
 }
 
 static ssize_t store_AUXADC_Channel_1_Offset(struct device *dev, struct device_attribute *attr,
 					     const char *buf, size_t size)
 {
-    printk("[EM] Not Support Write Function\n");
     return size;
 }
 
@@ -321,14 +301,12 @@ static ssize_t show_AUXADC_Channel_2_Slope(struct device *dev, struct device_att
 {
     int ret_value = 1;
     ret_value = (*(auxadc_cali_slop + 2));
-    printk("[EM] AUXADC_Channel_2_Slope : %d\n", ret_value);
     return sprintf(buf, "%u\n", ret_value);
 }
 
 static ssize_t store_AUXADC_Channel_2_Slope(struct device *dev, struct device_attribute *attr,
 					    const char *buf, size_t size)
 {
-    printk("[EM] Not Support Write Function\n");
     return size;
 }
 
@@ -339,14 +317,12 @@ static ssize_t show_AUXADC_Channel_2_Offset(struct device *dev, struct device_at
 {
     int ret_value = 1;
     ret_value = (*(auxadc_cali_offset + 2));
-    printk("[EM] AUXADC_Channel_2_Offset : %d\n", ret_value);
     return sprintf(buf, "%u\n", ret_value);
 }
 
 static ssize_t store_AUXADC_Channel_2_Offset(struct device *dev, struct device_attribute *attr,
 					     const char *buf, size_t size)
 {
-    printk("[EM] Not Support Write Function\n");
     return size;
 }
 
@@ -361,14 +337,12 @@ static ssize_t show_AUXADC_Channel_3_Slope(struct device *dev, struct device_att
 {
     int ret_value = 1;
     ret_value = (*(auxadc_cali_slop + 3));
-    printk("[EM] AUXADC_Channel_3_Slope : %d\n", ret_value);
     return sprintf(buf, "%u\n", ret_value);
 }
 
 static ssize_t store_AUXADC_Channel_3_Slope(struct device *dev, struct device_attribute *attr,
 					    const char *buf, size_t size)
 {
-    printk("[EM] Not Support Write Function\n");
     return size;
 }
 
@@ -379,14 +353,12 @@ static ssize_t show_AUXADC_Channel_3_Offset(struct device *dev, struct device_at
 {
     int ret_value = 1;
     ret_value = (*(auxadc_cali_offset + 3));
-    printk("[EM] AUXADC_Channel_3_Offset : %d\n", ret_value);
     return sprintf(buf, "%u\n", ret_value);
 }
 
 static ssize_t store_AUXADC_Channel_3_Offset(struct device *dev, struct device_attribute *attr,
 					     const char *buf, size_t size)
 {
-    printk("[EM] Not Support Write Function\n");
     return size;
 }
 
@@ -401,14 +373,12 @@ static ssize_t show_AUXADC_Channel_4_Slope(struct device *dev, struct device_att
 {
     int ret_value = 1;
     ret_value = (*(auxadc_cali_slop + 4));
-    printk("[EM] AUXADC_Channel_4_Slope : %d\n", ret_value);
     return sprintf(buf, "%u\n", ret_value);
 }
 
 static ssize_t store_AUXADC_Channel_4_Slope(struct device *dev, struct device_attribute *attr,
 					    const char *buf, size_t size)
 {
-    printk("[EM] Not Support Write Function\n");
     return size;
 }
 
@@ -419,14 +389,12 @@ static ssize_t show_AUXADC_Channel_4_Offset(struct device *dev, struct device_at
 {
     int ret_value = 1;
     ret_value = (*(auxadc_cali_offset + 4));
-    printk("[EM] AUXADC_Channel_4_Offset : %d\n", ret_value);
     return sprintf(buf, "%u\n", ret_value);
 }
 
 static ssize_t store_AUXADC_Channel_4_Offset(struct device *dev, struct device_attribute *attr,
 					     const char *buf, size_t size)
 {
-    printk("[EM] Not Support Write Function\n");
     return size;
 }
 
@@ -441,14 +409,12 @@ static ssize_t show_AUXADC_Channel_5_Slope(struct device *dev, struct device_att
 {
     int ret_value = 1;
     ret_value = (*(auxadc_cali_slop + 5));
-    printk("[EM] AUXADC_Channel_5_Slope : %d\n", ret_value);
     return sprintf(buf, "%u\n", ret_value);
 }
 
 static ssize_t store_AUXADC_Channel_5_Slope(struct device *dev, struct device_attribute *attr,
 					    const char *buf, size_t size)
 {
-    printk("[EM] Not Support Write Function\n");
     return size;
 }
 
@@ -459,14 +425,12 @@ static ssize_t show_AUXADC_Channel_5_Offset(struct device *dev, struct device_at
 {
     int ret_value = 1;
     ret_value = (*(auxadc_cali_offset + 5));
-    printk("[EM] AUXADC_Channel_5_Offset : %d\n", ret_value);
     return sprintf(buf, "%u\n", ret_value);
 }
 
 static ssize_t store_AUXADC_Channel_5_Offset(struct device *dev, struct device_attribute *attr,
 					     const char *buf, size_t size)
 {
-    printk("[EM] Not Support Write Function\n");
     return size;
 }
 
@@ -481,14 +445,12 @@ static ssize_t show_AUXADC_Channel_6_Slope(struct device *dev, struct device_att
 {
     int ret_value = 1;
     ret_value = (*(auxadc_cali_slop + 6));
-    printk("[EM] AUXADC_Channel_6_Slope : %d\n", ret_value);
     return sprintf(buf, "%u\n", ret_value);
 }
 
 static ssize_t store_AUXADC_Channel_6_Slope(struct device *dev, struct device_attribute *attr,
 					    const char *buf, size_t size)
 {
-    printk("[EM] Not Support Write Function\n");
     return size;
 }
 
@@ -499,14 +461,12 @@ static ssize_t show_AUXADC_Channel_6_Offset(struct device *dev, struct device_at
 {
     int ret_value = 1;
     ret_value = (*(auxadc_cali_offset + 6));
-    printk("[EM] AUXADC_Channel_6_Offset : %d\n", ret_value);
     return sprintf(buf, "%u\n", ret_value);
 }
 
 static ssize_t store_AUXADC_Channel_6_Offset(struct device *dev, struct device_attribute *attr,
 					     const char *buf, size_t size)
 {
-    printk("[EM] Not Support Write Function\n");
     return size;
 }
 
@@ -521,14 +481,12 @@ static ssize_t show_AUXADC_Channel_7_Slope(struct device *dev, struct device_att
 {
     int ret_value = 1;
     ret_value = (*(auxadc_cali_slop + 7));
-    printk("[EM] AUXADC_Channel_7_Slope : %d\n", ret_value);
     return sprintf(buf, "%u\n", ret_value);
 }
 
 static ssize_t store_AUXADC_Channel_7_Slope(struct device *dev, struct device_attribute *attr,
 					    const char *buf, size_t size)
 {
-    printk("[EM] Not Support Write Function\n");
     return size;
 }
 
@@ -539,14 +497,12 @@ static ssize_t show_AUXADC_Channel_7_Offset(struct device *dev, struct device_at
 {
     int ret_value = 1;
     ret_value = (*(auxadc_cali_offset + 7));
-    printk("[EM] AUXADC_Channel_7_Offset : %d\n", ret_value);
     return sprintf(buf, "%u\n", ret_value);
 }
 
 static ssize_t store_AUXADC_Channel_7_Offset(struct device *dev, struct device_attribute *attr,
 					     const char *buf, size_t size)
 {
-    printk("[EM] Not Support Write Function\n");
     return size;
 }
 
@@ -561,14 +517,12 @@ static ssize_t show_AUXADC_Channel_8_Slope(struct device *dev, struct device_att
 {
     int ret_value = 1;
     ret_value = (*(auxadc_cali_slop + 8));
-    printk("[EM] AUXADC_Channel_8_Slope : %d\n", ret_value);
     return sprintf(buf, "%u\n", ret_value);
 }
 
 static ssize_t store_AUXADC_Channel_8_Slope(struct device *dev, struct device_attribute *attr,
 					    const char *buf, size_t size)
 {
-    printk("[EM] Not Support Write Function\n");
     return size;
 }
 
@@ -579,14 +533,12 @@ static ssize_t show_AUXADC_Channel_8_Offset(struct device *dev, struct device_at
 {
     int ret_value = 1;
     ret_value = (*(auxadc_cali_offset + 8));
-    printk("[EM] AUXADC_Channel_8_Offset : %d\n", ret_value);
     return sprintf(buf, "%u\n", ret_value);
 }
 
 static ssize_t store_AUXADC_Channel_8_Offset(struct device *dev, struct device_attribute *attr,
 					     const char *buf, size_t size)
 {
-    printk("[EM] Not Support Write Function\n");
     return size;
 }
 
@@ -601,14 +553,12 @@ static ssize_t show_AUXADC_Channel_9_Slope(struct device *dev, struct device_att
 {
     int ret_value = 1;
     ret_value = (*(auxadc_cali_slop + 9));
-    printk("[EM] AUXADC_Channel_9_Slope : %d\n", ret_value);
     return sprintf(buf, "%u\n", ret_value);
 }
 
 static ssize_t store_AUXADC_Channel_9_Slope(struct device *dev, struct device_attribute *attr,
 					    const char *buf, size_t size)
 {
-    printk("[EM] Not Support Write Function\n");
     return size;
 }
 
@@ -619,14 +569,12 @@ static ssize_t show_AUXADC_Channel_9_Offset(struct device *dev, struct device_at
 {
     int ret_value = 1;
     ret_value = (*(auxadc_cali_offset + 9));
-    printk("[EM] AUXADC_Channel_9_Offset : %d\n", ret_value);
     return sprintf(buf, "%u\n", ret_value);
 }
 
 static ssize_t store_AUXADC_Channel_9_Offset(struct device *dev, struct device_attribute *attr,
 					     const char *buf, size_t size)
 {
-    printk("[EM] Not Support Write Function\n");
     return size;
 }
 
@@ -641,14 +589,12 @@ static ssize_t show_AUXADC_Channel_10_Slope(struct device *dev, struct device_at
 {
     int ret_value = 1;
     ret_value = (*(auxadc_cali_slop + 10));
-    printk("[EM] AUXADC_Channel_10_Slope : %d\n", ret_value);
     return sprintf(buf, "%u\n", ret_value);
 }
 
 static ssize_t store_AUXADC_Channel_10_Slope(struct device *dev, struct device_attribute *attr,
 					     const char *buf, size_t size)
 {
-    printk("[EM] Not Support Write Function\n");
     return size;
 }
 
@@ -659,14 +605,12 @@ static ssize_t show_AUXADC_Channel_10_Offset(struct device *dev, struct device_a
 {
     int ret_value = 1;
     ret_value = (*(auxadc_cali_offset + 10));
-    printk("[EM] AUXADC_Channel_10_Offset : %d\n", ret_value);
     return sprintf(buf, "%u\n", ret_value);
 }
 
 static ssize_t store_AUXADC_Channel_10_Offset(struct device *dev, struct device_attribute *attr,
 					      const char *buf, size_t size)
 {
-	printk("[EM] Not Support Write Function\n");
 	return size;
 }
 
@@ -681,14 +625,12 @@ static ssize_t show_AUXADC_Channel_11_Slope(struct device *dev, struct device_at
 {
     int ret_value = 1;
     ret_value = (*(auxadc_cali_slop + 11));
-    printk("[EM] AUXADC_Channel_11_Slope : %d\n", ret_value);
     return sprintf(buf, "%u\n", ret_value);
 }
 
 static ssize_t store_AUXADC_Channel_11_Slope(struct device *dev, struct device_attribute *attr,
 					     const char *buf, size_t size)
 {
-    printk("[EM] Not Support Write Function\n");
     return size;
 }
 
@@ -699,14 +641,12 @@ static ssize_t show_AUXADC_Channel_11_Offset(struct device *dev, struct device_a
 {
     int ret_value = 1;
     ret_value = (*(auxadc_cali_offset + 11));
-    printk("[EM] AUXADC_Channel_11_Offset : %d\n", ret_value);
     return sprintf(buf, "%u\n", ret_value);
 }
 
 static ssize_t store_AUXADC_Channel_11_Offset(struct device *dev, struct device_attribute *attr,
 					      const char *buf, size_t size)
 {
-    printk("[EM] Not Support Write Function\n");
     return size;
 }
 
@@ -721,14 +661,12 @@ static ssize_t show_AUXADC_Channel_12_Slope(struct device *dev, struct device_at
 {
     int ret_value = 1;
     ret_value = (*(auxadc_cali_slop + 12));
-    printk("[EM] AUXADC_Channel_12_Slope : %d\n", ret_value);
     return sprintf(buf, "%u\n", ret_value);
 }
 
 static ssize_t store_AUXADC_Channel_12_Slope(struct device *dev, struct device_attribute *attr,
 					     const char *buf, size_t size)
 {
-    printk("[EM] Not Support Write Function\n");
     return size;
 }
 
@@ -739,14 +677,12 @@ static ssize_t show_AUXADC_Channel_12_Offset(struct device *dev, struct device_a
 {
     int ret_value = 1;
     ret_value = (*(auxadc_cali_offset + 12));
-    printk("[EM] AUXADC_Channel_12_Offset : %d\n", ret_value);
     return sprintf(buf, "%u\n", ret_value);
 }
 
 static ssize_t store_AUXADC_Channel_12_Offset(struct device *dev, struct device_attribute *attr,
 					      const char *buf, size_t size)
 {
-    printk("[EM] Not Support Write Function\n");
     return size;
 }
 
@@ -761,14 +697,12 @@ static ssize_t show_AUXADC_Channel_13_Slope(struct device *dev, struct device_at
 {
     int ret_value = 1;
     ret_value = (*(auxadc_cali_slop + 13));
-    printk("[EM] AUXADC_Channel_13_Slope : %d\n", ret_value);
     return sprintf(buf, "%u\n", ret_value);
 }
 
 static ssize_t store_AUXADC_Channel_13_Slope(struct device *dev, struct device_attribute *attr,
 					     const char *buf, size_t size)
 {
-    printk("[EM] Not Support Write Function\n");
     return size;
 }
 
@@ -779,14 +713,12 @@ static ssize_t show_AUXADC_Channel_13_Offset(struct device *dev, struct device_a
 {
     int ret_value = 1;
     ret_value = (*(auxadc_cali_offset + 13));
-    printk("[EM] AUXADC_Channel_13_Offset : %d\n", ret_value);
     return sprintf(buf, "%u\n", ret_value);
 }
 
 static ssize_t store_AUXADC_Channel_13_Offset(struct device *dev, struct device_attribute *attr,
 					      const char *buf, size_t size)
 {
-    printk("[EM] Not Support Write Function\n");
     return size;
 }
 
@@ -801,14 +733,12 @@ static ssize_t show_AUXADC_Channel_14_Slope(struct device *dev, struct device_at
 {
     int ret_value = 1;
     ret_value = (*(auxadc_cali_slop + 14));
-    printk("[EM] AUXADC_Channel_14_Slope : %d\n", ret_value);
     return sprintf(buf, "%u\n", ret_value);
 }
 
 static ssize_t store_AUXADC_Channel_14_Slope(struct device *dev, struct device_attribute *attr,
 					     const char *buf, size_t size)
 {
-    printk("[EM] Not Support Write Function\n");
     return size;
 }
 
@@ -819,14 +749,12 @@ static ssize_t show_AUXADC_Channel_14_Offset(struct device *dev, struct device_a
 {
     int ret_value = 1;
     ret_value = (*(auxadc_cali_offset + 14));
-    printk("[EM] AUXADC_Channel_14_Offset : %d\n", ret_value);
     return sprintf(buf, "%u\n", ret_value);
 }
 
 static ssize_t store_AUXADC_Channel_14_Offset(struct device *dev, struct device_attribute *attr,
 					      const char *buf, size_t size)
 {
-    printk("[EM] Not Support Write Function\n");
     return size;
 }
 
@@ -841,14 +769,12 @@ static ssize_t show_AUXADC_Channel_15_Slope(struct device *dev, struct device_at
 {
     int ret_value = 1;
     ret_value = (*(auxadc_cali_slop + 15));
-    printk("[EM] AUXADC_Channel_15_Slope : %d\n", ret_value);
     return sprintf(buf, "%u\n", ret_value);
 }
 
 static ssize_t store_AUXADC_Channel_15_Slope(struct device *dev, struct device_attribute *attr,
 					     const char *buf, size_t size)
 {
-    printk("[EM] Not Support Write Function\n");
     return size;
 }
 
@@ -859,14 +785,12 @@ static ssize_t show_AUXADC_Channel_15_Offset(struct device *dev, struct device_a
 {
     int ret_value = 1;
     ret_value = (*(auxadc_cali_offset + 15));
-    printk("[EM] AUXADC_Channel_15_Offset : %d\n", ret_value);
     return sprintf(buf, "%u\n", ret_value);
 }
 
 static ssize_t store_AUXADC_Channel_15_Offset(struct device *dev, struct device_attribute *attr,
 					      const char *buf, size_t size)
 {
-    printk("[EM] Not Support Write Function\n");
     return size;
 }
 
@@ -882,7 +806,6 @@ static ssize_t show_AUXADC_Channel_Is_Calibration(struct device *dev, struct dev
 {
     int ret_value = 2;
     ret_value = g_AUXADC_Cali;
-    printk("[EM] AUXADC_Channel_Is_Calibration : %d\n", ret_value);
     return sprintf(buf, "%u\n", ret_value);
 }
 
@@ -890,7 +813,6 @@ static ssize_t store_AUXADC_Channel_Is_Calibration(struct device *dev,
 						   struct device_attribute *attr, const char *buf,
 						   size_t size)
 {
-    printk("[EM] Not Support Write Function\n");
     return size;
 }
 
@@ -905,7 +827,6 @@ static ssize_t show_AUXADC_register(struct device *dev,struct device_attribute *
 static ssize_t store_AUXADC_register(struct device *dev, struct device_attribute *attr,
 				     const char *buf, size_t size)
 {
-    printk("[EM] Not Support store_AUXADC_register\n");
     return size;
 }
 
@@ -925,7 +846,6 @@ static ssize_t show_AUXADC_chanel(struct device *dev,struct device_attribute *at
 			   break;
 
 		} else {
-			printk("[adc_driver]: channel[%d]=%d.%d \n",i,data[0],data[1]);
 			sprintf(buf_temp,"channel[%d]=%d.%d \n",i,data[0],data[1]);
 			strcat(buf,buf_temp);
 		}
@@ -952,10 +872,6 @@ static int dbug_thread(void *unused)
 			   break;
 
 			} else {
-		       printk("[adc_driver]: channel[%d]raw =%d\n",i,rawdata);
-				printk("[adc_driver]: channel[%d]=%d.%.02d\n", i, data[0],
-				       data[1]);
-
 		}
 		res = IMM_auxadc_GetOneChannelValue_Cali(i,&cali_voltage );
 			if (res < 0) {
@@ -963,9 +879,6 @@ static int dbug_thread(void *unused)
 			   break;
 
 			} else {
-				printk("[adc_driver]: channel[%d] cali_voltage =%d\n", i,
-				       cali_voltage);
-
 		}
 	  msleep(500);
 
@@ -988,7 +901,6 @@ static ssize_t store_AUXADC_channel(struct device *dev, struct device_attribute
 			return -EINVAL;
 		}
 
-		printk("[adc_driver] start flag =%d \n",start_flag);
 		g_start_debug_thread = start_flag;
 	if (1 == start_flag) {
 		   thread = kthread_run(dbug_thread, 0, "AUXADC");
@@ -1125,17 +1037,12 @@ static int adc_channel_info_init(void)
 	/* ap_domain &= ~(1<<CUST_ADC_MD_CHANNEL); */
     sprintf(g_adc_info[used_channel_counter].channel_name, "ADC_RFTMP");
     g_adc_info[used_channel_counter].channel_number = AUXADC_TEMPERATURE_CHANNEL;
-	printk("[ADC] channel_name = %s channel num=%d\n",
-	       g_adc_info[used_channel_counter].channel_name,
-	       g_adc_info[used_channel_counter].channel_number);
     used_channel_counter++;
 	#endif
 
 	#ifdef AUXADC_TEMPERATURE1_CHANNEL
     sprintf(g_adc_info[used_channel_counter].channel_name, "ADC_APTMP");
     g_adc_info[used_channel_counter].channel_number = AUXADC_TEMPERATURE1_CHANNEL;
-	printk("[ADC] channel_name = %s channel num=%d\n", g_adc_info[used_channel_counter].channel_name
-		,g_adc_info[used_channel_counter].channel_number);
     used_channel_counter++;
 	#endif
 
@@ -1143,18 +1050,12 @@ static int adc_channel_info_init(void)
 	sprintf(g_adc_info[used_channel_counter].channel_name, "ADC_FDD_Rf_Params_Dynamic_Custom");
 	g_adc_info[used_channel_counter].channel_number =
 	    AUXADC_ADC_FDD_RF_PARAMS_DYNAMIC_CUSTOM_CH_CHANNEL;
-	printk("[ADC] channel_name = %s channel num=%d\n",
-	       g_adc_info[used_channel_counter].channel_name,
-	       g_adc_info[used_channel_counter].channel_number);
     used_channel_counter++;
 	#endif
 
 	#ifdef AUXADC_HF_MIC_CHANNEL
 	sprintf(g_adc_info[used_channel_counter].channel_name, "ADC_MIC");
     g_adc_info[used_channel_counter].channel_number = AUXADC_HF_MIC_CHANNEL;
-	printk("[ADC] channel_name = %s channel num=%d\n",
-	       g_adc_info[used_channel_counter].channel_name,
-	       g_adc_info[used_channel_counter].channel_number);
     used_channel_counter++;
 	#endif
 
@@ -1170,8 +1071,6 @@ static int mt_auxadc_probe(struct platform_device *dev)
 	int used_channel_counter = 0;
 	int of_value = 0;
 
-    printk("******** MT AUXADC driver probe!! ********\n");
-	
 #if !defined(CONFIG_MTK_LEGACY)
 #else
 #ifndef CONFIG_MTK_FPGA	
@@ -1200,18 +1099,12 @@ static int mt_auxadc_probe(struct platform_device *dev)
     adc_dev = (struct device *)device_create(auxadc_cali_class,
 							 NULL, auxadc_cali_devno, NULL,
 							 AUXADC_CALI_DEVNAME);
-    printk("[MT AUXADC_probe] NVRAM prepare : done !!\n");
 
 	/* read calibration data from EFUSE */
     mt_auxadc_hal_init(dev);
 	
-	printk("[MT AUXADC_probe2] mt_auxadc_hal_init : done !!\n");
-
-
 #if !defined(CONFIG_MTK_LEGACY)
 #ifdef CONFIG_OF
-	printk("[MT AUXADC_probe3] get device tree info : start !!\n");
-
 	struct device_node *node;
 	
 	node = of_find_compatible_node(NULL, NULL, "mediatek, AUXADC_CH");
@@ -1220,63 +1113,54 @@ static int mt_auxadc_probe(struct platform_device *dev)
 		if(ret == 0){
 			sprintf(g_adc_info[used_channel_counter].channel_name, "ADC_RFTMP");
 			g_adc_info[used_channel_counter].channel_number = of_value;
-			printk("[AUXADC_AP] find node TEMPERATURE:%d\n", of_value);
 			used_channel_counter++;
 		}
 		ret = of_property_read_u32_array(node , "TEMPERATURE1", &of_value, 1);
 		if(ret == 0){
 			sprintf(g_adc_info[used_channel_counter].channel_name, "ADC_APTMP");
 			g_adc_info[used_channel_counter].channel_number = of_value;
-			printk("[AUXADC_AP] find node TEMPERATURE1:%d\n", of_value);
 			used_channel_counter++;
 		}
 		ret = of_property_read_u32_array(node , "ADC_FDD_RF_PARAMS_DYNAMIC_CUSTOM_CH", &of_value, 1);
 		if(ret == 0){
 	        sprintf(g_adc_info[used_channel_counter].channel_name, "ADC_FDD_Rf_Params_Dynamic_Custom");
 	        g_adc_info[used_channel_counter].channel_number = of_value;
-			printk("[AUXADC_AP] find node ADC_FDD_RF_PARAMS_DYNAMIC_CUSTOM_CH:%d\n", of_value);
 			used_channel_counter++;
 		}
 		ret = of_property_read_u32_array(node , "HF_MIC", &of_value, 1);
 		if(ret == 0){
 	        sprintf(g_adc_info[used_channel_counter].channel_name, "ADC_MIC");
 	        g_adc_info[used_channel_counter].channel_number = of_value;
-			printk("[AUXADC_AP] find node HF_MIC:%d\n", of_value);
 			used_channel_counter++;
 		}
 		ret = of_property_read_u32_array(node , "LCM_VOLTAGE", &of_value, 1);
 		if(ret == 0){
 	        sprintf(g_adc_info[used_channel_counter].channel_name, "ADC_LCM_VOLTAGE");
 	        g_adc_info[used_channel_counter].channel_number = of_value;
-			printk("[AUXADC_AP] find node LCM_VOLTAGE:%d\n", of_value);
 			used_channel_counter++;
 		}
 		ret = of_property_read_u32_array(node , "BATTERY_VOLTAGE", &of_value, 1);
 		if(ret == 0){
 	        sprintf(g_adc_info[used_channel_counter].channel_name, "ADC_BATTERY_VOLTAGE");
 	        g_adc_info[used_channel_counter].channel_number = of_value;
-			printk("[AUXADC_AP] find node BATTERY_VOLTAGE:%d\n", of_value);
 			used_channel_counter++;
 		}
 		ret = of_property_read_u32_array(node , "CHARGER_VOLTAGE", &of_value, 1);
 		if(ret == 0){
 	        sprintf(g_adc_info[used_channel_counter].channel_name, "ADC_CHARGER_VOLTAGE");
 	        g_adc_info[used_channel_counter].channel_number = of_value;
-			printk("[AUXADC_AP] find node CHARGER_VOLTAGE:%d\n", of_value);
 			used_channel_counter++;
 		}
 		ret = of_property_read_u32_array(node , "UTMS", &of_value, 1);
 		if(ret == 0){
 	        sprintf(g_adc_info[used_channel_counter].channel_name, "ADC_UTMS");
 	        g_adc_info[used_channel_counter].channel_number = of_value;
-			printk("[AUXADC_AP] find node UTMS:%d\n", of_value);
 			used_channel_counter++;
 		}
 		ret = of_property_read_u32_array(node , "REF_CURRENT", &of_value, 1);
 		if(ret == 0){
 	        sprintf(g_adc_info[used_channel_counter].channel_name, "ADC_REF_CURRENT");
 	        g_adc_info[used_channel_counter].channel_number = of_value;
-			printk("[AUXADC_AP] find node REF_CURRENT:%d\n", of_value);
 			used_channel_counter++;
 		}
 	}else{
@@ -1285,7 +1169,6 @@ static int mt_auxadc_probe(struct platform_device *dev)
 #endif
 #else
     adc_channel_info_init();
-	printk("[MT AUXADC_AP] adc_channel_info_init : done !!\n");
 
 #endif
 
@@ -1296,7 +1179,6 @@ static int mt_auxadc_probe(struct platform_device *dev)
 		printk("[AUXADC] devm_clk_get failed\n");
 		return -1;
 	}
-	printk("[AUXADC]: auxadc CLK:0x%p\n", clk_auxadc);
 	ret = clk_prepare_enable(clk_auxadc);
 	if(ret){
 		printk("hwEnableClock AUXADC failed.");
@@ -1315,13 +1197,11 @@ exit:
 
 static int mt_auxadc_remove(struct platform_device *dev)
 {
-    printk("******** MT auxadc driver remove!! ********\n" );
     return 0;
 }
 
 static void mt_auxadc_shutdown(struct platform_device *dev)
 {
-    printk("******** MT auxadc driver shutdown!! ********\n" );
 }
 
 static int mt_auxadc_suspend(struct platform_device *dev, pm_message_t state)
@@ -1378,7 +1258,6 @@ static int __init mt_auxadc_init(void)
         printk("****[mt_auxadc_driver] Unable to register driver (%d)\n", ret);
         return ret;
     }
-    printk("****[mt_auxadc_driver] Initialization : DONE \n");
 	
     return 0;
 }
diff --git a/drivers/misc/mediatek/boot/mt6580/mt_boot.c b/drivers/misc/mediatek/boot/mt6580/mt_boot.c
index de65905b9..1ea20d928 100644
--- a/drivers/misc/mediatek/boot/mt6580/mt_boot.c
+++ b/drivers/misc/mediatek/boot/mt6580/mt_boot.c
@@ -155,8 +155,6 @@ static int __init create_sysfs(void)
 			g_meta_uart_port = tags->meta_uart_port;
             pr_notice("[%s] g_meta_com_type = %d, g_meta_com_id = %d, g_meta_uart_port=%d. \n", __func__, g_meta_com_type, g_meta_com_id,g_meta_uart_port);
         }
-        else
-            pr_notice("[%s] No atag,meta found !\n", __func__);
     }
     else
         pr_notice("[%s] of_chosen is NULL !\n", __func__);
diff --git a/drivers/misc/mediatek/boot/mt_boot_common.c b/drivers/misc/mediatek/boot/mt_boot_common.c
index 495273d32..10f4b78c0 100644
--- a/drivers/misc/mediatek/boot/mt_boot_common.c
+++ b/drivers/misc/mediatek/boot/mt_boot_common.c
@@ -70,7 +70,6 @@ void init_boot_common(unsigned int line)
 	int rc;
 
 	if (BM_INITIALIZING == atomic_read(&g_boot_init)) {
-		pr_warn("%s (%d) state(%d,%d)\n", __func__, line, atomic_read(&g_boot_init), g_boot_mode);
         atomic_inc(&g_boot_errcnt);
 		return;
 	}
@@ -82,19 +81,12 @@ void init_boot_common(unsigned int line)
 
 	if ((UNKNOWN_BOOT != g_boot_mode)) {
 		atomic_set(&g_boot_init, BM_INITIALIZED);
-        pr_warn("%s (%d) boot_mode = %d\n", __func__, line, g_boot_mode);
 		return;
     }
 
-	pr_alert("%s %d %d %d\n", __func__, line, g_boot_mode,
-		atomic_read(&g_boot_init));
 	rc = of_scan_flat_dt(dt_get_boot_common, NULL);
 	if (0 != rc)
 		atomic_set(&g_boot_init, BM_INITIALIZED);
-	else 
-        pr_warn("of_scan_flat_dt() = %d", rc);
-	pr_alert("%s %d %d %d\n", __func__, line, g_boot_mode,
-		atomic_read(&g_boot_init));
 #endif
 }
 
@@ -102,7 +94,7 @@ void init_boot_common(unsigned int line)
 BOOTMODE get_boot_mode(void)
 {
 	init_boot_common(__LINE__);
-	return g_boot_mode;
+    return g_boot_mode;
 }
 
 /* for convenience, simply check is meta mode or not */
@@ -275,9 +267,6 @@ static int __init boot_common_core(void)
 
 static int __init boot_common_init(void)
 {
-    pr_alert("boot_mode = %d, state(%d,%d,%d)", g_boot_mode, 
-             atomic_read(&g_boot_init), atomic_read(&g_boot_errcnt),
-             atomic_read(&g_boot_status));
 	return 0;
 }
 
diff --git a/drivers/misc/mediatek/boot_reason/mt_boot_reason.c b/drivers/misc/mediatek/boot_reason/mt_boot_reason.c
index 9c0239143..1342aab00 100644
--- a/drivers/misc/mediatek/boot_reason/mt_boot_reason.c
+++ b/drivers/misc/mediatek/boot_reason/mt_boot_reason.c
@@ -81,19 +81,14 @@ void init_boot_reason(unsigned int line)
 
 	if ((BR_UNKNOWN != g_boot_reason)) {
 		atomic_set(&g_br_state, BOOT_REASON_INITIALIZED);
-        pr_alert("boot_reason = %d\n", g_boot_reason);
 		return;
     }
 
-	pr_info("%s %d %d %d\n", __func__, line, g_boot_reason,
-		atomic_read(&g_br_state));
 	rc = of_scan_flat_dt(dt_get_boot_reason, NULL);
 	if (0 != rc)
 		atomic_set(&g_br_state, BOOT_REASON_INITIALIZED);
 	else 
 		atomic_set(&g_br_state, BOOT_REASON_UNINIT);
-	pr_info("%s %d %d %d\n", __func__, line, g_boot_reason,
-		atomic_read(&g_br_state));
 #endif
 }
 
@@ -112,9 +107,6 @@ static int __init boot_reason_core(void)
 
 static int __init boot_reason_init(void)
 {
-    pr_alert("boot_reason = %d, state(%d,%d,%d)", g_boot_reason, 
-             atomic_read(&g_br_state), atomic_read(&g_br_errcnt),
-             atomic_read(&g_br_status));
 	return 0;
 }
 
diff --git a/drivers/misc/mediatek/bosch/bosch_bha250/bhy_core.c b/drivers/misc/mediatek/bosch/bosch_bha250/bhy_core.c
index 8f5510781..41375a59a 100755
--- a/drivers/misc/mediatek/bosch/bosch_bha250/bhy_core.c
+++ b/drivers/misc/mediatek/bosch/bosch_bha250/bhy_core.c
@@ -585,13 +585,10 @@ static int bhy_check_chip_id(struct bhy_data_bus *data_bus)
 	}
 	switch (prod_id) {
 	case BST_FPGA_PRODUCT_ID_7181:
-		printk("BST FPGA 7181 detected");
 		break;
 	case BHY_C1_PRODUCT_ID:
-		printk("BHy C1 sample detected");
 		break;
 	case BST_FPGA_PRODUCT_ID_7183:
-		printk("BST FPGA 7183 detected");
 		break;
 	default:
 		printk("Unknown product ID: 0X%02X", prod_id);
@@ -618,7 +615,6 @@ static int bhy_request_firmware(struct bhy_client_data *client_data)
 	int i;
 	const struct firmware *fw;
 	size_t pos;
-		printk("########bhy_request_firmware \n");
 #ifdef BHY_DEBUG
 	bhy_get_ap_timestamp(&g_ts[0]);
 #endif /*~ BHY_DEBUG */
@@ -632,14 +628,12 @@ static int bhy_request_firmware(struct bhy_client_data *client_data)
 		u8_val = 1;
 		ret = bhy_write_reg(client_data, BHY_REG_RESET_REQ, &u8_val,
 			sizeof(u8));
-		printk("########bhy_request_firmware 1 \n");
 		if (ret < 0) {
 			mutex_unlock(&client_data->mutex_bus_op);
 			PERR("Write reset reg failed");
 			atomic_set(&client_data->reset_flag, RESET_FLAG_ERROR);
 			return ret;
 		}
-	printk("########bhy_request_firmware 2 \n");
 #ifdef BHY_LEVEL_TRIGGERED_IRQ_SUPPORT
 	#if 0
 		/* Enable IRQ for reset detection */
@@ -651,7 +645,6 @@ static int bhy_request_firmware(struct bhy_client_data *client_data)
 		mt_eint_unmask(CUST_EINT_GSE_1_NUM);
 	#endif
 #endif /*~ BHY_LEVEL_TRIGGERED_IRQ_SUPPORT */
-		printk("########bhy_request_firmware 3 \n");
 
 		while (retry--) {
 			reset_flag_copy = atomic_read(&client_data->reset_flag);
@@ -659,17 +652,14 @@ static int bhy_request_firmware(struct bhy_client_data *client_data)
 				break;
 			usleep_range(1000,1000);
 		}
-		printk("########bhy_request_firmware 4 \n");
 		if (retry <= 0) {
 			mutex_unlock(&client_data->mutex_bus_op);
 			PERR("Reset ready status wait failed");
 			atomic_set(&client_data->reset_flag, RESET_FLAG_ERROR);
 			return -EIO;
 		}
-		printk("########bhy_request_firmware 5 \n");
 		PINFO("BHy reset successfully");
 	}
-	printk("########bhy_request_firmware 6 \n");
 	/* Check chip status */
 	retry = 1000;
 	while (retry--) {
@@ -685,19 +675,16 @@ static int bhy_request_firmware(struct bhy_client_data *client_data)
 			break;
 		udelay(50);
 	}
-	printk("########bhy_request_firmware 7 \n");
 	if (retry <= 0) {
 		mutex_unlock(&client_data->mutex_bus_op);
 		PERR("Chip status error after reset");
 		atomic_set(&client_data->reset_flag, RESET_FLAG_ERROR);
 		return -EIO;
 	}
-	printk("########bhy_request_firmware 8 \n");
 
 #ifdef BHY_DEBUG
 	bhy_get_ap_timestamp(&g_ts[1]);
 #endif /*~ BHY_DEBUG */
-	printk("########bhy_request_firmware 9 \n");
 	/* Init upload addr */
 	le16_val = __cpu_to_le16(0);
 	if (bhy_write_reg(client_data, BHY_REG_UPLOAD_ADDR_0,
@@ -707,7 +694,6 @@ static int bhy_request_firmware(struct bhy_client_data *client_data)
 		atomic_set(&client_data->reset_flag, RESET_FLAG_ERROR);
 		return -EIO;
 	}
-	printk("########bhy_request_firmware 10 \n");
 
 	/* Write upload request */
 	u8_val = BHY_CHIP_CTRL_BIT_UPLOAD_ENABLE;
@@ -717,7 +703,6 @@ static int bhy_request_firmware(struct bhy_client_data *client_data)
 		atomic_set(&client_data->reset_flag, RESET_FLAG_ERROR);
 		return -EIO;
 	}
-	printk("########bhy_request_firmware 11 \n");
 
 	/* Request firmware data */
 	ret = request_firmware(&fw, "ram_patch.fw", client_data->data_bus.dev);
@@ -727,7 +712,6 @@ static int bhy_request_firmware(struct bhy_client_data *client_data)
 		return -EIO;
 	}
 	pos = 0;
-	printk("########bhy_request_firmware 12\n");
 
 	PDEBUG("Firmware size is %u", fw->size);
 
@@ -739,7 +723,6 @@ static int bhy_request_firmware(struct bhy_client_data *client_data)
 		atomic_set(&client_data->reset_flag, RESET_FLAG_ERROR);
 		return -EINVAL;
 	}
-	printk("########bhy_request_firmware 13 \n");
 	memcpy(&header, fw->data, sizeof(header));
 	pos += sizeof(header);
 	u16_val = le16_to_cpu(header.magic);
@@ -751,7 +734,6 @@ static int bhy_request_firmware(struct bhy_client_data *client_data)
 		atomic_set(&client_data->reset_flag, RESET_FLAG_ERROR);
 		return -EINVAL;
 	}
-	printk("########bhy_request_firmware 14 \n");
 	u16_val = le16_to_cpu(header.flags);
 	u16_val &= BHY_FLAG_EXP_ROM_VER_MASK;
 	u16_val >>= BHY_FLAG_EXP_ROM_VER_SHIFT;
@@ -771,7 +753,6 @@ static int bhy_request_firmware(struct bhy_client_data *client_data)
 		atomic_set(&client_data->reset_flag, RESET_FLAG_ERROR);
 		return -EINVAL;
 	}
-	printk("########bhy_request_firmware 15 \n");
 	if (fw->size < (size_t)(sizeof(header)+remain)) {
 		release_firmware(fw);
 		mutex_unlock(&client_data->mutex_bus_op);
@@ -780,7 +761,6 @@ static int bhy_request_firmware(struct bhy_client_data *client_data)
 		atomic_set(&client_data->reset_flag, RESET_FLAG_ERROR);
 		return -EINVAL;
 	}
-	printk("########bhy_request_firmware 16 \n");
 le32_val = *(__le32 *)(fw->data + BHY_CDS_OFFSET_POS);
 	cds_offset = le32_to_cpu(le32_val);
 	/* Evan's proposal to distinguish old firmware */
@@ -818,11 +798,9 @@ le32_val = *(__le32 *)(fw->data + BHY_CDS_OFFSET_POS);
 		}
 		remain -= read_len;
 	}
-	printk("########bhy_request_firmware 17 \n");
 
 	/* Release firmware */
 	release_firmware(fw);
-	printk("########bhy_request_firmware 18 \n");
 
 	/* Check CRC */
 	if (bhy_read_reg(client_data, BHY_REG_DATA_CRC_0,
@@ -832,7 +810,6 @@ le32_val = *(__le32 *)(fw->data + BHY_CDS_OFFSET_POS);
 		atomic_set(&client_data->reset_flag, RESET_FLAG_ERROR);
 		return -EIO;
 	}
-	printk("########bhy_request_firmware 19 \n");
 	if (le32_val != header.crc) {
 		mutex_unlock(&client_data->mutex_bus_op);
 		printk("@@@@@@@@CRC mismatch 0X%08X vs 0X%08X@@@@@@@@@@@\n", le32_to_cpu(le32_val),
@@ -840,7 +817,6 @@ le32_val = *(__le32 *)(fw->data + BHY_CDS_OFFSET_POS);
 		atomic_set(&client_data->reset_flag, RESET_FLAG_ERROR);
 		return -EIO;
 	}
-	printk("########bhy_request_firmware 20 \n");
 
 	/* Clear upload mode bit */
 	u8_val = 0;
@@ -851,7 +827,6 @@ le32_val = *(__le32 *)(fw->data + BHY_CDS_OFFSET_POS);
 		return -EIO;
 	}
 	udelay(50);
-	printk("########bhy_request_firmware 21 \n");
 
 	/* Check chip status */
 	retry = 1000;
@@ -874,7 +849,6 @@ le32_val = *(__le32 *)(fw->data + BHY_CDS_OFFSET_POS);
 		atomic_set(&client_data->reset_flag, RESET_FLAG_ERROR);
 		return -EIO;
 	}
-	printk("########bhy_request_firmware 22 \n");
 
 #ifdef BHY_DEBUG
 	bhy_get_ap_timestamp(&g_ts[2]);
@@ -888,7 +862,6 @@ le32_val = *(__le32 *)(fw->data + BHY_CDS_OFFSET_POS);
 		atomic_set(&client_data->reset_flag, RESET_FLAG_ERROR);
 		return -EIO;
 	}
-	printk("########bhy_request_firmware 23 \n");
 
 	/* Check chip status */
 	retry = 1000;
@@ -911,7 +884,6 @@ le32_val = *(__le32 *)(fw->data + BHY_CDS_OFFSET_POS);
 		atomic_set(&client_data->reset_flag, RESET_FLAG_ERROR);
 		return -EIO;
 	}
-	printk("########bhy_request_firmware 24 \n");
 
 	mutex_unlock(&client_data->mutex_bus_op);
 	PINFO("Ram patch loaded successfully.");
@@ -927,7 +899,6 @@ le32_val = *(__le32 *)(fw->data + BHY_CDS_OFFSET_POS);
 	mt_eint_unmask(CUST_EINT_GSE_1_NUM);
 	#endif
 #endif /*~ BHY_LEVEL_TRIGGERED_IRQ_SUPPORT */
-	printk("########bhy_request_firmware 25 \n");
 
 	return 0;
 }
@@ -1983,7 +1954,6 @@ static void bhy_irq_work_func(struct work_struct *work)
 #endif /*~ BHY_DEBUG */
 
 
-	printk("############bhy_irq_work_func###########\n");
 	/* Detect reset event */
 	reset_flag_copy = atomic_read(&client_data->reset_flag);
 	if (reset_flag_copy == RESET_FLAG_TODO) {
@@ -2141,7 +2111,6 @@ static int bhy_request_irq(struct bhy_client_data *client_data)
 	struct bhy_data_bus *data_bus = &client_data->data_bus;
 	
 	INIT_WORK(&client_data->irq_work, bhy_irq_work_func);
-	printk("######bhy_request_irq ############\n");
 
 
 	mt_set_gpio_mode(GPIO_GSE_1_EINT_PIN, GPIO_GSE_1_EINT_PIN_M_EINT);
@@ -4757,12 +4726,10 @@ static ssize_t bhy_store_req_fw(struct device *dev
 	long req;
 	ssize_t ret;
 
-		printk("########bhy_store_req_fw \n");
 	if (client_data == NULL) {
 		PERR("Invalid client_data pointer");
 		return -ENODEV;
 	}
-	printk("########bhy_store_req_fw 1\n");
 
 	ret = kstrtol(buf, 10, &req);
 	if (ret < 0 || req != 1) {
@@ -4770,7 +4737,6 @@ static ssize_t bhy_store_req_fw(struct device *dev
 		atomic_set(&client_data->reset_flag, RESET_FLAG_ERROR);
 		return -EINVAL;
 	}
-	printk("########bhy_store_req_fw 2\n");
 
 #if 0
 	ret = bhy_request_firmware(client_data);
@@ -4785,7 +4751,6 @@ static ssize_t bhy_store_req_fw(struct device *dev
 	
 		ret = bhy_request_firmware(client_data);
 		retry_count++;
-			printk("############ Send FW %d times,ret=%d ##########\n",retry_count,ret);
 		if (retry_count > 3 && ret < 0)
 		{
 			return ret;
@@ -4794,7 +4759,6 @@ static ssize_t bhy_store_req_fw(struct device *dev
 
 #endif
 
-	printk("########bhy_store_req_fw 3\n");
 
 	return count;
 }
@@ -6158,17 +6122,13 @@ int bhy_probe(struct bhy_data_bus *data_bus)
 	ktime_t ktime;
 	int i;
 	/*u8 reg_val;*/
-   printk("BHy driver version: %s", DRIVER_VERSION);
-	printk("############bhy_probe function entrance \n");
 
 	/* check chip id */
 	ret = bhy_check_chip_id(data_bus);
-	printk("############bhy_probe function entrance 1\n");
 	if (ret < 0) {
 		PERR("Bosch Sensortec Device not found, chip id mismatch");
 		goto err_exit;
 	}
-	printk("############bhy_probe function entrance 2\n");
 	PNOTICE("Bosch Sensortec Device %s detected", SENSOR_NAME);
 
 	/* init client_data */
@@ -6178,7 +6138,6 @@ int bhy_probe(struct bhy_data_bus *data_bus)
 		ret = -ENOMEM;
 		goto err_exit;
 	}
-	printk("############bhy_probe function entrance 3\n");
 	dev_set_drvdata(data_bus->dev, client_data);
 	client_data->data_bus = *data_bus;
 	mutex_init(&client_data->mutex_bus_op);
@@ -6187,7 +6146,6 @@ int bhy_probe(struct bhy_data_bus *data_bus)
 #ifdef BHY_AR_HAL_SUPPORT
 	mutex_init(&client_data->data_queue_ar.lock);
 #endif /*~ BHY_AR_HAL_SUPPORT */
-	printk("############bhy_probe function entrance 4\n");
 
 	client_data->rom_id = 0;
 	client_data->ram_id = 0;
@@ -6197,14 +6155,11 @@ int bhy_probe(struct bhy_data_bus *data_bus)
 #ifdef BHY_TS_LOGGING_SUPPORT
 	client_data->irq_count = 0;
 #endif /*~ BHY_TS_LOGGING_SUPPORT */
-	printk("############bhy_probe function entrance 5\n");
 	ret = bhy_request_irq(client_data);
-	printk("############bhy_probe function entrance 6\n");
 	if (ret < 0) {
 		PERR("Request IRQ failed");
 		goto err_exit;
 	}
-	printk("############bhy_probe function entrance 7\n");
 
 	/* init input devices */
 	ret = bhy_init_input_dev(client_data);
@@ -6212,7 +6167,6 @@ int bhy_probe(struct bhy_data_bus *data_bus)
 		PERR("Init input dev failed");
 		goto err_exit;
 	}
-	printk("############bhy_probe function entrance 8\n");
 	/* sysfs input node creation */
 	client_data->input_attribute_group =
 		kzalloc(sizeof(struct attribute_group), GFP_KERNEL);
@@ -6221,7 +6175,6 @@ int bhy_probe(struct bhy_data_bus *data_bus)
 		PERR("No mem for input_attribute_group");
 		goto err_exit;
 	}
-	printk("############bhy_probe function entrance 9\n");
 	client_data->input_attribute_group->attrs = input_attributes;
 	ret = sysfs_create_group(&client_data->input->dev.kobj,
 		client_data->input_attribute_group);
@@ -6230,7 +6183,6 @@ int bhy_probe(struct bhy_data_bus *data_bus)
 		client_data->input_attribute_group = NULL;
 		goto err_exit;
 	}
-	printk("############bhy_probe function entrance 10\n");
 
 	ret = sysfs_create_bin_file(&client_data->input->dev.kobj,
 		&bin_attr_fifo_frame);
@@ -6239,7 +6191,6 @@ int bhy_probe(struct bhy_data_bus *data_bus)
 			&bin_attr_fifo_frame);
 		goto err_exit;
 	}
-	printk("############bhy_probe function entrance 11\n");
 
 #ifdef BHY_AR_HAL_SUPPORT
 	/* sysfs input node for AR creation */
@@ -6250,7 +6201,6 @@ int bhy_probe(struct bhy_data_bus *data_bus)
 		PERR("No mem for input_ar_attribute_group");
 		goto err_exit;
 	}
-	printk("############bhy_probe function entrance 12\n");
 	client_data->input_ar_attribute_group->attrs = input_ar_attributes;
 	ret = sysfs_create_group(&client_data->input_ar->dev.kobj,
 		client_data->input_ar_attribute_group);
@@ -6259,7 +6209,6 @@ int bhy_probe(struct bhy_data_bus *data_bus)
 		client_data->input_ar_attribute_group = NULL;
 		goto err_exit;
 	}
-	printk("############bhy_probe function entrance 13\n");
 #endif /*~ BHY_AR_HAL_SUPPORT */
 
 	/* bst device creation */
@@ -6268,7 +6217,6 @@ int bhy_probe(struct bhy_data_bus *data_bus)
 		PERR("Allocate bst device failed");
 		goto err_exit;
 	}
-	printk("############bhy_probe function entrance 14\n");
 	client_data->bst_dev->name = SENSOR_NAME;
 	bst_set_drvdata(client_data->bst_dev, client_data);
 	ret = bst_register_device(client_data->bst_dev);
@@ -6278,7 +6226,6 @@ int bhy_probe(struct bhy_data_bus *data_bus)
 		PERR("Register bst device failed");
 		goto err_exit;
 	}
-	printk("############bhy_probe function entrance 15\n");
 	client_data->bst_attribute_group =
 		kzalloc(sizeof(struct attribute_group), GFP_KERNEL);
 	if (client_data->bst_attribute_group == NULL) {
@@ -6286,7 +6233,6 @@ int bhy_probe(struct bhy_data_bus *data_bus)
 		PERR("No mem for bst_attribute_group");
 		goto err_exit;
 	}
-	printk("############bhy_probe function entrance 16\n");
 	client_data->bst_attribute_group->attrs = bst_attributes;
 	ret = sysfs_create_group(&client_data->bst_dev->dev.kobj,
 		client_data->bst_attribute_group);
@@ -6294,14 +6240,12 @@ int bhy_probe(struct bhy_data_bus *data_bus)
 		PERR("Create sysfs nodes for bst device failed");
 		goto err_exit;
 	}
-	printk("############bhy_probe function entrance 17\n");
 	client_data->fifo_buf = kmalloc(BHY_FIFO_LEN_MAX, GFP_KERNEL);
 	if (!client_data->fifo_buf) {
 		PERR("Allocate FIFO buffer failed");
 		ret = -ENOMEM;
 		goto err_exit;
 	}
-	printk("############bhy_probe function entrance 18\n");
 
 	client_data->data_queue.frames = kmalloc(BHY_FRAME_SIZE *
 			sizeof(struct fifo_frame), GFP_KERNEL);
@@ -6323,10 +6267,7 @@ int bhy_probe(struct bhy_data_bus *data_bus)
 	client_data->data_queue_ar.head = 0;
 	client_data->data_queue_ar.tail = 0;
 #endif /*~ BHY_AR_HAL_SUPPORT */
-	printk("############bhy_probe function entrance 19\n");
-	printk("############bhy_probe function entrance 20\n");
 	bhy_init_sensor_context(client_data);
-	printk("############bhy_probe function entrance 21\n");
 	wake_lock_init(&client_data->wlock, WAKE_LOCK_SUSPEND, "bhy");
 
 	ktime = ktime_set(0, BHY_SW_WATCHDOG_TIMER_INTERVAL);
@@ -6361,7 +6302,6 @@ int bhy_probe(struct bhy_data_bus *data_bus)
 		return ret;
 	}
 	atomic_set(&client_data->reset_flag, RESET_FLAG_READY);*/
-		printk("############bhy_probe function entrance 22\n");
 
 	PNOTICE("sensor %s probed successfully", SENSOR_NAME);
 	return 0;
diff --git a/drivers/misc/mediatek/bosch/bosch_bha250/bhy_i2c.c b/drivers/misc/mediatek/bosch/bosch_bha250/bhy_i2c.c
index c65fb6fa4..78d403727 100755
--- a/drivers/misc/mediatek/bosch/bosch_bha250/bhy_i2c.c
+++ b/drivers/misc/mediatek/bosch/bosch_bha250/bhy_i2c.c
@@ -314,12 +314,10 @@ static int bhy_i2c_probe(struct i2c_client *client,
 		.irq = client->irq,
 		.bus_type = BUS_I2C,
 	};
-	printk("############bhy_i2c_probe 1 \n");
 	if (!i2c_check_functionality(client->adapter, I2C_FUNC_I2C)) {
 		PERR("i2c_check_functionality error!");
 		return -EIO;
 	}
-	printk("############bhy_i2c_probe 2 \n");
 
 
 
@@ -331,8 +329,6 @@ static int bhy_i2c_probe(struct i2c_client *client,
 		printk("%s Allocate DMA I2C Buffer failed!\n", __func__);
 	}else
 	{
-		printk("DMA BUFF Allocate OK\n");
-		printk("gpDMABuf_va=%p\n",gpDMABuf_va);
 	}	
  	memset(gpDMABuf_va, 0, BHY_DMA_MAX_TRANSACTION_LENGTH);
 #endif
@@ -384,9 +380,7 @@ static struct i2c_board_info __initdata i2c_BMA222 = {
 
 static int __init bhy_i2c_driver_init(void)
 {
-	printk("################bhy_i2c_driver_init 1 \n");
 	i2c_register_board_info(2, &i2c_BMA222, 1);
-	printk("################bhy_i2c_driver_init 2 \n");
 	return i2c_add_driver(&bhy_i2c_driver);
 }
 
diff --git a/drivers/misc/mediatek/bosch/bosch_bha250/bstclass.c b/drivers/misc/mediatek/bosch/bosch_bha250/bstclass.c
index 31aca4aae..79834d203 100755
--- a/drivers/misc/mediatek/bosch/bosch_bha250/bstclass.c
+++ b/drivers/misc/mediatek/bosch/bosch_bha250/bstclass.c
@@ -163,9 +163,6 @@ int bst_register_device(struct bst_dev *dev)
 		return error;
 
 	path = kobject_get_path(&dev->dev.kobj, GFP_KERNEL);
-	printk(KERN_INFO "%s as %s\n",
-			dev->name ? dev->name : "Unspecified device",
-			path ? path : "N/A");
 	kfree(path);
 
 	return 0;
@@ -198,13 +195,11 @@ static const struct file_operations bst_fops = {
 static int __init bst_init(void)
 {
 	int err;
-	printk("##################bst_init  1\n");
 	err = class_register(&bst_class);
 	if (err) {
 		pr_err("unable to register bst_dev class\n");
 		return err;
 	}
-	printk("##################bst_init  2\n");
 	return err;
 }
 
diff --git a/drivers/misc/mediatek/btcvsd/mt6580/AudDrv_BTCVSD.c b/drivers/misc/mediatek/btcvsd/mt6580/AudDrv_BTCVSD.c
index 129582913..a22f3b22f 100644
--- a/drivers/misc/mediatek/btcvsd/mt6580/AudDrv_BTCVSD.c
+++ b/drivers/misc/mediatek/btcvsd/mt6580/AudDrv_BTCVSD.c
@@ -269,9 +269,6 @@ static int AudDrv_btcvsd_Allocate_Buffer(struct file *fp, kal_uint8 isRX)
 
             memset((void *)BT_CVSD_Mem.pucRXVirtBufAddr, 0, BT_CVSD_Mem.u4RXBufferSize);
 
-            PRINTK_AUDDRV("BT_CVSD_Mem.pucRXVirtBufAddr = %p BT_CVSD_Mem.pucRXPhysBufAddr = 0x%x\n" ,
-                          BT_CVSD_Mem.pucRXVirtBufAddr, BT_CVSD_Mem.pucRXPhysBufAddr);
-
             btsco.pRX = (BT_SCO_RX_T *)(BT_CVSD_Mem.pucRXVirtBufAddr);
             btsco.pRX->u4BufferSize = SCO_RX_PACKER_BUF_NUM * (SCO_RX_PLC_SIZE + BTSCO_CVSD_PACKET_VALID_SIZE);
         }
@@ -292,9 +289,6 @@ static int AudDrv_btcvsd_Allocate_Buffer(struct file *fp, kal_uint8 isRX)
 
             memset((void *)BT_CVSD_Mem.pucTXVirtBufAddr, 0, BT_CVSD_Mem.u4TXBufferSize);
 
-            PRINTK_AUDDRV("BT_CVSD_Mem.pucTXVirtBufAddr = 0x%p BT_CVSD_Mem.pucTXPhysBufAddr = 0x%x\n" ,
-                          BT_CVSD_Mem.pucTXVirtBufAddr, BT_CVSD_Mem.pucTXPhysBufAddr);
-
             btsco.pTX = (BT_SCO_TX_T *)(BT_CVSD_Mem.pucTXVirtBufAddr);
             btsco.pTX->u4BufferSize = SCO_TX_PACKER_BUF_NUM * SCO_TX_ENCODE_SIZE;
         }
@@ -311,7 +305,6 @@ static int AudDrv_btcvsd_Free_Buffer(struct file *fp, kal_uint8 isRX)
     {
         if ((BT_CVSD_Mem.pucRXVirtBufAddr != NULL) && (BT_CVSD_Mem.pucRXPhysBufAddr != 0))
         {
-            PRINTK_AUDDRV("AudDrv_btcvsd_Free_Buffer dma_free_coherent pucRXVirtBufAddr = %p pucRXPhysBufAddr = %x", BT_CVSD_Mem.pucRXVirtBufAddr, BT_CVSD_Mem.pucRXPhysBufAddr);
             btsco.pRX =  NULL;
             dma_free_coherent(0, BT_CVSD_Mem.u4RXBufferSize, BT_CVSD_Mem.pucRXVirtBufAddr, BT_CVSD_Mem.pucRXPhysBufAddr);
             BT_CVSD_Mem.u4RXBufferSize = 0;
@@ -321,7 +314,6 @@ static int AudDrv_btcvsd_Free_Buffer(struct file *fp, kal_uint8 isRX)
         }
         else
         {
-            PRINTK_AUDDRV("AudDrv_btcvsd_Free_Buffer cannot dma_free_coherent pucRXVirtBufAddr = %p pucRXPhysBufAddr = %x", BT_CVSD_Mem.pucRXVirtBufAddr, BT_CVSD_Mem.pucRXPhysBufAddr);
             return -1;
         }
     }
@@ -329,7 +321,6 @@ static int AudDrv_btcvsd_Free_Buffer(struct file *fp, kal_uint8 isRX)
     {
         if ((BT_CVSD_Mem.pucTXVirtBufAddr != NULL) && (BT_CVSD_Mem.pucTXPhysBufAddr != 0))
         {
-            PRINTK_AUDDRV("AudDrv_btcvsd_Free_Buffer dma_free_coherent pucTXVirtBufAddr = %p pucTXPhysBufAddr = %x", BT_CVSD_Mem.pucTXVirtBufAddr, BT_CVSD_Mem.pucTXPhysBufAddr);
             btsco.pTX =  NULL;
             dma_free_coherent(0, BT_CVSD_Mem.u4TXBufferSize, BT_CVSD_Mem.pucTXVirtBufAddr, BT_CVSD_Mem.pucTXPhysBufAddr);
             BT_CVSD_Mem.u4TXBufferSize = 0;
@@ -339,7 +330,6 @@ static int AudDrv_btcvsd_Free_Buffer(struct file *fp, kal_uint8 isRX)
         }
         else
         {
-            PRINTK_AUDDRV("AudDrv_btcvsd_Free_Buffer cannot dma_free_coherent pucTXVirtBufAddr = %p pucTXPhysBufAddr = %x", BT_CVSD_Mem.pucTXVirtBufAddr, BT_CVSD_Mem.pucTXPhysBufAddr);
             return -1;
         }
     }
@@ -526,16 +516,11 @@ static void AudDrv_BTCVSD_ReadFromBT(BT_SCO_PACKET_LEN uLen, kal_uint32 uPacketL
     unsigned long flags;
     unsigned long connsys_addr_rx, ap_addr_rx;
 
-    PRINTK_AUDDRV("AudDrv_BTCVSD_ReadFromBT(+) btsco.pRX->iPacket_w=%d\n", btsco.pRX->iPacket_w);
-
     connsys_addr_rx = *bt_hw_REG_PACKET_R;
     ap_addr_rx = (unsigned long)BTSYS_SRAM_BANK2_BASE_ADDRESS + (connsys_addr_rx & 0xFFFF);
-    PRINTK_AUDDRV("AudDrv_BTCVSD_ReadFromBT connsys_addr_rx=0x%lx,ap_addr_rx=0x%lx \n", connsys_addr_rx, ap_addr_rx);
     pSrc = (kal_uint8 *)ap_addr_rx;
 
-    PRINTK_AUDDRV("AudDrv_BTCVSD_ReadFromBT()uPacketLength=%d,uPacketNumber=%d, btsco.uRXState=%d\n", uPacketLength, uPacketNumber, btsco.uRXState);
     AudDrv_BTCVSD_DataTransfer(BT_SCO_DIRECT_BT2ARM, pSrc, btsco.pRX->TempPacketBuf, uPacketLength, uPacketNumber, btsco.uRXState);
-    PRINTK_AUDDRV("AudDrv_BTCVSD_ReadFromBT()AudDrv_BTCVSD_DataTransfer DONE!!!,uControl=0x%x,uLen=%d \n", uControl, uLen);
 
     spin_lock_irqsave(&auddrv_BTCVSDRX_lock, flags);
     for (i = 0; i < uBlockSize; i++)
@@ -579,7 +564,6 @@ static void AudDrv_BTCVSD_ReadFromBT(BT_SCO_PACKET_LEN uLen, kal_uint32 uPacketL
         btsco.pRX->iPacket_w++;
     }
     spin_unlock_irqrestore(&auddrv_BTCVSDRX_lock, flags);
-    PRINTK_AUDDRV("AudDrv_BTCVSD_ReadFromBT(-) btsco.pRX->iPacket_w=%d\n", btsco.pRX->iPacket_w);
 }
 
 static void AudDrv_BTCVSD_WriteToBT(BT_SCO_PACKET_LEN uLen, kal_uint32 uPacketLength, kal_uint32 uPacketNumber, kal_uint32 uBlockSize)
@@ -604,7 +588,6 @@ static void AudDrv_BTCVSD_WriteToBT(BT_SCO_PACKET_LEN uLen, kal_uint32 uPacketLe
 
     connsys_addr_tx = *bt_hw_REG_PACKET_W;
     ap_addr_tx = (unsigned long)BTSYS_SRAM_BANK2_BASE_ADDRESS + (connsys_addr_tx & 0xFFFF);
-    PRINTK_AUDDRV("AudDrv_BTCVSD_WriteToBT connsys_addr_tx=0x%lx,ap_addr_tx=0x%lx \n", connsys_addr_tx, ap_addr_tx);
     pDst = (kal_uint8 *)ap_addr_tx;
 
     if (btsco.pTX != NULL)
@@ -619,7 +602,6 @@ static int AudDrv_BTCVSD_IRQ_handler(void)
 {
     kal_uint32 uPacketType, uPacketNumber, uPacketLength, uBufferCount_TX, uBufferCount_RX, uControl;
 
-    PRINTK_AUDDRV("AudDrv_BTCVSD_IRQ_handler FILL PACKETBUF \n");
     if ((btsco.uRXState != BT_SCO_RXSTATE_RUNNING && btsco.uRXState != BT_SCO_RXSTATE_ENDING)
         && (btsco.uTXState != BT_SCO_TXSTATE_RUNNING && btsco.uTXState != BT_SCO_TXSTATE_ENDING)
         && (btsco.uTXState != BT_SCO_TXSTATE_DIRECT_LOOPBACK))
@@ -630,7 +612,6 @@ static int AudDrv_BTCVSD_IRQ_handler(void)
     }
     uControl = *bt_hw_REG_CONTROL;
     uPacketType = (uControl >> 18) & 0x7;
-    PRINTK_AUDDRV("AudDrv_BTCVSD_IRQ_handler BT uControl =0x%x, BT uPacketType=%d \n", uControl, uPacketType);
 
     if (((uControl >> 31) & 1) == 0)
     {
@@ -644,9 +625,6 @@ static int AudDrv_BTCVSD_IRQ_handler(void)
     uBufferCount_TX = (kal_uint32)btsco_PacketInfo[uPacketType][2];
     uBufferCount_RX = (kal_uint32)btsco_PacketInfo[uPacketType][3];
 
-    PRINTK_AUDDRV("AudDrv_BTCVSD_IRQ_handler uPacketLength=%d, uPacketNumber=%d, uBufferCount_TX=%d, uBufferCount_RX=%d \n", uPacketLength, uPacketNumber, uBufferCount_TX, uBufferCount_RX);
-    PRINTK_AUDDRV("btsco.uTXState=0x%x,btsco.uRXState=0x%x \n", btsco.uTXState, btsco.uRXState);
-
     if (btsco.pTX && btsco.uTXState == BT_SCO_TXSTATE_DIRECT_LOOPBACK)
     {
         kal_uint8 *pSrc, *pDst;
@@ -654,12 +632,10 @@ static int AudDrv_BTCVSD_IRQ_handler(void)
 
         connsys_addr_rx = *bt_hw_REG_PACKET_R;
         ap_addr_rx = (unsigned long)BTSYS_SRAM_BANK2_BASE_ADDRESS + (connsys_addr_rx & 0xFFFF);
-        PRINTK_AUDDRV("AudDrv_BTCVSD_ReadFromBT connsys_addr_rx=0x%lx,ap_addr_rx=0x%lx \n", connsys_addr_rx, ap_addr_rx);
         pSrc = (kal_uint8 *)ap_addr_rx;
 
         connsys_addr_tx = *bt_hw_REG_PACKET_W;
         ap_addr_tx = (unsigned long)BTSYS_SRAM_BANK2_BASE_ADDRESS + (connsys_addr_tx & 0xFFFF);
-        PRINTK_AUDDRV("AudDrv_BTCVSD_WriteToBT connsys_addr_tx=0x%lx,ap_addr_tx=0x%lx \n", connsys_addr_tx, ap_addr_tx);
         pDst = (kal_uint8 *)ap_addr_tx;
 
         AudDrv_BTCVSD_DataTransfer(BT_SCO_DIRECT_BT2ARM, pSrc, btsco.pTX->TempPacketBuf, uPacketLength, uPacketNumber, BT_SCO_RXSTATE_RUNNING);
@@ -673,7 +649,6 @@ static int AudDrv_BTCVSD_IRQ_handler(void)
         {
             if (btsco.uRXState == BT_SCO_RXSTATE_RUNNING || btsco.uRXState == BT_SCO_RXSTATE_ENDING)
             {
-                PRINTK_AUDDRV("AudDrv_BTCVSD_IRQ_handler pRX->fOverflow=%d, pRX->iPacket_w=%d, pRX->iPacket_r=%d, uBufferCount_RX=%d \n", btsco.pRX->fOverflow, btsco.pRX->iPacket_w, btsco.pRX->iPacket_r, uBufferCount_RX);
                 if (btsco.pRX->fOverflow)
                 {
                     if (btsco.pRX->iPacket_w - btsco.pRX->iPacket_r <= SCO_RX_PACKER_BUF_NUM - 2 * uBufferCount_RX)
@@ -701,7 +676,6 @@ static int AudDrv_BTCVSD_IRQ_handler(void)
         {
             if (btsco.uTXState == BT_SCO_TXSTATE_RUNNING || btsco.uTXState == BT_SCO_TXSTATE_ENDING)
             {
-                PRINTK_AUDDRV("AudDrv_BTCVSD_IRQ_handler pTX->fUnderflow=%d, pTX->iPacket_w=%d, pTX->iPacket_r=%d, uBufferCount_TX=%d \n", btsco.pTX->fUnderflow, btsco.pTX->iPacket_w, btsco.pTX->iPacket_r, uBufferCount_TX);
                 if (btsco.pTX->fUnderflow)
                 {
                     //prepared data is larger then twice interrupt tx data size
@@ -725,8 +699,6 @@ static int AudDrv_BTCVSD_IRQ_handler(void)
             }
         }
     }
-    PRINTK_AUDDRV("writeToBT_cnt=%d, readFromBT_cnt=%d \n", writeToBT_cnt, readFromBT_cnt);
-
     *bt_hw_REG_CONTROL &= ~BT_CVSD_CLEAR;
 
     BTCVSD_read_wait_queue_flag = 1;
@@ -741,7 +713,6 @@ AudDrv_BTCVSD_IRQ_handler_exit:
 static int AudDrv_btcvsd_probe(struct platform_device *dev)
 {
     int ret = 0;
-    printk("AudDrv_btcvsd_probe \n");
 
     dev->dev.coherent_dma_mask = DMA_BIT_MASK(64);
     if (!dev->dev.dma_mask)
@@ -812,7 +783,6 @@ static int AudDrv_btcvsd_probe(struct platform_device *dev)
 
 static int AudDrv_btcvsd_open(struct inode *inode, struct file *fp)
 {
-    PRINTK_AUDDRV(ANDROID_LOG_INFO, "Sound", "AudDrv_btcvsd_open do nothing inode:%p, file:%p \n", inode, fp);
     return 0;
 }
 
@@ -945,7 +915,6 @@ static ssize_t AudDrv_btcvsd_write(struct file *fp, const char __user *data, siz
         }
         // here need to wait for interrupt handler
     }
-    PRINTK_AUDDRV("AudDrv_btcvsd_write written_size = %d, write_timeout_limit=%llu \n", written_size, write_timeout_limit);
     return written_size;
 }
 
@@ -969,8 +938,6 @@ static ssize_t AudDrv_btcvsd_read(struct file *fp,  char __user *data, size_t co
 
     while (count)
     {
-        PRINTK_AUDDRV("AudDrv_btcvsd_read btsco.pRX->iPacket_w=%d, btsco.pRX->iPacket_r=%d,count=%zu \n", btsco.pRX->iPacket_w, btsco.pRX->iPacket_r, count);
-
         spin_lock_irqsave(&auddrv_BTCVSDRX_lock, flags);
         u4DataRemained = (btsco.pRX->iPacket_w - btsco.pRX->iPacket_r) * (SCO_RX_PLC_SIZE + BTSCO_CVSD_PACKET_VALID_SIZE); //  available data in RX packet buffer
         if (count > u4DataRemained)
@@ -986,11 +953,8 @@ static ssize_t AudDrv_btcvsd_read(struct file *fp,  char __user *data, size_t co
 
         ASSERT(read_size % (SCO_RX_PLC_SIZE + BTSCO_CVSD_PACKET_VALID_SIZE) == 0);
 
-        PRINTK_AUDDRV("AudDrv_btcvsd_read read_size=%zu, BTSCORX_ReadIdx_tmp=%zu \n", read_size, BTSCORX_ReadIdx_tmp);
-        PRINTK_AUDDRV("AudDrv_btcvsd_read finish0, read_count:%zu, read_size:%zu, u4DataRemained:0x%lx, pRX->iPacket_r:0x%x, pRX->iPacket_w:0x%x \r\n", read_count, read_size, u4DataRemained, btsco.pRX->iPacket_r, btsco.pRX->iPacket_w);
         if (BTSCORX_ReadIdx_tmp + read_size < btsco.pRX->u4BufferSize) //copy once
         {
-            PRINTK_AUDDRV("AudDrv_btcvsd_read 1 copy_to_user target=0x%p, source=0x%p, read_size=%zu \n", Read_Data_Ptr, ((unsigned char *)btsco.pRX->PacketBuf + BTSCORX_ReadIdx_tmp), read_size);
             if (copy_to_user((void __user *)Read_Data_Ptr, (void *)((kal_uint8 *)btsco.pRX->PacketBuf + BTSCORX_ReadIdx_tmp), read_size))
             {
                 pr_debug("AudDrv_btcvsd_read Fail 1 copy to user Read_Data_Ptr:%p, pRX->PacketBuf:%p, BTSCORX_ReadIdx_tmp:%zu, read_size:%zu",
@@ -1012,13 +976,11 @@ static ssize_t AudDrv_btcvsd_read(struct file *fp,  char __user *data, size_t co
 
             Read_Data_Ptr += read_size;
             count -= read_size;
-            PRINTK_AUDDRV("AudDrv_btcvsd_read finish1, read_sizesize:%zu, pRX->iPacket_r:0x%x, pRX->iPacket_w:%x, count:%zu \r\n",  read_size, btsco.pRX->iPacket_r, btsco.pRX->iPacket_w, count);
         }
         else //copy twice
         {
             unsigned long size_1 = btsco.pRX->u4BufferSize - BTSCORX_ReadIdx_tmp;
             unsigned long size_2 = read_size - size_1;
-            PRINTK_AUDDRV("AudDrv_btcvsd_read 2-2 copy_to_user target=%p, source=0x%p, size_1=%zu\n", Read_Data_Ptr, ((unsigned char *)btsco.pRX->PacketBuf + BTSCORX_ReadIdx_tmp), size_1);
             if (copy_to_user((void __user *)Read_Data_Ptr, (void *)((kal_uint8 *)btsco.pRX->PacketBuf + BTSCORX_ReadIdx_tmp), size_1))
             {
                 PRINTK_AUDDRV("AudDrv_btcvsd_read Fail 2 copy to user Read_Data_Ptr:%p, pRX->PacketBuf:%p, BTSCORX_ReadIdx_tmp:0x%lx, read_size:%zu", Read_Data_Ptr, btsco.pRX->PacketBuf, BTSCORX_ReadIdx_tmp, read_size);
@@ -1037,7 +999,6 @@ static ssize_t AudDrv_btcvsd_read(struct file *fp,  char __user *data, size_t co
             btsco.pRX->iPacket_r += size_1 / (SCO_RX_PLC_SIZE + BTSCO_CVSD_PACKET_VALID_SIZE); // 2 byte is packetvalid info
             spin_unlock_irqrestore(&auddrv_BTCVSDRX_lock, flags);
 
-            PRINTK_AUDDRV("AudDrv_btcvsd_read 2-2 copy_to_user target=0x%p, source=0x%p,size_2=%zu\n", (Read_Data_Ptr + size_1), ((unsigned char *)btsco.pRX->PacketBuf + BTSCORX_ReadIdx_tmp + size_1), size_2);
             if (copy_to_user((void __user *)(Read_Data_Ptr + size_1), (void *)((kal_uint8 *)btsco.pRX->PacketBuf), size_2))
             {
                 PRINTK_AUDDRV(ANDROID_LOG_ERROR, "Sound", "AudDrv_btcvsd_read Fail 3 copy to user Read_Data_Ptr:%p, pRX->PacketBuf:%p, BTSCORX_ReadIdx_tmp:0x%x, read_size:%x", Read_Data_Ptr, btsco.pRX->PacketBuf, BTSCORX_ReadIdx_tmp, read_size);
@@ -1058,19 +1019,16 @@ static ssize_t AudDrv_btcvsd_read(struct file *fp,  char __user *data, size_t co
 
             count -= read_size;
             Read_Data_Ptr += read_size;
-            PRINTK_AUDDRV("AudDrv_btcvsd_read finish3, copy size_2:%zu, pRX->iPacket_r:0x%x, pRX->iPacket_w:0x%x u4DataRemained:%zu \r\n",   size_2, btsco.pRX->iPacket_r, btsco.pRX->iPacket_w, u4DataRemained);
         }
 
         if (count != 0)
         {
             kal_uint64 t1, t2;
 
-            PRINTK_AUDDRV("AudDrv_btcvsd_read WAITING... pRX->iPacket_r=0x%x, count=%zu \n", btsco.pRX->iPacket_r, count);
             t1 = sched_clock();
             BTCVSD_read_wait_queue_flag = 0;
             ret = wait_event_interruptible_timeout(BTCVSD_Read_Wait_Queue, BTCVSD_read_wait_queue_flag, read_timeout_limit / 1000000 / 10);
             t2 = sched_clock();
-            PRINTK_AUDDRV("AudDrv_btcvsd_read WAKEUP...count=%zu \n", count);
             t2 = t2 - t1; // in ns (10^9)
             if (t2 > read_timeout_limit)
             {
@@ -1079,7 +1037,6 @@ static ssize_t AudDrv_btcvsd_read(struct file *fp,  char __user *data, size_t co
             }
         }
     }
-    PRINTK_AUDDRV("AudDrv_btcvsd_read read_count = %zu,read_timeout_limit=%llu \n", read_count, read_timeout_limit);
     return read_count;
 }
 
@@ -1185,14 +1142,10 @@ static int AudDrv_btcvsd_mod_init(void)
 
 static void  AudDrv_btcvsd_mod_exit(void)
 {
-    PRINTK_AUDDRV("+AudDrv_btcvsd_mod_exit \n");
-
     /*
       remove_proc_entry("audio", NULL);
       platform_driver_unregister(&AudDrv_btcvsd);
       */
-
-    PRINTK_AUDDRV("-AudDrv_btcvsd_mod_exit \n");
 }
 
 
diff --git a/drivers/misc/mediatek/btif/mt6580/hal_btif.c b/drivers/misc/mediatek/btif/mt6580/hal_btif.c
index 5af5f14c4..a073f14b3 100644
--- a/drivers/misc/mediatek/btif/mt6580/hal_btif.c
+++ b/drivers/misc/mediatek/btif/mt6580/hal_btif.c
@@ -189,8 +189,6 @@ static void _btif_set_default_setting(void)
 		mtk_btif.p_irq->irq_id = irq_of_parse_and_map(node,0);
 		/*fixme, be compitable arch 64bits*/
 		mtk_btif.base = (unsigned long)of_iomap(node, 0);
-		BTIF_INFO_FUNC("get btif irq(%d),register base(0x%lx)\n",
-			mtk_btif.p_irq->irq_id,mtk_btif.base);
 	}else{
 		BTIF_ERR_FUNC("get btif device node fail\n");
 	}
@@ -201,13 +199,11 @@ static void _btif_set_default_setting(void)
 		BTIF_ERR_FUNC("get interrupt flag from DTS fail\n");
 	}else{
 		mtk_btif.p_irq->irq_flags = irq_info[2];
-		BTIF_INFO_FUNC("get interrupt flag(0x%x)\n",mtk_btif.p_irq->irq_flags);
 	}
 
 	if (of_property_read_u32_index(node, "reg", 0, &phy_base)){
 		BTIF_ERR_FUNC("get register phy base from DTS fail\n");
     }else{
-		BTIF_INFO_FUNC("get register phy base(0x%x)\n",(unsigned int)phy_base);
 	}
 		
 }
@@ -229,7 +225,6 @@ P_MTK_BTIF_INFO_STR hal_btif_info_get(void)
 /*tx fifo and fifo lock init*/
 	i_ret = _btif_tx_fifo_init(&mtk_btif);
 	if (0 == i_ret) {
-		BTIF_INFO_FUNC("_btif_tx_fifo_init succeed\n");
 	} else {
 		BTIF_ERR_FUNC("_btif_tx_fifo_init failed, i_ret:%d\n", i_ret);
 	}
@@ -704,9 +699,6 @@ int hal_btif_irq_handler(P_MTK_BTIF_INFO_STR p_btif,
 int hal_btif_rx_cb_reg(P_MTK_BTIF_INFO_STR p_btif_info, btif_rx_buf_write rx_cb)
 {
 	if (NULL != p_btif_info->rx_cb) {
-		BTIF_INFO_FUNC
-		    ("rx_cb already registered, replace (0x%p) with (0x%p)\n",
-		     p_btif_info->rx_cb, rx_cb);
 	}
 	p_btif_info->rx_cb = rx_cb;
 
@@ -1061,8 +1053,6 @@ int hal_btif_dump_reg(P_MTK_BTIF_INFO_STR p_btif, ENUM_BTIF_REG_ID flag)
 	for (idx = 1; idx < sizeof(reg_map); idx++)
 		reg_map[idx] = BTIF_READ8(p_btif->base + (4 * idx));
 	/*spin_unlock_irqrestore(&(g_clk_cg_spinlock), irq_flag);*/
-	BTIF_INFO_FUNC("BTIF's clock is on\n");
-	BTIF_INFO_FUNC("base address: 0x%lx\n", base);
 	switch (flag) {
 	case REG_BTIF_ALL:
 #if 0
@@ -1090,16 +1080,6 @@ int hal_btif_dump_reg(P_MTK_BTIF_INFO_STR p_btif, ENUM_BTIF_REG_ID flag)
 		break;
 	}
 
-	BTIF_INFO_FUNC("Tx DMA %s\n",
-		       (dma_en & BTIF_DMA_EN_TX) ? "enabled" : "disabled");
-	BTIF_INFO_FUNC("Rx DMA %s\n",
-		       (dma_en & BTIF_DMA_EN_RX) ? "enabled" : "disabled");
-
-	BTIF_INFO_FUNC("Rx data is %s\n",
-		       (lsr & BTIF_LSR_DR_BIT) ? "not empty" : "empty");
-	BTIF_INFO_FUNC("Tx data is %s\n",
-		       (lsr & BTIF_LSR_TEMT_BIT) ? "empty" : "not empty");
-
 	return i_ret;
 }
 
diff --git a/drivers/misc/mediatek/btif/mt6580/hal_btif_dma.c b/drivers/misc/mediatek/btif/mt6580/hal_btif_dma.c
index c61642ab0..033bba293 100644
--- a/drivers/misc/mediatek/btif/mt6580/hal_btif_dma.c
+++ b/drivers/misc/mediatek/btif/mt6580/hal_btif_dma.c
@@ -159,8 +159,6 @@ static void hal_dma_set_default_setting(ENUM_DMA_DIR dma_dir)
 			mtk_btif_rx_dma.p_irq->irq_id = irq_of_parse_and_map(node,0);
 			/*fixme, be compitable arch 64bits*/
 			mtk_btif_rx_dma.base = (unsigned long)of_iomap(node, 0);
-			BTIF_INFO_FUNC("get rx_dma irq(%d),register base(0x%lx)\n",
-				mtk_btif_rx_dma.p_irq->irq_id,mtk_btif_rx_dma.base);
 		}else{
 			BTIF_ERR_FUNC("get rx_dma device node fail\n");
 		}
@@ -171,16 +169,12 @@ static void hal_dma_set_default_setting(ENUM_DMA_DIR dma_dir)
 			BTIF_ERR_FUNC("get interrupt flag from DTS fail\n");
 		}else{
 			mtk_btif_rx_dma.p_irq->irq_flags = irq_info[2];
-			BTIF_INFO_FUNC("get interrupt flag(0x%x)\n",
-				mtk_btif_rx_dma.p_irq->irq_flags);
 		}
 
 		if (of_property_read_u32_index(node, "reg", 0, &phy_base)){
 			BTIF_ERR_FUNC("get register phy base from DTS fail,dma_dir(%d)\n",\
 				dma_dir);
 	    }else{
-			BTIF_INFO_FUNC("get register phy base dma_dir(%d)(0x%x)\n",
-				dma_dir,(unsigned int)phy_base);
 		}
 		
 	} else if (DMA_DIR_TX == dma_dir) {
@@ -189,8 +183,6 @@ static void hal_dma_set_default_setting(ENUM_DMA_DIR dma_dir)
 			mtk_btif_tx_dma.p_irq->irq_id = irq_of_parse_and_map(node,0);
 			/*fixme, be compitable arch 64bits*/
 			mtk_btif_tx_dma.base = (unsigned long)of_iomap(node, 0);
-			BTIF_INFO_FUNC("get tx_dma irq(%d),register base(0x%lx)\n",
-				mtk_btif_tx_dma.p_irq->irq_id,mtk_btif_tx_dma.base);
 		}else{
 			BTIF_ERR_FUNC("get tx_dma device node fail\n");
 		}
@@ -201,16 +193,12 @@ static void hal_dma_set_default_setting(ENUM_DMA_DIR dma_dir)
 			BTIF_ERR_FUNC("get interrupt flag from DTS fail\n");
 		}else{
 			mtk_btif_tx_dma.p_irq->irq_flags = irq_info[2];
-			BTIF_INFO_FUNC("get interrupt flag(0x%x)\n",
-				mtk_btif_tx_dma.p_irq->irq_flags);
 		}
 
 		if (of_property_read_u32_index(node, "reg", 0, &phy_base)){
 			BTIF_ERR_FUNC("get register phy base from DTS fail,dma_dir(%d)\n",
 				dma_dir);
 	    }else{
-			BTIF_INFO_FUNC("get register phy base dma_dir(%d)(0x%x)\n",
-				dma_dir,(unsigned int)phy_base);
 		}
 	}
 		
@@ -471,9 +459,6 @@ int hal_btif_dma_rx_cb_reg(P_MTK_DMA_INFO_STR p_dma_info,
 			   dma_rx_buf_write rx_cb)
 {
 	if (NULL != p_dma_info->rx_cb) {
-		BTIF_INFO_FUNC
-		    ("rx_cb already registered, replace (0x%p) with (0x%p)\n",
-		     p_dma_info->rx_cb, rx_cb);
 	}
 	p_dma_info->rx_cb = rx_cb;
 	return 0;
@@ -888,7 +873,6 @@ int hal_dma_get_ava_room(P_MTK_DMA_INFO_STR p_dma_info)
 	i_ret = BTIF_READ32(TX_DMA_VFF_LEFT_SIZE(base));
 	BTIF_DBG_FUNC("DMA tx ava room (%d).\n", i_ret);
 	if (0 == i_ret) {
-		BTIF_INFO_FUNC("DMA tx vfifo is full.\n");
 	}
 
 	return i_ret;
@@ -1253,7 +1237,6 @@ int hal_dma_pm_ops(P_MTK_DMA_INFO_STR p_dma_info, MTK_BTIF_PM_OPID opid)
 {
 	int i_ret = -1;
 
-	BTIF_INFO_FUNC("op id: %d\n", opid);
 	switch (opid) {
 	case BTIF_PM_DPIDLE_EN:
 		i_ret = 0;
@@ -1363,7 +1346,6 @@ int _btif_dma_dump_dbg_reg(void)
 
     for (i = 0; i < array_num; i++)
     {
-        BTIF_INFO_FUNC("<reg, val>-<0x%lx, 0x%08x>\n", g_dma_dbg_regs[i].reg_addr, g_dma_dbg_regs[i].reg_val);
     }
     return 0;
 }
diff --git a/drivers/misc/mediatek/btif/mtk_btif.c b/drivers/misc/mediatek/btif/mtk_btif.c
index 16b7a228b..f9e10af3a 100644
--- a/drivers/misc/mediatek/btif/mtk_btif.c
+++ b/drivers/misc/mediatek/btif/mtk_btif.c
@@ -224,7 +224,6 @@ static int mtk_btif_probe(struct platform_device *pdev)
 {
 /*Chaozhong: ToDo: to be implement*/
 /*register IRQ for BTIF and Tx Rx DMA and disable them by default*/
-	BTIF_INFO_FUNC("DO BTIF PROBE\n");
 	platform_set_drvdata(pdev, &g_btif[0]);
 	g_btif[0].private_data = (struct device *)&pdev->dev;
 
@@ -234,7 +233,6 @@ static int mtk_btif_probe(struct platform_device *pdev)
 			BTIF_ERR_FUNC("[CCF]cannot get clk_btif clock.\n");
 			return PTR_ERR(clk_btif);
 		}
-		BTIF_INFO_FUNC("[CCF]clk_btif=%p\n", clk_btif);
 #endif /* !defined(CONFIG_MTK_LEGACY) */
 #if !defined(CONFIG_MTK_LEGACY)
 					clk_btif_apdma = devm_clk_get(&pdev->dev, "btif-apdma-clock");
@@ -242,7 +240,6 @@ static int mtk_btif_probe(struct platform_device *pdev)
 						BTIF_ERR_FUNC("[CCF]cannot get clk_btif_apdma clock.\n");
 						return PTR_ERR(clk_btif_apdma);
 					}
-					BTIF_INFO_FUNC("[CCF]clk_btif_apdma=%p\n", clk_btif_apdma);
 #endif /* !defined(CONFIG_MTK_LEGACY) */
 
 	return 0;
@@ -251,7 +248,6 @@ static int mtk_btif_probe(struct platform_device *pdev)
 static int mtk_btif_remove(struct platform_device *pdev)
 {
 /*Chaozhong: ToDo: to be implement*/
-	BTIF_INFO_FUNC("DO BTIF REMOVE\n");
 	platform_set_drvdata(pdev, NULL);
 	g_btif[0].private_data = NULL;
 	return 0;
@@ -280,10 +276,8 @@ int _btif_suspend(p_mtk_btif p_btif)
 					i_ret += _btif_controller_rx_free(p_btif);
 				}
 				if (0 != i_ret) {
-					BTIF_INFO_FUNC("failed\n");
 					/*Chaozhong: what if failed*/
 				} else {
-					BTIF_INFO_FUNC("succeed\n");
 					i_ret = _btif_state_set(p_btif, B_S_SUSPEND);
 					if (i_ret && _btif_init(p_btif)) {
 						/*Chaozhong:BTIF re-init failed? what to do*/
@@ -320,10 +314,8 @@ static int mtk_btif_suspend(struct platform_device *pdev, pm_message_t state)
 	p_mtk_btif p_btif = NULL;
 
 /*Chaozhong: ToDo: to be implement*/
-	BTIF_INFO_FUNC("++\n");
 	p_btif = platform_get_drvdata(pdev);
 	i_ret = _btif_suspend(p_btif);
-	BTIF_INFO_FUNC("--, i_ret:%d\n", i_ret);
 	return i_ret;
 }
 
@@ -334,7 +326,6 @@ int _btif_restore_noirq(p_mtk_btif p_btif)
 /*BTIF IRQ restore no irq*/
 	i_ret = hal_btif_pm_ops(p_btif->p_btif_info, BTIF_PM_RESTORE_NOIRQ);
 	if (0 == i_ret) {
-		BTIF_INFO_FUNC("BTIF HW IRQ restore succeed\n");
 	} else {
 		BTIF_INFO_FUNC("BTIF HW IRQ restore failed, i_ret:%d\n", i_ret);
 		return i_ret;
@@ -344,7 +335,6 @@ int _btif_restore_noirq(p_mtk_btif p_btif)
 		i_ret = hal_dma_pm_ops(p_btif->p_tx_dma->p_dma_info,
 				       BTIF_PM_RESTORE_NOIRQ);
 		if (0 == i_ret) {
-			BTIF_INFO_FUNC("BTIF Tx DMA IRQ restore succeed\n");
 		} else {
 			BTIF_INFO_FUNC
 			    ("BTIF Tx DMA IRQ restore failed, i_ret:%d\n",
@@ -356,7 +346,6 @@ int _btif_restore_noirq(p_mtk_btif p_btif)
 		i_ret = hal_dma_pm_ops(p_btif->p_rx_dma->p_dma_info,
 				       BTIF_PM_RESTORE_NOIRQ);
 		if (0 == i_ret) {
-			BTIF_INFO_FUNC("BTIF Rx DMA IRQ restore succeed\n");
 		} else {
 			BTIF_INFO_FUNC
 			    ("BTIF Rx DMA IRQ restore failed, i_ret:%d\n",
@@ -373,16 +362,13 @@ static int mtk_btif_restore_noirq(struct device *dev)
 	struct platform_device *pdev = to_platform_device(dev);
 	p_mtk_btif p_btif = platform_get_drvdata(pdev);
 
-	BTIF_INFO_FUNC("++\n");
 	BTIF_STATE_HOLD(p_btif);
 
 	if (p_btif->enable)
-		BTIF_ERR_FUNC("!!!-----------------!BTIF is not closed before IPOH shutdown!!!---------------!\n");
 	BUG_ON(p_btif->enable);
 
 	i_ret = _btif_restore_noirq(p_btif);
 	BTIF_STATE_RELEASE(p_btif);
-	BTIF_INFO_FUNC("--\n");
 	return 0;
 }
 
@@ -413,10 +399,8 @@ static int mtk_btif_resume(struct platform_device *pdev)
 	int i_ret = 0;
 	p_mtk_btif p_btif = NULL;
 /*Chaozhong: ToDo: to be implement*/
-	BTIF_INFO_FUNC("++\n");
 	p_btif = platform_get_drvdata(pdev);
 	i_ret = _btif_resume(p_btif);
-	BTIF_INFO_FUNC("--, i_ret:%d\n", i_ret);
 	return 0;
 }
 
@@ -468,7 +452,6 @@ static int btif_chrdev_init(void)
 		BTIF_ERR_FUNC("devuce number allocation failed, i_ret:%d\n",
 			      i_ret);
 	} else {
-		BTIF_INFO_FUNC("devuce number allocation succeed\n");
 	}
 	cdev_init(&btif_dev_c, &mtk_btif_fops);
 	btif_dev_c.owner = THIS_MODULE;
@@ -480,7 +463,6 @@ static int btif_chrdev_init(void)
 		btif_dev = 0;
 		return -1;
 	}
-	BTIF_INFO_FUNC("add btif dev to kernel succeed\n");
 
 	p_btif_class = class_create(THIS_MODULE, p_btif_dev_name);
 	if (IS_ERR(p_btif_class)) {
@@ -489,7 +471,6 @@ static int btif_chrdev_init(void)
 		btif_dev = 0;
 		return -2;
 	}
-	BTIF_INFO_FUNC("create class for btif succeed\n");
 
 	p_btif_dev = device_create(p_btif_class,
 				   NULL, btif_dev, 0, p_btif_dev_name);
@@ -501,18 +482,15 @@ static int btif_chrdev_init(void)
 		btif_dev = 0;
 		return -3;
 	}
-	BTIF_INFO_FUNC("create device for btif succeed\n");
 
 	return 0;
 }
 
 void btif_rx_notify_cb(void)
 {
-	BTIF_DBG_FUNC("++\n");
 	rx_notify_flag = 1;
 	wake_up(&btif_wq);
 	wake_up_interruptible(&btif_read_inq);
-	BTIF_DBG_FUNC("++\n");
 }
 
 unsigned int btif_poll(struct file *filp, poll_table *wait)
@@ -524,7 +502,6 @@ unsigned int btif_poll(struct file *filp, poll_table *wait)
 
 /*    BTIF_Rx_IRQ_Disable(); */
 	ava_len = BBS_COUNT_CUR(&(g_btif[0].btif_buf), wr_idx);
-	BTIF_INFO_FUNC("++\n");
 	if (0 == ava_len) {
 		poll_wait(filp, &btif_read_inq, wait);
 		wr_idx = g_btif[0].btif_buf.wr_idx;
@@ -537,7 +514,6 @@ unsigned int btif_poll(struct file *filp, poll_table *wait)
 	}
 /*make for writable*/
 	mask |= POLLOUT | POLLWRNORM;	/* writable */
-	BTIF_INFO_FUNC("--, mask:%d\n", mask);
 	return mask;
 }
 
@@ -546,14 +522,11 @@ static int _btif_file_open(void)
 	int i_ret = -1;
 	p_mtk_btif p_btif = &g_btif[0];
 
-	BTIF_INFO_FUNC("++\n");
-
 /*Chaozhong: ToDo: to be implement*/
 	i_ret = btif_open(p_btif);
 	if ((0 != i_ret) && (E_BTIF_ALREADY_OPEN != i_ret)) {
 		BTIF_ERR_FUNC("btif_open failed, error code:%d\n", i_ret);
 	} else {
-		BTIF_INFO_FUNC("btif_open succeed\n");
 		i_ret = 0;
 	}
 /*semaphore for read and write operation init*/
@@ -565,7 +538,6 @@ static int _btif_file_open(void)
 	memset(rd_buf, 0, sizeof(rd_buf));
 	init_waitqueue_head(&(btif_read_inq));
 	btif_rx_notify_reg(p_btif, btif_rx_notify_cb);
-	BTIF_INFO_FUNC("--\n");
 	return i_ret;
 }
 
@@ -573,15 +545,11 @@ static int _btif_file_close(void)
 {
 	int i_ret = -1;
 
-	BTIF_INFO_FUNC("++\n");
 /*Chaozhong: ToDo: to be implement*/
 	i_ret = btif_close(&g_btif[0]);
 	if (0 != i_ret)
 		BTIF_ERR_FUNC("btif_close failed, error code:%d\n", i_ret);
-	else
-		BTIF_INFO_FUNC("btif_close succeed\n");
 
-	BTIF_INFO_FUNC("--\n");
 	return i_ret;
 }
 
@@ -589,7 +557,6 @@ static int btif_file_open(struct inode *pinode, struct file *pfile)
 {
 	int i_ret = -1;
 
-	BTIF_INFO_FUNC("pid:%d\n", current->pid);
 	i_ret = 0;
 	return i_ret;
 }
@@ -598,7 +565,6 @@ static int btif_file_release(struct inode *pinode, struct file *pfile)
 {
 	int i_ret = -1;
 
-	BTIF_INFO_FUNC("pid:%d\n", current->pid);
 	i_ret = 0;
 	return i_ret;
 }
@@ -609,7 +575,6 @@ static ssize_t btif_file_read(struct file *pfile,
 	int i_ret = 0;
 	int rd_len = 0;
 
-	BTIF_INFO_FUNC("++\n");
 	down(&rd_mtx);
 	rd_len = btif_bbs_read(&(g_btif[0].btif_buf), rd_buf, sizeof(rd_buf));
 	while (0 == rd_len) {
@@ -631,7 +596,6 @@ static ssize_t btif_file_read(struct file *pfile,
 		i_ret = -EFAULT;
 
 	up(&rd_mtx);
-	BTIF_INFO_FUNC("--, i_ret:%d\n", i_ret);
 	return i_ret;
 }
 
@@ -643,7 +607,6 @@ ssize_t btif_file_write(struct file *filp,
 
 	copy_size = count > sizeof(wr_buf) ? sizeof(wr_buf) : count;
 
-	BTIF_INFO_FUNC("++\n");
 	down(&wr_mtx);
 	if (copy_from_user(&wr_buf[0], &buf[0], copy_size))
 		i_ret = -EFAULT;
@@ -651,7 +614,6 @@ ssize_t btif_file_write(struct file *filp,
 		i_ret = btif_send_data(&g_btif[0], wr_buf, copy_size);
 
 	up(&wr_mtx);
-	BTIF_INFO_FUNC("--, i_ret:%d\n", i_ret);
 
 	return i_ret;
 }
@@ -671,8 +633,6 @@ long btif_unlocked_ioctl(struct file *filp, unsigned int cmd, unsigned long arg)
 	long ret = 0;
 /* unsigned char p_buf[NAME_MAX + 1]; */
 	p_mtk_btif p_btif = &g_btif[0];
-	BTIF_INFO_FUNC("++\n");
-	BTIF_DBG_FUNC("cmd (%u), arg (0x%lx)\n", cmd, arg);
 
 	switch (cmd) {
 	case BTIF_IOCTL_OPEN:
@@ -724,7 +684,6 @@ long btif_unlocked_ioctl(struct file *filp, unsigned int cmd, unsigned long arg)
 		ret = -2;
 		break;
 	}
-	BTIF_INFO_FUNC("--\n");
 	return ret;
 }
 
@@ -748,9 +707,7 @@ static ssize_t driver_flag_set(struct device_driver *drv,
 	char *p_token = NULL;
 	char *p_delimiter = " \t";
 
-	BTIF_INFO_FUNC("buffer = %s, count = %zd\n", buffer, count);
 	if (len >= sizeof(buf)) {
-		BTIF_ERR_FUNC("input handling fail!\n");
 		len = sizeof(buf) - 1;
 		return -1;
 	}
@@ -763,7 +720,6 @@ static ssize_t driver_flag_set(struct device_driver *drv,
 	p_token = strsep(&p_buf, "\t\n ");
 	if (p_token != NULL) {
 		y = kstrtol(p_token, NULL, 16);
-		BTIF_INFO_FUNC("y = 0x%08x\n\r", y);
 	} else
 		y = 0;
 
@@ -773,8 +729,6 @@ static ssize_t driver_flag_set(struct device_driver *drv,
 	else
 		z = 0;
 
-	BTIF_INFO_FUNC("x(0x%08x), y(0x%08x), z(0x%08x)\n\r", x, y, z);
-
 	switch (x) {
 	case 1:
 		mtk_btif_exp_open_test();
@@ -804,7 +758,6 @@ static ssize_t driver_flag_set(struct device_driver *drv,
 			mtk_btif_dbg_lvl = BTIF_LOG_WARN;
 		else
 			mtk_btif_dbg_lvl = y;
-		BTIF_ERR_FUNC("mtk_btif_dbg_lvl set to %d\n", mtk_btif_dbg_lvl);
 		break;
 	case 9:
 		mtk_btif_exp_open_test();
@@ -834,13 +787,11 @@ static ssize_t driver_flag_set(struct device_driver *drv,
 	case 0x10:
 		y = y > G_MAX_PKG_LEN ? G_MAX_PKG_LEN : y;
 		y = y < 1024 ? 1024 : y;
-		BTIF_INFO_FUNC("g_max_pkg_len is set to %d\n", y);
 		g_max_pkg_len = y;
 		break;
 	case 0x11:
 		y = y > BTIF_RX_BUFFER_SIZE ? BTIF_RX_BUFFER_SIZE : y;
 		y = y < 1024 ? 1024 : y;
-		BTIF_INFO_FUNC("g_max_pding_data_size is set to %d\n", y);
 		g_max_pding_data_size = y;
 		break;
 	default:
@@ -965,8 +916,6 @@ irqreturn_t btif_irq_handler(int irq, void *data)
 
 	p_mtk_btif p_btif = (p_mtk_btif) data;	/*&(g_btif[index]); */
 
-	BTIF_DBG_FUNC("++, p_btif(0x%p)\n", data);
-
 	_btif_irq_ctrl(p_btif->p_btif_info->p_irq, false);
 
 #if MTK_BTIF_ENABLE_CLK_REF_COUNTER
@@ -982,7 +931,6 @@ irqreturn_t btif_irq_handler(int irq, void *data)
 	_btif_irq_ctrl(p_btif->p_btif_info->p_irq, true);
 	_btif_rx_btm_sched(p_btif);
 
-	BTIF_DBG_FUNC("--\n");
 	return IRQ_HANDLED;
 }
 
@@ -994,7 +942,6 @@ irqreturn_t btif_tx_dma_irq_handler(int irq, void *data)
 	p_mtk_btif_dma p_tx_dma = p_btif->p_tx_dma;
 	P_MTK_DMA_INFO_STR p_dma_info = p_tx_dma->p_dma_info;
 
-	BTIF_DBG_FUNC("++, p_btif(0x%p)\n", data);
 	_btif_irq_ctrl(p_dma_info->p_irq, false);
 
 #if MTK_BTIF_ENABLE_CLK_REF_COUNTER
@@ -1007,7 +954,6 @@ irqreturn_t btif_tx_dma_irq_handler(int irq, void *data)
 	hal_btif_dma_clk_ctrl(p_dma_info, CLK_OUT_DISABLE);
 #endif
 	_btif_irq_ctrl(p_dma_info->p_irq, true);
-	BTIF_DBG_FUNC("--\n");
 	return IRQ_HANDLED;
 }
 
@@ -1019,8 +965,6 @@ irqreturn_t btif_rx_dma_irq_handler(int irq, void *data)
 	p_mtk_btif_dma p_rx_dma = p_btif->p_rx_dma;
 	P_MTK_DMA_INFO_STR p_rx_dma_info = p_rx_dma->p_dma_info;
 
-	BTIF_DBG_FUNC("++, p_btif(0x%p)\n", data);
-
 	_btif_irq_ctrl(p_rx_dma_info->p_irq, false);
 
 #if MTK_BTIF_ENABLE_CLK_REF_COUNTER
@@ -1039,8 +983,6 @@ irqreturn_t btif_rx_dma_irq_handler(int irq, void *data)
 
 	_btif_rx_btm_sched(p_btif);
 
-	BTIF_DBG_FUNC("--\n");
-
 	return IRQ_HANDLED;
 }
 
@@ -1100,7 +1042,6 @@ bool btif_parser_wmt_evt(p_mtk_btif p_btif,
 		BTIF_WARN_FUNC("there is not enough data for parser,need(%d),have(%d)\n", str_len, data_cnt);
 		return false;
 	}
-	BTIF_INFO_FUNC("data count in bbs buffer:%d,wr_idx(%d),rd_idx(%d)\n", data_cnt, wr_idx, rd_idx);
 	local_buf = vmalloc((data_cnt + 3) & ~0x3UL);
 	if (!local_buf) {
 		BTIF_WARN_FUNC("vmalloc memory fail\n");
@@ -1111,7 +1052,6 @@ bool btif_parser_wmt_evt(p_mtk_btif p_btif,
 		memcpy(local_buf, BBS_PTR(p_bbs, rd_idx), copy_cnt);
 	} else {
 		unsigned int tail_len = BBS_SIZE(p_bbs) - rd_idx;
-		BTIF_INFO_FUNC("tail_Len(%d)\n", tail_len);
 		memcpy(local_buf, BBS_PTR(p_bbs, rd_idx), tail_len);
 		memcpy(local_buf + tail_len, BBS_PTR(p_bbs, 0), copy_cnt - tail_len);
 	}
@@ -1122,9 +1062,7 @@ bool btif_parser_wmt_evt(p_mtk_btif p_btif,
 		int k = 0;
 		int d = 0;
 
-		BTIF_INFO_FUNC("sub_str_len:%d\n", str_len);
 		for (i = 0; i < copy_cnt; i++) {
-			BTIF_DBG_FUNC("i:%d\n", i);
 			k = i;
 			while (1) {
 				if ((j >= str_len) || (k >= copy_cnt) || (sub_str[j++] != local_buf[k++]))
@@ -1133,8 +1071,6 @@ bool btif_parser_wmt_evt(p_mtk_btif p_btif,
 
 			if (j == str_len) {
 				for (d = i; d < (str_len + i); d++)
-					BTIF_INFO_FUNC("0x%2x", local_buf[d]);
-				BTIF_INFO_FUNC("find sub str index:%d\n", i);
 				b_ret = true;
 				break;
 			}
@@ -1154,8 +1090,6 @@ int _btif_controller_tx_setup(p_mtk_btif p_btif)
 	if (BTIF_MODE_DMA == p_btif->tx_mode) {
 		i_ret = _btif_tx_dma_setup(p_btif);
 		if (i_ret) {
-			BTIF_ERR_FUNC("_btif_tx_dma_setup failed,i_ret(%d),",
-				"set tx to PIO mode\n", i_ret);
 			i_ret = _btif_tx_pio_setup(p_btif);
 		}
 	} else
@@ -1172,8 +1106,6 @@ int _btif_controller_tx_free(p_mtk_btif p_btif)
 	if (BTIF_MODE_DMA == p_btif->tx_mode) {
 		i_ret = _btif_tx_dma_free(p_btif);
 		if (i_ret) {
-			BTIF_ERR_FUNC("_btif_tx_dma_free failed, i_ret(%d)\n",
-				      i_ret);
 		}
 	} else {
 /*do nothing for Tx PIO mode*/
@@ -1188,8 +1120,6 @@ int _btif_controller_rx_setup(p_mtk_btif p_btif)
 	if (BTIF_MODE_DMA == p_btif->rx_mode) {
 		i_ret = _btif_rx_dma_setup(p_btif);
 		if (i_ret) {
-			BTIF_ERR_FUNC("_btif_tx_dma_setup failed, i_ret(%d),",
-				"set tx to PIO mode\n", i_ret);
 			i_ret = _btif_rx_pio_setup(p_btif);
 		}
 	} else {
@@ -1206,8 +1136,6 @@ int _btif_controller_rx_free(p_mtk_btif p_btif)
 	if (BTIF_MODE_DMA == p_btif->rx_mode) {
 		i_ret = _btif_rx_dma_free(p_btif);
 		if (i_ret) {
-			BTIF_ERR_FUNC("_btif_rx_dma_free failed, i_ret(%d)\n",
-				      i_ret);
 		}
 	} else {
 /*do nothing for Rx PIO mode*/
@@ -1285,7 +1213,6 @@ int _btif_rx_dma_setup(p_mtk_btif p_btif)
 /*Enable DMA Rx IRQ*/
 		_btif_irq_ctrl(p_btif_irq, true);
 #endif
-		BTIF_INFO_FUNC("succeed\n");
 	}
 	return i_ret;
 }
@@ -1315,8 +1242,6 @@ int _btif_tx_dma_setup(p_mtk_btif p_btif)
 
 	i_ret = hal_btif_dma_clk_ctrl(p_dma_info, CLK_OUT_ENABLE);
 	if (i_ret) {
-		BTIF_ERR_FUNC("hal_btif_dma_clk_ctrl failed, i_ret(%d)\n",
-			      i_ret);
 		return i_ret;
 	}
 /*DMA controller setup*/
@@ -1325,9 +1250,6 @@ int _btif_tx_dma_setup(p_mtk_btif p_btif)
 /*DMA HW Enable*/
 	i_ret = hal_btif_dma_ctrl(p_dma_info, DMA_CTRL_ENABLE);
 	if (i_ret) {
-		BTIF_ERR_FUNC("hal_btif_dma_ctrl failed, i_ret(%d),",
-			"set tx to pio mode\n", i_ret);
-
 #if !(MTK_BTIF_ENABLE_CLK_REF_COUNTER)
 		hal_btif_dma_clk_ctrl(p_dma_info, CLK_OUT_DISABLE);
 #endif
@@ -1341,8 +1263,6 @@ int _btif_tx_dma_setup(p_mtk_btif p_btif)
 /*disable DMA Tx IRQ*/
 		_btif_irq_ctrl(p_btif_irq, false);
 #endif
-
-		BTIF_INFO_FUNC("succeed\n");
 	}
 	return i_ret;
 }
@@ -1388,10 +1308,8 @@ int _btif_lpbk_ctrl(p_mtk_btif p_btif, bool flag)
 
 	if (flag) {
 		i_ret = hal_btif_loopback_ctrl(p_btif->p_btif_info, true);
-		BTIF_INFO_FUNC("loopback function enabled\n");
 	} else {
 		i_ret = hal_btif_loopback_ctrl(p_btif->p_btif_info, false);
-		BTIF_INFO_FUNC("loopback function disabled\n");
 	}
 	if (0 == i_ret)
 		p_btif->lpbk_flag = flag;
@@ -1454,7 +1372,6 @@ int _btif_controller_setup(p_mtk_btif p_btif)
 /*disable IRQ*/
 	_btif_irq_ctrl(p_btif_irq, false);
 	i_ret = 0;
-	BTIF_INFO_FUNC("succeed\n");
 	return i_ret;
 }
 
@@ -1528,8 +1445,6 @@ int btif_open(p_mtk_btif p_btif)
 
 	BTIF_STATE_RELEASE(p_btif);
 
-	BTIF_INFO_FUNC("BTIF's Tx Mode:%d, Rx Mode(%d)\n",
-		       p_btif->tx_mode, p_btif->rx_mode);
 	return i_ret;
 }
 
@@ -1708,8 +1623,6 @@ incase of one driver's suspend/resume process block other device's suspend/resum
 	while ((!_btif_is_tx_complete(p_btif)) && (retry < max_retry)) {
 		do_gettimeofday(&timer_now);
 		if ((MAX_WAIT_TIME_MS/1000) <= (timer_now.tv_sec - timer_start.tv_sec)) {
-			BTIF_WARN_FUNC("max retry timer expired, timer_start.tv_sec:%d, timer_now.tv_sec:%d,",
-				"retry:%d\n", timer_start.tv_sec, timer_now.tv_sec, retry);
 			break;
 		}
 		msleep(wait_period);
@@ -1755,9 +1668,6 @@ int _btif_dpidle_notify_ctrl(p_mtk_btif p_btif, ENUM_BTIF_DPIDLE_CTRL en_flag)
 int btif_rx_cb_reg(p_mtk_btif p_btif, MTK_WCN_BTIF_RX_CB rx_cb)
 {
 	if (p_btif->rx_cb) {
-		BTIF_WARN_FUNC
-		    ("rx cb already exist, rewrite from (0x%p) to (0x%p)\n",
-		     p_btif->rx_cb, rx_cb);
 	}
 	p_btif->rx_cb = rx_cb;
 
@@ -1792,14 +1702,12 @@ make sure BTIF tx finished and DMA tx finished in DMA mode
 	if (BTIF_MODE_DMA == tx_mode) {
 		b_ret = hal_dma_is_tx_complete(p_btif->p_tx_dma->p_dma_info);
 		if (b_ret == false) {
-			BTIF_DBG_FUNC("Tx DMA is not finished\n");
 			return b_ret;
 		}
 	}
 
 	b_ret = hal_btif_is_tx_complete(p_btif->p_btif_info);
 	if (b_ret == false) {
-		BTIF_DBG_FUNC("BTIF Tx is not finished\n");
 		return b_ret;
 	}
 	b_ret = true;
@@ -1815,7 +1723,6 @@ static int _btif_vfifo_init(p_mtk_btif_dma p_dma)
 	p_mtk_btif p_btif = NULL;
 
 	if (NULL == p_dma) {
-		BTIF_ERR_FUNC("p_dma is NULL\n");
 		return E_BTIF_INVAL_PARAM;
 	}
 
@@ -1846,13 +1753,6 @@ static int _btif_vfifo_init(p_mtk_btif_dma p_dma)
 		return E_BTIF_FAIL;
 	}
 
-	if (sizeof(dma_addr_t) == sizeof(unsigned long long))
-		BTIF_INFO_FUNC("alloc vFIFO for BTIF succeed in arch64,vir addr:0x%p,",
-		"phy addr:0x%llx\n", p_vfifo->p_vir_addr, p_vfifo->phy_addr);
-	else
-		BTIF_INFO_FUNC("alloc vFIFO for BTIF succeed in arch32,vir addr:0x%p,",
-		"phy addr:0x%08x\n",	p_vfifo->p_vir_addr, p_vfifo->phy_addr);
-
 	return 0;
 }
 
@@ -1915,12 +1815,9 @@ static int _btif_state_set(p_mtk_btif p_btif, ENUM_BTIF_STATE state)
 	int ori_state = p_btif->state;
 
 	if (ori_state == state) {
-		BTIF_INFO_FUNC("already in %s state\n", g_state[state]);
 		return i_ret;
 	}
 	if ((B_S_OFF <= state) && (B_S_MAX > state)) {
-		BTIF_DBG_FUNC("%s->%s request\n", g_state[ori_state],
-			      g_state[state]);
 		if (B_S_ON == state)
 			_btif_dpidle_notify_ctrl(p_btif, BTIF_DPIDLE_DISABLE);
 		switch (ori_state) {
@@ -2133,7 +2030,6 @@ static int btif_rx_thread(void *p_data)
 			wait_for_completion_interruptible(&p_btif->rx_comp);
 		}
 		if (kthread_should_stop()) {
-			BTIF_WARN_FUNC("btif rx thread stoping ...\n");
 			break;
 		}
 		btif_rx_data_consummer(p_btif);
@@ -2164,8 +2060,6 @@ static void btif_tx_worker(struct work_struct *p_work)
 /*get mtk_btif's pointer*/
 	p_mtk_btif p_btif = container_of(p_work, mtk_btif, tx_work);
 
-	BTIF_DBG_FUNC("p_btif:0x%p\n", p_btif);
-
 	BTIF_MUTEX_LOCK_RET_NONE(&(p_btif->tx_mtx));
 	how_much_get =
 	    kfifo_out(p_btif->p_tx_fifo, local_buf, sizeof(local_buf));
@@ -2177,12 +2071,7 @@ static void btif_tx_worker(struct work_struct *p_work)
 			if (0 < i_ret) {
 				leng_sent += i_ret;
 			} else if (0 == i_ret) {
-				BTIF_WARN_FUNC
-				    ("_btif_send_data return 0, retry\n");
 			} else {
-				BTIF_WARN_FUNC
-				    ("btif send data fail,reset tx fifo, i_ret(%d)\n",
-				     i_ret);
 				kfifo_reset(p_btif->p_tx_fifo);
 				break;
 			}
@@ -2200,7 +2089,6 @@ static void btif_rx_tasklet(unsigned long func_data)
 /*get mtk_btif's pointer*/
 	p_mtk_btif p_btif = (p_mtk_btif) func_data;
 
-	BTIF_DBG_FUNC("p_btif:0x%p\n", p_btif);
 /*lock rx_spinlock*/
 	spin_lock_irqsave(&p_btif->rx_tasklet_spinlock, flags);
 	btif_rx_data_consummer(p_btif);
@@ -2212,7 +2100,6 @@ static int _btif_tx_ctx_init(p_mtk_btif p_btif)
 	int i_ret = -1;
 
 	if (NULL == p_btif) {
-		BTIF_ERR_FUNC("p_btif is NULL\n");
 		return E_BTIF_INVAL_PARAM;
 	}
 
@@ -2228,7 +2115,6 @@ static int _btif_tx_ctx_init(p_mtk_btif p_btif)
 		mutex_init(&(p_btif->tx_mtx));
 /* init btif tx work */
 		INIT_WORK(&(p_btif->tx_work), btif_tx_worker);
-		BTIF_INFO_FUNC("btif_tx_worker init succeed\n");
 
 		p_btif->p_tx_fifo = kzalloc(sizeof(struct kfifo), GFP_ATOMIC);
 		if (NULL == p_btif->p_tx_fifo) {
@@ -2245,16 +2131,12 @@ static int _btif_tx_ctx_init(p_mtk_btif p_btif)
 			goto btm_init_err;
 		}
 	} else if (BTIF_TX_USER_CTX == p_btif->tx_ctx) {
-		BTIF_INFO_FUNC
-		    ("nothing is done when btif tx in user's thread\n");
 	} else {
 		BTIF_ERR_FUNC("unsupported tx context type:%d\n",
 			      p_btif->tx_ctx);
 		goto btm_init_err;
 	}
 
-	BTIF_INFO_FUNC("succeed\n");
-
 	i_ret = 0;
 	return i_ret;
 btm_init_err:
@@ -2262,7 +2144,6 @@ btm_init_err:
 		if (p_btif->p_tx_wq) {
 			destroy_workqueue(p_btif->p_tx_wq);
 			p_btif->p_tx_wq = NULL;
-			BTIF_INFO_FUNC("btif_tx_workqueue destroyed\n");
 		}
 		kfree(p_btif->p_tx_fifo);
 	}
@@ -2277,7 +2158,6 @@ static int _btif_tx_ctx_deinit(p_mtk_btif p_btif)
 		if (p_btif->p_tx_wq) {
 			destroy_workqueue(p_btif->p_tx_wq);
 			p_btif->p_tx_wq = NULL;
-			BTIF_INFO_FUNC("btif_tx_workqueue destroyed\n");
 		}
 		if (p_btif->p_tx_fifo) {
 			kfifo_free(p_btif->p_tx_fifo);
@@ -2318,30 +2198,24 @@ static int _btif_rx_btm_init(p_mtk_btif p_btif)
 			i_ret = sched_setscheduler(p_btif->p_task, policy, &param);
 			if (0 != i_ret)
 				BTIF_WARN_FUNC("set RT to btif_rxd workqueue failed\n");
-			else
-				BTIF_INFO_FUNC("set RT to btif_rxd workqueue succeed\n");
 		}
 #endif
 
 		wake_up_process(p_btif->p_task);
-		BTIF_INFO_FUNC("btif_rxd start to work!\n");
 	} else if (BTIF_WQ_CTX == p_btif->btm_type) {
 		p_btif->p_rx_wq = create_singlethread_workqueue("btif_rxwq");
 		if (!(p_btif->p_rx_wq)) {
-			BTIF_ERR_FUNC("create_singlethread_workqueue fail\n");
 			i_ret = -ENOMEM;
 			goto btm_init_err;
 		}
 		mutex_init(&(p_btif->rx_mtx));
 		/* init btif rx work */
 		INIT_WORK(&(p_btif->rx_work), btif_rx_worker);
-		BTIF_INFO_FUNC("btif_rx_worker init succeed\n");
 	} else if (BTIF_TASKLET_CTX == p_btif->btm_type) {
 		/*init rx tasklet*/
 		tasklet_init(&(p_btif->rx_tasklet), btif_rx_tasklet,
 			     (unsigned long)p_btif);
 		spin_lock_init(&(p_btif->rx_tasklet_spinlock));
-		BTIF_INFO_FUNC("btif_rx_tasklet init succeed\n");
 	} else {
 		BTIF_ERR_FUNC("unsupported rx context type:%d\n",
 			      p_btif->btm_type);
@@ -2349,19 +2223,16 @@ static int _btif_rx_btm_init(p_mtk_btif p_btif)
 
 /*spinlock init*/
 	spin_lock_init(&(p_btif->rx_irq_spinlock));
-	BTIF_INFO_FUNC("rx_spin_lock init succeed\n");
 
 	i_ret = 0;
 	return i_ret;
 btm_init_err:
 	if (BTIF_THREAD_CTX == p_btif->btm_type) {
 		/*do nothing*/
-		BTIF_INFO_FUNC("failed\n");
 	} else if (BTIF_WQ_CTX == p_btif->btm_type) {
 		if (p_btif->p_rx_wq) {
 			destroy_workqueue(p_btif->p_rx_wq);
 			p_btif->p_rx_wq = NULL;
-			BTIF_INFO_FUNC("btif_rx_workqueue destroyed\n");
 		}
 	}
 	return i_ret;
@@ -2376,14 +2247,11 @@ static int _btif_rx_btm_sched(p_mtk_btif p_btif)
 
 	if (BTIF_THREAD_CTX == p_btif->btm_type) {
 		complete(&p_btif->rx_comp);
-		BTIF_DBG_FUNC("schedule btif_rx_thread\n");
 	} else if (BTIF_WQ_CTX == p_btif->btm_type) {
 		queue_work(p_btif->p_rx_wq, &(p_btif->rx_work));
-		BTIF_DBG_FUNC("schedule btif_rx_worker\n");
 	} else if (BTIF_TASKLET_CTX == p_btif->btm_type) {
 		/*schedule it!*/
 		tasklet_schedule(&(p_btif->rx_tasklet));
-		BTIF_DBG_FUNC("schedule btif_rx_tasklet\n");
 	} else {
 		BTIF_ERR_FUNC("unsupported rx context type:%d\n",
 			      p_btif->btm_type);
@@ -2414,7 +2282,6 @@ static int _btif_rx_btm_deinit(p_mtk_btif p_btif)
 		mutex_destroy(&(p_btif->rx_mtx));
 	} else if (BTIF_TASKLET_CTX == p_btif->btm_type) {
 		tasklet_kill(&(p_btif->rx_tasklet));
-		BTIF_INFO_FUNC("rx_tasklet killed\n");
 	} else {
 		BTIF_ERR_FUNC("unsupported rx context type:%d\n",
 			      p_btif->btm_type);
@@ -2428,9 +2295,6 @@ static int _btif_rx_btm_deinit(p_mtk_btif p_btif)
 
 void btif_dump_bbs_str(unsigned char *p_str, p_btif_buf_str p_bbs)
 {
-	BTIF_INFO_FUNC
-	    ("%s UBS:0x%p\n  Size:0x%p\n  read:0x%08x\n  write:0x%08x\n",
-	     p_str, p_bbs, p_bbs->size, p_bbs->rd_idx, p_bbs->wr_idx);
 	return;
 }
 
@@ -2463,8 +2327,6 @@ unsigned int btif_bbs_write(p_btif_buf_str p_bbs,
 	}
 
 	if (buf_len >= g_max_pkg_len) {
-		BTIF_WARN_FUNC("buf_len too long, (%d)ava_len, (%d)to write\n",
-			       ava_len, buf_len);
 		hal_btif_dump_reg(p_btif->p_btif_info, REG_BTIF_ALL);
 		hal_dma_dump_reg(p_btif->p_rx_dma->p_dma_info, REG_RX_DMA_ALL);
 		_btif_dump_memory("<DMA Rx vFIFO>", p_buf, buf_len);
@@ -2474,8 +2336,6 @@ unsigned int btif_bbs_write(p_btif_buf_str p_bbs,
 	btif_bbs_wr_direct(p_bbs, p_buf, wr_len);
 
 	if (BBS_COUNT(p_bbs) >= g_max_pding_data_size) {
-		BTIF_WARN_FUNC("Rx buf_len too long, size(%d)\n",
-			       BBS_COUNT(p_bbs));
 		btif_dump_bbs_str("Rx buffer tooo long", p_bbs);
 		hal_btif_dump_reg(p_btif->p_btif_info, REG_BTIF_ALL);
 		hal_dma_dump_reg(p_btif->p_rx_dma->p_dma_info, REG_RX_DMA_ALL);
@@ -2494,7 +2354,6 @@ unsigned int btif_bbs_read(p_btif_buf_str p_bbs,
 
 	ava_len = BBS_COUNT_CUR(p_bbs, wr_idx);
 	if (ava_len >= 4096) {
-		BTIF_WARN_FUNC("ava_len too long, size(%d)\n", ava_len);
 		btif_dump_bbs_str("Rx buffer tooo long", p_bbs);
 	}
 	if (0 != ava_len) {
@@ -2616,13 +2475,10 @@ int _btif_pio_write(p_mtk_btif p_btif,
 						   buf_len - sent_len);
 			if (0 < i_ret) {
 				sent_len += i_ret;
-				BTIF_DBG_FUNC("lent sent:%d, total sent:%d\n",
-					      i_ret, sent_len);
 				retry = 0;
 			}
 		}
 		if ((++retry > max_tx_retry) || (0 > i_ret)) {
-			BTIF_INFO_FUNC("exceed retry times limit :%d\n", retry);
 			break;
 		}
 	}
@@ -2658,7 +2514,6 @@ int btif_send_data(p_mtk_btif p_btif,
 				  (unsigned char *)p_buf, buf_len);
 		if (length == buf_len) {
 			queue_work(p_btif->p_tx_wq, &(p_btif->tx_work));
-			BTIF_DBG_FUNC("schedule btif_tx_worker\n");
 			i_ret = length;
 		} else {
 			i_ret = 0;
@@ -2745,14 +2600,10 @@ int btif_dump_reg(p_mtk_btif p_btif)
 /*dump BTIF Tx DMA channel register if in DMA mode*/
 	if (BTIF_MODE_DMA == p_btif->tx_mode)
 		hal_dma_dump_reg(p_btif->p_tx_dma->p_dma_info, REG_TX_DMA_ALL);
-	else
-		BTIF_INFO_FUNC("BTIF Tx in PIO mode,no need to dump Tx DMA's register\n");
 
 /*dump BTIF Rx DMA channel register if in DMA mode*/
 	if (BTIF_MODE_DMA == p_btif->rx_mode)
 		hal_dma_dump_reg(p_btif->p_rx_dma->p_dma_info, REG_RX_DMA_ALL);
-	else
-		BTIF_INFO_FUNC("BTIF Rx in PIO mode,no need to dump Rx DMA's register\n");
 
 	switch (ori_state) {
 	case B_S_OFF:
@@ -2778,11 +2629,6 @@ dmp_reg_err:
 
 int btif_rx_notify_reg(p_mtk_btif p_btif, MTK_BTIF_RX_NOTIFY rx_notify)
 {
-	if (p_btif->rx_notify) {
-		BTIF_WARN_FUNC
-		    ("rx cb already exist, rewrite from (0x%p) to (0x%p)\n",
-		     p_btif->rx_notify, rx_notify);
-	}
 	p_btif->rx_notify = rx_notify;
 
 	return 0;
@@ -2797,7 +2643,6 @@ int btif_dump_data(char *p_buf, int len)
 		if (7 == (idx % 8))
 			pr_debug("\n");
 	}
-	pr_debug("\n");
 	return 0;
 }
 
@@ -2814,8 +2659,6 @@ int btif_log_buf_dmp_in(P_BTIF_LOG_QUEUE_T p_log_que, const char *p_buf,
 	if (!(p_log_que->enable))
 		return 0;
 
-	BTIF_DBG_FUNC("++\n");
-
 	if ((NULL == p_log_que) || (NULL == p_buf) || (0 == len)) {
 		BTIF_ERR_FUNC("invalid parameter, p_log_que(0x%x), buf(0x%x), ",
 			"len(%d)\n", p_log_que, p_buf, len);
@@ -2856,7 +2699,6 @@ int btif_log_buf_dmp_in(P_BTIF_LOG_QUEUE_T p_log_que, const char *p_buf,
 /*output buffer content*/
 		btif_dump_data((char *)p_buf, len);
 	}
-	BTIF_DBG_FUNC("--\n");
 
 	return 0;
 }
@@ -2878,8 +2720,6 @@ int btif_log_buf_dmp_out(P_BTIF_LOG_QUEUE_T p_log_que)
 	if (!(p_log_que->enable))
 		return;
 #endif
-	BTIF_DBG_FUNC("++\n");
-
 	spin_lock_irqsave(&p_log_que->lock, flags);
 	in_index = p_log_que->in;
 	dump_size = p_log_que->size;
@@ -2889,8 +2729,6 @@ int btif_log_buf_dmp_out(P_BTIF_LOG_QUEUE_T p_log_que)
 					     in_index) % BTIF_LOG_ENTRY_NUM;
 	p_dir = BTIF_TX == p_log_que->dir ? "Tx" : "Rx";
 
-	BTIF_INFO_FUNC("btif %s log buffer size:%d\n", p_dir, dump_size);
-
 	if (0 != dump_size) {
 		while (dump_size--) {
 			p_log_buf = p_log_que->p_queue[0] + out_index;
@@ -2901,11 +2739,6 @@ int btif_log_buf_dmp_out(P_BTIF_LOG_QUEUE_T p_log_que)
 
 			len = len > BTIF_LOG_SZ ? BTIF_LOG_SZ : len;
 
-			BTIF_INFO_FUNC("dir:%s, pkt_count:%d, %d.%ds len:%d\n",
-			       p_dir,
-			       pkt_count++,
-			       (int)p_timer->tv_sec,
-			       (int)p_timer->tv_usec, len);
 /*output buffer content*/
 			btif_dump_data(p_log_buf->buffer,
 				       len > BTIF_LOG_SZ ? BTIF_LOG_SZ : len);
@@ -2914,7 +2747,6 @@ int btif_log_buf_dmp_out(P_BTIF_LOG_QUEUE_T p_log_que)
 		}
 	}
 	spin_unlock_irqrestore(&p_log_que->lock, flags);
-	BTIF_DBG_FUNC("--\n");
 
 	return 0;
 }
@@ -2926,8 +2758,6 @@ int btif_log_buf_enable(P_BTIF_LOG_QUEUE_T p_log_que)
 	spin_lock_irqsave(&p_log_que->lock, flags);
 	p_log_que->enable = true;
 	spin_unlock_irqrestore(&p_log_que->lock, flags);
-	BTIF_INFO_FUNC("enable %s log function\n",
-		       p_log_que->dir == BTIF_TX ? "Tx" : "Rx");
 	return 0;
 }
 
@@ -2938,8 +2768,6 @@ int btif_log_buf_disable(P_BTIF_LOG_QUEUE_T p_log_que)
 	spin_lock_irqsave(&p_log_que->lock, flags);
 	p_log_que->enable = false;
 	spin_unlock_irqrestore(&p_log_que->lock, flags);
-	BTIF_INFO_FUNC("disable %s log function\n",
-		       p_log_que->dir == BTIF_TX ? "Tx" : "Rx");
 	return 0;
 }
 
@@ -2950,8 +2778,6 @@ int btif_log_output_enable(P_BTIF_LOG_QUEUE_T p_log_que)
 	spin_lock_irqsave(&p_log_que->lock, flags);
 	p_log_que->output_flag = true;
 	spin_unlock_irqrestore(&p_log_que->lock, flags);
-	BTIF_INFO_FUNC("%s log rt output enabled\n",
-		       p_log_que->dir == BTIF_TX ? "Tx" : "Rx");
 	return 0;
 }
 
@@ -2962,8 +2788,6 @@ int btif_log_output_disable(P_BTIF_LOG_QUEUE_T p_log_que)
 	spin_lock_irqsave(&p_log_que->lock, flags);
 	p_log_que->output_flag = false;
 	spin_unlock_irqrestore(&p_log_que->lock, flags);
-	BTIF_INFO_FUNC("%s log rt output disabled\n",
-		       p_log_que->dir == BTIF_TX ? "Tx" : "Rx");
 	return 0;
 }
 
@@ -2981,8 +2805,6 @@ int btif_log_buf_reset(P_BTIF_LOG_QUEUE_T p_log_que)
 	memset((p_log_que->p_queue[0]), 0, sizeof(BTIF_LOG_BUF_T));
 
 	spin_unlock_irqrestore(&p_log_que->lock, flags);
-	BTIF_INFO_FUNC("reset %s log buffer\n",
-		       p_log_que->dir == BTIF_TX ? "Tx" : "Rx");
 	return 0;
 }
 
@@ -2996,7 +2818,6 @@ int btif_log_buf_init(p_mtk_btif p_btif)
 	p_btif->tx_log.output_flag = false;
 	p_btif->tx_log.enable = true;
 	spin_lock_init(&(p_btif->tx_log.lock));
-	BTIF_DBG_FUNC("tx_log.p_queue:0x%p\n", p_btif->tx_log.p_queue[0]);
 	memset((p_btif->tx_log.p_queue[0]), 0, sizeof(BTIF_LOG_BUF_T));
 
 /*rx log buffer init*/
@@ -3007,7 +2828,6 @@ int btif_log_buf_init(p_mtk_btif p_btif)
 	p_btif->rx_log.output_flag = false;
 	p_btif->rx_log.enable = true;
 	spin_lock_init(&(p_btif->rx_log.lock));
-	BTIF_DBG_FUNC("rx_log.p_queue:0x%p\n", p_btif->rx_log.p_queue[0]);
 	memset((p_btif->rx_log.p_queue[0]), 0, sizeof(BTIF_LOG_BUF_T));
 
 	return 0;
@@ -3064,20 +2884,17 @@ static int BTIF_init(void)
 		if (!p_btif_buffer) {
 			BTIF_ERR_FUNC("p_btif_buffer kmalloc memory fail\n");
 			return false;
-		} else
-			BTIF_INFO_FUNC("p_btif_buffer get memory 0x%p\n", p_btif_buffer);
+		} 
 		p_tx_queue = kmalloc(BTIF_LOG_ENTRY_NUM * sizeof(BTIF_LOG_BUF_T), GFP_ATOMIC);
 		if (!p_tx_queue) {
 			BTIF_ERR_FUNC("p_tx_queue kmalloc memory fail\n");
 			return false;
-		} else
-			BTIF_INFO_FUNC("p_tx_queue get memory 0x%p\n", p_tx_queue);
+		}
 		p_rx_queue = kmalloc(BTIF_LOG_ENTRY_NUM * sizeof(BTIF_LOG_BUF_T), GFP_ATOMIC);
 		if (!p_rx_queue) {
 			BTIF_ERR_FUNC("p_rx_queue kmalloc memory fail\n");
 			return false;
-		} else
-			BTIF_INFO_FUNC("p_rx_queue get memory 0x%p\n", p_rx_queue);
+		}
 
 		INIT_LIST_HEAD(&(g_btif[index].user_list));
 		BBS_INIT(&(g_btif[index].btif_buf));
@@ -3245,7 +3062,6 @@ err_exit2:
 
 err_exit1:
 	i_ret = -1;
-	BTIF_DBG_FUNC("--\n");
 	return i_ret;
 }
 
@@ -3255,8 +3071,6 @@ static void BTIF_exit(void)
 	p_mtk_btif_dma p_tx_dma = NULL;
 	p_mtk_btif_dma p_rx_dma = NULL;
 
-	BTIF_DBG_FUNC("++\n");
-
 	for (index = 0; index < BTIF_PORT_NR; index++) {
 		g_btif[index].open_counter = 0;
 		g_btif[index].enable = false;
@@ -3282,7 +3096,6 @@ static void BTIF_exit(void)
 
 	driver_remove_file(&mtk_btif_dev_drv.driver, &driver_attr_flag);
 	platform_driver_unregister(&mtk_btif_dev_drv);
-	BTIF_DBG_FUNC("--\n");
 }
 
 int mtk_btif_hal_get_log_lvl(void)
diff --git a/drivers/misc/mediatek/btif/mtk_btif_exp.c b/drivers/misc/mediatek/btif/mtk_btif_exp.c
index 9f39f7ad6..9de489897 100644
--- a/drivers/misc/mediatek/btif/mtk_btif_exp.c
+++ b/drivers/misc/mediatek/btif/mtk_btif_exp.c
@@ -66,7 +66,6 @@ const int mtk_wcn_btif_open(char *p_owner, unsigned long *p_id)
 	p_mtk_btif p_btif = &g_btif[index];
 	struct list_head *p_user_list = &(p_btif->user_list);
 
-	BTIF_DBG_FUNC("++");
 	BTIF_INFO_FUNC("p_btif(0x%p)\n", p_btif);
 
 	BTIF_MUTEX_LOCK(&(p_btif->ops_mtx));
@@ -125,7 +124,6 @@ const int mtk_wcn_btif_open(char *p_owner, unsigned long *p_id)
 		BTIF_ERR_FUNC("allocate memory for mtk_btif_user failed\n");
 	}
 	BTIF_MUTEX_UNLOCK(&(p_btif->ops_mtx));
-	BTIF_DBG_FUNC("--");
 	return i_ret;
 }
 EXPORT_SYMBOL(mtk_wcn_btif_open);
@@ -150,7 +148,6 @@ int mtk_wcn_btif_close(unsigned long u_id)
 	struct list_head *pos = NULL;
 	struct list_head *p_user_list = NULL;
 
-	BTIF_DBG_FUNC("++");
 	p_btif = btif_exp_srh_id(u_id);
 
 	if (NULL == p_btif)
@@ -176,7 +173,6 @@ int mtk_wcn_btif_close(unsigned long u_id)
 		}
 	}
 	BTIF_MUTEX_UNLOCK(&(p_btif->ops_mtx));
-	BTIF_DBG_FUNC("--");
 	return 0;
 }
 EXPORT_SYMBOL(mtk_wcn_btif_close);
@@ -222,7 +218,6 @@ int mtk_wcn_btif_write(unsigned long u_id,
 	int i_ret = -1;
 	p_mtk_btif p_btif = NULL;
 
-	BTIF_DBG_FUNC("++");
 	p_btif = btif_exp_srh_id(u_id);
 
 	if (NULL == p_btif)
@@ -237,7 +232,6 @@ int mtk_wcn_btif_write(unsigned long u_id,
 	}
 
 	i_ret = btif_send_data(p_btif, p_buf, len);
-	BTIF_DBG_FUNC("--, i_ret:%d\n", i_ret);
 	return i_ret;
 }
 EXPORT_SYMBOL(mtk_wcn_btif_write);
@@ -521,8 +515,6 @@ int btif_write_no_id(const unsigned char *p_buf, unsigned int len)
 	int i_ret = -1;
 	p_mtk_btif p_btif = &g_btif[0];
 
-	BTIF_DBG_FUNC("++");
-
 	if (NULL == p_buf) {
 		BTIF_ERR_FUNC("invalid p_buf (0x%p)\n", p_buf);
 		return E_BTIF_INVAL_PARAM;
@@ -533,7 +525,6 @@ int btif_write_no_id(const unsigned char *p_buf, unsigned int len)
 	}
 
 	i_ret = btif_send_data(p_btif, p_buf, len);
-	BTIF_DBG_FUNC("--, i_ret:%d\n", i_ret);
 	return i_ret;
 }
 
diff --git a/drivers/misc/mediatek/c2k_ccci/f_rawbulk.c b/drivers/misc/mediatek/c2k_ccci/f_rawbulk.c
index 49f4cac7e..2617c5c88 100644
--- a/drivers/misc/mediatek/c2k_ccci/f_rawbulk.c
+++ b/drivers/misc/mediatek/c2k_ccci/f_rawbulk.c
@@ -57,17 +57,10 @@ int rawbulk_function_setup(struct usb_function *f, const struct
     u16         w_value = le16_to_cpu(ctrl->wValue);
     u16         w_length = le16_to_cpu(ctrl->wLength);
 
-    C2K_NOTE("%s\n", __func__);
-
-    
-   if(ctrl->bRequest) {
-         C2K_NOTE("ctrl->bRequestType = %0x  ctrl->bRequest = %0x \n", ctrl->bRequestType, ctrl->bRequest);
-   }
    switch(ctrl->bRequest) {
         case 0x01:
             if(ctrl->bRequestType == (USB_DIR_OUT | USB_TYPE_VENDOR)) {//0x40
                 // set/clear DTR 
-                C2K_NOTE("setdtr = %d, w_value =%d\n", setdtr, w_value);
                 if(fn->activated){
                     setdtr = w_value & 0x01;                 
                     //schedule_work(&flow_control);
@@ -86,12 +79,9 @@ int rawbulk_function_setup(struct usb_function *f, const struct
                 if(fn->activated) {                   
                     if(data_connect && fn->enable) {
                         *((unsigned char *)req->buf) = 0x3;
-                        C2K_NOTE("connect %d\n", data_connect);
-                                            
                     }
                     else {
                         *((unsigned char *)req->buf) = 0x2;
-                        C2K_NOTE("disconnect=%d, setdtr=%d\n", data_connect, setdtr);
                     }              
                 }
                 else //set CD CSR state to 0 if modem bypass not inactive
@@ -102,7 +92,6 @@ int rawbulk_function_setup(struct usb_function *f, const struct
         case 0x03:
             if(ctrl->bRequestType == (USB_DIR_OUT | USB_TYPE_VENDOR)) {//0x40
                 // xcvr 
-                C2K_NOTE("CTRL SET XCVR 0x%02x\n", w_value);
                 value = 0;
             }
             break;
@@ -120,15 +109,11 @@ int rawbulk_function_setup(struct usb_function *f, const struct
         case 0x05:
             if(ctrl->bRequestType == (USB_DIR_IN | USB_TYPE_VENDOR)) {//0xC0
                 // connect status 
-                C2K_NOTE("CTRL CONNECT STATUS\n");
                 *((unsigned char *)req->buf) = 0x0;
                 value = 1;
             }
             break;
         default:
-            C2K_NOTE("invalid control req%02x.%02x v%04x i%04x l%d\n",
-                    ctrl->bRequestType, ctrl->bRequest,
-                    w_value, w_index, w_length);
     }
 
     // respond with data transfer or status phase? 
@@ -149,12 +134,10 @@ int rawbulk_function_setup(struct usb_function *f, const struct
 static void rawbulk_auto_reconnect(int transfer_id) {
     int rc;
     struct rawbulk_function *fn = rawbulk_lookup_function(transfer_id);
-    C2K_NOTE("%s\n", __func__);
     if (!fn || fn->autoreconn == 0)
         return;
 
     if (rawbulk_check_enable(fn) && fn->activated) {
-        printk(KERN_INFO "start %s again automatically.\n", fn->longname);
         rc = rawbulk_start_transactions(transfer_id, fn->nups,
                 fn->ndowns, fn->upsz, fn->downsz);
         if (rc < 0) {
@@ -171,7 +154,6 @@ int rawbulk_function_bind(struct usb_configuration *c, struct
     struct usb_gadget *gadget = c->cdev->gadget;
     struct usb_ep *ep_out, *ep_in;
     
-    printk("%s\n", __func__);
     rc = usb_interface_id(c, f);
     if (rc < 0)
         return rc;
@@ -227,8 +209,6 @@ void rawbulk_function_unbind(struct usb_configuration *c, struct
         usb_function *f) {
     struct rawbulk_function *fn = function_to_rbf(f);
      
-    C2K_NOTE("%s\n", __func__);
-
     //cancel_work_sync(&fn->activator);
     //cancel_work_sync(&flow_control);
     //cancel_work_sync(&dtr_status);
@@ -250,7 +230,6 @@ static void do_activate(struct work_struct *data) {
     int rc;
     struct usb_function *functionp = &(fn->function);
    
-    printk("%s usb state %s, <%d>\n", __func__, (fn->activated?"connect":"disconnect"), fn->transfer_id);
     if (fn->activated) { /* enumerated */
         /* enabled endpoints */
         rc = config_ep_by_speed(fn->cdev->gadget, functionp, fn->bulk_out);
@@ -326,7 +305,6 @@ static void do_activate(struct work_struct *data) {
 
 static void rawbulk_usb_state_set(int state) {
         usb_state = state?1:0;
-        printk("%s usb_state = %d\n", __func__, usb_state);
 }
 
 int rawbulk_usb_state_check(void) {
@@ -337,7 +315,6 @@ EXPORT_SYMBOL_GPL(rawbulk_usb_state_check);
 static int rawbulk_function_setalt(struct usb_function *f, unsigned intf,
         unsigned alt) {
     struct rawbulk_function *fn = function_to_rbf(f);
-    C2K_NOTE("%s \n", __func__);
     fn->activated = 1;
     rawbulk_usb_state_set(fn->activated);
     schedule_work(&fn->activator);
@@ -347,8 +324,6 @@ static int rawbulk_function_setalt(struct usb_function *f, unsigned intf,
 static void rawbulk_function_disable(struct usb_function *f) {
     struct rawbulk_function *fn = function_to_rbf(f);
 
-    C2K_NOTE("%s, %s\n", __func__, f->name);
-
     fn->activated = 0;
     rawbulk_usb_state_set(fn->activated);
     schedule_work(&fn->activator);
@@ -362,8 +337,6 @@ int rawbulk_bind_config(struct usb_configuration *c, int transfer_id) {
     if (!fn)
         return -ENOMEM;
         
-    printk(KERN_INFO "add %s to config.\n", fn->longname);
-
     if (fn->string_defs[0].id == 0) {
         rc = usb_string_id(c->cdev);
         if (rc < 0)
diff --git a/drivers/misc/mediatek/ccci_util/ccci_util_dummy.c b/drivers/misc/mediatek/ccci_util/ccci_util_dummy.c
index afd2e37e7..d156bf5fe 100644
--- a/drivers/misc/mediatek/ccci_util/ccci_util_dummy.c
+++ b/drivers/misc/mediatek/ccci_util/ccci_util_dummy.c
@@ -8,41 +8,33 @@
 
 int __weak exec_ccci_kern_func_by_md_id(int md_id, unsigned int id, char *buf, unsigned int len)
 {
-printk("[ccci/dummy] %s is not supported!\n",__FUNCTION__);
 return 0;
 }
 int __weak switch_sim_mode(int id, char *buf, unsigned int len)
 {
-printk("[ccci/dummy] %s is not supported!\n",__FUNCTION__);
 return 0;
 }
 unsigned int __weak get_sim_switch_type(void)
 {
-printk("[ccci/dummy] %s is not supported!\n",__FUNCTION__);
 return 0;
 }
 
 unsigned int __weak  get_modem_is_enabled(int md_id) 
 {
-printk("[ccci/dummy] %s is not supported!\n",__FUNCTION__);
 return 0;
 }
 int __weak register_ccci_sys_call_back(int md_id, unsigned int id, int (*func)(int, int)) 
 {
-printk("[ccci/dummy] %s is not supported!\n",__FUNCTION__);
 return 0;
 }
 unsigned int __weak mt_irq_get_pending(unsigned int irq)
 {
-printk("[ccci/dummy] %s is not supported!\n",__FUNCTION__);
 return 0;
 }
 void __weak notify_time_update(void)
 {
-printk("[ccci/dummy] %s is not supported!\n",__FUNCTION__);
 }
 unsigned long __weak ccci_get_md_boot_count(int md_id)
 {
-printk("[ccci/dummy] %s is not supported!\n",__FUNCTION__);
 return 0;
-}
\ No newline at end of file
+}
diff --git a/drivers/misc/mediatek/ccci_util/ccci_util_lib_fo.c b/drivers/misc/mediatek/ccci_util/ccci_util_lib_fo.c
index f915476fc..fd831f3dc 100644
--- a/drivers/misc/mediatek/ccci_util/ccci_util_lib_fo.c
+++ b/drivers/misc/mediatek/ccci_util/ccci_util_lib_fo.c
@@ -293,7 +293,6 @@ static void cal_md_settings(int md_id)
 			md_en = 1;
 	}
 	if(!(md_en && (md_usage_case&(1<<md_id)))){
-		CCCI_UTIL_INF_MSG_WITH_ID(md_id,"md%d is disabled\n",(md_id+1));
 		return;
 	}
 	// MTK_MD*_SUPPORT
@@ -335,9 +334,6 @@ static void cal_md_settings(int md_id)
 
 	if ((md_usage_case&(1<<md_id)) && ((md_resv_smem_addr[md_id]&(CCCI_SMEM_ALIGN_MD1 - 1)) != 0))
 		CCCI_UTIL_ERR_MSG_WITH_ID(md_id,"md%d share memory addr %pa is not 0x%x align!!\n", (md_id+1),&md_resv_smem_addr[md_id], CCCI_SMEM_ALIGN_MD1);
-
-	CCCI_UTIL_INF_MSG_WITH_ID(md_id,"MemStart: 0x%pa, MemSize:0x%08X\n",&md_resv_mem_addr[md_id], md_resv_mem_size[md_id]);
-	CCCI_UTIL_INF_MSG_WITH_ID(md_id,"SMemStart: 0x%pa, SMemSize:0x%08X\n",&md_resv_smem_addr[md_id], md_resv_smem_size[md_id]);
 }
     
 void ccci_md_mem_reserve(void)
@@ -365,7 +361,6 @@ int ccci_reserve_mem_of_init(struct reserved_mem * rmem, unsigned long node, con
     CCCI_UTIL_ERR_MSG_WITH_ID(md_id,"memory reserve key %s not support\n",uname);  
     return 0;
   }
-  CCCI_UTIL_INF_MSG_WITH_ID(md_id,"reserve_mem_of_init, rptr=0x%pa, rsize=0x%x\n", &rptr, rsize);
   md_resv_mem_list[md_id] = rptr;  	
   modem_size_list[md_id]= rsize;
   md_usage_case |= (1<<md_id);
diff --git a/drivers/misc/mediatek/chip/mt6580/mt_chip.c b/drivers/misc/mediatek/chip/mt6580/mt_chip.c
index 9d7bbb1cc..dd1c6878e 100644
--- a/drivers/misc/mediatek/chip/mt6580/mt_chip.c
+++ b/drivers/misc/mediatek/chip/mt6580/mt_chip.c
@@ -151,12 +151,6 @@ int __init chip_mod_init(void)
     }
 #endif
     //pr_alert("%p %p %p %p\n", APHW_CODE, APHW_SUBCODE, APHW_VER, APSW_VER);
-    pr_alert("CODE = %04x %04x %04x %04x, %04x %04x %04x %04x, %04X %04X\n", 
-             __chip_hw_code(), __chip_hw_subcode(), __chip_hw_ver(), 
-             __chip_sw_ver(), __chip_func_code(), __chip_proj_code(), 
-             __chip_date_code(), __chip_fab_code(), 
-             mt_get_chip_hw_ver(), mt_get_chip_sw_ver());
-
     p_drv->info_bit_mask |= CHIP_INFO_BIT(CHIP_INFO_HW_CODE) | 
                            CHIP_INFO_BIT(CHIP_INFO_HW_SUBCODE) | 
                            CHIP_INFO_BIT(CHIP_INFO_HW_VER) | 
@@ -168,8 +162,6 @@ int __init chip_mod_init(void)
 
     p_drv->get_chip_info = mt_get_chip_info;
 
-    pr_alert("CODE = %08X %p", p_drv->info_bit_mask, p_drv->get_chip_info);
-    
     return 0;
 }
 
diff --git a/drivers/misc/mediatek/chip/mt_chip_common.c b/drivers/misc/mediatek/chip/mt_chip_common.c
index eeb09576a..4829b29ab 100644
--- a/drivers/misc/mediatek/chip/mt_chip_common.c
+++ b/drivers/misc/mediatek/chip/mt_chip_common.c
@@ -126,7 +126,6 @@ static void __init create_procfs(void)
         pr_err("create /proc/chip fails\n");
         return;
     } else {            
-        pr_alert("create /proc/chip(%x)\n", g_chip_drv.info_bit_mask);
     }
     
     for (idx = 0; idx < sizeof(chip_ent)/sizeof(chip_ent[0]); idx++) {
diff --git a/drivers/misc/mediatek/cirq/mt_sys_cirq.c b/drivers/misc/mediatek/cirq/mt_sys_cirq.c
index 490dac110..cb8fd8c78 100644
--- a/drivers/misc/mediatek/cirq/mt_sys_cirq.c
+++ b/drivers/misc/mediatek/cirq/mt_sys_cirq.c
@@ -778,13 +778,10 @@ int __init mt_cirq_init(void)
 		if (of_property_read_u32(node, "cirq_num", &CIRQ_IRQ_NUM)) {
 			return -1;
 		} else {
-			pr_emerg("[CIRQ] cirq_num = %d\n", CIRQ_IRQ_NUM);
 			if (of_property_read_u32
 			    (node, "spi_start_offset", &CIRQ_SPI_START)) {
 				return -1;
 			} else {
-				pr_emerg("[CIRQ] spi_start_offset = %d\n",
-					 CIRQ_SPI_START);
 			}
 		}
 	}
diff --git a/drivers/misc/mediatek/cmdq/cmdq_device_common.c b/drivers/misc/mediatek/cmdq/cmdq_device_common.c
index dd26cd744..f4751ee2f 100644
--- a/drivers/misc/mediatek/cmdq/cmdq_device_common.c
+++ b/drivers/misc/mediatek/cmdq/cmdq_device_common.c
@@ -31,7 +31,6 @@ void cmdq_dev_get_module_clock_by_dev(struct device *dev, const char *clkName, s
 	if (IS_ERR(*clk_module)) {
 		CMDQ_ERR("DEV: cannot get module clock: %s\n", clkName);
 	}else{
-		CMDQ_LOG("DEV: get module clock: %s\n", clkName);
 	}
 }
 
@@ -44,7 +43,6 @@ void cmdq_dev_get_module_clock_by_name(const char *name, const char *clkName, st
 	if (IS_ERR(*clk_module)) {
 		CMDQ_ERR("DEV: byName: cannot get module clock: %s\n", clkName);
 	}else{
-		CMDQ_LOG("DEV: byName: get module clock: %s\n", clkName);
 	}
 }
 
@@ -53,10 +51,8 @@ uint32_t cmdq_dev_enable_device_clock(bool enable, struct clk *clk_module, const
 	int result = 0;
 	if (enable){
 		result = clk_prepare_enable(clk_module);
-		CMDQ_LOG("enable clock with module: %s, result: %d\n", clkName, result);
 	}else{
 		clk_disable_unprepare(clk_module);
-		CMDQ_LOG("disable clock with module: %s\n", clkName);
 	}
 	return result;
 }
@@ -74,7 +70,6 @@ const long cmdq_dev_alloc_module_base_VA_by_name(const char *name)
 
 	node = of_find_compatible_node(NULL, NULL, name);
 	VA = (unsigned long)of_iomap(node, 0);
-	CMDQ_LOG("DEV: VA(%s): 0x%lx\n", name, VA);
 	return VA;
 }
 
diff --git a/drivers/misc/mediatek/cmdq/cmdq_record.c b/drivers/misc/mediatek/cmdq/cmdq_record.c
index 7cc10d015..06fb38a8d 100755
--- a/drivers/misc/mediatek/cmdq/cmdq_record.c
+++ b/drivers/misc/mediatek/cmdq/cmdq_record.c
@@ -957,7 +957,6 @@ int32_t cmdq_rec_finalize_command(cmdqRecHandle handle, bool loop)
 	if (!handle->finalized) {
 		if ((handle->prefetchCount > 0) && cmdq_core_should_enable_prefetch(handle->scenario)) {
 			CMDQ_ERR("not insert prefetch disble marker when prefetch enabled, prefetchCount:%d\n", handle->prefetchCount);
-			cmdqRecDumpCommand(handle);
 
 			status = -EFAULT;
 			return status;
@@ -1324,18 +1323,6 @@ int32_t cmdqRecDumpCommand(cmdqRecHandle handle)
 		static char textBuf[128] = { 0 };
 		int i = 0;
 
-		CMDQ_LOG("======REC 0x%p command buffer:\n", handle->pBuffer);
-		print_hex_dump(KERN_ERR, "", DUMP_PREFIX_ADDRESS, 16, 4,
-			       handle->pBuffer, handle->blockSize, false);
-
-		CMDQ_LOG("======REC 0x%p command buffer END\n", handle->pBuffer);
-		CMDQ_LOG("REC 0x%p command buffer TRANSLATED:\n", handle->pBuffer);
-		for (i = 0, pCmd = handle->pBuffer; i < handle->blockSize; i += 8, pCmd += 2) {
-			cmdq_core_parse_instruction(pCmd, textBuf, 128);
-			CMDQ_LOG("%s", textBuf);
-		}
-		CMDQ_LOG("======REC 0x%p command END\n", handle->pBuffer);
-
 		return 0;
 	}
 
@@ -1350,9 +1337,7 @@ int32_t cmdqRecEstimateCommandExecTime(const cmdqRecHandle handle)
 		return -EFAULT;
 	}
 
-	CMDQ_LOG("======REC 0x%p command execution time ESTIMATE:\n", handle);
 	time = cmdq_prof_estimate_command_exe_time(handle->pBuffer, handle->blockSize);
-	CMDQ_LOG("======REC 0x%p  END\n", handle);
 
 	return time;
 }
@@ -1384,11 +1369,9 @@ int32_t cmdqRecSetNOP(cmdqRecHandle handle, uint32_t index)
 		return -EFAULT;
 	}
 
-	CMDQ_MSG("======REC 0x%p Set NOP to index: %d\n", handle, index);
 	pCommand = (uint32_t *) ((uint8_t *) handle->pBuffer + offsetIndex);
 	*pCommand++ = 8;
 	*pCommand++ = (CMDQ_CODE_JUMP << 24) | (0 & 0x0FFFFFF);
-	CMDQ_MSG("======REC 0x%p  END\n", handle);
 
 	return index;
 }
diff --git a/drivers/misc/mediatek/cmdq/mt6580/cmdq_device.c b/drivers/misc/mediatek/cmdq/mt6580/cmdq_device.c
index 371c1ad97..75c8a6da8 100644
--- a/drivers/misc/mediatek/cmdq/mt6580/cmdq_device.c
+++ b/drivers/misc/mediatek/cmdq/mt6580/cmdq_device.c
@@ -126,7 +126,6 @@ void cmdq_dev_alloc_disp_module_PA_by_name(const char *name, int index, long *st
 	of_address_to_resource(node, index, &res);
 	*startPA = res.start;
 	*endPA = res.end;
-	CMDQ_LOG("DEV: PA(%s): start = 0x%lx, end = 0x%lx\n", name, *startPA, *endPA);
 }
 #endif
 
@@ -314,10 +313,6 @@ void cmdq_dev_init(struct platform_device *pDevice)
 		gCmdqDev.irqSecId = CQ_DMA_SEC_IRQ_BIT_ID;
 #endif
 
-		CMDQ_LOG
-		    ("[CMDQ] platform_dev: dev: %p, PA: %lx, VA: %lx, irqId: %d,  irqSecId:%d\n",
-		     gCmdqDev.pDev, gCmdqDev.regBasePA, gCmdqDev.regBaseVA, gCmdqDev.irqId,
-		     gCmdqDev.irqSecId);
 	} while (0);
 
 	/* init module VA */
diff --git a/drivers/misc/mediatek/conn_md/conn_md.c b/drivers/misc/mediatek/conn_md/conn_md.c
index 29a0e4391..715003e94 100644
--- a/drivers/misc/mediatek/conn_md/conn_md.c
+++ b/drivers/misc/mediatek/conn_md/conn_md.c
@@ -69,7 +69,6 @@ int conn_md_del_user(uint32 u_id)
 		if (p_user->u_id == u_id) {
 			/*if yes */
 			/*print information */
-			CONN_MD_INFO_FUNC("uid (0x%08x) is registered, delete it\n", u_id);
 			break;
 		}
 		p_user = NULL;
@@ -84,7 +83,6 @@ int conn_md_del_user(uint32 u_id)
 		list_del(pos);
 		kfree(p_user);
 		p_user_list->counter--;
-		CONN_MD_INFO_FUNC("uid (0x%08x) is deleted\n", u_id);
 		i_ret = 0;
 	}
 
@@ -118,21 +116,10 @@ int conn_md_dmp_msg(P_CONN_MD_QUEUE p_msg_list, uint32 src_id, uint32 dst_id)
 		if (((0 == src_id) || (src_id == p_msg->ilm.src_mod_id)) &&
 		    ((0 == dst_id) || (dst_id == p_msg->ilm.dest_mod_id))) {
 			counter++;
-			CONN_MD_INFO_FUNC
-			    ("p_msg:0x%08x, src_id:0x%08x, dest_id:0x%08x, msg_len:%d\n", p_msg,
-			     p_msg->ilm.src_mod_id, p_msg->ilm.dest_mod_id, p_msg->local_para.msg_len);
-			for (i = 0; (i < p_msg->local_para.msg_len) && (i < MAX_LENGTH_PER_PACKAGE); i++) {
-				CONN_MD_INFO_FUNC("%02x ", p_msg->local_para.data[i]);
-				if (7 == (i % 8))
-					CONN_MD_INFO_FUNC("\n");
-			}
-			CONN_MD_INFO_FUNC("\n");
 		}
 	}
 
 	mutex_unlock(&p_msg_list->lock);
-
-	CONN_MD_INFO_FUNC("%d messages found in message list\n", counter);
 	return 0;
 }
 
@@ -423,27 +410,22 @@ static int conn_md_init(void)
 	INIT_LIST_HEAD(&(p_queue->list));
 	mutex_init(&(p_queue->lock));
 	p_queue->counter = 0;
-	CONN_MD_INFO_FUNC("init message queue list succeed\n");
 
 	/*init active queue structure */
 	p_queue = &g_conn_md.act_queue;
 	INIT_LIST_HEAD(&(p_queue->list));
 	mutex_init(&(p_queue->lock));
 	p_queue->counter = 0;
-	CONN_MD_INFO_FUNC("init active queue list succeed\n");
 
 	/*init user_list structure */
 	p_user_list = &g_conn_md.user_list;
 	INIT_LIST_HEAD(&(p_user_list->list));
 	mutex_init(&(p_user_list->lock));
 	p_user_list->counter = 0;
-	CONN_MD_INFO_FUNC("init user information list succeed\n");
 
 	g_conn_md.p_msg_dmp_sys = conn_md_dmp_init();
 	if (NULL == g_conn_md.p_msg_dmp_sys)
 		CONN_MD_WARN_FUNC("conn_md_dmp_init failed\n");
-	else
-		CONN_MD_INFO_FUNC("conn_md_dmp_init succeed\n");
 	/*init proc interface */
 	conn_md_dbg_init();
 
@@ -456,7 +438,6 @@ static int conn_md_init(void)
 		i_ret = -ENOMEM;
 		goto conn_md_err;
 	}
-	CONN_MD_INFO_FUNC("create conn_md_thread succeed, wakeup it\n");
 	/*wakeup conn_md_thread */
 	wake_up_process(g_conn_md.p_task);
 
@@ -480,7 +461,6 @@ static void conn_md_exit(void)
 
 	/*terminate conn-md thread */
 	if (NULL != p_conn_md->p_task) {
-		CONN_MD_INFO_FUNC("signaling conn-md-thread to stop ...\n");
 		kthread_stop(p_conn_md->p_task);
 	}
 
diff --git a/drivers/misc/mediatek/conn_md/conn_md_dump.c b/drivers/misc/mediatek/conn_md/conn_md_dump.c
index 2ee0b5bb7..05f38c189 100644
--- a/drivers/misc/mediatek/conn_md/conn_md_dump.c
+++ b/drivers/misc/mediatek/conn_md/conn_md_dump.c
@@ -9,7 +9,6 @@ P_CONN_MD_DMP_MSG_LOG conn_md_dmp_init(void)
 	uint32 msg_log_size = sizeof(CONN_MD_DMP_MSG_LOG);
 	P_CONN_MD_DMP_MSG_LOG p_msg_log = vmalloc(msg_log_size);
 	if (NULL != p_msg_log) {
-		CONN_MD_INFO_FUNC("alloc memory for msg log system done, size:0x%08x\n", msg_log_size);
 		memset(p_msg_log, 0, msg_log_size);
 
 		mutex_init(&p_msg_log->lock);
diff --git a/drivers/misc/mediatek/connectivity/combo/common/core/btm_core.c b/drivers/misc/mediatek/connectivity/combo/common/core/btm_core.c
index 01eff987b..13c28d0d8 100644
--- a/drivers/misc/mediatek/connectivity/combo/common/core/btm_core.c
+++ b/drivers/misc/mediatek/connectivity/combo/common/core/btm_core.c
@@ -446,7 +446,6 @@ static INT32 _stp_btm_proc(PVOID pvData)
 		if (gDumplogflag) {
 			/* pr_warn("enter place1\n"); */
 #if WMT_PLAT_ALPS
-			dump_uart_history();
 #endif
 			gDumplogflag = 0;
 			continue;
diff --git a/drivers/misc/mediatek/connectivity/combo/common/linux/wmt_tm.c b/drivers/misc/mediatek/connectivity/combo/common/linux/wmt_tm.c
index eaf1ae7ab..0a15e710d 100644
--- a/drivers/misc/mediatek/connectivity/combo/common/linux/wmt_tm.c
+++ b/drivers/misc/mediatek/connectivity/combo/common/linux/wmt_tm.c
@@ -206,9 +206,6 @@ static int wmt_cal_stats(unsigned long data)
 	struct wmt_stats *stats_info = (struct wmt_stats *)data;
 	struct timeval cur_time;
 
-	wmt_tm_dprint("[%s] pre_time=%lu, pre_data=%lu\n", __func__, pre_time,
-		      stats_info->pre_tx_bytes);
-
 	do_gettimeofday(&cur_time);
 
 	if (pre_time != 0 && cur_time.tv_sec > pre_time) {
@@ -219,9 +216,6 @@ static int wmt_cal_stats(unsigned long data)
 			    ((tx_bytes - stats_info->pre_tx_bytes) / (cur_time.tv_sec -
 								      pre_time)) >> 7;
 
-			wmt_tm_dprint("[%s] cur_time=%lu, cur_data=%lu, tx_throughput=%luKb/s\n",
-				      __func__, cur_time.tv_sec, tx_bytes, tx_throughput);
-
 			stats_info->pre_tx_bytes = tx_bytes;
 		} else if (tx_bytes < stats_info->pre_tx_bytes) {
 			/* Overflow */
@@ -229,20 +223,16 @@ static int wmt_cal_stats(unsigned long data)
 			    ((0xffffffff - stats_info->pre_tx_bytes + tx_bytes) / (cur_time.tv_sec -
 										   pre_time)) >> 7;
 			stats_info->pre_tx_bytes = tx_bytes;
-			wmt_tm_dprint("[%s] cur_tx(%lu) < pre_tx\n", __func__, tx_bytes);
 		} else {
 			/* No traffic */
 			tx_throughput = 0;
-			wmt_tm_dprint("[%s] cur_tx(%lu) = pre_tx\n", __func__, tx_bytes);
 		}
 	} else {
 		/* Overflow possible ?? */
 		tx_throughput = 0;
-		wmt_tm_print("[%s] cur_time(%lu) < pre_time\n", __func__, cur_time.tv_sec);
 	}
 
 	pre_time = cur_time.tv_sec;
-	wmt_tm_dprint("[%s] pre_time=%lu, tv_sec=%lu\n", __func__, pre_time, cur_time.tv_sec);
 
 	wmt_stats_timer.expires = jiffies + 1 * HZ;
 	add_timer(&wmt_stats_timer);
@@ -255,8 +245,6 @@ static int wmt_thz_bind(struct thermal_zone_device *thz_dev,
 	struct linux_thermal_ctrl_if *p_linux_if = 0;
 	int table_val = 0;
 
-	wmt_tm_dprint("[%s]\n", __func__);
-
 	if (pg_wmt_tm) {
 		p_linux_if = &pg_wmt_tm->linux_if;
 	} else {
@@ -271,16 +259,12 @@ static int wmt_thz_bind(struct thermal_zone_device *thz_dev,
 
 	if (!strcmp(cool_dev->type, g_bind0)) {
 		table_val = 0;
-        wmt_tm_printk("[%s] %s\n", __func__, cool_dev->type);
 	} else if (!strcmp(cool_dev->type, g_bind1)) {
 		table_val = 1;
-        wmt_tm_printk("[%s] %s\n", __func__, cool_dev->type);
 	} else if (!strcmp(cool_dev->type, g_bind2)) {
 		table_val = 2;
-        wmt_tm_printk("[%s]] %s\n", __func__, cool_dev->type);
 	} else if (!strcmp(cool_dev->type, g_bind3)) {
 		table_val = 3;
-        wmt_tm_printk("[%s]] %s\n", __func__, cool_dev->type);
 	} else
 		return 0;
 
@@ -288,7 +272,6 @@ static int wmt_thz_bind(struct thermal_zone_device *thz_dev,
 		wmt_tm_info("[%s] binding fail\n", __func__);
 		return -EINVAL;
 	} else {
-        wmt_tm_printk("[%s]] binding OK\n", __func__);
 	}
 
 	return 0;
@@ -301,8 +284,6 @@ static int wmt_thz_unbind(struct thermal_zone_device *thz_dev,
 	struct linux_thermal_ctrl_if *p_linux_if = 0;
 	int table_val = 0;
 
-    wmt_tm_dprintk("[wmt_thz_unbind] \n");
-
 	if (pg_wmt_tm) {
 		p_linux_if = &pg_wmt_tm->linux_if;
 	} else {
@@ -320,16 +301,12 @@ static int wmt_thz_unbind(struct thermal_zone_device *thz_dev,
 
 	if (!strcmp(cool_dev->type, g_bind0)) {
 		table_val = 0;
-        wmt_tm_printk("[wmt_thz_unbind] %s\n", cool_dev->type);
 	} else if (!strcmp(cool_dev->type, g_bind1)) {
 		table_val = 1;
-        wmt_tm_printk("[wmt_thz_unbind] %s\n", cool_dev->type);
 	} else if (!strcmp(cool_dev->type, g_bind2)) {
 		table_val = 2;
-        wmt_tm_printk("[wmt_thz_unbind] %s\n", cool_dev->type);
 	} else if (!strcmp(cool_dev->type, g_bind3)) {
 		table_val = 3;
-        wmt_tm_printk("[wmt_thz_unbind] %s\n", cool_dev->type);
 	} else
 		return 0;
 
@@ -337,7 +314,6 @@ static int wmt_thz_unbind(struct thermal_zone_device *thz_dev,
 		wmt_tm_info("[wmt_thz_unbind] error unbinding cooling dev\n");
 		return -EINVAL;
 	} else {
-	    wmt_tm_printk("[wmt_thz_unbind] unbinding OK\n");
 	}
 
 	return 0;
@@ -356,11 +332,6 @@ static int wmt_thz_get_temp(struct thermal_zone_device *thz_dev, unsigned long *
 		/* temp = ((temp & 0x80) == 0x0)?temp:(-1)*temp ; */
 		temp = ((temp & 0x80) == 0x0) ? temp : (-1) * (temp & 0x7f);
 		*pv = temp * 1000;
-
-        wmt_tm_dprintk("[wmt_thz_get_temp] temp = %d\n", temp);
-
-		if (temp > 100 || temp < 5)
-			wmt_tm_info("[wmt_thz_get_temp] temp = %d\n", temp);
 	}
 
 	return 0;
@@ -371,8 +342,6 @@ static int wmt_thz_get_mode(struct thermal_zone_device *thz_dev, enum thermal_de
 	struct linux_thermal_ctrl_if *p_linux_if = 0;
 /* int    kernel_mode = 0; */
 
-    wmt_tm_dprintk("[%s]\n", __func__);
-
 	if (pg_wmt_tm) {
 		p_linux_if = &pg_wmt_tm->linux_if;
 	} else {
@@ -380,8 +349,6 @@ static int wmt_thz_get_mode(struct thermal_zone_device *thz_dev, enum thermal_de
 		return -EINVAL;
 	}
 
-    wmt_tm_dprintk("[%s] %d\n", __func__, p_linux_if->kernel_mode);
-
 	*mode = (p_linux_if->kernel_mode) ? THERMAL_DEVICE_ENABLED : THERMAL_DEVICE_DISABLED;
 
 	return 0;
@@ -391,9 +358,6 @@ static int wmt_thz_set_mode(struct thermal_zone_device *thz_dev, enum thermal_de
 {
 	struct linux_thermal_ctrl_if *p_linux_if = 0;
 
-    wmt_tm_dprintk("[%s]\n", __func__);
-
-
 	if (pg_wmt_tm) {
 		p_linux_if = &pg_wmt_tm->linux_if;
 	} else {
@@ -401,8 +365,6 @@ static int wmt_thz_set_mode(struct thermal_zone_device *thz_dev, enum thermal_de
 		return -EINVAL;
 	}
 
-    wmt_tm_dprintk("[%s] %d\n", __func__, mode);
-
 	p_linux_if->kernel_mode = mode;
 
 	return 0;
@@ -412,21 +374,18 @@ static int wmt_thz_set_mode(struct thermal_zone_device *thz_dev, enum thermal_de
 static int wmt_thz_get_trip_type(struct thermal_zone_device *thz_dev, int trip,
 				 enum thermal_trip_type *type)
 {
-    wmt_tm_dprintk("[mtktspa_get_trip_type] %d\n", trip);
 	*type = g_thermal_trip[trip];
 	return 0;
 }
 
 static int wmt_thz_get_trip_temp(struct thermal_zone_device *thz_dev, int trip, unsigned long *pv)
 {
-    wmt_tm_dprintk("[mtktspa_get_trip_temp] %d\n", trip);
 	*pv = g_trip_temp[trip];
 	return 0;
 }
 
 static int wmt_thz_get_crit_temp(struct thermal_zone_device *thz_dev, unsigned long *pv)
 {
-    wmt_tm_dprintk("[%s]\n", __func__);
 #define WMT_TM_TEMP_CRIT 85000	/* 85.000 degree Celsius */
 	*pv = WMT_TM_TEMP_CRIT;
 
@@ -437,20 +396,17 @@ static int wmt_thz_get_crit_temp(struct thermal_zone_device *thz_dev, unsigned l
 static int wmt_cl_get_max_state(struct thermal_cooling_device *cool_dev, unsigned long *pv)
 {
 	*pv = 1;
-    wmt_tm_dprintk("[%s] %d\n", __func__, *pv);
 	return 0;
 }
 
 static int wmt_cl_get_cur_state(struct thermal_cooling_device *cool_dev, unsigned long *pv)
 {
 	*pv = cl_dev_state;
-    wmt_tm_dprintk("[%s] %d\n", __func__, *pv);
 	return 0;
 }
 
 static int wmt_cl_set_cur_state(struct thermal_cooling_device *cool_dev, unsigned long v)
 {
-    wmt_tm_dprintk("[%s] %d\n", __func__, v);
 	cl_dev_state = v;
 
 	if (cl_dev_state == 1) {
@@ -473,8 +429,6 @@ static int wmt_send_signal(int level)
 		ret = -1;
 	}
 
-	wmt_tm_printk("[%s] pid is %d, %d, %d\n", __func__, tm_pid, tm_input_pid, thro);
-
 	if (ret == 0 && tm_input_pid != tm_pid) {
 		tm_pid = tm_input_pid;
 		pg_task = get_pid_task(find_vpid(tm_pid), PIDTYPE_PID);
@@ -489,9 +443,6 @@ static int wmt_send_signal(int level)
 		ret = send_sig_info(SIGIO, &info, pg_task);
 	}
 
-	if (ret != 0)
-		wmt_tm_info("[%s] ret=%d\n", __func__, ret);
-
 	return ret;
 }
 
@@ -531,8 +482,6 @@ static int wmt_judge_throttling(int index, int is_on, int interval)
 
 	int cur_wifi_stat = 0;
 
-	wmt_tm_dprintk("[%s]+ [0]=%d, [1]=%d || [%d] is %s\n", __func__, mail_box[0], mail_box[1],
-		      index, (is_on == 1 ? "ON" : "OFF"));
 	mail_box[index] = is_on;
 
 	if (mail_box[0] >= 0 && mail_box[1] >= 0) {
@@ -554,7 +503,6 @@ static int wmt_judge_throttling(int index, int is_on, int interval)
 				below_low_time = 0;
 				over_up_time = 0;
 				throttling_pre_stat = WFD_STAT;
-					wmt_tm_printk("WFD is on, reset everything!");
 			}
 			break;
 
@@ -567,9 +515,6 @@ static int wmt_judge_throttling(int index, int is_on, int interval)
 					thro_constraint =
 					    thro(thro_constraint, up_numerator, up_denominator);
 
-				wmt_tm_print("LOW/MID-->HIGH:%lu <- (%d / %d) %lu", thro_constraint,
-					     up_numerator, up_denominator, cur_thro);
-
 				wmt_send_signal(thro_constraint / 1000);
 				throttling_pre_stat = HIGH_STAT;
 				over_up_time = 0;
@@ -584,40 +529,29 @@ static int wmt_judge_throttling(int index, int is_on, int interval)
 						    thro(thro_constraint, up_numerator,
 							 up_denominator);
 
-					wmt_tm_printk("HIGH-->HIGH:%lu <- (%d / %d) %lu",
-						     thro_constraint, up_numerator, up_denominator,
-						     cur_thro);
-
 					wmt_send_signal(thro_constraint / 1000);
 					over_up_time = 0;
 				}
-			} else {
-				wmt_tm_info("[%s] Error state1!!\n", __func__, throttling_pre_stat);
+            } else {
+                wmt_tm_info("[%s] Error state1!!\n", __func__, throttling_pre_stat);
 			}
-				wmt_tm_printk("case2 time=%d\n", over_up_time);
 			break;
 
 		case MID_STAT:
 			if (throttling_pre_stat == LOW_STAT) {
 				below_low_time = 0;
 				throttling_pre_stat = MID_STAT;
-					wmt_tm_printk("[%s] Go up!!\n", __func__);
 			} else if (throttling_pre_stat == HIGH_STAT) {
 				over_up_time = 0;
 				throttling_pre_stat = MID_STAT;
-					wmt_tm_printk("[%s] Go down!!\n", __func__);
 			} else {
 				throttling_pre_stat = MID_STAT;
-				wmt_tm_dprintk("[%s] pre_stat=%d!!\n", __func__,
-					      throttling_pre_stat);
 			}
 			break;
 
 		case LOW_STAT:
 			if (throttling_pre_stat == WFD_STAT) {
 				throttling_pre_stat = LOW_STAT;
-				wmt_tm_dprintk("[%s] pre_stat=%d!!\n", __func__,
-					      throttling_pre_stat);
 			} else if (throttling_pre_stat > LOW_STAT) {
 				if (cur_thro < 5000 && cur_thro > 0) {
 					thro_constraint = cur_thro * 3;
@@ -629,8 +563,6 @@ static int wmt_judge_throttling(int index, int is_on, int interval)
 					    thro(thro_constraint, low_numerator, low_denominator);
 				}
 
-				wmt_tm_printk("MID/HIGH-->LOW:%lu <- (%d / %d) %lu", thro_constraint,
-					     low_numerator, low_denominator, cur_thro);
 				wmt_send_signal(thro_constraint / 1000);
 				throttling_pre_stat = LOW_STAT;
 				below_low_time = 0;
@@ -640,8 +572,6 @@ static int wmt_judge_throttling(int index, int is_on, int interval)
 				below_low_time++;
 				if ((below_low_time * interval) >= low_duration) {
 					if (low_rst_time >= low_rst_max && !is_reset) {
-							wmt_tm_printk("over rst time=%d", low_rst_time);
-
 						wmt_send_signal(-1);	/* reset */
 						low_rst_time = low_rst_max;
 						is_reset = true;
@@ -660,22 +590,15 @@ static int wmt_judge_throttling(int index, int is_on, int interval)
 							low_rst_time++;
 						}
 
-						wmt_tm_printk("LOW-->LOW:%lu <-(%d / %d) %lu",
-							     thro_constraint, low_numerator,
-							     low_denominator, cur_thro);
-
 						wmt_send_signal(thro_constraint / 1000);
 						below_low_time = 0;
 					} else {
-							wmt_tm_dprintk("Have reset, no control!!");
 					}
 				}
 			} else {
 				wmt_tm_info("[%s] Error state3 %d!!\n", __func__,
 					    throttling_pre_stat);
 			}
-			wmt_tm_dprintk("case0 time=%d, rst=%d %d\n", below_low_time, low_rst_time,
-				      is_reset);
 			break;
 
 		default:
@@ -686,7 +609,6 @@ static int wmt_judge_throttling(int index, int is_on, int interval)
 		mail_box[0] = UNK_STAT;
 		mail_box[1] = UNK_STAT;
 	} else {
-		wmt_tm_dprintk("[%s] dont get all info!!\n", __func__);
 	}
 	return 0;
 }
@@ -695,14 +617,12 @@ static int wmt_judge_throttling(int index, int is_on, int interval)
 static int wmt_cl_pa1_get_max_state(struct thermal_cooling_device *cool_dev, unsigned long *pv)
 {
 	*pv = 1;
-    wmt_tm_dprintk("[%s] %d\n", __func__, *pv);
 	return 0;
 }
 
 static int wmt_cl_pa1_get_cur_state(struct thermal_cooling_device *cool_dev, unsigned long *pv)
 {
 	*pv = cl_pa1_dev_state;
-	wmt_tm_dprint("[%s] %d\n", __func__, *pv);
 	return 0;
 }
 
@@ -711,8 +631,6 @@ static int wmt_cl_pa1_set_cur_state(struct thermal_cooling_device *cool_dev, uns
 	struct linux_thermal_ctrl_if *p_linux_if = 0;
 	int ret = 0;
 
-	wmt_tm_dprint("[%s] %d\n", __func__, v);
-
 	if (pg_wmt_tm) {
 		p_linux_if = &pg_wmt_tm->linux_if;
 	} else {
@@ -726,8 +644,6 @@ static int wmt_cl_pa1_set_cur_state(struct thermal_cooling_device *cool_dev, uns
 	} else {
 		ret = wmt_judge_throttling(0, 0, p_linux_if->interval / 1000);
 	}
-	if (ret != 0)
-		wmt_tm_info("[%s] ret=%d\n", __func__, ret);
 	return ret;
 }
 
@@ -737,14 +653,12 @@ static int wmt_cl_pa1_set_cur_state(struct thermal_cooling_device *cool_dev, uns
 static int wmt_cl_pa2_get_max_state(struct thermal_cooling_device *cool_dev, unsigned long *pv)
 {
 	*pv = 1;
-	wmt_tm_dprint("[%s] %d\n", __func__, *pv);
 	return 0;
 }
 
 static int wmt_cl_pa2_get_cur_state(struct thermal_cooling_device *cool_dev, unsigned long *pv)
 {
 	*pv = cl_pa2_dev_state;
-	wmt_tm_dprint("[%s] %d\n", __func__, *pv);
 	return 0;
 }
 
@@ -753,8 +667,6 @@ static int wmt_cl_pa2_set_cur_state(struct thermal_cooling_device *cool_dev, uns
 	struct linux_thermal_ctrl_if *p_linux_if = 0;
 	int ret = 0;
 
-	wmt_tm_dprintk("[%s] %d\n", __func__, v);
-
 	if (pg_wmt_tm) {
 		p_linux_if = &pg_wmt_tm->linux_if;
 	} else {
@@ -768,8 +680,6 @@ static int wmt_cl_pa2_set_cur_state(struct thermal_cooling_device *cool_dev, uns
 	} else {
 		ret = wmt_judge_throttling(1, 0, p_linux_if->interval / 1000);
 	}
-	if (ret != 0)
-		wmt_tm_info("[%s] ret=%d\n", __func__, ret);
 	return ret;
 }
 
@@ -780,14 +690,12 @@ static int wmt_cl_pa2_set_cur_state(struct thermal_cooling_device *cool_dev, uns
 static int wmt_cl_pa3_get_max_state(struct thermal_cooling_device *cool_dev, unsigned long *pv)
 {
 	*pv = 1;
-    wmt_tm_dprintk("[%s] %d\n", __func__, *pv);
 	return 0;
 }
 
 static int wmt_cl_pa3_get_cur_state(struct thermal_cooling_device *cool_dev, unsigned long *pv)
 {
 	*pv = cl_pa3_dev_state;
-    wmt_tm_dprintk("[%s] %d\n", __func__, *pv);
 	return 0;
 }
 
@@ -796,8 +704,6 @@ static int wmt_cl_pa3_set_cur_state(struct thermal_cooling_device *cool_dev, uns
 	struct linux_thermal_ctrl_if *p_linux_if = 0;
 	int ret = 0;
 
-	wmt_tm_dprintk("[%s] %d\n", __func__, v);
-
 	if (pg_wmt_tm) {
 		p_linux_if = &pg_wmt_tm->linux_if;
 	} else {
@@ -811,8 +717,6 @@ static int wmt_cl_pa3_set_cur_state(struct thermal_cooling_device *cool_dev, uns
 	} else {
 		/* ret = wmt_arbitrate_thro(2,0); */
 	}
-	if (ret != 0)
-		wmt_tm_print("[%s] ret=%d\n", __func__, ret);
 	return ret;
 }
 
@@ -823,8 +727,6 @@ int wmt_wifi_tx_thro_read(char *buf, char **start, off_t offset, int count, int
 {
 	count = sprintf(buf, "%lu\n", tx_throughput);
 
-	wmt_tm_dprintk("[%s] tx=%lu\n", __func__, tx_throughput);
-
 	return count;
 }
 
@@ -871,10 +773,6 @@ ssize_t wmt_wifi_algo_write(struct file *filp, const char __user *buf, unsigned
 		below_low_time = 0;
 		low_rst_time = 0;
 
-		wmt_tm_print("[%s] %s [up]%d %d/%d, [low]%d %d/%d, rst=%d\n", __func__, desc,
-			     up_duration, up_numerator, up_denominator, low_duration, low_numerator,
-			     low_denominator, low_rst_max);
-
 		return len;
 	} else if (sscanf(desc, "log=%d", &tmp_log) == 1) {
 		if (tmp_log == 1)
@@ -884,7 +782,6 @@ ssize_t wmt_wifi_algo_write(struct file *filp, const char __user *buf, unsigned
 
 		return len;
 	} else {
-		wmt_tm_printk("[%s] bad argument = %s\n", __func__, desc);
 	}
 	return -EINVAL;
 }
@@ -901,10 +798,6 @@ int wmt_wifi_algo_read(char *buf, char **start, off_t offset, int count, int *eo
 
 	memcpy(buf, tmp, ret * sizeof(char));
 
-	wmt_tm_print("[%s] [up]%d %d/%d, [low]%d %d/%d, rst=%d\n", __func__, up_duration,
-		     up_numerator, up_denominator, low_duration, low_numerator, low_denominator,
-		     low_rst_max);
-
 	return ret;
 }
 
@@ -922,8 +815,6 @@ ssize_t wmt_tm_wfd_write(struct file *filp, const char __user *buf, unsigned lon
 
 	ret = sscanf(tmp, "%d", &tm_wfd_stat);
 
-	wmt_tm_printk("[%s] %s = %d, len=%d, ret=%d\n", __func__, tmp, tm_wfd_stat, len, ret);
-
 	return len;
 }
 
@@ -938,8 +829,6 @@ int wmt_tm_wfd_read(char *buf, char **start, off_t offset, int count, int *eof,
 
 	memcpy(buf, tmp, ret * sizeof(char));
 
-	wmt_tm_printk("[%s] %s = %d, len=%d, ret=%d\n", __func__, tmp, tm_wfd_stat, len, ret);
-
 	return ret;
 }
 
@@ -957,8 +846,6 @@ ssize_t wmt_tm_pid_write(struct file *filp, const char __user *buf, unsigned lon
 	if (ret)
 		WARN_ON(1);
 
-	wmt_tm_printk("[%s] %s = %d\n", __func__, tmp, tm_input_pid);
-
 	return len;
 }
 
@@ -972,8 +859,6 @@ int wmt_tm_pid_read(char *buf, char **start, off_t offset, int count, int *eof,
 
 	memcpy(buf, tmp, ret * sizeof(char));
 
-	wmt_tm_printk("[%s] %s = %d\n", __func__, buf, tm_input_pid);
-
 	return ret;
 }
 
@@ -985,8 +870,6 @@ static int wmt_tm_read(char *buf, char **start, off_t off, int count, int *eof,
 	char *p = buf;
 	struct linux_thermal_ctrl_if *p_linux_if = 0;
 
-    wmt_tm_printk("[%s]\n", __func__);
-
 	/* sanity */
 	if (pg_wmt_tm) {
 		p_linux_if = &pg_wmt_tm->linux_if;
@@ -1041,8 +924,6 @@ static ssize_t wmt_tm_write(struct file *file, const char *buffer, unsigned long
 
 	struct linux_thermal_ctrl_if *p_linux_if = 0;
 
-    wmt_tm_printk("[%s]\n", __func__);
-
 	/* sanity */
 	if (pg_wmt_tm) {
 		p_linux_if = &pg_wmt_tm->linux_if;
@@ -1100,28 +981,6 @@ static ssize_t wmt_tm_write(struct file *file, const char *buffer, unsigned long
 
 		p_linux_if->interval = time_msec;
 
-        wmt_tm_printk("[wmt_tm_write] g_trip_temp [0]=%d, [1]=%d, [2]=%d, [3]=%d, [4]=%d\n",
-			     g_thermal_trip[0], g_thermal_trip[1], g_thermal_trip[2],
-			     g_thermal_trip[3], g_thermal_trip[4]);
-
-        wmt_tm_printk("[wmt_tm_write] g_trip_temp [5]=%d, [6]=%d, [7]=%d, [8]=%d, [9]=%d\n",
-			     g_thermal_trip[5], g_thermal_trip[6], g_thermal_trip[7],
-			     g_thermal_trip[8], g_thermal_trip[9]);
-
-        wmt_tm_printk("[wmt_tm_write] cooldev [0]=%s, [1]=%s, [2]=%s, [3]=%s, [4]=%s,\n",
-			     g_bind0, g_bind1, g_bind2, g_bind3, g_bind4);
-
-        wmt_tm_printk("[wmt_tm_write] cooldev [5]=%s, [6]=%s, [7]=%s, [8]=%s, [9]=%s,\n",
-			     g_bind5, g_bind6, g_bind7, g_bind8, g_bind9);
-
-        wmt_tm_printk("[wmt_tm_write] trip_temp [0]=%d, [1]=%d, [2]=%d, [3]=%d, [4]=%d\n",
-			     trip_temp[0], trip_temp[1], trip_temp[2], trip_temp[3], trip_temp[4]);
-
-        wmt_tm_printk("[wmt_tm_write] trip_temp [5]=%d, [6]=%d, [7]=%d, [8]=%d, [9]=%d\n",
-			     trip_temp[5], trip_temp[6], trip_temp[7], trip_temp[8], trip_temp[9]);
-
-        wmt_tm_printk("[wmt_tm_write] polling time=%d\n", p_linux_if->interval);
-
 		/* p_linux_if->thz_dev->polling_delay = p_linux_if->interval*1000; */
 
 		/* thermal_zone_device_update(p_linux_if->thz_dev); */
@@ -1131,8 +990,6 @@ static ssize_t wmt_tm_write(struct file *file, const char *buffer, unsigned long
 								       &wmt_thz_dev_ops, 0, 0, 0,
 								       p_linux_if->interval);
 
-        wmt_tm_printk("[wmt_tm_write] time_ms=%d\n", p_linux_if->interval);
-
 		return count;
 	} else {
 		wmt_tm_info("[%s] bad argument = %s\n", __func__, desc);
@@ -1146,8 +1003,6 @@ static int wmt_tm_proc_register(void)
 	struct proc_dir_entry *entry = NULL;
 	struct proc_dir_entry *wmt_tm_proc_dir = NULL;
 
-    wmt_tm_printk("[%s]\n", __func__);
-
 	wmt_tm_proc_dir = proc_mkdir("wmt_tm", NULL);
 	if (!wmt_tm_proc_dir) {
 		wmt_tm_print("[wmt_tm_proc_register]: mkdir /proc/wmt_tm failed\n");
@@ -1194,7 +1049,6 @@ static int wmt_tm_proc_register(void)
 
 static int wmt_tm_proc_unregister(void)
 {
-    wmt_tm_printk("[%s]\n", __func__);
 	/* remove_proc_entry("wmt_tm", proc_entry); */
 	return 0;
 }
@@ -1205,8 +1059,6 @@ static int wmt_tm_thz_cl_register(void)
 
 	struct linux_thermal_ctrl_if *p_linux_if = 0;
 
-	wmt_tm_printk("[%s]\n", __func__);
-
 	if (pg_wmt_tm) {
 		p_linux_if = &pg_wmt_tm->linux_if;
 	} else {
@@ -1242,8 +1094,6 @@ static int wmt_tm_thz_cl_unregister(void)
 {
 	struct linux_thermal_ctrl_if *p_linux_if = 0;
 
-    wmt_tm_printk("[%s]\n", __func__);
-
 	if (pg_wmt_tm) {
 		p_linux_if = &pg_wmt_tm->linux_if;
 	} else {
@@ -1283,16 +1133,12 @@ static int wmt_tm_ops_register(struct wmt_thermal_ctrl_ops *ops)
 {
 	struct wmt_thermal_ctrl_ops *p_des;
 
-   wmt_tm_printk("[%s]\n", __func__);
-
 	if (pg_wmt_tm) {
 #if 1
 		p_des = &pg_wmt_tm->wmt_if.ops;
 		if (ops != NULL) {
-            wmt_tm_printk("[wmt_tm_ops_register] reg start ...\n");
 			p_des->query_temp = ops->query_temp;
 			p_des->set_temp = ops->set_temp;
-            wmt_tm_printk("[wmt_tm_ops_register] reg end ...\n");
 		} else {
 			p_des->query_temp = 0;
 			p_des->set_temp = 0;
@@ -1308,8 +1154,6 @@ static int wmt_tm_ops_unregister(void)
 {
 	struct wmt_thermal_ctrl_ops *p_des;
 
-   wmt_tm_printk("[%s]\n", __func__);
-
 	if (pg_wmt_tm) {
 		p_des = &pg_wmt_tm->wmt_if.ops;
 		p_des->query_temp = 0;
@@ -1325,8 +1169,6 @@ int wmt_tm_init(struct wmt_thermal_ctrl_ops *ops)
 {
 	int err = 0;
 
-    wmt_tm_printk("[wmt_tm_init] start -->\n");
-
 	err = wmt_tm_ops_register(ops);
 	if (err)
 		return err;
@@ -1350,8 +1192,6 @@ int wmt_tm_init(struct wmt_thermal_ctrl_ops *ops)
 	if (err)
 		return err;
 #endif
-    wmt_tm_printk("[wmt_tm_init] end <--\n");
-
 	return 0;
 }
 
@@ -1359,14 +1199,10 @@ int wmt_tm_init_rt(void)
 {
 	int err = 0;
 
-    wmt_tm_printk("[wmt_tm_init_rt] start -->\n");
-
 	err = wmt_tm_thz_cl_register();
 	if (err)
 		return err;
 
-    wmt_tm_printk("[wmt_tm_init_rt] end <--\n");
-
 	return 0;
 }
 
@@ -1374,14 +1210,10 @@ int wmt_tm_deinit_rt(void)
 {
 	int err = 0;
 
-    wmt_tm_printk("[wmt_tm_deinit_rt] start -->\n");
-
 	err = wmt_tm_thz_cl_unregister();
 	if (err)
 		return err;
 
-    wmt_tm_printk("[wmt_tm_deinit_rt] end <--\n");
-
 	return 0;
 }
 
@@ -1389,7 +1221,6 @@ int wmt_tm_deinit(void)
 {
 	int err = 0;
 
-    wmt_tm_printk("[%s]\n", __func__);
 #if 0
 	err = wmt_tm_thz_cl_unregister();
 	if (err)
diff --git a/drivers/misc/mediatek/connectivity/common_detect/mtk_wcn_stub_alps.c b/drivers/misc/mediatek/connectivity/common_detect/mtk_wcn_stub_alps.c
index a1b4f6bdd..bfcce79fc 100644
--- a/drivers/misc/mediatek/connectivity/common_detect/mtk_wcn_stub_alps.c
+++ b/drivers/misc/mediatek/connectivity/common_detect/mtk_wcn_stub_alps.c
@@ -132,10 +132,8 @@ extern unsigned int mtk_uart_pdn_enable(char *port, int enable);
 #if MTK_WCN_CMB_FOR_SDIO_1V_AUTOK
 static void mtk_wcn_cmb_stub_1v_autok_work(struct work_struct *work)
 {
-	CMB_STUB_LOG_WARN("++enter++\n");
 	mtk_wcn_cmb_stub_func_ctrl(11, 1);
 	mtk_wcn_cmb_stub_func_ctrl(11, 0);
-	CMB_STUB_LOG_WARN("--exit--\n");
 }
 
 /*!
@@ -165,19 +163,11 @@ static int mtk_wcn_cmb_stub_drv_status(unsigned int type)
 int mtk_wcn_cmb_stub_1vautok_for_dvfs(void)
 {
 	int wmt_status;
-	CMB_STUB_LOG_WARN("DVFS driver call sdio 1v autok\n");
 
 	wmt_status = mtk_wcn_cmb_stub_drv_status(4);
-	CMB_STUB_LOG_WARN("current mt6630 status is %d\n", wmt_status);
 	if (0 == wmt_status) {
 		if (g_sdio_1v_autok_wk)
 			schedule_work(g_sdio_1v_autok_wk);
-		else
-			CMB_STUB_LOG_WARN("g_sdio_1v_autok_wk is NULL\n");
-	} else if ((2 == wmt_status) || (1 == wmt_status)) {
-		CMB_STUB_LOG_WARN("mt6630 is on state,skip AUTOK\n");
-	} else {
-		CMB_STUB_LOG_WARN("mt6630 is unknow state(%d)\n", wmt_status);
 	}
 
 	return wmt_status;
@@ -199,13 +189,9 @@ int mtk_wcn_cmb_stub_reg(P_CMB_STUB_CB p_stub_cb)
 {
 	if ((!p_stub_cb)
 	    || (p_stub_cb->size != sizeof(CMB_STUB_CB))) {
-		CMB_STUB_LOG_WARN("[cmb_stub] invalid p_stub_cb:0x%p size(%d)\n",
-				  p_stub_cb, (p_stub_cb) ? p_stub_cb->size : 0);
 		return -1;
 	}
 
-	CMB_STUB_LOG_DBG("[cmb_stub] registered, p_stub_cb:0x%p size(%d)\n", p_stub_cb, p_stub_cb->size);
-
 	cmb_stub_aif_ctrl_cb = p_stub_cb->aif_ctrl_cb;
 	cmb_stub_func_ctrl_cb = p_stub_cb->func_ctrl_cb;
 	cmb_stub_thermal_ctrl_cb = p_stub_cb->thermal_query_cb;
@@ -214,8 +200,7 @@ int mtk_wcn_cmb_stub_reg(P_CMB_STUB_CB p_stub_cb)
 #if MTK_WCN_CMB_FOR_SDIO_1V_AUTOK
 	cmb_stub_drv_status_ctrl_cb = p_stub_cb->get_drv_status_cb;
 	g_sdio_1v_autok_wk = vmalloc(sizeof(struct work_struct));
-	if (!g_sdio_1v_autok_wk)
-		CMB_STUB_LOG_WARN("vmalloc work_struct(%zd) fail\n", sizeof(struct work_struct));
+	if (!g_sdio_1v_autok_wk) {}
 	else
 		INIT_WORK(g_sdio_1v_autok_wk, mtk_wcn_cmb_stub_1v_autok_work);
 
@@ -239,7 +224,6 @@ int mtk_wcn_cmb_stub_unreg(void)
 	cmb_stub_thermal_ctrl_cb = NULL;
 	cmb_stub_deep_idle_ctrl_cb = NULL;
 	cmb_stub_do_reset_cb = NULL;
-	CMB_STUB_LOG_INFO("[cmb_stub] unregistered\n");	/* KERN_DEBUG */
 
 #if MTK_WCN_CMB_FOR_SDIO_1V_AUTOK
 	if (g_sdio_1v_autok_wk) {
@@ -267,13 +251,10 @@ int mtk_wcn_cmb_stub_aif_ctrl(CMB_STUB_AIF_X state, CMB_STUB_AIF_CTRL ctrl)
 	/* avoid the early interrupt before we register the eirq_handler */
 	if (cmb_stub_aif_ctrl_cb) {
 		ret = (*cmb_stub_aif_ctrl_cb) (state, ctrl);
-		CMB_STUB_LOG_INFO("[cmb_stub] aif_ctrl_cb state(%d->%d) ctrl(%d) ret(%d)\n",
-			cmb_stub_aif_stat, state, ctrl, ret);	/* KERN_DEBUG */
 
 		cmb_stub_aif_stat = state;
 		return ret;
 	} else {
-		CMB_STUB_LOG_WARN("[cmb_stub] aif_ctrl_cb null\n");
 		return -2;
 	}
 }
@@ -289,8 +270,6 @@ void mtk_wcn_cmb_stub_func_ctrl(unsigned int type, unsigned int on)
 {
 	if (cmb_stub_func_ctrl_cb)
 		(*cmb_stub_func_ctrl_cb) (type, on);
-	else
-		CMB_STUB_LOG_WARN("[cmb_stub] func_ctrl_cb null\n");
 }
 EXPORT_SYMBOL(mtk_wcn_cmb_stub_func_ctrl);
 
@@ -300,8 +279,6 @@ signed long mtk_wcn_cmb_stub_query_ctrl()
 
 	if (cmb_stub_thermal_ctrl_cb)
 		temp = (*cmb_stub_thermal_ctrl_cb) ();
-	else
-		CMB_STUB_LOG_WARN("[cmb_stub] thermal_ctrl_cb null\n");
 
 	return temp;
 }
@@ -372,8 +349,6 @@ static int _mt_combo_plt_do_deep_idle(COMBO_IF src, int enter)
 
 		if (ret)
 			CMB_STUB_LOG_WARN("%s deep idle fail(%d)\n", enter == 1 ? "enter" : "exit", ret);
-		else
-			CMB_STUB_LOG_DBG("%s deep idle ok(%d)\n", enter == 1 ? "enter" : "exit", ret);
 
 
 		break;
@@ -410,7 +385,6 @@ EXPORT_SYMBOL(mtk_wcn_wmt_chipid_query);
 
 void mtk_wcn_wmt_set_chipid(int chipid)
 {
-	CMB_STUB_LOG_INFO("set current consys chipid (0x%x)\n", chipid);
 	gConnectivityChipId = chipid;
 }
 EXPORT_SYMBOL(mtk_wcn_wmt_set_chipid);
diff --git a/drivers/misc/mediatek/connectivity/common_detect/sdio_detect.c b/drivers/misc/mediatek/connectivity/common_detect/sdio_detect.c
index 1ac562514..33a1d224b 100644
--- a/drivers/misc/mediatek/connectivity/common_detect/sdio_detect.c
+++ b/drivers/misc/mediatek/connectivity/common_detect/sdio_detect.c
@@ -105,8 +105,6 @@ int hif_sdio_is_chipid_valid(int chipId)
 
 	if (0 > index)
 		WMT_DETECT_ERR_FUNC("no supported chipid found\n");
-	else
-		WMT_DETECT_INFO_FUNC("index:%d, chipId:0x%x\n", index, gChipInfoArray[index].chipId);
 
 	return index;
 }
@@ -121,9 +119,6 @@ int hif_sdio_match_chipid_by_dev_id(const struct sdio_device_id *id)
 		localId = &(gChipInfoArray[index].deviceId);
 		if ((localId->vendor == id->vendor) && (localId->device == id->device)) {
 			chipId = gChipInfoArray[index].chipId;
-			WMT_DETECT_INFO_FUNC
-			    ("valid chipId found, index(%d), vendor id(0x%x), device id(0x%x), chip id(0x%x)\n", index,
-			     localId->vendor, localId->device, chipId);
 			gComboChipId = chipId;
 			mtk_wcn_wmt_set_chipid(gComboChipId);
 			break;
@@ -176,28 +171,20 @@ int sdio_detect_do_autok(int chipId)
 	if (0x6630 == chipId) {
 #ifdef CONFIG_SDIOAUTOK_SUPPORT
 		if (NULL != g_func) {
-			WMT_DETECT_INFO_FUNC("wait_sdio_autok_ready++\n");
 			i_ret = wait_sdio_autok_ready(g_func->card->host);
-			WMT_DETECT_INFO_FUNC("wait_sdio_autok_ready--\n");
 			if (0 == i_ret) {
-				WMT_DETECT_INFO_FUNC("wait_sdio_autok_ready return success\n");
 			} else {
-				WMT_DETECT_INFO_FUNC("wait_sdio_autok_ready return fail, i_ret:%d\n", i_ret);
 				gComboChipId = -1;
 			}
 		} else {
-			WMT_DETECT_INFO_FUNC("g_func NULL, omit autok\n");
 		}
 #else
 		i_ret = 0;
-		WMT_DETECT_INFO_FUNC("MTK_SDIOAUTOK_SUPPORT not defined\n");
 #endif
 	} else {
-		WMT_DETECT_INFO_FUNC("MT%x does not support SDIO3.0 autoK is not needed\n", chipId);
 	}
 #else
 	i_ret = 0;
-	WMT_DETECT_INFO_FUNC("MTK_HIF_SDIO_AUTOK_ENABLED is not defined\n");
 #endif
 	return i_ret;
 }
@@ -217,13 +204,11 @@ int sdio_detect_do_autok(int chipId)
 static int sdio_detect_probe(struct sdio_func *func, const struct sdio_device_id *id)
 {
 	int chipId = 0;
-	WMT_DETECT_INFO_FUNC("vendor(0x%x) device(0x%x) num(0x%x)\n", func->vendor, func->device, func->num);
 	chipId = hif_sdio_match_chipid_by_dev_id(id);
 
 	if ((0x6630 == chipId) && (1 == func->num)) {
 		int ret = 0;
 		g_func = func;
-		WMT_DETECT_INFO_FUNC("autok function detected, func:0x%p\n", g_func);
 
 		sdio_claim_host(func);
 		ret = sdio_enable_func(func);
@@ -243,7 +228,6 @@ static void sdio_detect_remove(struct sdio_func *func)
 		sdio_release_host(func);
 		g_func = NULL;
 	}
-	WMT_DETECT_INFO_FUNC("do sdio remove\n");
 	return;
 }
 
@@ -252,7 +236,6 @@ int sdio_detect_init(void)
 	int ret = -1;
 	/* register to mmc driver */
 	ret = sdio_register_driver(&mtk_sdio_client_drv);
-	WMT_DETECT_INFO_FUNC("sdio_register_driver() ret=%d\n", ret);
 	return 0;
 }
 
@@ -261,6 +244,5 @@ int sdio_detect_exit(void)
 	g_func = NULL;
 	/* register to mmc driver */
 	sdio_unregister_driver(&mtk_sdio_client_drv);
-	WMT_DETECT_INFO_FUNC("sdio_unregister_driver\n");
 	return 0;
 }
diff --git a/drivers/misc/mediatek/connectivity/common_detect/wmt_detect.c b/drivers/misc/mediatek/connectivity/common_detect/wmt_detect.c
index 56a61d38e..b15d208f2 100644
--- a/drivers/misc/mediatek/connectivity/common_detect/wmt_detect.c
+++ b/drivers/misc/mediatek/connectivity/common_detect/wmt_detect.c
@@ -40,38 +40,29 @@ unsigned int gWmtDetectDbgLvl = WMT_DETECT_LOG_INFO;
 #ifdef MTK_WCN_COMBO_CHIP_SUPPORT
 inline unsigned int wmt_plat_get_soc_chipid(void)
 {
-	WMT_DETECT_INFO_FUNC("no soc chip supported, due to MTK_WCN_SOC_CHIP_SUPPORT is not set.\n");
 	return -1;
 }
 #endif
 
 static int wmt_detect_open(struct inode *inode, struct file *file)
 {
-	WMT_DETECT_INFO_FUNC("open major %d minor %d (pid %d)\n", imajor(inode), iminor(inode), current->pid);
 
 	return 0;
 }
 
 static int wmt_detect_close(struct inode *inode, struct file *file)
 {
-	WMT_DETECT_INFO_FUNC("close major %d minor %d (pid %d)\n", imajor(inode), iminor(inode), current->pid);
 
 	return 0;
 }
 
 static ssize_t wmt_detect_read(struct file *filp, char __user *buf, size_t count, loff_t *f_pos)
 {
-	WMT_DETECT_INFO_FUNC(" ++\n");
-	WMT_DETECT_INFO_FUNC(" --\n");
-
 	return 0;
 }
 
 ssize_t wmt_detect_write(struct file *filp, const char __user *buf, size_t count, loff_t *f_pos)
 {
-	WMT_DETECT_INFO_FUNC(" ++\n");
-	WMT_DETECT_INFO_FUNC(" --\n");
-
 	return 0;
 }
 
@@ -79,8 +70,6 @@ static long wmt_detect_unlocked_ioctl(struct file *filp, unsigned int cmd, unsig
 {
 	int retval = 0;
 
-	WMT_DETECT_INFO_FUNC("cmd (%d),arg(%ld)\n", cmd, arg);
-
 	switch (cmd) {
 	case COMBO_IOCTL_GET_CHIP_ID:
 		/*just get chipid from sdio-detect module */
@@ -120,8 +109,6 @@ static long wmt_detect_unlocked_ioctl(struct file *filp, unsigned int cmd, unsig
 #if (MTK_WCN_REMOVE_KO)
 		/*deinit SDIO-DETECT module */
 		retval = sdio_detect_exit();
-#else
-		WMT_DETECT_INFO_FUNC("no MTK_WCN_REMOVE_KO defined\n");
 #endif
 		break;
 
@@ -129,8 +116,6 @@ static long wmt_detect_unlocked_ioctl(struct file *filp, unsigned int cmd, unsig
 #if (MTK_WCN_REMOVE_KO)
 		/*deinit SDIO-DETECT module */
 		retval = do_connectivity_driver_init(arg);
-#else
-		WMT_DETECT_INFO_FUNC("no MTK_WCN_REMOVE_KO defined\n");
 #endif
 		break;
 
@@ -154,7 +139,6 @@ int wmt_detect_ext_chip_pwr_on(void)
 {
 	/*pre power on external chip */
 	/* wmt_plat_pwr_ctrl(FUNC_ON); */
-	WMT_DETECT_INFO_FUNC("++\n");
 	if (0 != wmt_detect_chip_pwr_ctrl(1))
 		return -1;
 	if (0 != wmt_detect_sdio_pwr_ctrl(1))
@@ -167,7 +151,6 @@ int wmt_detect_ext_chip_pwr_off(void)
 {
 	/*pre power off external chip */
 	/* wmt_plat_pwr_ctrl(FUNC_OFF); */
-	WMT_DETECT_INFO_FUNC("--\n");
 	wmt_detect_sdio_pwr_ctrl(0);
 	return wmt_detect_chip_pwr_ctrl(0);
 }
@@ -178,7 +161,6 @@ int wmt_detect_ext_chip_detect(void)
 	unsigned int chipId = -1;
 	/*if there is no external combo chip, return -1 */
 	int bgfEintStatus = -1;
-	WMT_DETECT_INFO_FUNC("++\n");
 	/*wait for a stable time */
 	msleep(20);
 
@@ -187,23 +169,16 @@ int wmt_detect_ext_chip_detect(void)
 
 	if (0 == bgfEintStatus) {
 		/*external chip does not exist */
-		WMT_DETECT_INFO_FUNC("external combo chip not detected\n");
 	} else if (1 == bgfEintStatus) {
 		/*combo chip exists */
-		WMT_DETECT_INFO_FUNC("external combo chip detected\n");
 
 		/*detect chipid by sdio_detect module */
 		chipId = sdio_detect_query_chipid(1);
-		if (0 <= hif_sdio_is_chipid_valid(chipId))
-			WMT_DETECT_INFO_FUNC("valid external combo chip id (0x%x)\n", chipId);
-		else
-			WMT_DETECT_INFO_FUNC("invalid external combo chip id (0x%x)\n", chipId);
 		iRet = 0;
 	} else {
 		/*Error exists */
 		WMT_DETECT_ERR_FUNC("error happens when detecting combo chip\n");
 	}
-	WMT_DETECT_INFO_FUNC("--\n");
 	/*return 0 */
 	return iRet;
 
@@ -243,8 +218,6 @@ static int wmt_detect_init(void)
 		goto err2;
 	}
 
-	WMT_DETECT_INFO_FUNC("driver(major %d) installed success\n", gWmtDetectMajor);
-
 	/*init SDIO-DETECT module */
 	sdio_detect_init();
 
@@ -293,8 +266,6 @@ static void wmt_detect_exit(void)
 /*deinit SDIO-DETECT module*/
 	sdio_detect_exit();
 #endif
-
-	WMT_DETECT_INFO_FUNC("done\n");
 }
 
 module_init(wmt_detect_init);
diff --git a/drivers/misc/mediatek/connectivity/conn_soc/common/mt6580/mtk_wcn_consys_hw.c b/drivers/misc/mediatek/connectivity/conn_soc/common/mt6580/mtk_wcn_consys_hw.c
index f4b552ac3..8bf76d0a5 100644
--- a/drivers/misc/mediatek/connectivity/conn_soc/common/mt6580/mtk_wcn_consys_hw.c
+++ b/drivers/misc/mediatek/connectivity/conn_soc/common/mt6580/mtk_wcn_consys_hw.c
@@ -116,7 +116,6 @@ static INT32 mtk_wcn_consys_jtag_set_for_mcu(VOID)
 #if 1
     int iRet = -1;
 
-	WMT_PLAT_INFO_FUNC("WCN jtag_set_for_mcu start...\n");
     jtag_addr1 = ioremap(JTAG_ADDR1_BASE, 0x5000);
     if (jtag_addr1 == 0) {
         printk("remap jtag_addr1 fail!\n");
@@ -238,7 +237,6 @@ static INT32 mtk_wcn_consys_jtag_set_for_mcu(VOID)
 
 UINT32 mtk_wcn_consys_jtag_flag_ctrl(UINT32 en)
 {
-	WMT_PLAT_INFO_FUNC("%s jtag set for MCU\n",en ? "enable" : "disable");
 	gJtagCtrl = en;
 
 	return 0;
@@ -262,13 +260,10 @@ INT32 mtk_wcn_regulator_get(void)
 	if(!(IS_ERR(wmt_dev))){
 		reg_V18 = regulator_get(wmt_dev,"VCN_1V8");
 		if(reg_V18)
-			WMT_PLAT_INFO_FUNC("Regulator_get VCN_1V8 sucess\n");
 		reg_V33_BT = regulator_get(wmt_dev,"VCN33_BT");
 		if(reg_V33_BT)
-			WMT_PLAT_INFO_FUNC("Regulator_get VCN33_BT sucess\n");
 		reg_V33_WIFI = regulator_get(wmt_dev,"VCN33_WIFI");
 		if(reg_V33_WIFI)
-			WMT_PLAT_INFO_FUNC("Regulator_get VCN33_WIFI sucess\n");
 		iRet = 0;
 	}else
 		WMT_PLAT_ERR_FUNC("wmt_dev device pointer error, cannot do VCN18 power on!\n");
@@ -283,31 +278,26 @@ INT32 wmt_set_pmic_voltage(UINT32 level)
 		case 0:
 			regulator_set_voltage(reg_V33_BT, 3300000, 3300000);
 			regulator_set_voltage(reg_V33_WIFI, 3300000, 3300000);
-			WMT_PLAT_INFO_FUNC("WMT set BT/WIFI regulator voltage:3.3V!\n");
 			iRet = 0;
 			break;
 		case 1:
 			regulator_set_voltage(reg_V33_BT, 3400000, 3400000);
 			regulator_set_voltage(reg_V33_WIFI, 3400000, 3400000);
-			WMT_PLAT_INFO_FUNC("WMT set BT/WIFI regulator voltage:3.4V!\n");
 			iRet = 0;
 			break;
 		case 2:
 			regulator_set_voltage(reg_V33_BT, 3500000, 3500000);
 			regulator_set_voltage(reg_V33_WIFI, 3500000, 3500000);
-			WMT_PLAT_INFO_FUNC("WMT set BT/WIFI regulator voltage:3.5V!\n");
 			iRet = 0;
 			break;
 		case 3:
 			regulator_set_voltage(reg_V33_BT, 3600000, 3600000);
 			regulator_set_voltage(reg_V33_WIFI, 3600000, 3600000);
-			WMT_PLAT_INFO_FUNC("WMT set BT/WIFI regulator voltage:3.6V!\n");
 			iRet = 0;
 			break;
 		default:
 			regulator_set_voltage(reg_V33_BT, 3500000, 3500000);
 			regulator_set_voltage(reg_V33_WIFI, 3500000, 3500000);
-			WMT_PLAT_INFO_FUNC("WMT set BT/WIFI regulator voltage default:3.5V!\n");
 			iRet = 0;
 			break;
 	}
@@ -324,7 +314,6 @@ INT32 mtk_wcn_consys_hw_reg_ctrl(UINT32 on,UINT32 co_clock_en)
 #if PWR_ON_OFF_API_AVALIABLE
 	INT32 iRet = -1;
 #endif
-	WMT_PLAT_INFO_FUNC("CONSYS-HW-REG-CTRL(0x%08x),start\n",on);
 	WMT_PLAT_DBG_FUNC("CONSYS_EMI_MAPPING dump before power on/off(0x%08x)\n",CONSYS_REG_READ(CONSYS_EMI_MAPPING));
 
 	if(on)
@@ -340,7 +329,6 @@ INT32 mtk_wcn_consys_hw_reg_ctrl(UINT32 on,UINT32 co_clock_en)
 			if(regulator_enable(reg_V18)){
 				WMT_PLAT_INFO_FUNC("wmt_dev enable VCN_1V8 fail!\n");
 			}else{
-				WMT_PLAT_INFO_FUNC("wmt_dev enable VCN_1V8\n");
 			}
 		}
 #endif
@@ -353,7 +341,6 @@ INT32 mtk_wcn_consys_hw_reg_ctrl(UINT32 on,UINT32 co_clock_en)
 			/*2.set RF XO BUF source from CellularRF  DA_XOBUF_SEL	0x1000513C[7:6]	2'b10*/
 			CONSYS_REG_WRITE((conn_reg.da_xobuf_base+ CONSYS_DA_XOBUF_OFFSET), CONSYS_REG_READ(conn_reg.da_xobuf_base + CONSYS_DA_XOBUF_OFFSET) & ~(0x1 << 6) );
 			CONSYS_REG_WRITE((conn_reg.da_xobuf_base+ CONSYS_DA_XOBUF_OFFSET), CONSYS_REG_READ(conn_reg.da_xobuf_base + CONSYS_DA_XOBUF_OFFSET) | (0x1 << 7) );
-			WMT_PLAT_INFO_FUNC("co_clock mode reg dump:XO BUFFER(0x%08x)\n",CONSYS_REG_READ(conn_reg.da_xobuf_base + CONSYS_DA_XOBUF_OFFSET));
 		}
 		else
 		{
@@ -362,13 +349,11 @@ INT32 mtk_wcn_consys_hw_reg_ctrl(UINT32 on,UINT32 co_clock_en)
 			pmic_set_register_value(PMIC_VCN28_ON_CTRL,1);
 			/*2.2 turn on VCN28 LDO (with PMIC_WRAP API) DA_XOBUF_SEL  0x1000513C[7:6]"	"  2'b11"*/
 			CONSYS_REG_WRITE((conn_reg.da_xobuf_base+ CONSYS_DA_XOBUF_OFFSET), CONSYS_REG_READ(conn_reg.da_xobuf_base + CONSYS_DA_XOBUF_OFFSET) | ((0x1 << 7) |(0x1 << 6)));
-			WMT_PLAT_INFO_FUNC("NOT co_clock mode reg dump:XO BUFFER(0x%08x)\n",CONSYS_REG_READ(conn_reg.da_xobuf_base + CONSYS_DA_XOBUF_OFFSET));
 			udelay(300);
 		}
 #endif
 		/*3.assert CONNSYS CPU SW reset		0x10007018	"[12]=1'b1 [31:24]=8'h88 (key)"*/
 		CONSYS_REG_WRITE((conn_reg.ap_rgu_base + CONSYS_CPU_SW_RST_OFFSET), CONSYS_REG_READ(conn_reg.ap_rgu_base + CONSYS_CPU_SW_RST_OFFSET) | CONSYS_CPU_SW_RST_BIT | CONSYS_CPU_SW_RST_CTRL_KEY);
-		WMT_PLAT_INFO_FUNC("reg dump:CONSYS_CPU_SW_RST_REG(0x%x)\n",CONSYS_REG_READ(conn_reg.ap_rgu_base + CONSYS_CPU_SW_RST_OFFSET));
 		/*turn on top clock gating enable	TOP_CLKCG_CLR	0x10000084[26]	1'b1	*/
 //		CONSYS_REG_WRITE((conn_reg.topckgen_base + CONSYS_TOP_CLKCG_CLR_OFFSET), CONSYS_REG_READ(conn_reg.topckgen_base + CONSYS_TOP_CLKCG_CLR_OFFSET) | CONSYS_TOP_CLKCG_BIT);
 		/*turn on SPM clock gating enable PWRON_CONFG_EN	0x10006000	32'h0b160001 */
@@ -381,7 +366,6 @@ INT32 mtk_wcn_consys_hw_reg_ctrl(UINT32 on,UINT32 co_clock_en)
 			WMT_PLAT_ERR_FUNC("conn_power_on fail(%d)\n",iRet);
 		}else
 		{
-			WMT_PLAT_INFO_FUNC("conn_power_on ok\n");
 		}
 
 #else
@@ -409,9 +393,6 @@ INT32 mtk_wcn_consys_hw_reg_ctrl(UINT32 on,UINT32 co_clock_en)
        // }
 
 #endif
-		WMT_PLAT_INFO_FUNC("reg dump:CONSYS_PWR_CONN_ACK_REG(0x%x)\n",CONSYS_REG_READ(conn_reg.spm_base + CONSYS_PWR_CONN_ACK_OFFSET));
-		WMT_PLAT_INFO_FUNC("reg dump:CONSYS_PWR_CONN_ACK_S_REG(0x%x)\n",CONSYS_REG_READ(conn_reg.spm_base + CONSYS_PWR_CONN_ACK_S_OFFSET));
-		WMT_PLAT_INFO_FUNC("reg dump:CONSYS_TOP1_PWR_CTRL_REG(0x%x)\n",CONSYS_REG_READ(conn_reg.spm_base + CONSYS_TOP1_PWR_CTRL_OFFSET));
 		/*11.26M is ready now, delay 10us for mem_pd de-assert*/
 		udelay(10);
 		/*enable AP bus clock : connmcu_bus_pd  API: enable_clock() ++??*/
@@ -421,10 +402,8 @@ INT32 mtk_wcn_consys_hw_reg_ctrl(UINT32 on,UINT32 co_clock_en)
 		{
 			consysHwChipId = CONSYS_REG_READ(conn_reg.mcu_base + CONSYS_CHIP_ID_OFFSET);
 			if(consysHwChipId == 0x6580) {
-				WMT_PLAT_INFO_FUNC("retry(%d)consys chipId(0x%08x)\n", retry,consysHwChipId);
 				break;
 			} else {
-				WMT_PLAT_INFO_FUNC("Read CONSYS chipId(0x%08x)",consysHwChipId); 
 			}
 			msleep(20);
 		}
@@ -454,16 +433,13 @@ INT32 mtk_wcn_consys_hw_reg_ctrl(UINT32 on,UINT32 co_clock_en)
 	}else{
 
 #if PWR_ON_OFF_API_AVALIABLE
-		WMT_PLAT_INFO_FUNC("\n conn_power_off begin\n");
 		/*power off connsys by API (MT6582, MT6572 are different) API: conn_power_off()	*/
 		iRet = conn_power_off();//consult clkmgr owner
-		WMT_PLAT_INFO_FUNC("\n conn_power_off end\n");
 		if(iRet)
 		{
 			WMT_PLAT_ERR_FUNC("conn_power_off fail(%d)\n",iRet);
 		}else
 		{
-			WMT_PLAT_INFO_FUNC("conn_power_off ok\n");
 		}
 #else
 		{	
@@ -509,7 +485,6 @@ INT32 mtk_wcn_consys_hw_reg_ctrl(UINT32 on,UINT32 co_clock_en)
 		pmic_set_register_value(PMIC_VCN_1V8_ON_CTRL,0);
 		if(reg_V18){
 			regulator_disable(reg_V18);
-			WMT_PLAT_INFO_FUNC("wmt_dev disable VCN_1V8\n");
 		}
 #endif
 
@@ -518,7 +493,6 @@ INT32 mtk_wcn_consys_hw_reg_ctrl(UINT32 on,UINT32 co_clock_en)
 		if(co_clock_en)
 			clk_buf_ctrl(CLK_BUF_CONNSRC,0);
 	}
-	WMT_PLAT_INFO_FUNC("CONSYS-HW-REG-CTRL(0x%08x),finish\n",on);
 	return 0;
 }
 
@@ -533,7 +507,6 @@ INT32 mtk_wcn_consys_hw_reg_ctrl(UINT32 on,UINT32 co_clock_en)
 	UINT32 retry = 10;
 	UINT32 consysHwChipId = 0;
 	
-	WMT_PLAT_INFO_FUNC("CONSYS-HW-REG-CTRL(0x%08x),start\n",on);
 	WMT_PLAT_DBG_FUNC("CONSYS_EMI_MAPPING dump before power on/off(0x%08x)\n",CONSYS_REG_READ(CONSYS_EMI_MAPPING));
 
 	if(on)
@@ -566,7 +539,6 @@ INT32 mtk_wcn_consys_hw_reg_ctrl(UINT32 on,UINT32 co_clock_en)
 
 		/*3.assert CONNSYS CPU SW reset  0x10007018	"[12]=1'b1  [31:24]=8'h88 (key)"*/
 		CONSYS_REG_WRITE(CONSYS_CPU_SW_RST_REG, (CONSYS_REG_READ(CONSYS_CPU_SW_RST_REG) | CONSYS_CPU_SW_RST_BIT | CONSYS_CPU_SW_RST_CTRL_KEY));
-		WMT_PLAT_INFO_FUNC("reg dump:CONSYS_CPU_SW_RST_REG(0x%x)\n",CONSYS_REG_READ(CONSYS_CPU_SW_RST_REG));
 		/*turn on top clock gating enable	TOP_CLKCG_CLR	0x10000084[26]	1'b1	*/
 		CONSYS_REG_WRITE(CONSYS_TOP_CLKCG_CLR_REG,CONSYS_REG_READ(CONSYS_TOP_CLKCG_CLR_REG) | CONSYS_TOP_CLKCG_BIT);
 		/*turn on SPM clock gating enable	PWRON_CONFG_EN	0x10006000	32'h0b160001	*/
@@ -579,7 +551,6 @@ INT32 mtk_wcn_consys_hw_reg_ctrl(UINT32 on,UINT32 co_clock_en)
 			WMT_PLAT_ERR_FUNC("conn_power_on fail(%d)\n",iRet);
 		}else
 		{
-			WMT_PLAT_INFO_FUNC("conn_power_on ok\n");
 		}
 #else
 		/*2.write conn_top1_pwr_on=1, power on conn_top1 (MT6572 with the same addr)	conn_spm_pwr_on 0x10006280 [2]	1'b1		*/			
@@ -602,9 +573,6 @@ INT32 mtk_wcn_consys_hw_reg_ctrl(UINT32 on,UINT32 co_clock_en)
 		CONSYS_REG_WRITE(CONSYS_TOP1_PWR_CTRL_REG, CONSYS_REG_READ(CONSYS_TOP1_PWR_CTRL_REG) | CONSYS_SPM_PWR_RST_BIT);
 #endif
 
-		WMT_PLAT_INFO_FUNC("reg dump:CONSYS_PWR_CONN_ACK_REG(0x%x)\n",CONSYS_REG_READ(CONSYS_PWR_CONN_ACK_REG));
-		WMT_PLAT_INFO_FUNC("reg dump:CONSYS_PWR_CONN_ACK_S_REG(0x%x)\n",CONSYS_REG_READ(CONSYS_PWR_CONN_ACK_S_REG));
-		WMT_PLAT_INFO_FUNC("reg dump:CONSYS_TOP1_PWR_CTRL_REG(0x%x)\n",CONSYS_REG_READ(CONSYS_TOP1_PWR_CTRL_REG));
 		/*11.26M is ready now, delay 10us for mem_pd de-assert*/
 		udelay(10);
 		/*enable AP bus clock : connmcu_bus_pd  API: enable_clock() ++??*/
@@ -616,7 +584,6 @@ INT32 mtk_wcn_consys_hw_reg_ctrl(UINT32 on,UINT32 co_clock_en)
 			consysHwChipId = CONSYS_REG_READ(CONSYS_CHIP_ID_REG);
 			if(consysHwChipId == 0x6580)
 			{
-				WMT_PLAT_INFO_FUNC("retry(%d)consys chipId(0x%08x)\n", retry,consysHwChipId);
 				break;
 			}
 			msleep(20);
@@ -648,16 +615,13 @@ INT32 mtk_wcn_consys_hw_reg_ctrl(UINT32 on,UINT32 co_clock_en)
 
 #if PWR_ON_OFF_API_AVALIABLE
 
-		WMT_PLAT_INFO_FUNC("\n conn_power_off begin\n");
 		/*power off connsys by API (MT6582, MT6572 are different) API: conn_power_off()	*/
 		iRet = conn_power_off();//consult clkmgr owner 
-		WMT_PLAT_INFO_FUNC("\n conn_power_off end\n");
 		if(iRet)
 		{
 			WMT_PLAT_ERR_FUNC("conn_power_off fail(%d)\n",iRet);
 		}else
 		{
-			WMT_PLAT_INFO_FUNC("conn_power_off ok\n");
 		}
 #else
 		/*assert SW reset of connsys, conn_ap_sw_rst_b=0 (MT6572 with the same addr)		0x10006280[0]	1'b0		*/		
@@ -689,7 +653,6 @@ INT32 mtk_wcn_consys_hw_reg_ctrl(UINT32 on,UINT32 co_clock_en)
 #endif
 
 	}
-	WMT_PLAT_INFO_FUNC("CONSYS-HW-REG-CTRL(0x%08x),finish\n",on);
 	return 0;
 }
 #endif
@@ -698,7 +661,6 @@ INT32
 mtk_wcn_consys_hw_gpio_ctrl (UINT32 on)
 {
     INT32 iRet = 0;
-	WMT_PLAT_INFO_FUNC("CONSYS-HW-GPIO-CTRL(0x%08x), start\n",on);
 
 	if(on)
 	{
@@ -714,14 +676,12 @@ mtk_wcn_consys_hw_gpio_ctrl (UINT32 on)
 	    //iRet += wmt_plat_gpio_ctrl(PIN_BGF_EINT, PIN_STA_MUX);
 	    iRet += wmt_plat_eirq_ctrl(PIN_BGF_EINT, PIN_STA_INIT);
 		iRet += wmt_plat_eirq_ctrl(PIN_BGF_EINT, PIN_STA_EINT_DIS);
-	    WMT_PLAT_INFO_FUNC("CONSYS-HW, BGF IRQ registered and disabled \n");
 
 	}else{
 
 	    /* set bgf eint/all eint to deinit state, namely input low state*/
 	    iRet += wmt_plat_eirq_ctrl(PIN_BGF_EINT, PIN_STA_EINT_DIS);
 		iRet += wmt_plat_eirq_ctrl(PIN_BGF_EINT, PIN_STA_DEINIT);
-	    WMT_PLAT_INFO_FUNC("CONSYS-HW, BGF IRQ unregistered and disabled\n");
 	    //iRet += wmt_plat_gpio_ctrl(PIN_BGF_EINT, PIN_STA_DEINIT);
 
 		/*if external modem used,GPS_SYNC still needed to control*/
@@ -732,7 +692,6 @@ mtk_wcn_consys_hw_gpio_ctrl (UINT32 on)
 	    
 
 	}
-	WMT_PLAT_INFO_FUNC("CONSYS-HW-GPIO-CTRL(0x%08x), finish\n",on);
     return iRet;
 
 }
@@ -741,7 +700,6 @@ INT32 mtk_wcn_consys_hw_pwr_on(UINT32 co_clock_en)
 {
 	INT32 iRet = 0;
 
-	WMT_PLAT_INFO_FUNC("CONSYS-HW-PWR-ON, start\n");
 
 	iRet += mtk_wcn_consys_hw_reg_ctrl(1,co_clock_en);
 	iRet += mtk_wcn_consys_hw_gpio_ctrl(1);
@@ -751,7 +709,6 @@ INT32 mtk_wcn_consys_hw_pwr_on(UINT32 co_clock_en)
 		mtk_wcn_consys_jtag_set_for_mcu();
 	}
 #endif
-	WMT_PLAT_INFO_FUNC("CONSYS-HW-PWR-ON, finish(%d)\n",iRet);
 	return iRet;
 }
 
@@ -759,12 +716,10 @@ INT32 mtk_wcn_consys_hw_pwr_off (VOID)
 {
 	INT32 iRet = 0;
 
-	WMT_PLAT_INFO_FUNC("CONSYS-HW-PWR-OFF, start\n");
 
 	iRet += mtk_wcn_consys_hw_reg_ctrl(0,0);
 	iRet += mtk_wcn_consys_hw_gpio_ctrl(0);
 
-	WMT_PLAT_INFO_FUNC("CONSYS-HW-PWR-OFF, finish(%d)\n",iRet);
 	return iRet;
 }
 
@@ -773,7 +728,6 @@ INT32
 mtk_wcn_consys_hw_rst (UINT32 co_clock_en)
 {
     INT32 iRet = 0;
-    WMT_PLAT_INFO_FUNC("CONSYS-HW, hw_rst start, eirq should be disabled before this step\n");
 
     /*1. do whole hw power off flow*/
     iRet += mtk_wcn_consys_hw_reg_ctrl(0,co_clock_en);
@@ -781,7 +735,6 @@ mtk_wcn_consys_hw_rst (UINT32 co_clock_en)
     /*2. do whole hw power on flow*/
     iRet += mtk_wcn_consys_hw_reg_ctrl(1,co_clock_en);
 
-    WMT_PLAT_INFO_FUNC("CONSYS-HW, hw_rst finish, eirq should be enabled after this step\n");
     return iRet;
 }
 #if  BT_WIFI_SHARE_V33
@@ -798,7 +751,6 @@ INT32 mtk_wcn_consys_hw_bt_paldo_ctrl(UINT32 enable)
 #if CONSYS_PMIC_CTRL_ENABLE 
 			pmic_set_register_value(PMIC_VCN33_LP_SET,0);
 #endif
-			WMT_PLAT_INFO_FUNC("WMT do BT/WIFI v3.3 on\n");
 			gBtWifiV33.counter++;
 		}
 
@@ -809,7 +761,6 @@ INT32 mtk_wcn_consys_hw_bt_paldo_ctrl(UINT32 enable)
 #if CONSYS_PMIC_CTRL_ENABLE 
 			pmic_set_register_value(PMIC_VCN33_LP_SET,1);
 #endif
-			WMT_PLAT_INFO_FUNC("WMT do BT/WIFI v3.3 off\n");
 			gBtWifiV33.counter--;
 		} else if(2 == gBtWifiV33.counter){
 			gBtWifiV33.counter--;
@@ -843,7 +794,6 @@ INT32 mtk_wcn_consys_hw_bt_paldo_ctrl(UINT32 enable)
 			}
 		}
 #endif
-		WMT_PLAT_INFO_FUNC("WMT do BT PMIC on\n");
 	}else{
 		/*do BT PMIC off*/
 		/*switch BT PALDO control from HW mode to SW mode:0x416[5]-->0x0*/
@@ -869,7 +819,6 @@ INT32 mtk_wcn_consys_hw_wifi_paldo_ctrl(UINT32 enable)
 			}
 		}
 #endif
-		WMT_PLAT_INFO_FUNC("WMT do WIFI PMIC on\n");
 	}else{
 		/*do WIFI PMIC off*/
 		/*switch WIFI PALDO control from HW mode to SW mode:0x418[14]-->0x0*/
@@ -877,7 +826,6 @@ INT32 mtk_wcn_consys_hw_wifi_paldo_ctrl(UINT32 enable)
 		if(reg_V33_WIFI)
 			regulator_disable(reg_V33_WIFI);  
 #endif
-		WMT_PLAT_INFO_FUNC("WMT do WIFI PMIC off\n");
 	}
 	return 0;
 }
@@ -890,13 +838,11 @@ INT32 mtk_wcn_consys_hw_vcn28_ctrl(UINT32 enable)
 #if CONSYS_PMIC_CTRL_ENABLE 
 		pmic_set_register_value(PMIC_VCN28_ON_CTRL,1);
 #endif
-		WMT_PLAT_INFO_FUNC("turn on vcn28 for fm/gps usage in co-clock mode\n");
 	}else{
 		/*in co-clock mode,need to turn off vcn28 when fm off*/
 #if CONSYS_PMIC_CTRL_ENABLE 
 		pmic_set_register_value(PMIC_VCN28_ON_CTRL,0);
 #endif
-		WMT_PLAT_INFO_FUNC("turn off vcn28 for fm/gps usage in co-clock mode\n");
 	}
 	return 0;
 }
@@ -911,15 +857,12 @@ UINT32 mtk_wcn_consys_hw_osc_en_ctrl(UINT32 en)
 {
 	if(en)
 	{
-		WMT_PLAT_INFO_FUNC("enable consys sleep mode(turn off 26M)\n");
 		CONSYS_REG_WRITE(CONSYS_AP2CONN_OSC_EN_REG, CONSYS_REG_READ(CONSYS_AP2CONN_OSC_EN_REG) & ~CONSYS_AP2CONN_OSC_EN_BIT);
 	}else
 	{
-		WMT_PLAT_INFO_FUNC("disable consys sleep mode\n");
 		CONSYS_REG_WRITE(CONSYS_AP2CONN_OSC_EN_REG, CONSYS_REG_READ(CONSYS_AP2CONN_OSC_EN_REG) | CONSYS_AP2CONN_OSC_EN_BIT);	
 	}
 
-	WMT_PLAT_INFO_FUNC("dump CONSYS_AP2CONN_OSC_EN_REG(0x%x)\n",CONSYS_REG_READ(CONSYS_AP2CONN_OSC_EN_REG));
 
 	return 0;
 }
@@ -934,7 +877,6 @@ INT32 mtk_wcn_consys_hw_restore(struct device *device)
 	
 #if CONSYS_EMI_MPU_SETTING
 		/*set MPU for EMI share Memory*/
-		WMT_PLAT_INFO_FUNC("setting MPU for EMI share memory\n");
 #if EMI_MPU_PROTECTION_IS_READY
 		emi_mpu_set_region_protection(gConEmiPhyBase + SZ_1M/2,
 			gConEmiPhyBase + SZ_1M - 1,
@@ -952,7 +894,6 @@ INT32 mtk_wcn_consys_hw_restore(struct device *device)
 		CONSYS_REG_WRITE(conn_reg.topckgen_base + CONSYS_EMI_MAPPING_OFFSET, \
 							CONSYS_REG_READ(conn_reg.topckgen_base + CONSYS_EMI_MAPPING_OFFSET) | addrPhy);
 
-		WMT_PLAT_INFO_FUNC("CONSYS_EMI_MAPPING dump in restore cb(0x%08x)\n",CONSYS_REG_READ(conn_reg.topckgen_base + CONSYS_EMI_MAPPING_OFFSET));
 
 #if 1
 		pEmibaseaddr = ioremap_nocache(gConEmiPhyBase + SZ_1M/2, CONSYS_EMI_MEM_SIZE);
@@ -961,7 +902,6 @@ INT32 mtk_wcn_consys_hw_restore(struct device *device)
 #endif
 		if(pEmibaseaddr)
 		{
-			WMT_PLAT_INFO_FUNC("EMI mapping OK(0x%p)\n",pEmibaseaddr);
 			memset(pEmibaseaddr,0,CONSYS_EMI_MEM_SIZE);
 		}else{
 			WMT_PLAT_ERR_FUNC("EMI mapping fail\n");
@@ -991,14 +931,12 @@ RESERVEDMEM_OF_DECLARE(reserve_memory_test, "consys-reserve-memory", reserve_mem
 VOID __init mtk_wcn_consys_memory_reserve(VOID)
 {
 #if CONFIG_MTK_WCN_ARM64
-		WMT_PLAT_INFO_FUNC("Reserved memory by device tree!\n");
 //		gConEmiPhyBase = arm64_memblock_steal(SZ_2M,SZ_2M);
 #else
 	gConEmiPhyBase = arm_memblock_steal(SZ_2M,SZ_2M);
 
 	if(gConEmiPhyBase)
 	{
-		WMT_PLAT_INFO_FUNC("memblock done: 0x%zx\n",(SIZE_T)gConEmiPhyBase);
 	}else
 	{
 		WMT_PLAT_ERR_FUNC("memblock fail\n");
@@ -1024,15 +962,10 @@ INT32 mtk_wcn_consys_hw_init()
 	if(node){
 		/* registers base address*/
 		conn_reg.mcu_base = (SIZE_T)of_iomap(node, 0);
-		WMT_PLAT_INFO_FUNC("Get mcu register base(0x%zx)\n",conn_reg.mcu_base);
 		conn_reg.ap_rgu_base = (SIZE_T)of_iomap(node, 1);
-		WMT_PLAT_INFO_FUNC("Get ap_rgu register base(0x%zx)\n",conn_reg.ap_rgu_base);
 		conn_reg.topckgen_base = (SIZE_T)of_iomap(node, 2);
-		WMT_PLAT_INFO_FUNC("Get topckgen register base(0x%zx)\n",conn_reg.topckgen_base);
 		conn_reg.spm_base = (SIZE_T)of_iomap(node, 3);
-		WMT_PLAT_INFO_FUNC("Get spm register base(0x%zx)\n",conn_reg.spm_base);
 		conn_reg.da_xobuf_base= (SIZE_T)of_iomap(node, 4);
-		WMT_PLAT_INFO_FUNC("Get xo_buf register base(0x%zx)\n",conn_reg.da_xobuf_base);
 	} else {
 		WMT_PLAT_ERR_FUNC("[%s] can't find CONSYS compatible node\n",__func__);
 		return iRet;
@@ -1042,7 +975,6 @@ INT32 mtk_wcn_consys_hw_init()
 	{
 #if CONSYS_EMI_MPU_SETTING
 		/*set MPU for EMI share Memory*/
-		WMT_PLAT_INFO_FUNC("setting MPU for EMI share memory\n");
 #if EMI_MPU_PROTECTION_IS_READY
 		emi_mpu_set_region_protection(gConEmiPhyBase + SZ_1M/2,
 			gConEmiPhyBase + SZ_1M - 1,
@@ -1051,8 +983,6 @@ INT32 mtk_wcn_consys_hw_init()
 #endif
 
 #endif
-		WMT_PLAT_INFO_FUNC("get consys start phy address(0x%zx)\n",(SIZE_T)gConEmiPhyBase);
-
 		/*consys to ap emi remapping register:10001310, cal remapping address*/
 		addrPhy = (gConEmiPhyBase & 0xFFF00000) >> 20;
 
@@ -1062,8 +992,6 @@ INT32 mtk_wcn_consys_hw_init()
 		CONSYS_REG_WRITE(conn_reg.topckgen_base + CONSYS_EMI_MAPPING_OFFSET, \
 							CONSYS_REG_READ(conn_reg.topckgen_base + CONSYS_EMI_MAPPING_OFFSET) | addrPhy);
 
-		WMT_PLAT_INFO_FUNC("CONSYS_EMI_MAPPING dump(0x%08x)\n",CONSYS_REG_READ(conn_reg.topckgen_base + CONSYS_EMI_MAPPING_OFFSET));
-
 
 #if 1
 		pEmibaseaddr = ioremap_nocache(gConEmiPhyBase + SZ_1M/2, CONSYS_EMI_MEM_SIZE);
@@ -1073,7 +1001,6 @@ INT32 mtk_wcn_consys_hw_init()
 		//pEmibaseaddr = ioremap_nocache(0x80090400,270*KBYTE);
 		if(pEmibaseaddr)
 		{
-			WMT_PLAT_INFO_FUNC("EMI mapping OK(0x%p)\n",pEmibaseaddr);
 			memset(pEmibaseaddr,0,CONSYS_EMI_MEM_SIZE);
 			iRet = 0;
 		}else{
@@ -1085,7 +1012,6 @@ INT32 mtk_wcn_consys_hw_init()
 		WMT_PLAT_ERR_FUNC("consys emi memory address gConEmiPhyBase invalid\n");
 	}
 #ifdef CONFIG_MTK_HIBERNATION
-	WMT_PLAT_INFO_FUNC("register connsys restore cb for complying with IPOH function\n");
 	register_swsusp_restore_noirq_func(ID_M_CONNSYS,mtk_wcn_consys_hw_restore,NULL);
 #endif
 	return iRet;
diff --git a/drivers/misc/mediatek/cqdma/cqdma.c b/drivers/misc/mediatek/cqdma/cqdma.c
index 1b58f1200..9d1c135e3 100644
--- a/drivers/misc/mediatek/cqdma/cqdma.c
+++ b/drivers/misc/mediatek/cqdma/cqdma.c
@@ -318,24 +318,16 @@ int mt_config_gdma(int channel, struct mt_gdma_conf *config, DMA_CONF_FLAG flag)
 
 			/*setup security channel */
 			if (config->sec){
-				pr_notice("1:ChSEC:%x\n",readl(DMA_GDMA_SEC_EN));
 				mt_reg_sync_writel((DMA_SEC_EN_BIT|readl(DMA_GDMA_SEC_EN)), DMA_GDMA_SEC_EN);
-				pr_notice("2:ChSEC:%x\n",readl(DMA_GDMA_SEC_EN));
 			} else {
-				pr_notice("1:ChSEC:%x\n",readl(DMA_GDMA_SEC_EN));
 				mt_reg_sync_writel(((~DMA_SEC_EN_BIT)&readl(DMA_GDMA_SEC_EN)), DMA_GDMA_SEC_EN);
-				pr_notice("2:ChSEC:%x\n",readl(DMA_GDMA_SEC_EN));
 			}
 
 			/*setup domain_cfg */
 			if (config->domain){
-				pr_notice("1:Domain_cfg:%x\n",readl(DMA_GDMA_SEC_EN));
 				mt_reg_sync_writel(((config->domain << 1) | readl(DMA_GDMA_SEC_EN)), DMA_GDMA_SEC_EN);
-				pr_notice("2:Domain_cfg:%x\n",readl(DMA_GDMA_SEC_EN));
 			} else {
-				pr_notice("1:Domain_cfg:%x\n",readl(DMA_GDMA_SEC_EN));
 				mt_reg_sync_writel((0x1 & readl(DMA_GDMA_SEC_EN)), DMA_GDMA_SEC_EN);
-				pr_notice("2:Domain_cfg:%x\n",readl(DMA_GDMA_SEC_EN));
 			}
 
 			if (config->wpen) {
@@ -599,9 +591,6 @@ static void irq_dma_handler(void * data)
 		}
 	}
 	DMA_INT_DONE=1;
-	if (i == LEN) {
-		pr_notice("DMA verified ok\n");
-	}
 	mt_free_gdma(channel);
 }
 
@@ -620,7 +609,6 @@ static void APDMA_test_transfer(int testcase)
 
 	channel = mt_req_gdma(GDMA_ANY);
 
-	pr_notice("GDMA channel:%ld\n",channel);
 	if(channel < 0 ){
 		pr_err("[CQDMA] ERROR Register DMA\n");
 		return;
@@ -671,7 +659,6 @@ static void APDMA_test_transfer(int testcase)
 	case 1:
 		while(!DMA_INT_DONE);
 		DMA_INT_DONE=0;
-		pr_notice("CQDMA INT mode PASS!!\n");
 		break;
 	case 2:
 		if (mt_polling_gdma(channel, GDMA_WARM_RST_TIMEOUT) != 0) {
@@ -685,13 +672,11 @@ static void APDMA_test_transfer(int testcase)
 				goto _exit;
                 	}
 		}
-		pr_notice("Polling succeeded\n");
 		break;
 	case 3:
 		mt_warm_reset_gdma(channel);
 		for(i = 0; i < LEN; i++) {
 			if(dma_dst_array_v[i] != dma_src_array_v[i]) {
-				pr_notice("Warm reset succeeded\n");
 				break;
 			}
 		}
@@ -705,7 +690,6 @@ static void APDMA_test_transfer(int testcase)
 		mt_hard_reset_gdma(channel);
 		for(i = 0; i < LEN; i++) {
 			if(dma_dst_array_v[i] != dma_src_array_v[i]) {
-				pr_notice("Hard reset succeeded\n");
 				break;
 			}
 		}
@@ -817,25 +801,20 @@ static int __init init_cqdma(void)
 		pr_warn("unable to map CQDMA base registers!!!\n");
 		return -ENODEV;
 	}
-	pr_notice("[CQDMA] vbase = 0x%p\n", env_info.base );
 
 	irq = irq_of_parse_and_map(node, 0);
-	pr_notice("[CQDMA] irq = %d\n", irq);
 
 	/* get the interrupt line behaviour */
 	if (of_property_read_u32_array(node, "interrupts", dma_info, ARRAY_SIZE(dma_info))){
 		pr_err("[CQDMA] get irq flags from DTS fail!!\n");
 		return -ENODEV;
 	}
-	pr_notice("[CQDMA] int attr = %x\n", dma_info[2]);
-
 	
 	of_property_read_u32(node, "nr_channel", &nr_channel);
 	if (!nr_channel) {
 		pr_err("[CQDMA] no channel found\n");
 		return -ENODEV;
 	}
-	pr_notice("[CQDMA] DMA channel = %d\n", nr_channel);
 	cqdma_reset(nr_channel);
 
 	ret = request_irq(irq, gdma1_irq_handler, dma_info[2] | IRQF_SHARED, "CQDMA", &dma_ctrl);
diff --git a/drivers/misc/mediatek/devapc/mt6580/devapc.c b/drivers/misc/mediatek/devapc/mt6580/devapc.c
index 4440fc4dd..9af4798f7 100644
--- a/drivers/misc/mediatek/devapc/mt6580/devapc.c
+++ b/drivers/misc/mediatek/devapc/mt6580/devapc.c
@@ -166,15 +166,12 @@ int mt_devapc_check_emi_violation(void)
 
 int mt_devapc_emi_initial(void)
 {
-    pr_warn("EMI_DAPC Init start \n");
-
     devapc_ioremap();
     
     mt_reg_sync_writel(readl(IOMEM(DEVAPC0_APC_CON)) & (0xFFFFFFFF ^ (1 << 2)), DEVAPC0_APC_CON);
     mt_reg_sync_writel(readl(IOMEM(DEVAPC0_PD_APC_CON)) & (0xFFFFFFFF ^ (1 << 2)), DEVAPC0_PD_APC_CON);
     mt_reg_sync_writel(ABORT_EMI, DEVAPC0_D0_VIO_STA_3);
     mt_reg_sync_writel(readl(IOMEM(DEVAPC0_D0_VIO_MASK_3)) & (0xFFFFFFFF ^ (ABORT_EMI)), DEVAPC0_D0_VIO_MASK_3);
-    pr_warn("EMI_DAPC Init done \n");
     return 0;
 }
 
@@ -233,7 +230,6 @@ static int devapc_ioremap(void)
     node = of_find_compatible_node(NULL, NULL, "mediatek,DEVAPC_AO");
     if (node) {
        devapc_ao_base = of_iomap(node, 0);
-       pr_warn("[DEVAPC] AO_ADDRESS=%p \n",devapc_ao_base);
     } else {
        pr_warn("[DEVAPC] can't find DAPC_AO compatible node \n");
        return -1;
@@ -243,7 +239,6 @@ static int devapc_ioremap(void)
     if (node) {
        devapc_pd_base = of_iomap(node, 0);
        devapc_irq = irq_of_parse_and_map(node, 0);
-       pr_warn("[DEVAPC] PD_ADDRESS=%p, IRD: %d \n",devapc_pd_base,devapc_irq );
     } else {
        pr_warn("[DEVAPC] can't find DAPC_PD compatible node \n");
        return -1;
@@ -277,8 +272,6 @@ static int devapc_pm_restore_noirq(struct device *device)
 #if defined(CONFIG_TRUSTONIC_TEE_SUPPORT)
 static void start_devapc(void)
 {
-    pr_warn("[DEVAPC] Walk TEE path\n");
-
     mt_reg_sync_writel(readl(DEVAPC0_PD_APC_CON) & (0xFFFFFFFF ^ (1<<2)), DEVAPC0_PD_APC_CON);
 }
 #else
@@ -462,7 +455,6 @@ static int devapc_probe(struct platform_device *dev)
 {
     int ret;
 
-    pr_warn("[DEVAPC] module probe. \n");
     /*IO remap*/
     devapc_ioremap();
     /*
@@ -496,7 +488,6 @@ static int devapc_suspend(struct platform_device *dev, pm_message_t state)
 
 static int devapc_resume(struct platform_device *dev)
 {
-    pr_info("[DEVAPC] module resume. \n");
     start_devapc();
 
     return 0;
@@ -528,8 +519,6 @@ static int __init devapc_init(void)
     /*You do not need to open the clock for Rainier*/
     //enable_clock(MT_CG_INFRA_DEVICE_APC,"DEVAPC");
     
-    pr_warn("[DEVAPC] module init. \n");
-
     ret = platform_device_register(&devapc_device);
     if (ret) {
         pr_err("[DEVAPC] Unable to do device register(%d)\n", ret);
@@ -560,7 +549,6 @@ static int __init devapc_init(void)
  */
 static void __exit devapc_exit(void)
 {
-    pr_info("[DEVAPC] DEVAPC module exit\n");
 #ifdef CONFIG_MTK_HIBERNATION
     unregister_swsusp_restore_noirq_func(ID_M_DEVAPC);
 #endif
diff --git a/drivers/misc/mediatek/devinfo/mt6580/devinfo.c b/drivers/misc/mediatek/devinfo/mt6580/devinfo.c
index 31785da38..6f21a8394 100644
--- a/drivers/misc/mediatek/devinfo/mt6580/devinfo.c
+++ b/drivers/misc/mediatek/devinfo/mt6580/devinfo.c
@@ -138,7 +138,6 @@ static int __init devinfo_init(void)
     struct device *device;
 
     devinfo_dev = MKDEV(MAJOR_DEV_NUM, 0);
-    pr_info("[%s]init\n",MODULE_NAME);
     ret = register_chrdev_region(devinfo_dev, 1, DEV_NAME );
     if (ret) {
         pr_info("[%s] register device failed, ret:%d\n", MODULE_NAME, ret);
@@ -191,7 +190,6 @@ static int __init devinfo_parse_dt(unsigned long node, const char *uname, int de
             g_devinfo_data[i] = tags->data[i];
         }
         /* print chip id for debugging purpose */
-        pr_info("tag_devinfo_data size:%d\n", size);
     }
     return 1;
 }
diff --git a/drivers/misc/mediatek/dispsys/mt6580/ddp_color.c b/drivers/misc/mediatek/dispsys/mt6580/ddp_color.c
index 66c14ef99..ba3ae3698 100644
--- a/drivers/misc/mediatek/dispsys/mt6580/ddp_color.c
+++ b/drivers/misc/mediatek/dispsys/mt6580/ddp_color.c
@@ -921,7 +921,6 @@ void DpEngine_COLORonInit(DISP_MODULE_ENUM module, void* __cmdq)
     }
 
 #ifndef CONFIG_FPGA_EARLY_PORTING
-    COLOR_DBG("DpEngine_COLORonInit(), en[%d],  x[0x%x], y[0x%x] \n", g_split_en, g_split_window_x, g_split_window_y);
     _color_reg_set(cmdq, DISP_COLOR_DBG_CFG_MAIN + offset, g_split_en << 3);
     _color_reg_set(cmdq, DISP_COLOR_WIN_X_MAIN + offset, g_split_window_x);
     _color_reg_set(cmdq, DISP_COLOR_WIN_Y_MAIN + offset, g_split_window_y);
@@ -1115,8 +1114,6 @@ static void ddp_color_set_window(DISP_PQ_WIN_PARAM *win_param, void* __cmdq)
         g_split_window_y = 0xFFFF0000;
     }
 
-    COLOR_DBG("ddp_color_set_window(), en[%d],  x[0x%x], y[0x%x] \n", g_split_en, g_split_window_x, g_split_window_y);
-
     _color_reg_mask(cmdq, DISP_COLOR_DBG_CFG_MAIN + offset, (g_split_en<<3), 0x00000008); //split enable
     _color_reg_set(cmdq, DISP_COLOR_WIN_X_MAIN + offset, g_split_window_x);
     _color_reg_set(cmdq, DISP_COLOR_WIN_Y_MAIN + offset, g_split_window_y);
@@ -1130,7 +1127,6 @@ static unsigned long color_get_TDSHP_VA(void)
 
     node = of_find_compatible_node(NULL, NULL, "mediatek,MDP_TDSHP");
     VA = (unsigned long)of_iomap(node, 0);
-    COLOR_DBG("TDSHP VA: 0x%lx\n", VA);
 
     return VA;
 }
@@ -1150,7 +1146,6 @@ static unsigned int color_is_reg_addr_valid(unsigned long addr)
 
     if(i < DISP_REG_NUM)
     {
-        COLOR_DBG("addr valid, addr=0x%lx, module=%s!\n", addr, ddp_get_reg_module_name(i));
         return 1;
     }
     else
@@ -1159,7 +1154,6 @@ static unsigned int color_is_reg_addr_valid(unsigned long addr)
         if((addr >= g_tdshp_va) &&
            (addr < (g_tdshp_va + 0x1000)))
         {
-            COLOR_DBG("addr valid, addr=0x%lx, module=%s!\n", addr, "TDSHP");
             return 2;
         }
         else
@@ -1180,7 +1174,6 @@ static unsigned long color_pa2va(unsigned int addr)
         if((addr >= ddp_reg_pa_base[i]) &&
            (addr < (ddp_reg_pa_base[i] + 0x1000)))
         {
-            COLOR_DBG("color_pa2va(), COLOR PA:0x%x, PABase[0x%lx], VABase[0x%lx] \n", addr, ddp_reg_pa_base[i], dispsys_reg[i]);
             return dispsys_reg[i] + (addr - ddp_reg_pa_base[i]);
         }
     }
@@ -1189,7 +1182,6 @@ static unsigned long color_pa2va(unsigned int addr)
     if ((TDSHP_PA_BASE <= addr) &&
         (addr < (TDSHP_PA_BASE + 0x1000)))
     {
-        COLOR_DBG("color_pa2va(), TDSHP PA:0x%x, PABase[0x%x], VABase[0x%lx] \n", addr, TDSHP_PA_BASE, g_tdshp_va);
         return g_tdshp_va + (addr - TDSHP_PA_BASE);
     }
 
@@ -1295,7 +1287,6 @@ static int _color_clock_on(DISP_MODULE_ENUM module, void *cmq_handle)
 {
 #ifdef ENABLE_CLK_MGR
         enable_clock(MT_CG_DISP0_DISP_COLOR , "DDP");
-        COLOR_DBG("color[0]_clock_on CG 0x%x \n",DISP_REG_GET(DISP_REG_CONFIG_MMSYS_CG_CON0));
 #endif
 
     return 0;
@@ -1304,7 +1295,6 @@ static int _color_clock_on(DISP_MODULE_ENUM module, void *cmq_handle)
 static int _color_clock_off(DISP_MODULE_ENUM module, void *cmq_handle)
 {
 #ifdef ENABLE_CLK_MGR
-        COLOR_DBG("color[0]_clock_off\n");
         disable_clock(MT_CG_DISP0_DISP_COLOR, "DDP");
 #endif
     return 0;
@@ -1362,7 +1352,6 @@ static int _color_io(DISP_MODULE_ENUM module, int msg, unsigned long arg, void *
     DISPLAY_PQ_T * pq_index;
     DISPLAY_TDSHP_T * tdshp_index;
 
-    COLOR_DBG("_color_io: msg %x\n", msg);
     //COLOR_ERR("_color_io: GET_PQPARAM %lx\n", DISP_IOCTL_GET_PQPARAM);
     //COLOR_ERR("_color_io: SET_PQPARAM %lx\n", DISP_IOCTL_SET_PQPARAM);
     //COLOR_ERR("_color_io: READ_REG %lx\n", DISP_IOCTL_READ_REG);
@@ -1386,13 +1375,10 @@ static int _color_io(DISP_MODULE_ENUM module, int msg, unsigned long arg, void *
                 DpEngine_COLORonConfig(DISP_MODULE_COLOR0, g_color0_dst_w, g_color0_dst_h, cmdq);
 
                 color_trigger_refresh(DISP_MODULE_COLOR0);
-
-                COLOR_DBG("SET_PQ_PARAM(0)\n");
             }
             else
             {
                 //ncs_tuning_mode = 0;
-                COLOR_DBG("SET_PQ_PARAM(0), bypassed by ncs_tuning_mode = 1 \n");
             }
 
             break;
@@ -1450,8 +1436,6 @@ static int _color_io(DISP_MODULE_ENUM module, int msg, unsigned long arg, void *
 #endif
 
         case DISP_IOCTL_SET_PQINDEX:
-            COLOR_DBG("DISP_IOCTL_SET_PQINDEX!\n");
-
             pq_index = get_Color_index();
             if(copy_from_user(pq_index, (void *)arg, sizeof(DISPLAY_PQ_T)))
             {
@@ -1475,8 +1459,6 @@ static int _color_io(DISP_MODULE_ENUM module, int msg, unsigned long arg, void *
 
         case DISP_IOCTL_SET_TDSHPINDEX:
 
-            COLOR_DBG("DISP_IOCTL_SET_TDSHPINDEX!\n");
-
             tdshp_index = get_TDSHP_index();
             if(copy_from_user(tdshp_index, (void *)arg, sizeof(DISPLAY_TDSHP_T)))
             {
@@ -1490,7 +1472,6 @@ static int _color_io(DISP_MODULE_ENUM module, int msg, unsigned long arg, void *
           
       	    if(tdshp_index_init == 0)
       	    {
-                COLOR_ERR("DISP_IOCTL_GET_TDSHPINDEX TDSHPINDEX not init\n");
                 return -EFAULT;	 
       	    }
             tdshp_index = get_TDSHP_index();
@@ -1556,13 +1537,11 @@ static int _color_io(DISP_MODULE_ENUM module, int msg, unsigned long arg, void *
             if(value == 1)
             {
                 ncs_tuning_mode = 1;
-                COLOR_DBG("ncs_tuning_mode = 1 \n");
             }
             else if(value == 2)
             {
 
                 ncs_tuning_mode = 0;
-                COLOR_DBG("ncs_tuning_mode = 0 \n");
                 color_trigger_refresh(DISP_MODULE_COLOR0);
             }
             else
@@ -1571,8 +1550,6 @@ static int _color_io(DISP_MODULE_ENUM module, int msg, unsigned long arg, void *
                 return -EFAULT;
             }
 
-            COLOR_DBG("DISP_IOCTL_MUTEX_CONTROL done: %d\n", value);
-
             break;
 
         case DISP_IOCTL_READ_REG:
@@ -1735,7 +1712,6 @@ static int _color_io(DISP_MODULE_ENUM module, int msg, unsigned long arg, void *
                 return -EFAULT;
             }
 
-            COLOR_DBG("DISP_IOCTL_PQ_SET_WINDOW, before set... en[%d], x[0x%x], y[0x%x] \n", g_split_en, g_split_window_x, g_split_window_y);
             ddp_color_set_window(&win_param, cmdq);
             color_trigger_refresh(DISP_MODULE_COLOR0);
 
@@ -1779,7 +1755,6 @@ static int _color_io(DISP_MODULE_ENUM module, int msg, unsigned long arg, void *
 
         default:
         {
-            COLOR_DBG("ioctl not supported failed\n");
             return -EFAULT;
         }
     }
diff --git a/drivers/misc/mediatek/dispsys/mt6580/ddp_drv.c b/drivers/misc/mediatek/dispsys/mt6580/ddp_drv.c
index 2591a2c5e..f779c9b94 100755
--- a/drivers/misc/mediatek/dispsys/mt6580/ddp_drv.c
+++ b/drivers/misc/mediatek/dispsys/mt6580/ddp_drv.c
@@ -137,8 +137,6 @@ static int disp_open(struct inode *inode, struct file *file)
 {
     disp_node_struct *pNode = NULL;
 
-    DDPDBG("enter disp_open() process:%s\n",current->comm);
-
     //Allocate and initialize private data
     file->private_data = kmalloc(sizeof(disp_node_struct) , GFP_ATOMIC);
     if(NULL == file->private_data)
@@ -166,7 +164,6 @@ static int disp_release(struct inode *inode, struct file *file)
 {
     disp_node_struct *pNode = NULL;
     unsigned int index = 0;
-    DDPDBG("enter disp_release() process:%s\n",current->comm);
 
     pNode = (disp_node_struct *)file->private_data;
 
@@ -331,7 +328,6 @@ static int disp_probe(struct platform_device *pdev)
 
 	////// power on MMSYS for early porting
 #ifdef CONFIG_MTK_FPGA
-	printk("[DISP Probe] power MMSYS:0x%lx,0x%lx\n",DISP_REG_CONFIG_MMSYS_CG_CLR0,DISP_REG_CONFIG_MMSYS_CG_CLR1);
 	DISP_REG_SET(NULL,DISP_REG_CONFIG_MMSYS_CG_CLR0,0xFFFFFFFF);
 	DISP_REG_SET(NULL,DISP_REG_CONFIG_MMSYS_CG_CLR1,0xFFFFFFFF);
 	//DISP_REG_SET(NULL,DISPSYS_CONFIG_BASE + 0xC04,0x1C000);//fpga should set this register
@@ -377,18 +373,12 @@ static void disp_shutdown(struct platform_device *pdev)
 /* PM suspend */
 static int disp_suspend(struct platform_device *pdev, pm_message_t mesg)
 {
-    printk("\n\n==== DISP suspend is called ====\n");
-
-
     return 0;
 }
 
 /* PM resume */
 static int disp_resume(struct platform_device *pdev)
 {
-    printk("\n\n==== DISP resume is called ====\n");
-
-
     return 0;
 }
 
diff --git a/drivers/misc/mediatek/dispsys/mt6580/ddp_dsi.c b/drivers/misc/mediatek/dispsys/mt6580/ddp_dsi.c
index 093c8c621..127843fb8 100755
--- a/drivers/misc/mediatek/dispsys/mt6580/ddp_dsi.c
+++ b/drivers/misc/mediatek/dispsys/mt6580/ddp_dsi.c
@@ -829,7 +829,6 @@ DSI_STATUS DSI_BackupRegisters(DISP_MODULE_ENUM module, cmdqRecHandle cmdq)
 		DSI_OUTREG32(cmdq,&regs->DSI_PHY_TIMECON3, AS_UINT32(&DSI_REG[i]->DSI_PHY_TIMECON3));
 		DSI_OUTREG32(cmdq,&regs->DSI_PHY_TIMECON4, AS_UINT32(&DSI_REG[i]->DSI_PHY_TIMECON4));
 		DSI_OUTREG32(cmdq,&regs->DSI_VM_CMD_CON, AS_UINT32(&DSI_REG[i]->DSI_VM_CMD_CON));
-		printk("DSI_BackupRegisters VM_CMD_EN %d TS_VFP_EN %d\n",DSI_REG[i]->DSI_VM_CMD_CON.VM_CMD_EN,DSI_REG[i]->DSI_VM_CMD_CON.TS_VFP_EN);
 	}
 
 	return DSI_STATUS_OK;
@@ -869,7 +868,6 @@ DSI_STATUS DSI_RestoreRegisters(DISP_MODULE_ENUM module, cmdqRecHandle cmdq)
 		DSI_OUTREG32(cmdq,&DSI_REG[i]->DSI_PHY_TIMECON3, AS_UINT32(&regs->DSI_PHY_TIMECON3));		
 		DSI_OUTREG32(cmdq,&DSI_REG[i]->DSI_PHY_TIMECON4, AS_UINT32(&regs->DSI_PHY_TIMECON4));
 		DSI_OUTREG32(cmdq,&DSI_REG[i]->DSI_VM_CMD_CON, AS_UINT32(&regs->DSI_VM_CMD_CON));
-		printk("DSI_RestoreRegisters VM_CMD_EN %d TS_VFP_EN %d\n",regs->DSI_VM_CMD_CON.VM_CMD_EN,regs->DSI_VM_CMD_CON.TS_VFP_EN);
 	}
 	return DSI_STATUS_OK;
 }
@@ -975,7 +973,6 @@ void DSI_Set_LFR(DISP_MODULE_ENUM module, cmdqRecHandle cmdq,unsigned int mode,
 {
     //LFR_MODE 0 disable,1 static mode ,2 dynamic mode 3,both
 	unsigned int i=0;
-	printk("module=%d,mode=%d,type=%d,enable=%d,skip_num=%d\n",module,mode,type,enable,skip_num);
 	for(i = DSI_MODULE_BEGIN(module);i <= DSI_MODULE_END(module);i++)
 	{
 		DSI_OUTREGBIT(cmdq,DSI_LFR_CON_REG,DSI_REG[i]->DSI_LFR_CON,LFR_MODE,mode);
@@ -994,7 +991,6 @@ void DSI_LFR_UPDATE(DISP_MODULE_ENUM module,cmdqRecHandle cmdq)
 	{
 		DSI_OUTREGBIT(cmdq,DSI_LFR_CON_REG,DSI_REG[i]->DSI_LFR_CON,LFR_UPDATE,0);	
 		DSI_OUTREGBIT(cmdq,DSI_LFR_CON_REG,DSI_REG[i]->DSI_LFR_CON,LFR_UPDATE,1);
-		DISPCHECK("DSI_LFR i %d\n",i);
 	}
 }
 
@@ -1005,7 +1001,6 @@ int DSI_LFR_Status_Check()
 	DSI_LFR_STA_REG lfr_skip_sta;	
 	lfr_skip_sta = DSI_REG[0]->DSI_LFR_STA;
 	status=lfr_skip_sta.LFR_SKIP_STA;
-	DISPCHECK("LFR_SKIP_CNT 0x%x LFR_SKIP_STA 0x%x,status 0x%x\n",lfr_skip_sta.LFR_SKIP_CNT,lfr_skip_sta.LFR_SKIP_STA,status);
 
 	return status;
 }
@@ -1506,7 +1501,6 @@ void DSI_PHY_TIMCONFIG(DISP_MODULE_ENUM module, cmdqRecHandle cmdq, LCM_DSI_PARA
 		DSI_OUTREGBIT(cmdq, DSI_PHY_TIMCON3_REG, DSI_REG[i]->DSI_PHY_TIMECON3,CLK_HS_PRPR,timcon3.CLK_HS_PRPR);
 		DSI_OUTREGBIT(cmdq, DSI_PHY_TIMCON3_REG, DSI_REG[i]->DSI_PHY_TIMECON3,CLK_HS_POST,timcon3.CLK_HS_POST);
 		DSI_OUTREGBIT(cmdq, DSI_PHY_TIMCON3_REG, DSI_REG[i]->DSI_PHY_TIMECON3,CLK_HS_EXIT,timcon3.CLK_HS_EXIT);
-		DISPCHECK("%s, 0x%08x,0x%08x,0x%08x,0x%08x\n", __func__, INREG32(&DSI_REG[i]->DSI_PHY_TIMECON0), INREG32(&DSI_REG[i]->DSI_PHY_TIMECON1), INREG32(&DSI_REG[i]->DSI_PHY_TIMECON2),INREG32(&DSI_REG[i]->DSI_PHY_TIMECON3));
 	}
 }
 
@@ -1605,7 +1599,6 @@ void DSI_Set_VM_CMD(DISP_MODULE_ENUM module, cmdqRecHandle cmdq)
 		{
 			DSI_OUTREGBIT(cmdq,DSI_VM_CMD_CON_REG,DSI_REG[i]->DSI_VM_CMD_CON,TS_VFP_EN,1);
 			DSI_OUTREGBIT(cmdq,DSI_VM_CMD_CON_REG,DSI_REG[i]->DSI_VM_CMD_CON,VM_CMD_EN,1);		
-			printk("DSI_Set_VM_CMD");
 		}
 	}
 	else
@@ -1696,19 +1689,6 @@ UINT32 DSI_dcs_read_lcm_reg_v2(DISP_MODULE_ENUM module, cmdqRecHandle cmdq, UINT
                         if(DSI_REG[d]->DSI_INTSTA.RD_RDY != 0 || DSI_REG[d]->DSI_INTSTA.CMD_DONE != 0)
                         {
                                 //dump cmdq & rxdata
-			    {
-				unsigned int i;
-                                DISPCHECK("Last DSI Read Why not clear irq???\n");
-                                DISPCHECK("DSI_CMDQ_SIZE  : %d \n",AS_UINT32(&DSI_REG[d]->DSI_CMDQ_SIZE));
-                                for(i=0;i<DSI_REG[d]->DSI_CMDQ_SIZE.CMDQ_SIZE;i++)
-                                {
-                                	      DISPCHECK("DSI_CMDQ_DATA%d : 0x%08x \n",i,AS_UINT32(&DSI_CMDQ_REG[d]->data[i]));
-                                }
-                                DISPCHECK("DSI_RX_DATA0   : 0x%08x \n", AS_UINT32(&DSI_REG[d]->DSI_RX_DATA0));
-                                DISPCHECK("DSI_RX_DATA1   : 0x%08x \n", AS_UINT32(&DSI_REG[d]->DSI_RX_DATA1));
-                                DISPCHECK("DSI_RX_DATA2   : 0x%08x \n", AS_UINT32(&DSI_REG[d]->DSI_RX_DATA2));
-                                DISPCHECK("DSI_RX_DATA3   : 0x%08x \n", AS_UINT32(&DSI_REG[d]->DSI_RX_DATA3));
-			    }
                                 //clear irq
 			        DSI_OUTREGBIT(cmdq, DSI_INT_STATUS_REG,DSI_REG[d]->DSI_INTSTA,RD_RDY,0);
 			        DSI_OUTREGBIT(cmdq, DSI_INT_STATUS_REG,DSI_REG[d]->DSI_INTSTA,CMD_DONE,0);
@@ -1800,26 +1780,8 @@ UINT32 DSI_dcs_read_lcm_reg_v2(DISP_MODULE_ENUM module, cmdqRecHandle cmdq, UINT
 			DSI_OUTREG32(cmdq, &read_data3, AS_UINT32(&DSI_REG[d]->DSI_RX_DATA3));
 
 			
-			{
-				unsigned int i;
-				DISPCHECK("DSI read begin i = %d --------------------\n",5-max_try_count);
-                                DISPCHECK("DSI_RX_STA     : 0x%08x \n", AS_UINT32(&DSI_REG[d]->DSI_TRIG_STA));
-                                DISPCHECK("DSI_CMDQ_SIZE  : %d \n", AS_UINT32(&DSI_REG[d]->DSI_CMDQ_SIZE));
-                                for(i=0;i<DSI_REG[d]->DSI_CMDQ_SIZE.CMDQ_SIZE;i++)
-                                {
-                                        DISPCHECK("DSI_CMDQ_DATA%d : 0x%08x \n",i, AS_UINT32(&DSI_CMDQ_REG[d]->data[i]));
-                                }
-                                DISPCHECK("DSI_RX_DATA0   : 0x%08x \n", AS_UINT32(&DSI_REG[d]->DSI_RX_DATA0));
-                                DISPCHECK("DSI_RX_DATA1   : 0x%08x \n", AS_UINT32(&DSI_REG[d]->DSI_RX_DATA1));
-                                DISPCHECK("DSI_RX_DATA2   : 0x%08x \n", AS_UINT32(&DSI_REG[d]->DSI_RX_DATA2));
-                                DISPCHECK("DSI_RX_DATA3   : 0x%08x \n", AS_UINT32(&DSI_REG[d]->DSI_RX_DATA3));
-                                DISPCHECK("DSI read end ----------------------------\n");
-			}
-                        
                         packet_type = read_data0.byte0;
 
-    			DISPCHECK("DSI read packet_type is 0x%x \n",packet_type);
-                        
                         // 0x02: acknowledge & error report
                         // 0x11: generic short read response(1 byte return)
                         // 0x12: generic short read response(2 byte return)
@@ -1841,7 +1803,6 @@ UINT32 DSI_dcs_read_lcm_reg_v2(DISP_MODULE_ENUM module, cmdqRecHandle cmdq, UINT
 					DISPCHECK("DSI read long packet data exceeds buffer size return size %d \n", recv_data_cnt);
 					recv_data_cnt = buffer_size;
 				}
-				DISPCHECK("DSI read long packet size: %d\n", recv_data_cnt);
                                 
                                 if(recv_data_cnt<=4)
                                 {
@@ -1871,7 +1832,6 @@ UINT32 DSI_dcs_read_lcm_reg_v2(DISP_MODULE_ENUM module, cmdqRecHandle cmdq, UINT
        				}
              			if(recv_data_cnt > buffer_size)
              			{
-                 			DISPCHECK("DSI read short packet data exceeds buffer size: %d\n", buffer_size);
                  			recv_data_cnt = buffer_size;
                                         memcpy((void*)buffer,(void*)&read_data0.byte1, recv_data_cnt);
              			}
@@ -1883,11 +1843,9 @@ UINT32 DSI_dcs_read_lcm_reg_v2(DISP_MODULE_ENUM module, cmdqRecHandle cmdq, UINT
        		        }
                         else if(packet_type = 0x02)
                         {
-                                DISPCHECK("read return type is 0x02, re-read\n");
                         }
                         else
                         {
-                                DISPCHECK("read return type is non-recognite, type = 0x%x\n",packet_type);
                                 return 0;
                         }
    		}while(packet_type == 0x02);
@@ -2135,7 +2093,6 @@ void DSI_set_cmdq_V3(DISP_MODULE_ENUM module, cmdqRecHandle cmdq, LCM_setting_ta
             if (0 != DSI_REG[d]->DSI_MODE_CTRL.MODE){//not in cmd mode
                 DSI_VM_CMD_CON_REG vm_cmdq;
                 OUTREG32(&vm_cmdq, AS_UINT32(&DSI_REG[d]->DSI_VM_CMD_CON));
-                printk("set cmdq in VDO mode\n");
                 if (count > 1)
                 {
                     vm_cmdq.LONG_PKT = 1;
@@ -2369,7 +2326,6 @@ int DSI_Send_ROI(DISP_MODULE_ENUM module, void* handle, unsigned int x, unsigned
 	data_array[1]= (y1_MSB<<24)|(y0_LSB<<16)|(y0_MSB<<8)|0x2b;
 	data_array[2]= (y1_LSB);
 	DSI_set_cmdq(module, handle, data_array, 3, 1);
-    printk("DSI_Send_ROI Done!\n");
 	
 	//data_array[0]= 0x002c3909;
 	//DSI_set_cmdq(module, handle, data_array, 1, 0);
@@ -2621,7 +2577,6 @@ int ddp_dsi_init(DISP_MODULE_ENUM module, cmdqRecHandle cmdq)
 		init_waitqueue_head(&_dsi_wait_vm_done_queue[i]);
 		init_waitqueue_head(&_dsi_wait_vm_cmd_done_queue[i]);
 		init_waitqueue_head(&_dsi_wait_sleep_out_done_queue[i]);
-		DISPCHECK("dsi%d initializing\n", i);
 	}
 	
 	disp_register_module_irq_callback(DISP_MODULE_DSI0, _DSI_INTERNAL_IRQ_Handler);
@@ -2691,27 +2646,18 @@ void _dump_dsi_params(LCM_DSI_PARAMS* dsi_config)
 			switch(dsi_config->mode)
 			{
 				case CMD_MODE:
-					DISPCHECK("[DDPDSI] DSI Mode: CMD_MODE\n");
 					break;
 				case SYNC_PULSE_VDO_MODE:
-					DISPCHECK("[DDPDSI] DSI Mode: SYNC_PULSE_VDO_MODE\n");
 					break;
 				case SYNC_EVENT_VDO_MODE:
-					DISPCHECK("[DDPDSI] DSI Mode: SYNC_EVENT_VDO_MODE\n");
 					break;
 				case BURST_VDO_MODE:
-					DISPCHECK("[DDPDSI] DSI Mode: BURST_VDO_MODE\n");
 					break;
 				default:
-					DISPCHECK("[DDPDSI] DSI Mode: Unknown\n");
 					break;
 			}		
 		
 //			DISPCHECK("[DDPDSI] LANE_NUM: %d,data_format: %d,vertical_sync_active: %d\n",dsi_config->LANE_NUM,dsi_config->data_format);
-			DISPCHECK("[DDPDSI] vact: %d, vbp: %d, vfp: %d, vact_line: %d, hact: %d, hbp: %d, hfp: %d, hblank: %d\n",dsi_config->vertical_sync_active, dsi_config->vertical_backporch,dsi_config->vertical_frontporch,dsi_config->vertical_active_line,dsi_config->horizontal_sync_active,dsi_config->horizontal_backporch,dsi_config->horizontal_frontporch,dsi_config->horizontal_blanking_pixel);
-			DISPCHECK("[DDPDSI] pll_select: %d, pll_div1: %d, pll_div2: %d, fbk_div: %d,fbk_sel: %d, rg_bir: %d\n",dsi_config->pll_select,dsi_config->pll_div1,dsi_config->pll_div2,dsi_config->fbk_div,dsi_config->fbk_sel,dsi_config->rg_bir);
-			DISPCHECK("[DDPDSI] rg_bic: %d, rg_bp: %d, PLL_CLOCK: %d, dsi_clock: %d, ssc_range: %d,	ssc_disable: %d, compatibility_for_nvk: %d, cont_clock: %d\n", dsi_config->rg_bic,	dsi_config->rg_bp,dsi_config->PLL_CLOCK,dsi_config->dsi_clock,dsi_config->ssc_range,dsi_config->ssc_disable,dsi_config->compatibility_for_nvk,dsi_config->cont_clock);
-			DISPCHECK("[DDPDSI] lcm_ext_te_enable: %d, noncont_clock: %d, noncont_clock_period: %d\n", dsi_config->lcm_ext_te_enable,dsi_config->noncont_clock,dsi_config->noncont_clock_period);
 	}
 
 	return;
@@ -2765,16 +2711,13 @@ static void DSI_PHY_CLK_LP_PerLine_config(DISP_MODULE_ENUM module, cmdqRecHandle
 			v_b = (timcon3.CLK_HS_EXIT + timcon0.LPX + timcon3.CLK_HS_PRPR + timcon2.CLK_ZERO)*lane_num;
 			v_c = (timcon3.CLK_HS_POST + timcon2.CLK_TRAIL)* lane_num;
 
-			DISPCHECK("===>v_a-v_b=0x%x,HSTX_CKLP_WC=0x%x\n",(v_a - v_b),hstx_ckl_wc);
 //			DISPCHECK("===>v_b+v_c=0x%x,HFP_WC=0x%x\n",(v_b+v_c),hfp);
-			DISPCHECK("===>Will Reconfig in order to fulfill LP clock lane per line\n");
 
 			DSI_OUTREG32(cmdq,&DSI_REG[i]->DSI_HFP_WC,(v_b+v_c+DIFF_CLK_LANE_LP));//B+C < HFP ,here diff is 0x10;
 			DSI_OUTREG32(cmdq,&new_hfp, AS_UINT32(&DSI_REG[i]->DSI_HFP_WC));
 			v_a = hsa.HSA_WC + hbp.HBP_WC + new_hfp.HFP_WC + ps.DSI_PS_WC +32;
 			DSI_OUTREG32(cmdq,&DSI_REG[i]->DSI_HSTX_CKL_WC, (v_a - v_b));
 			DSI_OUTREG32(cmdq,&new_hstx_ckl_wc, AS_UINT32(&DSI_REG[i]->DSI_HSTX_CKL_WC));
-			DISPCHECK("===>new HSTX_CKL_WC=0x%x, HFP_WC=0x%x\n",new_hstx_ckl_wc,new_hfp.HFP_WC);
 		}
     	// 2. sync_event_mode
     	//    Total    WC(A) = HBP_WC + HFP_WC + PS_WC + 26
@@ -2788,16 +2731,13 @@ static void DSI_PHY_CLK_LP_PerLine_config(DISP_MODULE_ENUM module, cmdqRecHandle
 			v_b = (timcon3.CLK_HS_EXIT + timcon0.LPX + timcon3.CLK_HS_PRPR + timcon2.CLK_ZERO)*lane_num;
 			v_c = (timcon3.CLK_HS_POST + timcon2.CLK_TRAIL)* lane_num;
 
-    		DISPCHECK("===>v_a-v_b=0x%x,HSTX_CKLP_WC=0x%x\n",(v_a - v_b),hstx_ckl_wc);
 //    		DISPCHECK("===>v_b+v_c=0x%x,HFP_WC=0x%x\n",(v_b+v_c),hfp);
-    		DISPCHECK("===>Will Reconfig in order to fulfill LP clock lane per line\n");
 
 			DSI_OUTREG32(cmdq,&DSI_REG[i]->DSI_HFP_WC,(v_b+v_c+DIFF_CLK_LANE_LP));//B+C < HFP ,here diff is 0x10;
 			DSI_OUTREG32(cmdq,&new_hfp, AS_UINT32(&DSI_REG[i]->DSI_HFP_WC));
 			v_a = hbp.HBP_WC + new_hfp.HFP_WC + ps.DSI_PS_WC +26;
 			DSI_OUTREG32(cmdq,&DSI_REG[i]->DSI_HSTX_CKL_WC, (v_a - v_b));
 			DSI_OUTREG32(cmdq,&new_hstx_ckl_wc, AS_UINT32(&DSI_REG[i]->DSI_HSTX_CKL_WC));
-			DISPCHECK("===>new HSTX_CKL_WC=0x%x, HFP_WC=0x%x\n",new_hstx_ckl_wc,new_hfp.HFP_WC);
 
 		}
     	// 3. burst_mode
@@ -2812,16 +2752,13 @@ static void DSI_PHY_CLK_LP_PerLine_config(DISP_MODULE_ENUM module, cmdqRecHandle
 			v_b = (timcon3.CLK_HS_EXIT + timcon0.LPX + timcon3.CLK_HS_PRPR + timcon2.CLK_ZERO)*lane_num;
 			v_c = (timcon3.CLK_HS_POST + timcon2.CLK_TRAIL)* lane_num;
 
-    		DISPCHECK("===>v_a-v_b=0x%x,HSTX_CKLP_WC=0x%x\n",(v_a - v_b),hstx_ckl_wc);
  //   		DISPCHECK("===>v_b+v_c=0x%x,HFP_WC=0x%x\n",(v_b+v_c),hfp);
-    		DISPCHECK("===>Will Reconfig in order to fulfill LP clock lane per line\n");
 
 			DSI_OUTREG32(cmdq,&DSI_REG[i]->DSI_HFP_WC,(v_b+v_c+DIFF_CLK_LANE_LP));//B+C < HFP ,here diff is 0x10;
 			DSI_OUTREG32(cmdq,&new_hfp, AS_UINT32(&DSI_REG[i]->DSI_HFP_WC));
 			v_a = hbp.HBP_WC + new_hfp.HFP_WC + ps.DSI_PS_WC +bllp.BLLP_WC+32;
 			DSI_OUTREG32(cmdq,&DSI_REG[i]->DSI_HSTX_CKL_WC, (v_a - v_b));
 			DSI_OUTREG32(cmdq,&new_hstx_ckl_wc, AS_UINT32(&DSI_REG[i]->DSI_HSTX_CKL_WC));
-			DISPCHECK("===>new HSTX_CKL_WC=0x%x, HFP_WC=0x%x\n",new_hstx_ckl_wc,new_hfp.HFP_WC);
     	}
 	}
 
@@ -2837,7 +2774,6 @@ int ddp_dsi_config(DISP_MODULE_ENUM module, disp_ddp_path_config *config, void *
 		return 0;
 	}
 	DISPFUNC();
-	DISPCHECK("===>run here 00 Pmaster: clk:%d\n",_dsi_context[0].dsi_params.PLL_CLOCK);
 	LCM_DSI_PARAMS *dsi_config = &(config->dispif_config.dsi);
 	
 	for(i = DSI_MODULE_BEGIN(module);i <= DSI_MODULE_END(module);i++)
@@ -2854,14 +2790,12 @@ int ddp_dsi_config(DISP_MODULE_ENUM module, disp_ddp_path_config *config, void *
 		  DSI_OUTREGBIT(cmdq, DSI_INT_ENABLE_REG,DSI_REG[i]->DSI_INTEN,TE_RDY,1);
 		}
 	}
-	DISPCHECK("===>01Pmaster: clk:%d\n",_dsi_context[0].dsi_params.PLL_CLOCK);
 	if (dsi_config->mode != CMD_MODE) {
 		dsi_currect_mode = 1;
 	}
 #ifndef CONFIG_MTK_FPGA
 	if((MIPITX_IsEnabled(module, cmdq))&&(atomic_read(&PMaster_enable) == 0))
 	{
-		DISPCHECK("mipitx is already init\n");
 		if(dsi_force_config)
 		{
 			goto force_config;
@@ -2872,8 +2806,6 @@ int ddp_dsi_config(DISP_MODULE_ENUM module, disp_ddp_path_config *config, void *
 	else
 #endif
 	{
-		DISPCHECK("MIPITX is not inited, will config mipitx clock now\n");
-		DISPCHECK("===>Pmaster:CLK SETTING??==> clk:%d\n",_dsi_context[0].dsi_params.PLL_CLOCK);
 		DSI_PHY_clk_setting(module, NULL, dsi_config);
 	}
 
@@ -3005,7 +2937,6 @@ int ddp_dsi_switch_lcm_mode(DISP_MODULE_ENUM module, void* params)
 	LCM_DSI_MODE_SWITCH_CMD lcm_cmd = *((LCM_DSI_MODE_SWITCH_CMD*)(params));
 	int mode =(int)( lcm_cmd.mode);
 	if(dsi_currect_mode == mode){
-		printk("[ddp_dsi_switch_mode] not need switch mode, current mode = %d, switch to %d\n", dsi_currect_mode, mode);
 		return 0;
 	}
 	if(lcm_cmd.cmd_if = (unsigned int)LCM_INTERFACE_DSI0)
@@ -3042,7 +2973,6 @@ int ddp_dsi_switch_mode(DISP_MODULE_ENUM module, void *cmdq_handle, void* params
 	LCM_DSI_MODE_SWITCH_CMD lcm_cmd = *((LCM_DSI_MODE_SWITCH_CMD*)(params));
 	int mode =(int)( lcm_cmd.mode);
 	if(dsi_currect_mode == mode){
-		printk("[ddp_dsi_switch_mode] not need switch mode, current mode = %d, switch to %d\n", dsi_currect_mode, mode);
 		return 0;
 	}
 	if(lcm_cmd.cmd_if = (unsigned int)LCM_INTERFACE_DSI0)
@@ -3214,7 +3144,6 @@ int ddp_dsi_ioctl(DISP_MODULE_ENUM module, void *cmdq_handle, unsigned int ioctl
 			unsigned int cmd = 0x51;
 			unsigned int count =1;
 		    unsigned int level = params[0];
-			printk("[ddp_dsi_ioctl] level = %d\n", level);
 			DSI_set_cmdq_V2(module, cmdq_handle, cmd, count, &level, 1);
 			break;
 		}
@@ -3310,7 +3239,6 @@ int ddp_dsi_power_on(DISP_MODULE_ENUM module, void *cmdq_handle)
 				}
 			}
 			s_isDsiPowerOn = TRUE;
-			printk("ipoh dsi power on return\n");
 			return DSI_STATUS_OK;
 		}
 		DSI_PHY_clk_switch(module, NULL, true); 
@@ -3688,7 +3616,6 @@ int ddp_dsi_build_cmdq(DISP_MODULE_ENUM module, void *cmdq_trigger_handle, CMDQ_
 	else if(state == CMDQ_ESD_CHECK_CMP)
 	{
 
-		DISPCHECK("[DSI]enter cmp\n");
 		// cmp just once and only 1 return value
 		for(i = 0; i < 3; i++)
 		{
@@ -3696,7 +3623,6 @@ int ddp_dsi_build_cmdq(DISP_MODULE_ENUM module, void *cmdq_trigger_handle, CMDQ_
 			{
 				break;
 			}
-			DISPCHECK("[DSI]enter cmp i=%d\n",i);
 
 			// read data
 			if(hSlot)
@@ -3743,15 +3669,11 @@ int ddp_dsi_build_cmdq(DISP_MODULE_ENUM module, void *cmdq_trigger_handle, CMDQ_
 			if (packet_type == 0x1A || packet_type == 0x1C) {
                     recv_data_cnt = read_data0.byte1 + read_data0.byte2 * 16;
                     if (recv_data_cnt > 2) {
-                            DISPCHECK("Set receive data count from %d to 2 as ESD check supported max data count.\n", recv_data_cnt);
                             recv_data_cnt = 2;
                     }
                     if (recv_data_cnt > dsi_params->lcm_esd_check_table[i].count) {
-                            DISPCHECK("Set receive data count from %d to %d as ESD check table specified.\n",
-                                      recv_data_cnt, dsi_params->lcm_esd_check_table[i].count);
                             recv_data_cnt = dsi_params->lcm_esd_check_table[i].count;
                     }
-                    DISPCHECK("DSI read long packet size: %d\n", recv_data_cnt);
                     result = memcmp((void*)&(dsi_params->lcm_esd_check_table[i].para_list[0]),
                                     (void*)&read_data1, recv_data_cnt);
 			} 
@@ -3764,20 +3686,15 @@ int ddp_dsi_build_cmdq(DISP_MODULE_ENUM module, void *cmdq_trigger_handle, CMDQ_
                             recv_data_cnt = 2;
                     }
                     if (recv_data_cnt > dsi_params->lcm_esd_check_table[i].count) {
-                            DISPCHECK("Set receive data count from %d to %d as ESD check table specified.\n",
-                                      recv_data_cnt, dsi_params->lcm_esd_check_table[i].count);
                             recv_data_cnt = dsi_params->lcm_esd_check_table[i].count;
                     }
-                    DISPCHECK("DSI read short packet size: %d\n", recv_data_cnt);
                     result = memcmp((void*)&(dsi_params->lcm_esd_check_table[i].para_list[0]),
                                     (void*)&read_data0.byte1, recv_data_cnt);
 			}
 			else if (packet_type == 0x02) {
-                    DISPCHECK("read return type is 0x02\n");
                     result = 1;
 			}
 			else {
-                    DISPCHECK("read return type is non-recognite, type = 0x%x\n",packet_type);
                     result = 1;
 			}
 
@@ -3876,7 +3793,6 @@ int ddp_dsi_build_cmdq(DISP_MODULE_ENUM module, void *cmdq_trigger_handle, CMDQ_
 	}
 	else if(state == CMDQ_DSI_RESET)
 	{
-		DISPCHECK("CMDQ Timeout, Reset DSI\n");
                 DSI_DumpRegisters(module, 1);
                 DSI_Reset(module, NULL);
 	}
@@ -3989,7 +3905,6 @@ UINT32 PanelMaster_get_CC(UINT32 dsi_idx)
 
 void PanelMaster_set_CC(UINT32 dsi_index,UINT32 enable)
 {
-	printk("set_cc :%d\n",enable);
 	if(dsi_index == PM_DSI0)
 		{DSI_OUTREGBIT(NULL, DSI_TXRX_CTRL_REG, DSI_REG[0]->DSI_TXRX_CTRL,HSTX_CKLP_EN,enable);}
 	else if(dsi_index == PM_DSI1)			
@@ -4461,7 +4376,6 @@ unsigned int  PanelMaster_set_PM_enable( unsigned int value)
 /////////////////////////////////No DSI Driver ////////////////////////////////////////////////
 int DSI_set_roi(int x,int y)
 {
-	printk("[DSI](x0,y0,x1,y1)=(%d,%d,%d,%d)\n",x, y, _dsi_context[0].lcm_width, _dsi_context[0].lcm_height);
 	return DSI_Send_ROI(DISP_MODULE_DSI0, NULL,  x, y, _dsi_context[0].lcm_width-x, _dsi_context[0].lcm_height-y);
 }
 
@@ -4476,19 +4390,15 @@ int DSI_check_roi(void)
 	int count = DSI_dcs_read_lcm_reg_v2(DISP_MODULE_DSI0, NULL, 0x2a, read_buf, 4);
 	msleep(10);
     int x0=(read_buf[0]<<8)|read_buf[1];
-	printk("x0=%d count=%d,read_buf[0]=%d,read_buf[1]=%d,read_buf[2]=%d,read_buf[3]=%d\n",x0,count,read_buf[0],read_buf[1],read_buf[2],read_buf[3]);
 	if((count==0)||(x0!=0))
 	{
-		printk("[DSI]x count %d read_buf[0]=%d,read_buf[1]=%d,read_buf[2]=%d,read_buf[3]=%d\n",count,read_buf[0],read_buf[1],read_buf[2],read_buf[3]);
 		return -1;
 	}
     msleep(10);
 	count = DSI_dcs_read_lcm_reg_v2(DISP_MODULE_DSI0, NULL, 0x2b, read_buf, 4);
 	int y0=(read_buf[0]<<8)|read_buf[1];
-	printk("y0=%d count %d,read_buf[0]=%d,read_buf[1]=%d,read_buf[2]=%d,read_buf[3]=%d\n",y0,count,read_buf[0],read_buf[1],read_buf[2],read_buf[3]);
 	if((count==0)||(y0!=0))
 	{
-		printk("[DSI]y count %d read_buf[0]=%d,read_buf[1]=%d,read_buf[2]=%d,read_buf[3]=%d\n",count,read_buf[0],read_buf[1],read_buf[2],read_buf[3]);
 		return -1;
 	}
 	return ret;
diff --git a/drivers/misc/mediatek/dispsys/mt6580/ddp_dump.c b/drivers/misc/mediatek/dispsys/mt6580/ddp_dump.c
index a7cc5e70f..b16a1474a 100755
--- a/drivers/misc/mediatek/dispsys/mt6580/ddp_dump.c
+++ b/drivers/misc/mediatek/dispsys/mt6580/ddp_dump.c
@@ -68,14 +68,6 @@ static int ddp_greq_check(int reg_val)
        return 0;
    }
    
-   if(reg_val&0x1) printk("disp_wdma1, ");
-   if(reg_val&0x1) printk("disp_rdma1, ");
-   if(reg_val&0x1) printk("disp_ovl1, "); 
-   if(reg_val&0x1) printk("disp_wdma0, ");
-   if(reg_val&0x1) printk("disp_rdma0, ");
-   if(reg_val&0x1) printk("disp_ovl0, ");
-   printk("\n");
-
    return 0;
 }
 
@@ -824,7 +816,6 @@ int ddp_dump_reg(DISP_MODULE_ENUM module)
             break;
         case DISP_MODULE_DSI0:
         case DISP_MODULE_DSI1:
-            dsi_dump_reg(module);
             break;              
         case DISP_MODULE_DPI:
             break;   
diff --git a/drivers/misc/mediatek/dispsys/mt6580/ddp_gamma.c b/drivers/misc/mediatek/dispsys/mt6580/ddp_gamma.c
index c1ecc6320..3e3185f7c 100644
--- a/drivers/misc/mediatek/dispsys/mt6580/ddp_gamma.c
+++ b/drivers/misc/mediatek/dispsys/mt6580/ddp_gamma.c
@@ -80,13 +80,8 @@ static int disp_gamma_write_lut_reg(cmdqRecHandle cmdq, disp_gamma_id_t id, int
 
     for (i = 0; i < DISP_GAMMA_LUT_SIZE; i++) {
         DISP_REG_MASK(cmdq, (lut_base + i * 4), gamma_lut->lut[i], ~0);
-
-        if ((i & 0x3f) == 0) {
-            printk(KERN_DEBUG "[GAMMA] [0x%08lx](%d) = 0x%x\n", (lut_base + i * 4), i, gamma_lut->lut[i]);
-        }
     }
     i--;
-    printk(KERN_DEBUG "[GAMMA] [0x%08lx](%d) = 0x%x\n", (lut_base + i * 4), i, gamma_lut->lut[i]);
 
 gamma_write_lut_unlock:
     
@@ -102,7 +97,6 @@ static int disp_gamma_set_lut(const DISP_GAMMA_LUT_T __user *user_gamma_lut, voi
     disp_gamma_id_t id;
     DISP_GAMMA_LUT_T *gamma_lut, *old_lut;
 
-    printk(KERN_DEBUG "[GAMMA] disp_gamma_set_lut(cmdq = %d)", (cmdq != NULL ? 1 : 0));
 
     gamma_lut = kmalloc(sizeof(DISP_GAMMA_LUT_T), GFP_KERNEL);
     if (gamma_lut == NULL) {
@@ -169,8 +163,6 @@ static int disp_gamma_bypass(DISP_MODULE_ENUM module, int bypass)
         
     DISP_REG_MASK(NULL, DISP_REG_GAMMA_CFG, relay, 0x1);
 
-    printk(KERN_DEBUG "disp_gamma_bypass(bypass = %d)\n", bypass); 
-
     return 0;
 }
 
@@ -357,8 +349,6 @@ static int disp_ccorr_bypass(DISP_MODULE_ENUM module, int bypass)
         
     DISP_REG_MASK(NULL, DISP_REG_CCORR_CFG, relay, 0x1);
 
-    printk(KERN_DEBUG "disp_ccorr_bypass(bypass = %d)\n", bypass); 
-
     return 0;
 }
 
diff --git a/drivers/misc/mediatek/dispsys/mt6580/ddp_pwm.c b/drivers/misc/mediatek/dispsys/mt6580/ddp_pwm.c
index df526762d..07cd35643 100644
--- a/drivers/misc/mediatek/dispsys/mt6580/ddp_pwm.c
+++ b/drivers/misc/mediatek/dispsys/mt6580/ddp_pwm.c
@@ -137,7 +137,6 @@ static void disp_pwm_set_enabled(cmdqRecHandle cmdq, disp_pwm_id_t id, int enabl
     if (enabled) {
         if (!disp_pwm_is_enabled(id)) {
             DISP_REG_MASK(cmdq, reg_base + DISP_PWM_EN_OFF, 0x1, 0x1);
-            PWM_MSG("disp_pwm_set_enabled: PWN_EN = 0x1");
 
             disp_pwm_set_drverIC_en(id, enabled);
         }
@@ -166,8 +165,6 @@ int disp_pwm_set_max_backlight(disp_pwm_id_t id, unsigned int level_1024)
     index = index_of_pwm(id);
     g_pwm_max_backlight[index] = level_1024;
 
-    PWM_MSG("disp_pwm_set_max_backlight(id = 0x%x, level = %u)", id, level_1024);
-
     if (level_1024 < atomic_read(&g_pwm_backlight[index]))
         disp_pwm_set_backlight(id, level_1024);
 
@@ -246,8 +243,6 @@ int disp_pwm_set_backlight_cmdq(disp_pwm_id_t id, int level_1024, void *cmdq)
         if (old_pwm == 0 || level_1024 == 0 || abs_diff > 64) {
             /* To be printed in UART log */
             PWM_NOTICE("disp_pwm_set_backlight_cmdq(id = 0x%x, level_1024 = %d), old = %d", id, level_1024, old_pwm);
-        } else {
-            PWM_MSG("disp_pwm_set_backlight_cmdq(id = 0x%x, level_1024 = %d), old = %d", id, level_1024, old_pwm);
         }
 
         if (level_1024 > g_pwm_max_backlight[index]) {
@@ -259,7 +254,6 @@ int disp_pwm_set_backlight_cmdq(disp_pwm_id_t id, int level_1024, void *cmdq)
         level_1024 = disp_pwm_level_remap(id, level_1024);
 
         reg_base = pwm_get_reg_base(id);
-		PWM_MSG("reg_base id=%d", id);
         DISP_REG_MASK(cmdq, reg_base + DISP_PWM_CON_1_OFF, level_1024 << 16, 0x1fff << 16);
 
         if (level_1024 > 0) {
@@ -274,10 +268,6 @@ int disp_pwm_set_backlight_cmdq(disp_pwm_id_t id, int level_1024, void *cmdq)
         g_pwm_duplicate_count = 0;
     } else {
         g_pwm_duplicate_count = (g_pwm_duplicate_count + 1) & 63;
-        if (g_pwm_duplicate_count == 2) {
-            PWM_MSG("disp_pwm_set_backlight_cmdq(id = 0x%x, level_1024 = %d), old = %d (dup)",
-                id, level_1024, old_pwm);
-        }
     }
 
     return 0;
@@ -286,8 +276,6 @@ int disp_pwm_set_backlight_cmdq(disp_pwm_id_t id, int level_1024, void *cmdq)
 
 static int ddp_pwm_power_on(DISP_MODULE_ENUM module, void *handle)
 {
-    PWM_MSG("ddp_pwm_power_on: %d\n", module);
-    
     if (module == DISP_MODULE_PWM0) {
        	enable_clock(MT_CG_PWM_MM_SW_CG, "PWM");
     }
@@ -297,8 +285,6 @@ static int ddp_pwm_power_on(DISP_MODULE_ENUM module, void *handle)
 
 static int ddp_pwm_power_off(DISP_MODULE_ENUM module, void *handle)
 {
-    PWM_MSG("ddp_pwm_power_off: %d\n", module);
-    
     if (module == DISP_MODULE_PWM0) {
         atomic_set(&g_pwm_backlight[0], 0);
        	disable_clock(MT_CG_PWM_MM_SW_CG, "PWM");
@@ -475,35 +461,26 @@ static void disp_pwm_set_reg(const char *cmd)
             mask = 0xffffffff;
         }
         if (count >= 2) {
-            PWM_MSG("[+0x%03lx] = 0x%08x(%d) & 0x%08x", offset, value, value, mask);
         }
 }
 
 void disp_pwm_test(const char *cmd, char *debug_output)
 {
 	debug_output[0] = '\0';
-	PWM_NOTICE("disp_pwm_test(%s)", cmd);
 
 	if (strncmp(cmd, "src:", 4) == 0) {
 		disp_pwm_test_source(cmd + 4);
-		PWM_MSG("disp_pwm_test_source");
 	} else if (strncmp(cmd, "div:", 4) == 0) {
 		disp_pwm_test_div(cmd + 4);
-		PWM_MSG("disp_pwm_test_div");
 	} else if (strncmp(cmd, "set:", 4) == 0) {
 		disp_pwm_set_reg(cmd + 4);
-		PWM_MSG("disp_pwm_set_reg");
 	} else if (strncmp(cmd, "grad:", 5) == 0) {
 		disp_pwm_test_grad(cmd + 5);
-		PWM_MSG("disp_pwm_test_grad");
 	} else if (strncmp(cmd, "dbg:", 4) == 0) {
 		disp_pwm_enable_debug(cmd + 4);
-		PWM_MSG("disp_pwm_enable_debug");
 	} else if (strncmp(cmd, "dump", 4) == 0) {
 		disp_pwm_dump();
-		PWM_MSG("disp_pwm_dump");
 	} else if (strncmp(cmd, "pinmux", 6) == 0) {
 		disp_pwm_test_pin_mux();
-		PWM_MSG("disp_pwm_test_pin_mux");
 	}
 }
diff --git a/drivers/misc/mediatek/dispsys/mt6580/ddp_rdma.c b/drivers/misc/mediatek/dispsys/mt6580/ddp_rdma.c
index 2b8450d78..1dc1a745b 100755
--- a/drivers/misc/mediatek/dispsys/mt6580/ddp_rdma.c
+++ b/drivers/misc/mediatek/dispsys/mt6580/ddp_rdma.c
@@ -527,8 +527,6 @@ void rdma_set_ultra(unsigned int idx, unsigned int width, unsigned int height, u
       }
   }
   
-  printk("sodi low threshold(%d) high threshold(%d)\n", (sodi_threshold & 0x3ff), (sodi_threshold & 0xffc00)>>10);
-
   DISP_REG_SET(handle,idx*DISP_RDMA_INDEX_OFFSET+ DISP_REG_RDMA_THRESHOLD_FOR_SODI, sodi_threshold);
 
   //DDPDBG("FIFO_VALID_Size      = 0x%03x = %d\n", fifo_valid_size     , fifo_valid_size     );
diff --git a/drivers/misc/mediatek/dual_ccci/ccci_init.c b/drivers/misc/mediatek/dual_ccci/ccci_init.c
index 2ec858415..38ee91e98 100644
--- a/drivers/misc/mediatek/dual_ccci/ccci_init.c
+++ b/drivers/misc/mediatek/dual_ccci/ccci_init.c
@@ -31,12 +31,6 @@ static int __init ccci_init(void)
         }
     }
 
-#ifdef ENABLE_CCCI_DRV_BUILDIN
-CCCI_MSG("ccci_init: device_initcall_sync\n");
-#else  // MODULE
-CCCI_MSG("ccci_init: module_init\n");
-#endif
-
     //3. Init ccci device table    
     ret = init_ccci_dev_node();
     if(ret) {
@@ -60,7 +54,6 @@ CCCI_MSG("ccci_init: module_init\n");
             ret = -CCCI_ERR_INIT_PLATFORM_FAIL;
             goto platform_out;
         } else {
-            CCCI_DBG_MSG(i, "cci", "platform_init OK!\n");
         }
 
         // Make ccci device node
@@ -70,7 +63,6 @@ CCCI_MSG("ccci_init: module_init\n");
             ret = -CCCI_ERR_MK_DEV_NODE_FAIL;
             goto mk_node_out;
         } else {
-            CCCI_DBG_MSG(i, "cci", "mk_ccci_dev_node OK!\n");
         }
 
         // Statistics init
@@ -83,7 +75,6 @@ CCCI_MSG("ccci_init: module_init\n");
             ret = -CCCI_ERR_INIT_LOGIC_LAYER_FAIL;
             goto logic_out;
         } else {
-            CCCI_DBG_MSG(i, "cci", "ccci_logic_layer_init OK!\n");
         }
         
         // 4.2 Init md ctrl
@@ -93,7 +84,6 @@ CCCI_MSG("ccci_init: module_init\n");
             ret = -CCCI_ERR_INIT_MD_CTRL_FAIL;
             goto mdctl_out;
         } else {
-            CCCI_DBG_MSG(i, "cci", "ccci_md_ctrl_init OK!\n");
         }
         
         // 4.3 Init char dev
@@ -103,7 +93,6 @@ CCCI_MSG("ccci_init: module_init\n");
             ret = -CCCI_ERR_INIT_CHAR_DEV_FAIL;
             goto char_out;
         } else {
-            CCCI_DBG_MSG(i, "cci", "ccci_chrdev_init OK!\n");
         }
         
         // 4.4 Init tty dev
@@ -113,7 +102,6 @@ CCCI_MSG("ccci_init: module_init\n");
             ret = -CCCI_ERR_INIT_TTY_FAIL;
             goto tty_out;
         } else {
-            CCCI_DBG_MSG(i, "cci", "ccci_tty_init OK!\n");
         }
         
         // 4.5 Init ipc dev
@@ -123,7 +111,6 @@ CCCI_MSG("ccci_init: module_init\n");
             ret = -CCCI_ERR_INIT_IPC_FAIL;
             goto ipc_out;
         } else {
-            CCCI_DBG_MSG(i, "cci", "ccci_ipc_init OK!\n");
         }
         
         // 4.6 Init rpc dev
@@ -133,7 +120,6 @@ CCCI_MSG("ccci_init: module_init\n");
             ret = -CCCI_ERR_INIT_RPC_FAIL;
             goto rpc_out;
         } else {
-            CCCI_DBG_MSG(i, "cci", "ccci_rpc_init OK!\n");
         }
         
         // 4.7 Init fs dev
@@ -143,7 +129,6 @@ CCCI_MSG("ccci_init: module_init\n");
             ret = -CCCI_ERR_INIT_FS_FAIL;
             goto fs_out;
         } else {
-            CCCI_DBG_MSG(i, "cci", "ccci_fs_init OK!\n");
         }
         
         // 4.8 Init ccmni dev
@@ -153,7 +138,6 @@ CCCI_MSG("ccci_init: module_init\n");
             ret = -CCCI_ERR_INIT_CCMNI_FAIL;
             goto ccmni_out;
         } else {
-            CCCI_DBG_MSG(i, "cci", "ccmni_init OK!\n");
         }
         
         // 4.9 Init pmic dev
@@ -166,10 +150,8 @@ CCCI_MSG("ccci_init: module_init\n");
             ret = -CCCI_ERR_INIT_VIR_CHAR_FAIL;
             goto virchar_out;
         } else {
-            CCCI_DBG_MSG(i, "cci", "ccci_vir_chrdev_init OK!\n");
         }
         
-        CCCI_MSG_INF(i, "cci", "md initial OK!\n");
     }
 
     // 5. Init common section
@@ -229,9 +211,7 @@ out:
         ccci_dev_node_exit(MD_SYS1);
     }
     
-    if (ret == CCCI_ERR_MODULE_INIT_OK)
-        CCCI_MSG("ccci module init OK\n");
-    else {        
+    if (ret != CCCI_ERR_MODULE_INIT_OK) {
         release_ccci_dev_node();
         ccci_helper_exit();
         CCCI_MSG("ccci module init fail: %d\n", ret);
diff --git a/drivers/misc/mediatek/dual_ccci/ccmni.c b/drivers/misc/mediatek/dual_ccci/ccmni.c
index 0f862ac4d..3061a5d96 100644
--- a/drivers/misc/mediatek/dual_ccci/ccmni.c
+++ b/drivers/misc/mediatek/dual_ccci/ccmni.c
@@ -61,7 +61,6 @@ int ccmni_init(int md_id)
         CCCI_MSG_INF(md_id, "net", "[Error]get ccmni version fail\n");
         return -1;
     } else {
-        CCCI_MSG_INF(md_id, "net", "ccmni driver v%d\n", ccmni_version);
     }
     
     switch(ccmni_version)
diff --git a/drivers/misc/mediatek/dual_ccci/mt6580/src/ccci_platform.c b/drivers/misc/mediatek/dual_ccci/mt6580/src/ccci_platform.c
index 386c1343a..1758b4b07 100644
--- a/drivers/misc/mediatek/dual_ccci/mt6580/src/ccci_platform.c
+++ b/drivers/misc/mediatek/dual_ccci/mt6580/src/ccci_platform.c
@@ -243,7 +243,6 @@ int get_dts_settings(int md_id) {
         // return -1;
     } else {
         ap_infra_base =  of_iomap(node, 0);
-        CCCI_MSG_INF(md_id, "plt", "md%d get reg ap_infra_base:0x%x!\n", (md_id+1), ap_infra_base);
     }
 
     node = of_find_compatible_node(NULL, NULL, "mediatek,MCUSYS_CFGREG_BASE");
@@ -252,7 +251,6 @@ int get_dts_settings(int md_id) {
         // return -1;
     } else {
         ap_mcu_reg_base = of_iomap(node, 0);
-        CCCI_MSG_INF(md_id, "plt", "md%d get reg ap_mcu_reg_base:0x%x!\n", (md_id+1), ap_mcu_reg_base);
     }
 
     node = of_find_compatible_node(NULL, NULL, "mediatek,AP_MD_DBGMODE_CFGREG");
@@ -261,7 +259,6 @@ int get_dts_settings(int md_id) {
         // return -1;
     } else {
         md1_dbg_mode_ptr = of_iomap(node, 0);
-        CCCI_MSG_INF(md_id, "plt", "md%d get reg md1_dbg_mode_ptr:0x%x!\n", (md_id + 1), md1_dbg_mode_ptr);
     }
 
     if (md_id == MD_SYS1) {
@@ -316,10 +313,6 @@ int get_ccif_hw_info(int md_id, ccif_hw_info_t *ccif_hw_info)
             ccif_hw_info->irq_id = CCIF0_AP_IRQ_ID;
 #endif
 
-            CCCI_MSG_INF(md_id, "plt", "md%d HW settings: cif_ap_reg_base:0x%lx,md_cif_reg:0x%lx, irq:%d, wdt_irq:%d\n",
-                (md_id+1), ccif_hw_info->reg_base, ccif_hw_info->md_reg_base,
-                ccif_hw_info->irq_id, md_wdt_irq_id[md_id]);
-
             ccif_hw_info->type = CCIF_STD_V1;
             ccif_hw_info->irq_attr = 0;
             ccif_hw_info->md_id = MD_SYS1; // Bind to MD Sys 1
@@ -335,8 +328,6 @@ EXPORT_SYMBOL(get_ccif_hw_info);
 #ifdef CONFIG_MTK_MD_SBP_CUSTOM_VALUE
 int ccci_set_md_sbp(int md_id, unsigned int md_sbp)
 {
-    CCCI_MSG_INF(md_id, "ctl", "ccci_set_md_sbp(%d, 0x%x)\n", md_id, md_sbp);
-
     switch(md_id)
     {
         case MD_SYS1: 
@@ -378,20 +369,15 @@ void config_misc_info(int md_id, unsigned int base[], unsigned int size)
         }
         #else
         misc_info.support_mask |= (FEATURE_NOT_SUPPORT<<(MISC_32K_LESS*2));
-        CCCI_MSG_INF(md_id, "ctl", "config_misc_info() NOT defined ENABLE_32K_CLK_LESS\n");
         #endif
 
-        CCCI_MSG_INF(md_id, "ctl", "config_misc_info() misc_info.support_mask:0x%x\n", misc_info.support_mask);
-
         //--- Feature SBP support
 #ifdef CONFIG_MTK_MD_SBP_CUSTOM_VALUE
-        CCCI_MSG_INF(md_id, "ctl", "config_misc_info() md_id:%d, sbp_code:0x%x\n", md_id, md_sbp_value[md_id]);
         if (md_sbp_value[md_id] > 0) {
             misc_info.feature_4_val[0] = md_sbp_value[md_id];
             misc_info.support_mask |= (FEATURE_SUPPORT<<(MISC_MD_SBP_SETTING * 2));
         }
 #else
-        CCCI_MSG_INF(md_id, "ctl", "config_misc_info() NOT support MISC_MD_SBP_SETTING\n");
 #endif // CONFIG_MTK_MD_SBP_CUSTOM_VALUE
 
         memcpy(base, &misc_info, sizeof(misc_info_t));
@@ -434,7 +420,6 @@ static int lock_md_sleep(int md_id, char *buf, unsigned int len)
     }
     else {
         if (md_slp_cnt == 0) {
-            CCCI_MSG_INF(md_id, "ctl", "unlock md slp mis-match lock(%s, 0)\n", current->comm);
             spin_unlock_irqrestore(&md_slp_lock, flag);
             return ret;
         }
@@ -453,9 +438,6 @@ static int lock_md_sleep(int md_id, char *buf, unsigned int len)
         return ret;
     }
 
-    CCCI_MSG_INF(md_id,"ctl", "%s request md sleep %d (%d, %d, %d): %d\n", 
-        current->comm, buf[0], md_slp_cnt, md_slp_lock_ack, md_slp_unlock_ack, ret);
-
     ret = notify_md_by_sys_msg(md_id, msg, reserved);    
 
     return ret;
@@ -495,8 +477,6 @@ static int get_txpower(int md_id, char *buf, unsigned int len)
         ret = notify_md_by_sys_msg(md_id, msg, resv);
     }
     
-    CCCI_MSG_INF(md_id, "ctl", "get_txpower(%d): %d\n", buf[0], ret);
-
     return ret;
 }
 
@@ -577,7 +557,6 @@ int get_sim_type(int md_id, int *p_sim_type)
     *p_sim_type = sim_type;
     if (sim_type == 0xEEEEEEEE)
     {
-        CCCI_MSG_INF(md_id, "ctl", "md has not send sim type yet(%d)", sim_type);
         return -1;
     }
     return 0;
@@ -615,7 +594,6 @@ void ccci_rpc_work_helper(int md_id, int *p_pkt_num, RPC_PKT pkt[], RPC_BUF *p_r
 
             if(pkt_num < 4)
             {
-                CCCI_MSG_INF(md_id, "rpc", "invalid pkt_num %d for RPC_SECURE_ALGO_OP!\n", pkt_num);
                 tmp_data[0] = FS_PARAM_ERROR;
                 pkt[pkt_num].len = sizeof(unsigned int);
                 pkt[pkt_num++].buf = (void*) &tmp_data[0];
@@ -629,7 +607,6 @@ void ccci_rpc_work_helper(int md_id, int *p_pkt_num, RPC_PKT pkt[], RPC_BUF *p_r
             if(ContentAddr < (unsigned int)p_rpc_buf || 
                                 ContentAddr > ((unsigned int)p_rpc_buf + sizeof(RPC_BUF)+RPC1_MAX_BUF_SIZE))
             {
-                CCCI_MSG_INF(md_id, "rpc", "invalid ContentAdddr[0x%08X] for RPC_SECURE_ALGO_OP!\n", ContentAddr);
                 tmp_data[0] = FS_PARAM_ERROR;
                 pkt[pkt_num].len = sizeof(unsigned int);
                 pkt[pkt_num++].buf = (void*) &tmp_data[0];
@@ -643,10 +620,6 @@ void ccci_rpc_work_helper(int md_id, int *p_pkt_num, RPC_PKT pkt[], RPC_BUF *p_r
             #ifdef ENCRYPT_DEBUG
             unsigned char log_buf[128];
 
-            if(Direction == TRUE)
-                CCCI_MSG_INF(md_id, "rpc", "HACC_S: EnCrypt_src:\n");
-            else
-                CCCI_MSG_INF(md_id, "rpc", "HACC_S: DeCrypt_src:\n");
             for(i = 0; i < ContentLen; i++)
             {
                 if(i % 16 == 0){
@@ -701,10 +674,8 @@ void ccci_rpc_work_helper(int md_id, int *p_pkt_num, RPC_PKT pkt[], RPC_BUF *p_r
             
             #if (defined(ENABLE_MD_IMG_SECURITY_FEATURE) && defined(CONFIG_MTK_SEC_MODEM_NVRAM_ANTI_CLONE))
             memcpy(pkt[pkt_num++].buf, ResText, ContentLen);
-            CCCI_MSG_INF(md_id, "rpc","RPC_Secure memory copy OK: %d!", ContentLen);
             #else
             memcpy(pkt[pkt_num++].buf, (void *)ContentAddr, ContentLen);
-            CCCI_MSG_INF(md_id, "rpc","RPC_NORMAL memory copy OK: %d!", ContentLen);
             #endif
             
             #ifdef ENCRYPT_DEBUG
@@ -800,7 +771,6 @@ void ccci_rpc_work_helper(int md_id, int *p_pkt_num, RPC_PKT pkt[], RPC_BUF *p_r
 
                 /* TODO : please check it */
                 /* save original modem secro length */
-                CCCI_MSG("<rpc>RPC_GET_SECRO_OP: save MD SECRO length: (%d) \n",img_len);
                 img_len_bak = img_len;
        
                 blk_sz = masp_secro_blk_sz();
@@ -824,8 +794,6 @@ void ccci_rpc_work_helper(int md_id, int *p_pkt_num, RPC_PKT pkt[], RPC_BUF *p_r
                 /* restore original modem secro length */
                 img_len = img_len_bak;
 
-                CCCI_MSG("<rpc>RPC_GET_SECRO_OP: restore MD SECRO length: (%d) \n",img_len);             
-
                 if(tmp_data[0] != 0) {
                     CCCI_MSG_INF(md_id, "rpc", "RPC_GET_SECRO_OP: get data fail:%d \n", tmp_data[0]);
                     pkt_num = 0;
@@ -835,7 +803,6 @@ void ccci_rpc_work_helper(int md_id, int *p_pkt_num, RPC_PKT pkt[], RPC_BUF *p_r
                     tmp_data[1] = img_len;
                     pkt[pkt_num++].buf = (void*) &tmp_data[1];
                 } else {
-                    CCCI_MSG_INF(md_id, "rpc", "RPC_GET_SECRO_OP: get data OK: %d,%d \n", img_len, tmp_data[0]);
                     pkt_num = 0;
                     pkt[pkt_num].len = sizeof(unsigned int);
                     //pkt[pkt_num++].buf = (void*) &img_len;
@@ -847,7 +814,6 @@ void ccci_rpc_work_helper(int md_id, int *p_pkt_num, RPC_PKT pkt[], RPC_BUF *p_r
                     //pkt[pkt_num++].buf = (void*) &tmp_data[2];
                 }
             }else {
-                CCCI_MSG_INF(md_id, "rpc", "RPC_GET_SECRO_OP: secro disable \n");
                 tmp_data[0] = FS_NO_FEATURE;
                 pkt_num = 0;
                 pkt[pkt_num].len = sizeof(unsigned int);
@@ -907,8 +873,6 @@ void ccci_rpc_work_helper(int md_id, int *p_pkt_num, RPC_PKT pkt[], RPC_BUF *p_r
                     }
                 }
         
-                CCCI_MSG_INF(md_id, "rpc", "[0x%08X]: name:%s, len=%d, get_num:%d\n",p_rpc_buf->op_id,
-                    name, length, get_num);    
                 pkt_num = 0;
 
                 /* NOTE: tmp_data[1] not [0] */
@@ -947,8 +911,6 @@ void ccci_rpc_work_helper(int md_id, int *p_pkt_num, RPC_PKT pkt[], RPC_BUF *p_r
                 goto err2;
             } else {
                 tmp_data[0] = 0;
-                CCCI_MSG_INF(md_id, "rpc", "[0x%08X]: dram_clk: %d, dram_type:%d \n",
-                    p_rpc_buf->op_id, dram_clk, dram_type);    
             }
         
             tmp_data[1] = (unsigned int)dram_type;
@@ -1016,8 +978,6 @@ void ccci_rpc_work_helper(int md_id, int *p_pkt_num, RPC_PKT pkt[], RPC_BUF *p_r
                 pkt[pkt_num++].buf = (void*) &tmp_data[0];
                 pkt[pkt_num].len = res_len;
                 pkt[pkt_num++].buf = (void*) res;
-                CCCI_MSG_INF(md_id, "rpc", "[0x%08X] OK: name:%s, len:%d, type:%d, res:%d, res_len:%d\n",
-                    p_rpc_buf->op_id, eint_name, name_len, type, *res, res_len);
                 kfree(eint_name);
             }
             else {
@@ -1058,7 +1018,6 @@ void ccci_rpc_work_helper(int md_id, int *p_pkt_num, RPC_PKT pkt[], RPC_BUF *p_r
                 val = get_md_adc_val(md_id, num);
             }
             tmp_data[0] = val;
-            CCCI_MSG_INF(md_id, "rpc", "[0x%X]: num=%d, val=%d!\n", p_rpc_buf->op_id, num, val);
 
         err4:
             pkt_num = 0;
@@ -1093,7 +1052,6 @@ static int clear_md_region_protection(int md_id)
     #ifdef ENABLE_EMI_PROTECTION
     unsigned int rom_mem_mpu_id, rw_mem_mpu_id;
 
-    CCCI_MSG_INF(md_id, "ctl", "Clear MD%d region protect...\n", md_id+1);
     switch(md_id)
     {
         case MD_SYS1:
@@ -1106,13 +1064,11 @@ static int clear_md_region_protection(int md_id)
             return -1;
     }
     
-    CCCI_MSG_INF(md_id, "ctl", "Clear MPU protect MD%d ROM region<%d>\n", md_id+1, rom_mem_mpu_id);
     emi_mpu_set_region_protection(0,                      /*START_ADDR*/
                                   0,                      /*END_ADDR*/
                                   rom_mem_mpu_id,       /*region*/
                                   SET_ACCESS_PERMISSON(NO_PROTECTION, NO_PROTECTION, NO_PROTECTION, NO_PROTECTION));
 
-    CCCI_MSG_INF(md_id, "ctl", "Clear MPU protect MD%d R/W region<%d>\n", md_id+1, rom_mem_mpu_id);
     emi_mpu_set_region_protection(0,                      /*START_ADDR*/
                                   0,                       /*END_ADDR*/
                                   rw_mem_mpu_id,        /*region*/
@@ -1196,22 +1152,16 @@ static void enable_mem_access_protection(int md_id)
     rw_mem_phy_end      = md_layout->md_region_phy + md_layout->md_region_size;
     rw_mem_phy_end = ((rw_mem_phy_end + 0xFFFF) & (~0xFFFF)) - 1; //end addr: EMI MPU ignore the lowest 16bit
     
-    CCCI_MSG_INF(md_id, "ctl", "MPU Start protect MD%d ROM region<%d:%08x:%08x>\n", md_id+1, 
-                                  rom_mem_mpu_id, rom_mem_phy_start, rom_mem_phy_end);
     emi_mpu_set_region_protection(rom_mem_phy_start,      /*START_ADDR*/
                                     rom_mem_phy_end,      /*END_ADDR*/
                                     rom_mem_mpu_id,       /*region*/
                                     rom_mem_mpu_attr);
 
-    CCCI_MSG_INF(md_id, "ctl", "MPU Start protect MD%d R/W region<%d:%08x:%08x>\n", md_id+1, 
-                                  rw_mem_mpu_id, rw_mem_phy_start, rw_mem_phy_end);
     emi_mpu_set_region_protection(rw_mem_phy_start,          /*START_ADDR*/
                                     rw_mem_phy_end,       /*END_ADDR*/
                                     rw_mem_mpu_id,        /*region*/
                                     rw_mem_mpu_attr);
 
-    CCCI_MSG_INF(md_id, "ctl", "MPU Start protect MD%d Share region<%d:%08x:%08x>\n", md_id+1, 
-                                  shr_mem_mpu_id, shr_mem_phy_start, shr_mem_phy_end);
     emi_mpu_set_region_protection(shr_mem_phy_start,      /*START_ADDR*/
                                     shr_mem_phy_end,      /*END_ADDR*/
                                     shr_mem_mpu_id,       /*region*/
@@ -1220,8 +1170,6 @@ static void enable_mem_access_protection(int md_id)
 #ifdef EMI_MPU_SET_AP_REGION
     //end addr: EMI MPU ignore the lowest 16bit
     ap_mem_phy_end = (((kernel_base + dram_size) + 0xFFFF) & (~0xFFFF)) - 1;
-    CCCI_MSG_INF(md_id, "ctl", "MPU Start protect AP region<%d:%08x:%08x>\n", ap_mem_mpu_id
-                  , kernel_base, ap_mem_phy_end);
     emi_mpu_set_region_protection(kernel_base,
                                     ap_mem_phy_end,
                                     ap_mem_mpu_id,
@@ -1252,8 +1200,6 @@ static void set_ap_region_protection(int md_id)
     ap_mem_mpu_attr = SET_ACCESS_PERMISSON(NO_PROTECTION, FORBIDDEN, FORBIDDEN, NO_PROTECTION);
     ap_mem_phy_end = ((((kernel_base + dram_size) + 0xFFFF) & (~0xFFFF)) - 1);
 
-    CCCI_MSG_INF(md_id, "ctl", "MPU Start protect AP region<%d:%08x:%08x>\n", ap_mem_mpu_id
-                  , kernel_base, ap_mem_phy_end); 
     emi_mpu_set_region_protection(kernel_base,
                                      ap_mem_phy_end,
                                      ap_mem_mpu_id,
@@ -1306,7 +1252,6 @@ static int signature_check_v2(int md_id, char* file_path, unsigned int *sec_tail
             CCCI_MSG_INF(md_id, "ctl", "sign check fail(0x%x, 0x%x!)!\n", bypass_sec_header_offset, sec_total_len);
             return -CCCI_ERR_LOAD_IMG_SIGN_FAIL;
         } else {
-            CCCI_MSG_INF(md_id, "ctl", "sign check success(0x%x, 0x%x)!\n", bypass_sec_header_offset, sec_total_len);
             *sec_tail_length = sec_total_len - bypass_sec_header_offset;
             return (int)bypass_sec_header_offset; // Note here, offset is more than 2G is not hoped 
         }
@@ -1322,12 +1267,10 @@ static struct file *open_img_file(char *name, int *sec_fp_id)
     #ifdef ENABLE_MD_IMG_SECURITY_FEATURE
     int fp_id = OSAL_FILE_NULL;
     fp_id = osal_filp_open_read_only(name);  
-    CCCI_MSG("sec_open fd = (%d)!\n", fp_id); 
 
     if(sec_fp_id != NULL)
         *sec_fp_id = fp_id;
 
-    CCCI_MSG("sec_open file ptr = (0x%x)!\n", (unsigned int)osal_get_filp_struct(fp_id)); 
 
     return (struct file *)osal_get_filp_struct(fp_id);
     #else
@@ -1339,7 +1282,6 @@ static struct file *open_img_file(char *name, int *sec_fp_id)
 static void close_img_file(struct file *filp_id, int sec_fp_id)
 {
     #ifdef ENABLE_MD_IMG_SECURITY_FEATURE
-    CCCI_MSG("sec_close (%d)!\n", sec_fp_id);
     osal_filp_close(sec_fp_id);
     #else
     //CCCI_DBG_COM_MSG("std_close!\n");
@@ -1420,8 +1362,6 @@ static int check_dsp_header(int md_id,
         gfh_head = (GFH_HEADER *)start_addr;
     }
 
-    CCCI_MSG_INF(md_id, "ctl", "\n");
-    CCCI_MSG_INF(md_id, "ctl", "**********************DSP image check****************************\n");
     if(!file_info_check && !header_check) {
         CCCI_MSG_INF(md_id, "ctl", "GFH_FILE_INFO header and GFH_CHECK_HEADER not exist!\n");
         CCCI_MSG_INF(md_id, "ctl", "[Reason]No DSP_ROM, please check this image!\n");
@@ -1442,7 +1382,6 @@ static int check_dsp_header(int md_id,
         image->img_info.image_type = type_str[dsp_ver];
 
         if(image_check && ver_check) {
-            CCCI_MSG_INF(md_id, "ctl", "GFH_FILE_INFO header check OK!\n");
         }
         else {
             CCCI_MSG_INF(md_id, "ctl", "[Error]GFH_FILE_INFO check fail!\n");
@@ -1454,10 +1393,6 @@ static int check_dsp_header(int md_id,
 
             ret = -CCCI_ERR_LOAD_IMG_DSP_CHECK;
         }
-
-        CCCI_MSG_INF(md_id, "ctl", "(DSP)[type]=%s\n",(image_check?DSP_ROM_STR:DSP_BL_STR));
-        CCCI_MSG_INF(md_id, "ctl", "(DSP)[ver]=%s, (AP)[ver]=%s\n",image->img_info.image_type,
-                image->ap_info.image_type);
     }
     else if(!file_info_check && header_check) {
         CCCI_MSG_INF(md_id, "ctl", "GFH_FILE_INFO header not exist!\n");
@@ -1476,18 +1411,9 @@ static int check_dsp_header(int md_id,
 
             ret = -CCCI_ERR_LOAD_IMG_DSP_CHECK;
         }
-        CCCI_MSG_INF(md_id, "ctl", "(DSP)[ver]=%s, (AP)[ver]=%s\n",image->img_info.image_type, 
-            image->ap_info.image_type);
-        CCCI_MSG_INF(md_id, "ctl", "(DSP)[plat]=%s, (AP)[plat]=%s\n",image->img_info.platform, 
-            image->ap_info.platform);
-        CCCI_MSG_INF(md_id, "ctl", "(DSP)[build_Ver]=%s, [build_time]=%s\n", image->img_info.build_ver , 
-            image->img_info.build_time);
-        CCCI_MSG_INF(md_id, "ctl", "(DSP)[product_ver]=%s\n", product_str[gfh_check_head->m_product_ver]);
-
     }
     else {
         if(image_check && ver_check && platform_check) {
-            CCCI_MSG_INF(md_id, "ctl", "GFH_FILE_INFO header and GFH_CHECK_HEADER check OK!\n");
         }
         else {
             CCCI_MSG_INF(md_id, "ctl", "[Error]DSP header check fail!\n");
@@ -1502,17 +1428,7 @@ static int check_dsp_header(int md_id,
 
             ret = -CCCI_ERR_LOAD_IMG_DSP_CHECK;
         }
-        CCCI_MSG_INF(md_id, "ctl", "(DSP)[type]=%s\n",(image_check?DSP_ROM_STR:DSP_BL_STR));
-        CCCI_MSG_INF(md_id, "ctl", "(DSP)[ver]=%s, (AP)[ver]=%s\n",image->img_info.image_type, 
-            image->ap_info.image_type);
-        CCCI_MSG_INF(md_id, "ctl", "(DSP)[plat]=%s, (AP)[plat]=%s\n",image->img_info.platform, 
-            image->ap_info.platform);
-        CCCI_MSG_INF(md_id, "ctl", "(DSP)[build_Ver]=%s, [build_time]=%s\n", image->img_info.build_ver , 
-            image->img_info.build_time);
-        CCCI_MSG_INF(md_id, "ctl", "(DSP)[product_ver]=%s\n", product_str[gfh_check_head->m_product_ver]);
-
     }
-    CCCI_MSG_INF(md_id, "ctl", "**********************DSP image check****************************\r\n");
 
 out:
     return ret;
@@ -1533,8 +1449,6 @@ static int check_md_header( int md_id,
 
     memcpy(head, (void*)(parse_addr - sizeof(MD_CHECK_HEADER)), sizeof(MD_CHECK_HEADER));
 
-    CCCI_MSG_INF(md_id, "ctl", "\n");
-    CCCI_MSG_INF(md_id, "ctl", "**********************MD image check***************************\n");
     ret = strncmp(head->check_header, MD_HEADER_MAGIC_NO, 12);
     if(ret) {
         CCCI_MSG_INF(md_id, "ctl", "md check header not exist!\n");
@@ -1592,7 +1506,6 @@ static int check_md_header( int md_id,
             image->img_info.product_ver = product_str[head->product_ver];
 
             if(md_type_check && md_plat_check && md_sys_match && md_size_check) {
-                CCCI_MSG_INF(md_id, "ctl", "Modem header check OK!\n");
             } else {
                 CCCI_MSG_INF(md_id, "ctl", "[Error]Modem header check fail!\n");
                 if(!md_type_check)
@@ -1610,10 +1523,7 @@ static int check_md_header( int md_id,
                 ret = -CCCI_ERR_LOAD_IMG_MD_CHECK;
             }
 
-            CCCI_MSG_INF(md_id, "ctl", "(MD)[type]=%s, (AP)[type]=%s\n",image->img_info.image_type, image->ap_info.image_type);
-            CCCI_MSG_INF(md_id, "ctl", "(MD)[plat]=%s, (AP)[plat]=%s\n",image->img_info.platform, image->ap_info.platform);
             if(head->header_verno >= 2) {
-                CCCI_MSG_INF(md_id, "ctl", "(MD)[size]=%x, (AP)[size]=%x\n",image->img_info.mem_size, image->ap_info.mem_size);
                 if (head->md_img_size) {
                     if (image->size >= head->md_img_size)
                         image->size = head->md_img_size;
@@ -1625,13 +1535,9 @@ static int check_md_header( int md_id,
                     image->img_info.md_img_size = head->md_img_size;
                 }
                 //image->size -= 0x1A0; //workaround for md not check in check header
-                CCCI_MSG_INF(md_id, "ctl", "(MD)[img_size]=%x, (AP)[img_size]=%x\n",head->md_img_size, image->size);
             }
-            CCCI_MSG_INF(md_id, "ctl", "(MD)[build_ver]=%s, [build_time]=%s\n",image->img_info.build_ver, image->img_info.build_time);
-            CCCI_MSG_INF(md_id, "ctl", "(MD)[product_ver]=%s\n",image->img_info.product_ver);
         }
     }
-    CCCI_MSG_INF(md_id, "ctl", "**********************MD image check***************************\r\n");
 
     return ret;
 }
@@ -1720,8 +1626,6 @@ static int load_std_firmware(int md_id,
         } else {
             read_size += ret;
             img->size = read_size - img->tail_length; /* Note here, signatured image has file tail info. */
-            CCCI_MSG_INF(md_id, "ctl", "%s, image size=0x%x,read size:%d, tail:%d\n", 
-                            img->file_name, img->size, read_size, img->tail_length);
             iounmap(start);
             break;
         }
@@ -1746,7 +1650,6 @@ static int load_std_firmware(int md_id,
     }
 
     set_fs(curr_fs);
-    CCCI_MSG_INF(md_id, "ctl", "Load %s (size=0x%x) to 0x%lx\n", img->file_name, img->size, load_addr);
 
     return read_size;
 
@@ -1884,9 +1787,7 @@ static int find_img_to_open(int md_id, int img_type, char found_name[])
         return -CCCI_ERR_INVALID_PARAM;
     }
 
-    CCCI_MSG_INF(md_id, "ctl","Find img @CIP\n");
     for(i=0; i<3; i++) {
-        CCCI_MSG_INF(md_id, "ctl","try to open %s\n", img_name[i]);
         snprintf(full_path, 64, "%s%s", CONFIG_MODEM_FIRMWARE_CIP_PATH, img_name[i]);
         filp = filp_open(full_path, O_RDONLY, 0644);
         if (IS_ERR(filp)) {
@@ -1905,9 +1806,7 @@ static int find_img_to_open(int md_id, int img_type, char found_name[])
         }
     }
 
-    CCCI_MSG_INF(md_id, "ctl","Find img @default\n");
     for(i=0; i<3; i++) {
-        CCCI_MSG_INF(md_id, "ctl","try to open %s\n", img_name[i]);
         snprintf(full_path, 64, "%s%s", CONFIG_MODEM_FIRMWARE_PATH, img_name[i]);
         filp = filp_open(full_path, O_RDONLY, 0644);
         if (IS_ERR(filp)) {
@@ -1943,7 +1842,6 @@ static int load_firmware_func(int md_id, struct image_info *img)
     #endif
 
 #ifdef ENABLE_MD_IMG_SECURITY_FEATURE
-    CCCI_MSG_INF(md_id, "ctl","load_firmware_func() masp_inited:%d\n", masp_inited);
     if (!masp_inited) {
         if ((ret = masp_boot_init()) !=0) {
             CCCI_MSG("masp_boot_init fail: %d\n",ret);
@@ -1958,7 +1856,6 @@ static int load_firmware_func(int md_id, struct image_info *img)
         }
         masp_inited = 1;
     }
-    CCCI_MSG_INF(md_id, "ctl","load_firmware_func() hahaha masp_inited:%d\n", masp_inited);
 #endif
 
     if(find_img_to_open(md_id, img->type, img->file_name)<0) {
@@ -1974,7 +1871,6 @@ static int load_firmware_func(int md_id, struct image_info *img)
         filp = NULL;
         goto out;
     } else {
-        CCCI_MSG_INF(md_id, "ctl", "open %s OK\n",img->file_name);
     }
 
     //Begin to check header
@@ -2007,7 +1903,6 @@ static int load_firmware_func(int md_id, struct image_info *img)
                 CCCI_MSG_INF(md_id, "ctl", "load_cipher_firmware failed:ret=%d!\n",ret);
                 goto out;
             }
-            CCCI_MSG_INF(md_id, "ctl", "load_cipher_firmware done! (=%d)\n",ret);
         } 
         else {
         #endif
@@ -2194,7 +2089,6 @@ void ccci_md_wdt_notify_register(int md_id, int_func_int_t funcp)
     if(NULL == funcp){
         CCCI_MSG_INF(md_id, "ctl", "[Error]md wdt notify function pointer is NULL\n");
     } else if(wdt_notify_array[md_id]){
-        CCCI_MSG_INF(md_id, "ctl", "wdt notify function pointer has registered\n");
     } else{
         wdt_notify_array[md_id] = funcp;
         //CCCI_DBG_MSG(md_id, "ctl", "wdt notify func register OK\n");
@@ -2308,9 +2202,7 @@ static irqreturn_t md_wdt_isr(int irq, void *data __always_unused)
 #endif
 
     #ifdef ENABLE_MD_WDT_DBG
-    CCCI_MSG_INF(md_id, "ctl", "MD_WDT_STA=%04x(md%d_irq=%d)\n", sta, (md_id+1), irq);
     #else
-    CCCI_MSG_INF(md_id, "ctl", "MD_WDT_ISR(md%d_irq=%d)\n", (md_id+1), irq);
     #endif
 
 #ifdef ENABLE_MD_WDT_DBG
@@ -2408,8 +2300,6 @@ static void recover_md_wdt_irq(unsigned long data)
     }
     #endif
 
-    CCCI_MSG_INF(md_id, "ctl", "MD_WDT_STA=%04x(%d)(R)\n", sta, (md_id+1));
-
     if(sta!=0)
         md_wdt_notify(md_id);
 }
@@ -2508,8 +2398,6 @@ static int ccci_dis_md1_clock(unsigned int timeout)
 int ccci_power_on_md(int md_id)
 {
     //int count;
-    CCCI_MSG_INF(md_id, "ctl", "[ccci/cci] power on md%d to run\n", md_id+1);
-    
     switch(md_id)
     {
         case MD_SYS1:// MD1
@@ -2528,8 +2416,6 @@ EXPORT_SYMBOL(ccci_power_on_md);
 
 int ccci_power_down_md(int md_id)
 {
-    CCCI_MSG_INF(md_id, "ctl", "power down md%d\n", md_id+1);
-
     return 0;
 }
 EXPORT_SYMBOL(ccci_power_down_md);
@@ -2548,7 +2434,6 @@ unsigned int get_debug_mode_flag(void)
 				*((volatile unsigned int*)(md1_dbg_mode_ptr)) &= (~MD_DBG_JTAG_BIT);
 			}
 		}
-		CCCI_MSG_INF(0, "ctl", "%s debug_settting_flag:%d\n", __func__, debug_settting_flag);
 	} else
 		CCCI_MSG_INF(0, "ctl", "%s md1_dbg_mode_ptr not remaped!!\n", __func__);
 
@@ -2572,8 +2457,6 @@ EXPORT_SYMBOL(get_debug_mode_flag);
 //========================================================
 static int ungate_md1(void)
 {
-    CCCI_MSG_INF(0, "ctl", "ungate_md1\n");
-
     if ( (!md1_boot_slave_Vector)||(!md1_boot_slave_Key) ||(!md1_boot_slave_En)) {
         CCCI_MSG_INF(0, "ctl", "map md boot slave base fail!\n");
         return -1;
@@ -2608,7 +2491,6 @@ void gate_md1(unsigned int timeout)
     }
     
     ret = ccci_dis_md1_clock(timeout);
-    CCCI_MSG_INF(0, "ctl", "sleep ret %d\n", ret);
 
     /* Write MD CCIF Ack to clear AP CCIF busy register */
     CCCI_CTL_MSG(0, "Write MD CCIF Ack to clear AP CCIF busy register\n");
@@ -2667,8 +2549,6 @@ int set_ap_smem_remap(int md_id, unsigned int src, unsigned int des)
                   + ((((INVALID_ADDR[md_id] + INVALID_OFFSET*19)>>8)|1<<16)&0xFF0000)
                   + ((((INVALID_ADDR[md_id] + INVALID_OFFSET*20)>>0)|1<<24)&0xFF000000);
         
-        CCCI_MSG_INF(md_id, "ctl", "AP Smem remap: [%08x]->[%08x](%08x:%08x)\n", des, src, remap1_val, remap2_val);
-
         #ifdef     ENABLE_MEM_REMAP_HW
         ccci_write32(AP_BANK4_MAP0(ap_mcu_reg_base), remap1_val);
         ccci_write32(AP_BANK4_MAP1(ap_mcu_reg_base), remap2_val);
@@ -2710,8 +2590,6 @@ int set_md_smem_remap(int md_id, unsigned int src, unsigned int des)
         default:
             break;
     }
-
-    CCCI_MSG_INF(md_id, "ctl", "MD%d Smem remap:[%08x]->[%08x](%08x:%08x)\n", md_id+1, des, src, remap1_val, remap2_val);
     return 0;
 }
 
@@ -2744,7 +2622,6 @@ int set_md_rom_rw_mem_remap(int md_id, unsigned int src, unsigned int des)
             break;
     }
 
-    CCCI_MSG_INF(md_id, "ctl", "MD%d ROM mem remap:[%08x]->[%08x](%08x:%08x)\n", md_id+1, des, src, remap1_val, remap2_val);
     return 0;
 }
 
@@ -2968,7 +2845,6 @@ static int md_init(int md_id)
 #else
     INVALID_ADDR[md_id]= 0X3E000000;
 #endif
-    CCCI_MSG_INF(md_id, "ctl", "INVALID_ADDR[%d]: %08X\n",md_id,INVALID_ADDR[md_id]);
     ret = ccci_alloc_smem(md_id);
     md_init_stage_flag[md_id] |= CCCI_ALLOC_SMEM_DONE;
     if(ret < 0) {
@@ -2983,10 +2859,6 @@ static int md_init(int md_id)
         CCCI_MSG_INF(md_id, "ctl", "MD region ioremap fail!\n");
         return -ENOMEM;
     }
-    CCCI_MSG_INF(md_id, "ctl", "md%d: md_rom<P:0x%08x><V:0x%08x>, md_smem<P:0x%08x><V:0x%08x>\n", md_id+1,
-            md_mem_layout_tab[md_id].md_region_phy, md_mem_layout_tab[md_id].md_region_vir,
-            md_mem_layout_tab[md_id].smem_region_phy_before_map, md_mem_layout_tab[md_id].smem_region_vir);
-
     md_init_stage_flag[md_id] |= CCCI_MAP_MD_CODE_DONE;
 
     map_md_side_register(md_id);
@@ -3045,8 +2917,6 @@ int __init ccci_mach_init(void)
 {
     int ret = 0;
 
-    CCCI_MSG("Ver. %s, @ %s %s\n", CCCI_VERSION, __DATE__, __TIME__); 
-        
     #ifdef ENABLE_DRAM_API    
     //CCCI_MSG("kernel base:0x%08X, kernel max addr:0x%08X\n", get_phys_offset(), get_max_phys_addr());
     #endif
diff --git a/drivers/misc/mediatek/emd_ctl/emd_ctl_init.c b/drivers/misc/mediatek/emd_ctl/emd_ctl_init.c
index 490e635ad..7859bc649 100644
--- a/drivers/misc/mediatek/emd_ctl/emd_ctl_init.c
+++ b/drivers/misc/mediatek/emd_ctl/emd_ctl_init.c
@@ -10,9 +10,7 @@ static int __init emd_ctl_init(void)
     int ret=0;
 
 #ifdef ENABLE_EMD_CTL_DRV_BUILDIN
-EMD_MSG_INF("init","emd_ctl_init: device_initcall_sync\n");
 #else  // MODULE
-EMD_MSG_INF("init","emd_ctl_init: module_init\n");
 #endif
 
     ret = emd_dev_node_init(0);
diff --git a/drivers/misc/mediatek/emi_bwl/mt6580/emi_bwl.c b/drivers/misc/mediatek/emi_bwl/mt6580/emi_bwl.c
index 0495e44f0..7b7310253 100644
--- a/drivers/misc/mediatek/emi_bwl/mt6580/emi_bwl.c
+++ b/drivers/misc/mediatek/emi_bwl/mt6580/emi_bwl.c
@@ -283,7 +283,6 @@ static int __init emi_bwl_mod_init(void)
     node = of_find_compatible_node(NULL, NULL, "mediatek,DRAMC0");
     if(node) {
         DRAMC_BASE_ADDR = of_iomap(node, 0);
-        pr_info("[EMI/BWL] get DRAMC_BASE_ADDR @ %p\n", DRAMC_BASE_ADDR);
     } else {
         pr_err("[EMI/BWL] can't find compatible node\n");
         return -1;
diff --git a/drivers/misc/mediatek/emi_mpu/mt6580/emi_mpu.c b/drivers/misc/mediatek/emi_mpu/mt6580/emi_mpu.c
index 15c7b0839..ec0e6d4e7 100644
--- a/drivers/misc/mediatek/emi_mpu/mt6580/emi_mpu.c
+++ b/drivers/misc/mediatek/emi_mpu/mt6580/emi_mpu.c
@@ -437,7 +437,6 @@ static int __match_id(u32 axi_id, int tbl_idx, u32 port_ID, u32 read_vio)
 		case MONITOR_PORT_PERI:
 		case MONITOR_PORT_MFG:
 		case MONITOR_PORT_CONN:
-			pr_err("Violation master name is %s.\n", mst_tbl[tbl_idx].name);
 			break;
 
 		case MONITOR_PORT_MM:
@@ -450,7 +449,6 @@ static int __match_id(u32 axi_id, int tbl_idx, u32 port_ID, u32 read_vio)
 					ret = 0;
 					goto out;
 				}
-				pr_err("Violation master name is %s (%s).\n", mst_tbl[tbl_idx].name, smi_name);
 			}
 			else {
 				/*MM IOMMU Internal Used*/
@@ -479,8 +477,6 @@ static u32 __id2mst(u32 id)
     port_ID = id & 0x00000007;
     read_vio = (id >> 29) & 0x1;
 
-    pr_err("[EMI MPU] axi_id = %x, port_id = %x\n", axi_ID, port_ID);
-
     for (i = 0; i < ARRAY_SIZE(mst_tbl); i++) {
         if (__match_id(axi_ID, i, port_ID, read_vio)) {
             return mst_tbl[i].master;
@@ -500,7 +496,6 @@ static char *__id2name(u32 id)
 	axi_ID   = (id >> 3) & 0x00001FFF;
 	port_ID  = id & 0x00000007;
 	read_vio = (id >> 29) & 0x1;
-	pr_err("[EMI MPU] axi_id = %x, port_id = %x\n", axi_ID, port_ID);
 
 #if 0
 	/*MDHW disable*/
@@ -603,7 +598,7 @@ static int mpu_check_violation(void)
 	if (dbg_pqry & OOR_VIO)
 		pr_err("Out of range violation.\n");
 
-#if 1
+#if 0
 	pr_err("[EMI MPU] EMI_MPUI = 0x%x\n", readl(IOMEM(EMI_MPUI)));
 	pr_err("[EMI MPU] EMI_MPUJ = 0x%x\n", readl(IOMEM(EMI_MPUJ)));
 	pr_err("[EMI MPU] EMI_MPUK = 0x%x\n", readl(IOMEM(EMI_MPUK)));
@@ -669,7 +664,6 @@ static irqreturn_t mpu_violation_irq(int irq, void *dev_id)
 	if (res)
 		return IRQ_NONE;
 
-	pr_info("It's a MPU violation.\n");
 	mpu_check_violation();
 	return IRQ_HANDLED;
 }
@@ -701,9 +695,6 @@ int emi_mpu_set_region_protection(unsigned int start, unsigned int end, int regi
         }
     }
 
-    pr_err("[%s] start = 0x%x end = 0x%x region=%d\n", __func__, start, end, region);
-
-
     ax_pm = (access_permission << 16) >> 16;
     ax_pm2 = (access_permission >> 16);
 
@@ -779,7 +770,7 @@ int emi_mpu_set_region_protection(unsigned int start, unsigned int end, int regi
     }
     spin_unlock_irqrestore(&emi_mpu_lock, flags);
 
-#if 1
+#if 0
     pr_err("[EMI MPU] emi_physical_offset = 0x%x \n", emi_physical_offset);
     pr_err("[EMI MPU] EMI_MPUA = 0x%x \n", readl(IOMEM(EMI_MPUA)));
     pr_err("[EMI MPU] EMI_MPUB = 0x%x \n", readl(IOMEM(EMI_MPUB)));
@@ -955,10 +946,8 @@ static ssize_t emi_mpu_store(struct device_driver *driver, const char *buf, size
     char *token [5];
 
     if ((strlen(buf) + 1) > MAX_EMI_MPU_STORE_CMD_LEN) {
-        pr_err("emi_mpu_store command overflow.");
         return count;
     }
-    pr_err("emi_mpu_store: %s\n", buf);
 
     command = kmalloc((size_t)MAX_EMI_MPU_STORE_CMD_LEN, GFP_KERNEL);
     if (!command) {
@@ -984,7 +973,6 @@ static ssize_t emi_mpu_store(struct device_driver *driver, const char *buf, size
         region = simple_strtoul(token[3], &token[3], 16);
         access_permission = simple_strtoul(token[4], &token[4], 16);
         emi_mpu_set_region_protection(start_addr, end_addr, region, access_permission);
-        pr_err("Set EMI_MPU: start: 0x%x, end: 0x%x, region: %d, permission: 0x%x.\n", start_addr, end_addr, region, access_permission);
     } else if (!strncmp(buf, DIS_MPU_STR, strlen(DIS_MPU_STR))) {
         i = 0;
         while (ptr != NULL) {
@@ -1002,7 +990,6 @@ static ssize_t emi_mpu_store(struct device_driver *driver, const char *buf, size
         region = simple_strtoul(token[3], &token[3], 16);
 
         emi_mpu_set_region_protection(0x0, 0x0, region, SET_ACCESS_PERMISSON(NO_PROTECTION, NO_PROTECTION, NO_PROTECTION, NO_PROTECTION));
-        pr_err("set EMI MPU: start: 0x%x, end: 0x%x, region: %d, permission: 0x%x\n", 0, 0, region, SET_ACCESS_PERMISSON(NO_PROTECTION, NO_PROTECTION, NO_PROTECTION, NO_PROTECTION));
     } else {
         pr_err("Unknown emi_mpu command.\n");
     }
@@ -1084,16 +1071,13 @@ void mtk_search_full_pgtab(void)
         /* TBD */
 #endif
     }
-    pr_err("[EMI MPU] ****** Can not find page table entry! violation address = 0x%x ******\n", v_addr);
 
     return;
 }
 
 void emi_mpu_work_callback(struct work_struct *work)
 {
-    pr_err("[EMI MPU] Enter EMI MPU workqueue!\n");
     mtk_search_full_pgtab();
-    pr_err("[EMI MPU] Exit EMI MPU workqueue!\n");
 }
 
 static ssize_t pgt_scan_show(struct device_driver *driver, char *buf)
@@ -1391,7 +1375,6 @@ ssize_t emi_wp_vio_store(struct device_driver *driver, const char *buf, size_t c
         pr_err("emi_wp_store command overflow.");
         return count;
     }
-    pr_err("emi_wp_store: %s\n", buf);
 
     command = kmalloc((size_t)MAX_EMI_MPU_STORE_CMD_LEN, GFP_KERNEL);
     if (!command) {
@@ -1419,7 +1402,6 @@ ssize_t emi_wp_vio_store(struct device_driver *driver, const char *buf, size_t c
 
         start_addr = (wp_addr >> range) << range;
         end_addr = start_addr + (1 << range)     - 1;
-        pr_err("Set EMI_WP: address: 0x%x, range:%d, start addr: 0x%x, end addr: 0x%x,  rw: %d .\n", wp_addr, range, start_addr, end_addr, rw);
     }
     else if (!strncmp(buf, DIS_WP_STR, strlen(DIS_WP_STR))) {
         i = 0;
@@ -1437,9 +1419,7 @@ ssize_t emi_wp_vio_store(struct device_driver *driver, const char *buf, size_t c
         range = simple_strtoul(token[2], &token[2], 16);
         rw = simple_strtoul(token[3], &token[3], 16);
         emi_wp_set(0, 0x40000000, 4, 2);
-        pr_err("disable EMI WP \n");
     } else {
-        pr_err("Unknown emi_wp command.\n");
     }
 
     kfree(command);
@@ -1466,7 +1446,6 @@ static void protect_ap_region(void)
     ap_mem_mpu_id = AP_REGION_ID;
     ap_mem_mpu_attr = SET_ACCESS_PERMISSON(NO_PROTECTION, FORBIDDEN, FORBIDDEN, NO_PROTECTION);
 
-    pr_err("[EMI] protect_ap_region 0x%x~0x%x   ,dram size=0x%x\n",kernel_base,(kernel_base+(unsigned int)dram_size-1),(unsigned int)dram_size);
     emi_mpu_set_region_protection(kernel_base, (kernel_base+dram_size-1), ap_mem_mpu_id, ap_mem_mpu_attr);
 }
 
@@ -1498,14 +1477,11 @@ static int __init emi_mpu_mod_init(void)
 	struct device_node *node;
 	unsigned int mpu_irq;
 
-	pr_err("[EMI MPU] Initialize EMI MPU.\n");
-
 	/* DTS version */
 
 	node = of_find_compatible_node(NULL, NULL, "mediatek,EMI");
 	if (node) {
 		EMI_BASE_ADDR = of_iomap(node, 0);
-		pr_notice("get EMI_BASE_ADDR @ %p\n", EMI_BASE_ADDR);
 	} else {
 		pr_err("can't find compatible node\n");
 		return -1;
@@ -1514,25 +1490,12 @@ static int __init emi_mpu_mod_init(void)
 	node = of_find_compatible_node(NULL, NULL, "mediatek,DEVAPC");
 	if (node) {
 		mpu_irq = irq_of_parse_and_map(node, 0);
-		pr_notice("get EMI_MPU irq = %d\n", mpu_irq);
 	} else {
 		pr_err("can't find compatible node\n");
 		return -1;
 	}
 	spin_lock_init(&emi_mpu_lock);
 
-	pr_err("[EMI MPU] EMI_MPUP = 0x%x\n", readl(IOMEM(EMI_MPUP)));
-	pr_err("[EMI MPU] EMI_MPUQ = 0x%x\n", readl(IOMEM(EMI_MPUQ)));
-	pr_err("[EMI MPU] EMI_MPUR = 0x%x\n", readl(IOMEM(EMI_MPUR)));
-	pr_err("[EMI MPU] EMI_MPUY = 0x%x\n", readl(IOMEM(EMI_MPUY)));
-	pr_err("[EMI MPU] EMI_MPUS = 0x%x\n", readl(IOMEM(EMI_MPUS)));
-	pr_err("[EMI MPU] EMI_MPUT = 0x%x\n", readl(IOMEM(EMI_MPUT)));
-	pr_err("[EMI MPU] EMI_WP_ADR = 0x%x\n", readl(IOMEM(EMI_WP_ADR)));
-	pr_err("[EMI MPU] EMI_WP_CTRL = 0x%x\n", readl(IOMEM(EMI_WP_CTRL)));
-	pr_err("[EMI MPU] EMI_CHKER = 0x%x\n", readl(IOMEM(EMI_CHKER)));
-	pr_err("[EMI MPU] EMI_CHKER_TYPE = 0x%x\n", readl(IOMEM(EMI_CHKER_TYPE)));
-	pr_err("[EMI MPU] EMI_CHKER_ADR = 0x%x\n", readl(IOMEM(EMI_CHKER_ADR)));
-
 	if (readl(IOMEM(EMI_MPUS))) {
 		pr_err("[EMI MPU] get MPU violation in driver init\n");
 		mpu_check_violation();
diff --git a/drivers/misc/mediatek/gpio/mt6580/mt_gpio_base.c b/drivers/misc/mediatek/gpio/mt6580/mt_gpio_base.c
index 2b05bbb18..4da6f975a 100644
--- a/drivers/misc/mediatek/gpio/mt6580/mt_gpio_base.c
+++ b/drivers/misc/mediatek/gpio/mt6580/mt_gpio_base.c
@@ -359,7 +359,6 @@ void get_gpio_vbase(struct device_node *node)
 {
     /* Setup IO addresses */
     gpio_vbase.gpio_regs = of_iomap(node, 0);
-    GPIOLOG("gpio_vbase.gpio_regs=0x%p\n", gpio_vbase.gpio_regs);
 
     gpio_reg = (GPIO_REGS*)(GPIO_BASE_1);
     
@@ -459,19 +458,15 @@ void md32_send_cust_pin_from_irq(void)
     ipi_status ret = BUSY;
     struct GPIO_IPI_Packet ipi_pkt;
 
-    GPIOLOG("Enter ipi wq function to send cust pin... \n");
     ipi_pkt.touch_pin = (GPIO_CTP_EINT_PIN & ~(0x80000000));
 
     ret = md32_ipi_send(IPI_GPIO, &ipi_pkt, sizeof(ipi_pkt), true);
-    if (ret != DONE)
-        GPIOLOG("MD32 side IPI busy... %d\n", ret);
 
     //GPIOLOG("IPI get touch pin num = %d ...\n", GPIO_RD32(uart_base+0x40));
 }
 /*---------------------------------------------------------------------------*/
 void gpio_ipi_handler(int id, void *data, uint len)
 {
-    GPIOLOG("Enter gpio_ipi_handler... \n");
     queue_work(wq_md32_cust_pin, &work_md32_cust_pin);
 }
 /*---------------------------------------------------------------------------*/
diff --git a/drivers/misc/mediatek/gpio/mt_gpio_core.c b/drivers/misc/mediatek/gpio/mt_gpio_core.c
index 3e05e4829..bf1b30ead 100755
--- a/drivers/misc/mediatek/gpio/mt_gpio_core.c
+++ b/drivers/misc/mediatek/gpio/mt_gpio_core.c
@@ -560,7 +560,6 @@ static int mt_gpio_probe(struct platform_device *dev)
 #endif
 
 	/* printk(KERN_ALERT"[GPIO]%5d,<%s> gpio devices probe\n", __LINE__, __func__); */
-	GPIOLOG("Registering GPIO device\n");
 
 	if (!mt_gpio)
 		GPIO_RETERR(-EACCES, "");
@@ -703,7 +702,6 @@ static  struct file_operations device_name_proc_fops = {
 static int __init mt_gpio_init(void)
 {
 	int ret = 0;
-	GPIOLOG("version: %s\n", VERSION);
 
 	device_name_proc_entry =proc_create("mtkdev", 0666, NULL, &device_name_proc_fops);
 
diff --git a/drivers/misc/mediatek/gpu/ged/src/ged_log.c b/drivers/misc/mediatek/gpu/ged/src/ged_log.c
index fb8fbce89..87b20e498 100644
--- a/drivers/misc/mediatek/gpu/ged/src/ged_log.c
+++ b/drivers/misc/mediatek/gpu/ged/src/ged_log.c
@@ -513,8 +513,6 @@ GED_LOG_BUF_HANDLE ged_log_buf_alloc(
         return (GED_LOG_BUF_HANDLE)0;
     }
 
-    GED_LOGI("ged_log_buf_alloc OK\n");
-
     __ged_log_buf_check_get_early_list(psGEDLogBuf->ui32HashNodeID, pszName);
 
     return (GED_LOG_BUF_HANDLE)psGEDLogBuf->ui32HashNodeID;
@@ -731,8 +729,6 @@ void ged_log_buf_free(GED_LOG_BUF_HANDLE hLogBuf)
 
         ged_free(psGEDLogBuf->pMemory, psGEDLogBuf->i32MemorySize);
         ged_free(psGEDLogBuf, sizeof(GED_LOG_BUF));
-
-        GED_LOGI("ged_log_buf_free OK\n");
     }
 }
 //-----------------------------------------------------------------------------
diff --git a/drivers/misc/mediatek/gpu/ged/src/ged_main.c b/drivers/misc/mediatek/gpu/ged/src/ged_main.c
index eff199d18..6c5481c78 100644
--- a/drivers/misc/mediatek/gpu/ged/src/ged_main.c
+++ b/drivers/misc/mediatek/gpu/ged/src/ged_main.c
@@ -55,13 +55,11 @@ static void* gvIOCTLParamBuf = NULL;
  *****************************************************************************/
 static int ged_open(struct inode *inode, struct file *filp)
 {
-    GED_LOGE("%s:%d:%d\n", __func__, MAJOR(inode->i_rdev), MINOR(inode->i_rdev));
     return 0;
 }
 
 static int ged_release(struct inode *inode, struct file *filp)
 {
-    GED_LOGE("%s:%d:%d\n", __func__, MAJOR(inode->i_rdev), MINOR(inode->i_rdev));
     return 0;
 }
 
diff --git a/drivers/misc/mediatek/gpu/mt6580/mali/mali/common/mali_kernel_common.h b/drivers/misc/mediatek/gpu/mt6580/mali/mali/common/mali_kernel_common.h
index 88c89a787..ac822d2e3 100644
--- a/drivers/misc/mediatek/gpu/mt6580/mali/mali/common/mali_kernel_common.h
+++ b/drivers/misc/mediatek/gpu/mt6580/mali/mali/common/mali_kernel_common.h
@@ -127,10 +127,7 @@ extern int mali_debug_level;
 #endif
 
 #define MALI_DEBUG_CODE(code) code
-#define MALI_DEBUG_PRINT(level, args)  do { \
-	if((level) <=  mali_debug_level)\
-        {MALI_PRINTF(("Mali<" #level ">: ")); MALI_PRINTF(args); } \
-	} while (0)
+#define MALI_DEBUG_PRINT(level, args) ;
 
 #define MALI_DEBUG_PRINT_ERROR(args) MALI_PRINT_ERROR(args)
 
diff --git a/drivers/misc/mediatek/gpu/mt6580/mali/mali/linux/mali_kernel_linux.c b/drivers/misc/mediatek/gpu/mt6580/mali/mali/linux/mali_kernel_linux.c
index 186b4dcdd..ae1f5151a 100644
--- a/drivers/misc/mediatek/gpu/mt6580/mali/mali/linux/mali_kernel_linux.c
+++ b/drivers/misc/mediatek/gpu/mt6580/mali/mali/linux/mali_kernel_linux.c
@@ -50,7 +50,7 @@
 extern const char *__malidrv_build_info(void);
 
 /* Module parameter to control log level */
-int mali_debug_level = 2;
+int mali_debug_level = 1;
 module_param(mali_debug_level, int, S_IRUSR | S_IWUSR | S_IWGRP | S_IRGRP | S_IROTH); /* rw-rw-r-- */
 MODULE_PARM_DESC(mali_debug_level, "Higher number, more dmesg output");
 
diff --git a/drivers/misc/mediatek/hibcore/mtk_hibernate_core.c b/drivers/misc/mediatek/hibcore/mtk_hibernate_core.c
index c41ba0c2f..f4662fb6d 100644
--- a/drivers/misc/mediatek/hibcore/mtk_hibernate_core.c
+++ b/drivers/misc/mediatek/hibcore/mtk_hibernate_core.c
@@ -100,20 +100,16 @@ static void hib_unplug_cores(void)
 {
 	int i = 0;
 
-	hib_warn("unplug cores\n");
-
 #ifdef CONFIG_CPU_FREQ_DEFAULT_GOV_HOTPLUG
 	mutex_lock(&hp_onoff_mutex);
 #endif
 	for (i = (num_possible_cpus() - 1); i > 0 && num_online_cpus() > HIB_MULTIIO_CORES; i--) {
 		if (cpu_online(i)) {
 			int err;
-			hib_log("cpu %d down...\n", i);
 			err = cpu_down(i);
 			if (err < 0) {
 				hib_warn("cpu %d down...failed(%d)\n", i, err);
 			} else {
-				hib_log("cpu %d down...done\n", i, err);
 			}
 		}
 	}
@@ -133,7 +129,6 @@ static void hib_hotplug_mode(int en)
 	static int g_hp_disable = 0;
 	if (en) {
 		if (1 == g_hp_disable) {
-			hib_warn("enable hotplug\n");
 #if defined(CONFIG_CPU_FREQ_DEFAULT_GOV_HOTPLUG) || defined(CONFIG_CPU_FREQ_DEFAULT_GOV_BALANCE)
 			hp_set_dynamic_cpu_hotplug_enable(1);
 #else
@@ -143,7 +138,6 @@ static void hib_hotplug_mode(int en)
 		}
 	} else if (!en) {
 		if (0 == g_hp_disable) {
-			hib_warn("disable hotplug\n");
 #if defined(CONFIG_CPU_FREQ_DEFAULT_GOV_HOTPLUG) || defined(CONFIG_CPU_FREQ_DEFAULT_GOV_BALANCE)
 			hp_set_dynamic_cpu_hotplug_enable(0);
 #else
@@ -160,7 +154,6 @@ static void hib_ftrace_buffer(int en)
 #if defined(CONFIG_MTK_SCHED_TRACERS)
 	int fterr = 0;
 
-	hib_warn("%s ftrace mode\n", (en ? "enable" : "disable"));
 	fterr = resize_ring_buffer_for_hibernation(en);
 	if (fterr < 0)
 		hib_warn("calling resize_ring_buffer_for_hibernation() failed (%d)\n", fterr);
@@ -179,8 +172,6 @@ static void hibernate_restore(void)
 	hib_ftrace_buffer(1);
 
 	hib_hotplug_mode(1);
-
-	hib_warn("start trigger ipod\n");
 }
 
 extern int hybrid_sleep_mode(void);
@@ -188,7 +179,6 @@ extern int hybrid_sleep_mode(void);
 int mtk_hibernate_via_autosleep(suspend_state_t *autosleep_state)
 {
 	int err = 0;
-	hib_log("entering hibernation state(%d)\n", *autosleep_state);
 	err = hibernate();
 	if (err) {
 		hib_warn
@@ -220,12 +210,8 @@ int mtk_hibernate_via_autosleep(suspend_state_t *autosleep_state)
 		}
 	} else {
 		if (hybrid_sleep_mode()) {
-			hib_warn("hybrid sleep mode so changing state(%d->%d)\n", *autosleep_state,
-				 PM_SUSPEND_MEM);
 			*autosleep_state = PM_SUSPEND_MEM;	/* continue suspend to ram if hybrid sleep mode */
 		} else {
-			hib_warn("hibernation succeeded: so changing state(%d->%d) err(%d)\n",
-				 *autosleep_state, PM_SUSPEND_ON, err);
 			hibernate_restore();
 			*autosleep_state = PM_SUSPEND_ON;	/* if this is not set, it will recursively do hibernating!! */
 		}
@@ -243,7 +229,6 @@ int mtk_hibernate(void)
 {
 	int err = 0;
 
-	hib_log("entering hibernation\n");
 	err = hibernate();
 	if (err) {
 		hib_warn
@@ -299,8 +284,6 @@ int bad_memory_status(void)
 					 zone->name, free_pages, min_pages);
 				return -1;
 			} else {
-				hib_warn("%s memory status: (%lu:%lu)\n", zone->name, free_pages,
-					 min_pages);
 			}
 		}
 	}
diff --git a/drivers/misc/mediatek/hibcore/mtk_hibernate_dpm.c b/drivers/misc/mediatek/hibcore/mtk_hibernate_dpm.c
index bddf8a45d..6c2f05c50 100644
--- a/drivers/misc/mediatek/hibcore/mtk_hibernate_dpm.c
+++ b/drivers/misc/mediatek/hibcore/mtk_hibernate_dpm.c
@@ -57,11 +57,6 @@ int register_swsusp_restore_noirq_func(unsigned int id, swsusp_cb_func_t func,
 		info_ptr->id = id;
 		info_ptr->func = func;
 		info_ptr->device = device;
-		hib_warn("reg. func %d:0x%p with device %s%p\n",
-				 restore_noirq_func_table[id].id,
-				 restore_noirq_func_table[id].func,
-				 (device == NULL) ? " " : "0x",
-				 restore_noirq_func_table[id].device);
 	} else
 		hib_err("register func fail: func(%d) already registered!\n", id);
 
diff --git a/drivers/misc/mediatek/hwmon/batchsen/batch.c b/drivers/misc/mediatek/hwmon/batchsen/batch.c
index 85f41f807..e1078add8 100644
--- a/drivers/misc/mediatek/hwmon/batchsen/batch.c
+++ b/drivers/misc/mediatek/hwmon/batchsen/batch.c
@@ -83,7 +83,6 @@ static int batch_update_polling_rate(void)
 		}
 		
 	}
-	BATCH_LOG("get polling rate min value (%d) !\n", mindelay);
 	return mindelay;
 }
 
@@ -108,7 +107,6 @@ static int get_fifo_data(struct batch_context *obj)
         obj->timestamp_info[i].end_t = nt;
     }
     
-	BATCH_LOG("fwq!! get_fifo_data +++++++++	!\n");
 	if((obj->dev_list.ctl_dev[ID_SENSOR_MAX_HANDLE].flush != NULL) 
 		&& (obj->dev_list.data_dev[ID_SENSOR_MAX_HANDLE].get_data != NULL)
 		&& (obj->dev_list.data_dev[ID_SENSOR_MAX_HANDLE].get_fifo_status)!=NULL)
@@ -140,7 +138,6 @@ static int get_fifo_data(struct batch_context *obj)
 		}
 		else
 		{
-			BATCH_LOG("can not handle this fifo, err = %d, fifo_len = %d\n", err, fifo_len);
 		}
 		mutex_unlock(&batch_data_mutex);
 	}
@@ -174,7 +171,6 @@ int  batch_notify(BATCH_NOTIFY_TYPE type)
 	int err=0;
 	if(type == TYPE_BATCHFULL)
 	{
-		BATCH_LOG("fwq batch full notify\n");
 		err = get_fifo_data(batch_context_obj);
 		if(err)
 		{
@@ -183,7 +179,6 @@ int  batch_notify(BATCH_NOTIFY_TYPE type)
 	}
 	if(type == TYPE_BATCHTIMEOUT)
 	{
-		BATCH_LOG("fwq batch timeout notify do nothing\n");
 	}
 
 	if(batch_context_obj->is_polling_run){
@@ -197,7 +192,6 @@ static void batch_work_func(struct work_struct *work)
 	struct batch_context *obj = batch_context_obj;
 	//hwm_sensor_data *sensor_data = NULL;	//
 	int err;
-	BATCH_LOG("fwq!! get data from sensor+++++++++  !\n");
 	err = get_fifo_data(obj);
 	if(err)
 	{
@@ -207,7 +201,6 @@ static void batch_work_func(struct work_struct *work)
 	if(obj->is_polling_run){
 		mod_timer(&obj->timer, jiffies + atomic_read(&obj->delay)/(1000/HZ));
 	}
-	BATCH_LOG("fwq!! get data from sensor obj->delay=%d ---------  !\n",atomic_read(&obj->delay));
 }
 
 static void batch_poll(unsigned long data)
@@ -256,7 +249,6 @@ static struct batch_context *batch_context_alloc_object(void)
 {
 	
 	struct batch_context *obj = kzalloc(sizeof(*obj), GFP_KERNEL); 
-    	BATCH_LOG("batch_context_alloc_object++++\n");
 	if(!obj)
 	{
 		BATCH_ERR("Alloc batch object error!\n");
@@ -275,7 +267,6 @@ static struct batch_context *batch_context_alloc_object(void)
 	obj->div_flag= 0;
 	obj->force_wake_upon_fifo_full = SENSORS_BATCH_WAKE_UPON_FIFO_FULL;
 	mutex_init(&obj->batch_op_mutex);
-	BATCH_LOG("batch_context_alloc_object----\n");
 	return obj;
 }
 
@@ -296,7 +287,6 @@ static ssize_t batch_store_active(struct device* dev, struct device_attribute *a
 	{
 		BATCH_ERR(" batch_store_active param error: res = %d\n", res);
 	}
-	BATCH_LOG(" batch_store_active handle=%d ,en=%d\n",handle,en);
 
     if (handle < 0 || ID_SENSOR_MAX_HANDLE < handle)
     {
@@ -312,7 +302,6 @@ static ssize_t batch_store_active(struct device* dev, struct device_attribute *a
     if(2==en)
     {
         cxt->div_flag = handle;
-        BATCH_LOG(" batch_hal want read %d div\n", handle);
         return count;
     }
 
@@ -364,7 +353,6 @@ static ssize_t batch_store_active(struct device* dev, struct device_attribute *a
     mutex_unlock(&batch_hw_mutex);
 
     delay = batch_update_polling_rate();
-    BATCH_LOG("batch_update_polling_rate = %d\n",delay);
     if (delay > 0)
     {
         cxt->is_polling_run = true;
@@ -390,16 +378,13 @@ static ssize_t batch_show_active(struct device* dev,
 	cxt = batch_context_obj;
 	//display now enabling sensors of batch mode
 	div = cxt->dev_list.data_dev[cxt->div_flag].div;
-	BATCH_LOG("batch %d_div value: %d\n",cxt->div_flag, div);
 	count =  snprintf(buf, PAGE_SIZE, "%d\n", div); 
-	BATCH_LOG("fwq count=%d,buf=%s \n",count,buf);
 	return count; 
 }
 
 static ssize_t batch_store_delay(struct device* dev, struct device_attribute *attr,
                                   const char *buf, size_t count)
 {
-	BATCH_LOG(" batch_store_delay not support now\n");
     	return count;
 }
 
@@ -407,7 +392,6 @@ static ssize_t batch_show_delay(struct device* dev,
                                  struct device_attribute *attr, char *buf) 
 {
     	int len = 0;
-	BATCH_LOG(" batch_show_delay not support now\n");
 	return len;
 }
 
@@ -426,12 +410,10 @@ static ssize_t batch_store_batch(struct device* dev, struct device_attribute *at
 
     cxt = batch_context_obj;
     
-	BATCH_LOG("write value: buf = %s\n", buf);
 	if((res = sscanf(buf, "%d,%d,%lld,%lld", &handle, &flags, &samplingPeriodNs, &maxBatchReportLatencyNs))!=4)
 	{
 		BATCH_ERR(" batch_store_delay param error: res = %d\n", res);
 	}
-	BATCH_LOG(" batch_store_delay param: handle %d, flag:%d samplingPeriodNs:%lld, maxBatchReportLatencyNs: %lld\n",handle, flags, samplingPeriodNs, maxBatchReportLatencyNs);	
 
     if (handle < 0 || ID_SENSOR_MAX_HANDLE < handle)
     {
@@ -486,7 +468,6 @@ static ssize_t batch_store_batch(struct device* dev, struct device_attribute *at
     if(maxBatchReportLatencyNs == 0){
         if (cxt->active_sensor & (0x01 << handle)) //flush batch data when change from batch mode to normal mode.
         {
-            BATCH_LOG("%d from batch to normal\n",handle);
             report_data_once(handle);
         }
     }else if(maxBatchReportLatencyNs != 0){
@@ -529,7 +510,6 @@ static ssize_t batch_store_batch(struct device* dev, struct device_attribute *at
     mutex_unlock(&batch_hw_mutex);
 
     delay = batch_update_polling_rate();
-    BATCH_LOG("delay = %d\n", delay);
     if (delay > 0)
     {
         cxt->is_polling_run = true;
@@ -555,7 +535,6 @@ static ssize_t batch_show_batch(struct device* dev,
 	int res = 0;
 	cxt = batch_context_obj;
 	res = cxt->batch_result;
-	BATCH_LOG(" batch_show_delay batch result: %d\n", res);
 	return snprintf(buf, PAGE_SIZE, "%d\n", res);
 }
 
@@ -564,7 +543,6 @@ static ssize_t batch_store_flush(struct device* dev, struct device_attribute *at
 {
 	struct batch_context *cxt = NULL;
 	int handle;
-	BATCH_LOG("fwq  flush_store_delay +++\n");
 	cxt = batch_context_obj;
 	
     	if (1 != sscanf(buf, "%d", &handle)) 
@@ -576,7 +554,6 @@ static ssize_t batch_store_flush(struct device* dev, struct device_attribute *at
 
 	report_data_once(handle);//handle need to use of this function 
 	
-	BATCH_LOG(" flush_store_delay sucess------\n");
     	return count;
 }
 
@@ -587,7 +564,6 @@ static ssize_t batch_show_flush(struct device* dev,
 	int res = 0;
 	cxt = batch_context_obj;
 	res = cxt->flush_result;
-	BATCH_LOG(" batch_show_flush flush result: %d\n", res);
 	return snprintf(buf, PAGE_SIZE, "%d\n", res);
 
 }
@@ -604,14 +580,12 @@ static ssize_t batch_show_devnum(struct device* dev,
 /*----------------------------------------------------------------*/
 static int batch_open(struct inode *node , struct file *fp)
 {
-	BATCH_FUN(f);
 	fp->private_data = NULL;
 	return nonseekable_open(node,fp);
 }
 /*----------------------------------------------------------------------------*/
 static int batch_release(struct inode *node, struct file *fp)
 {
-	BATCH_FUN(f);
 	kfree(fp->private_data);
 	fp->private_data = NULL;
 	return 0;
@@ -669,8 +643,6 @@ static long batch_unlocked_ioctl(struct file *fp, unsigned int cmd, unsigned lon
                         if (batch_sensors_data.data[i].time > (int64_t)batch_context_obj->dev_list.data_dev[handle].samplingPeriodMs*1100000)
                         {
                             batch_sensors_data.data[i].time = pt->end_t - (int64_t)batch_context_obj->dev_list.data_dev[handle].samplingPeriodMs*1100000*(pt->total_count-1);
-                            BATCH_LOG("FIFO wrapper around1, %lld, %lld, %lld\n", (int64_t)batch_context_obj->dev_list.data_dev[handle].samplingPeriodMs, (int64_t)pt->total_count, (int64_t)batch_context_obj->dev_list.data_dev[handle].samplingPeriodMs*1100000*(pt->total_count-1));
-                            BATCH_LOG("FIFO wrapper around2, %lld, %lld, %lld\n", pt->start_t, batch_sensors_data.data[i].time, pt->end_t);
                         }
                         else
                         {
@@ -895,21 +867,17 @@ void report_batch_data(struct input_dev *dev, hwm_sensor_data *data)
 
 void report_batch_finish(struct input_dev *dev, int handle)
 {
-	BATCH_LOG("fwq report_batch_finish rel+++++\n");
 	input_report_rel(dev, EVENT_TYPE_END_FLAG, 1<<16|handle);
 	input_sync(dev); 
-	BATCH_LOG("fwq report_batch_finish----\n");
 }
 
 static int sensorHub_remove(struct platform_device *pdev)
 {
-	BATCH_LOG("sensorHub_remove\n");
 	return 0;
 }
 
 static int sensorHub_probe(struct platform_device *pdev) 
 {
-	BATCH_LOG("sensorHub_probe\n");
     return 0;
 }
 
@@ -936,17 +904,13 @@ static int batch_real_driver_init(void)
 {
     int i =0;
 	int err=0;
-	BATCH_LOG(" batch_real_driver_init +\n");
 	for(i = 0; i < MAX_CHOOSE_BATCH_NUM; i++)
 	{
-	  BATCH_LOG(" i=%d\n",i);
 	  if(0 != batch_init_list[i])
 	  {
-	    BATCH_LOG(" batch try to init driver %s\n", batch_init_list[i]->name);
 	    err = batch_init_list[i]->init();
 		if(0 == err)
 		{
-		   BATCH_LOG(" batch real driver %s probe ok\n", batch_init_list[i]->name);
 		   break;
 		}
 	  }
@@ -965,7 +929,6 @@ int  batch_driver_add(struct batch_init_info* obj)
     int err=0;
 	int i =0;
 	
-	BATCH_FUN();
 	if (!obj) {
 		BATCH_ERR("batch driver add fail, batch_init_info is NULL \n");
 		return -1;
@@ -974,7 +937,6 @@ int  batch_driver_add(struct batch_init_info* obj)
 	for(i =0; i < MAX_CHOOSE_BATCH_NUM; i++ )
 	{
         if(i == 0){
-			BATCH_LOG("register sensorHub driver for the first time\n");
 			if(platform_driver_register(&sensorHub_driver))
 			{
 				BATCH_ERR("failed to register sensorHub driver already exist\n");
@@ -1002,7 +964,6 @@ static int batch_probe(struct platform_device *pdev)
 {
 
 	int err;
-	BATCH_LOG("+++++++++++++batch_probe!!\n");
 
 	batch_context_obj = batch_context_alloc_object();
 	if (!batch_context_obj)
@@ -1058,7 +1019,6 @@ static int batch_probe(struct platform_device *pdev)
 	
 	kobject_uevent(&batch_context_obj->mdev.this_device->kobj, KOBJ_ADD);
 
-	BATCH_LOG("----batch_probe OK !!\n");
 	return 0;
 
 	//exit_hwmsen_create_attr_failed:
@@ -1093,7 +1053,6 @@ static int batch_probe(struct platform_device *pdev)
 static int batch_remove(struct platform_device *pdev)
 {
 	int err=0;
-	BATCH_FUN(f);
 	input_unregister_device(batch_context_obj->idev);        
 	sysfs_remove_group(&batch_context_obj->idev->dev.kobj,
 				&batch_attribute_group);
@@ -1111,14 +1070,12 @@ static int batch_remove(struct platform_device *pdev)
 static void batch_early_suspend(struct early_suspend *h) 
 {
    atomic_set(&(batch_context_obj->early_suspend), 1);
-   BATCH_LOG(" batch_early_suspend ok------->hwm_obj->early_suspend=%d \n",atomic_read(&(batch_context_obj->early_suspend)));
    return ;
 }
 /*----------------------------------------------------------------------------*/
 static void batch_late_resume(struct early_suspend *h)
 {
    atomic_set(&(batch_context_obj->early_suspend), 0);
-   BATCH_LOG(" batch_late_resume ok------->hwm_obj->early_suspend=%d \n",atomic_read(&(batch_context_obj->early_suspend)));
    return ;
 }
 #endif //#if defined(CONFIG_HAS_EARLYSUSPEND)
@@ -1130,9 +1087,6 @@ static int batch_suspend(struct platform_device *dev, pm_message_t state)
     int res;
     int en;
 
-    BATCH_FUN();
-    BATCH_ERR("batch_suspend");
-    
     cxt = batch_context_obj;
 
     mutex_lock(&batch_hw_mutex);
@@ -1170,9 +1124,6 @@ static int batch_resume(struct platform_device *dev)
     int res;
     int en;
 
-    BATCH_FUN();
-    BATCH_ERR("batch_resume");
-    
     cxt = batch_context_obj;
 
     mutex_lock(&batch_hw_mutex);
@@ -1227,8 +1178,6 @@ static struct platform_driver batch_driver =
 
 static int __init batch_init(void) 
 {
-	BATCH_FUN();
-
 	if(platform_driver_register(&batch_driver))
 	{
 		BATCH_ERR("failed to register batch driver\n");
diff --git a/drivers/misc/mediatek/hwmon/hwmsen/hwmsen_dev.c b/drivers/misc/mediatek/hwmon/hwmsen/hwmsen_dev.c
index 948d117a7..a0a91cd70 100644
--- a/drivers/misc/mediatek/hwmon/hwmsen/hwmsen_dev.c
+++ b/drivers/misc/mediatek/hwmon/hwmsen/hwmsen_dev.c
@@ -162,7 +162,6 @@ int hwmsen_aal_enable(int en)
 	}
 	else if((hwm_obj->dc->cxt[ID_LIGHT]) == NULL)
 	{
-		HWM_ERR("the sensor (%d) is not attached!!\n", ID_LIGHT);
 		return -ENODEV;
 	}
 
@@ -171,7 +170,6 @@ int hwmsen_aal_enable(int en)
 
 	if(en == 1){
 		if((hwm_obj->active_data_sensor & (1 << ID_LIGHT))==0){
-			HWM_LOG("enable sensor(%d) by AAL operation\n", ID_LIGHT);
 			if (cxt->obj.sensor_operate(cxt->obj.self, SENSOR_ENABLE, &en, sizeof(int), NULL, 0, NULL) != 0)
 			{
 				HWM_ERR("enable sensor(%d) err = %d\n", ID_LIGHT, err);
@@ -180,7 +178,6 @@ int hwmsen_aal_enable(int en)
 		}
 	}else{
 		if((hwm_obj->active_data_sensor & (1 << ID_LIGHT))==0){
-			HWM_LOG("disable sensor(%d) by AAL operation\n", ID_LIGHT);
 			if (cxt->obj.sensor_operate(cxt->obj.self, SENSOR_ENABLE, &en, sizeof(int), NULL, 0, NULL) != 0)
 			{
 				HWM_ERR("disable sensor(%d) err = %d\n", ID_LIGHT, err);
@@ -201,7 +198,6 @@ int hwmsen_aal_get_data()
 	hwm_sensor_data sensor_data;
 	int als_data = 0;
 	
-	HWM_LOG("hwmsen_aal_get_data1\n");
 	if(!hwm_obj)
 	{
 		HWM_ERR("AAL hwmdev obj pointer is NULL!\n");
@@ -209,13 +205,11 @@ int hwmsen_aal_get_data()
 	}
 	else if((hwm_obj->dc->cxt[ID_LIGHT]) == NULL)
 	{
-		HWM_ERR("the sensor (%d) is not attached!!\n", ID_LIGHT);
 		return -ENODEV;
 	}
 
 	mutex_lock(&hwm_obj->dc->lock);
 	cxt = hwm_obj->dc->cxt[ID_LIGHT];
-	HWM_LOG("hwmsen_aal_get_data2\n");
 	err = cxt->obj.sensor_operate(cxt->obj.self,SENSOR_GET_DATA, NULL, 0, 
 		&sensor_data, sizeof(hwm_sensor_data), &out_size);
 	if(err)
@@ -229,7 +223,6 @@ int hwmsen_aal_get_data()
 		als_data = sensor_data.values[0];
 	}
 	mutex_unlock(&hwm_obj->dc->lock);
-	HWM_LOG("hwmsen_aal_get_data3\n");
 	return als_data;
 }
 
@@ -622,7 +615,6 @@ static int hwmsen_enable(struct hwmdev_object *obj, int sensor, int enable)
 	}
 	else if(obj->dc->cxt[sensor] == NULL)
 	{
-		HWM_ERR("the sensor (%d) is not attached!!\n", sensor);
 		return -ENODEV;
 	}
 	
@@ -635,7 +627,6 @@ static int hwmsen_enable(struct hwmdev_object *obj, int sensor, int enable)
 	{
 //{@for mt6582 blocking issue work around		
 		if(sensor == 7){
-			HWM_LOG("P-sensor disable LDO low power\n");
 			pmic_ldo_suspend_enable(0);
 			}
 //@}
@@ -675,7 +666,6 @@ static int hwmsen_enable(struct hwmdev_object *obj, int sensor, int enable)
 	{
 //{@for mt6582 blocking issue work around
 		if(sensor == 7){
-			HWM_LOG("P-sensor enable LDO low power\n");
 			pmic_ldo_suspend_enable(1);
 
 			}
@@ -719,7 +709,6 @@ static int hwmsen_enable(struct hwmdev_object *obj, int sensor, int enable)
 		
 	}	
 	   
-	HWM_LOG("sensor(%d), flag(%d)\n", sensor, enable);
 
 	exit:
 		
@@ -743,7 +732,6 @@ static int hwmsen_enable_nodata(struct hwmdev_object *obj, int sensor, int enabl
 	}
 	else if(obj->dc->cxt[sensor] == NULL)
 	{
-		HWM_ERR("the sensor (%d) is not attached!!\n", sensor);
 		return -ENODEV;
 	}
 	
@@ -1115,12 +1103,10 @@ static void update_workqueue_polling_rate(int newDelay)
   if(atomic_read(&delaytemp) > newDelay)
   {
 	atomic_set(&hwm_obj->delay, newDelay);// work queue polling delay base time
-	HWM_LOG("set new workqueue base time=%d\n",atomic_read(&hwm_obj->delay));
   }
   else
   {
     atomic_set(&hwm_obj->delay, atomic_read(&delaytemp));
-	HWM_LOG("set old fastest sensor delay as workqueue base time=%d\n",atomic_read(&hwm_obj->delay));
   }
 
   //upadate all sensors delayCountSet
@@ -1136,18 +1122,15 @@ static void update_workqueue_polling_rate(int newDelay)
 		if(0 == atomic_read(&cxt->delay))
 		{
 		   cxt->delayCount = cxt->delayCountSet = 0;
-		   HWM_LOG("%s,set delayCountSet=0 delay =%d handle=%d\r\n",__func__, atomic_read(&cxt->delay), idx);
 		}
 		if(atomic_read(&cxt->delay) <= atomic_read(&hwm_obj->delay))
 		{
 		   cxt->delayCount = cxt->delayCountSet = 0;
-		   HWM_LOG("%s,set delayCountSet=0 delay =%d handle=%d\r\n",__func__, atomic_read(&cxt->delay), idx);
 		}
 		else
 		{
 		   i= atomic_read(&cxt->delay)/atomic_read(&hwm_obj->delay);
 		   cxt->delayCount = cxt->delayCountSet = i;
-		   HWM_LOG("%s:set delayCountSet=%d delay =%d handle=%d\r\n",__func__, i, atomic_read(&cxt->delay), idx);
 		#if 0
 		   switch(i)
 		   {
@@ -1196,7 +1179,6 @@ static long hwmsen_unlocked_ioctl(struct file *fp, unsigned int cmd, unsigned lo
 				HWM_ERR("copy_from_user fail!!\n");
 				return -EFAULT;
 			}
-			HWM_LOG("ioctl delay handle=%d,delay =%d\n",delayPara.handle,delayPara.delay);
 			hwmsen_set_delay(delayPara.delay,delayPara.handle);//modified for android2.3
 			update_workqueue_polling_rate(delayPara.delay);
         	
@@ -1381,7 +1363,6 @@ static void hwmsen_early_suspend(struct early_suspend *h)
 {
    //HWM_FUN(f);
    atomic_set(&(hwm_obj->early_suspend), 1);
-   HWM_LOG(" hwmsen_early_suspend ok------->hwm_obj->early_suspend=%d \n",atomic_read(&hwm_obj->early_suspend));
    return ;
 }
 /*----------------------------------------------------------------------------*/
@@ -1389,7 +1370,6 @@ static void hwmsen_late_resume(struct early_suspend *h)
 {
    //HWM_FUN(f);
    atomic_set(&(hwm_obj->early_suspend), 0);
-   HWM_LOG(" hwmsen_late_resume ok------->hwm_obj->early_suspend=%d \n",atomic_read(&hwm_obj->early_suspend));
    return ;
 }
 #endif //#if defined(CONFIG_HAS_EARLYSUSPEND)
@@ -1457,7 +1437,6 @@ static int msensor_probe(struct platform_device *pdev)
 {
     int i =0;
 	int err=0;
-	HWM_LOG(" msensor_probe +\n");
 	for(i = 0; i < MAX_CHOOSE_G_NUM; i++)
 	{
 	  if(NULL != msensor_init_list[i])
@@ -1466,7 +1445,6 @@ static int msensor_probe(struct platform_device *pdev)
 		if(0 == err)
 		{
 		   strcpy(msensor_name,msensor_init_list[i]->name);
-		   HWM_LOG(" msensor %s probe ok\n", msensor_name);
 		   break;
 		}
 	  }
@@ -1541,7 +1519,6 @@ static int gsensor_probe(struct platform_device *pdev)
 {
     int i =0;
 	int err=0;
-	HWM_LOG(" gsensor_probe +\n");
 
 	//
 /*
@@ -1553,15 +1530,12 @@ static int gsensor_probe(struct platform_device *pdev)
 	//
 	for(i = 0; i < MAX_CHOOSE_G_NUM; i++)
 	{
-	  HWM_LOG(" i=%d\n",i);
 	  if(0 != gsensor_init_list[i])
 	  {
-	    HWM_LOG(" !!!!!!!!\n");
 	    err = gsensor_init_list[i]->init();
 		if(0 == err)
 		{
 		   strcpy(gsensor_name,gsensor_init_list[i]->name);
-		   HWM_LOG(" gsensor %s probe ok\n", gsensor_name);
 		   break;
 		}
 	  }
@@ -1640,7 +1614,6 @@ static int alsps_sensor_probe(struct platform_device *pdev)
 {
     int i =0;
 	int err=0;
-	HWM_LOG(" als_ps sensor_probe +\n");
 	for(i = 0; i < MAX_CHOOSE_G_NUM; i++)
 	{
 	  if(NULL != alsps_init_list[i])
@@ -1649,7 +1622,6 @@ static int alsps_sensor_probe(struct platform_device *pdev)
 		if(0 == err)
 		{
 		   strcpy(alsps_name,alsps_init_list[i]->name);
-		   HWM_LOG(" alsps sensor %s probe ok\n", alsps_name);
 		   break;
 		}
 	  }
diff --git a/drivers/misc/mediatek/i2c/mt6580/i2c.c b/drivers/misc/mediatek/i2c/mt6580/i2c.c
index 12dd9c0f9..d6de64eb9 100644
--- a/drivers/misc/mediatek/i2c/mt6580/i2c.c
+++ b/drivers/misc/mediatek/i2c/mt6580/i2c.c
@@ -187,7 +187,6 @@ static S32 i2c_set_speed(mt_i2c *i2c)
   //I2CERR("second:sclk=%d khz=%d,i2c->speed=%d hclk=%d sample_cnt_div=%d,step_cnt_div=%d.\n",sclk,khz,i2c->speed,hclk,sample_cnt_div,step_cnt_div);
   if (sclk > khz) {
     I2CERR("%s mode: unsupported speed (%dkhz)\n",(mode == HS_MODE) ? "HS" : "ST/FT", khz);
-    I2CLOG("i2c->clk=%d,sclk=%d khz=%d,i2c->speed=%d hclk=%d sample_cnt_div=%d,step_cnt_div=%d.\n",i2c->clk,sclk,khz,i2c->speed,hclk,sample_cnt_div,step_cnt_div);
     I2C_BUG_ON(sclk > khz);
     ret = -ENOTSUPP_I2C;
     goto end;
@@ -205,7 +204,6 @@ static S32 i2c_set_speed(mt_i2c *i2c)
     tmp = (0 & 0x7) << 8 | (16 & 0x3f) << 0 | tmp;
     i2c->timing_reg=tmp;
     if (0 == i2c->timing_reg) {
-      I2CLOG("hs base address 0x%p,tmp =0x%x\n",i2c->base,tmp);
       //aee_kernel_warning(TAG, "@%s():%d, \n", __func__, __LINE__);
     }
     //i2c_writel(i2c, OFFSET_TIMING, tmp);
@@ -226,7 +224,6 @@ static S32 i2c_set_speed(mt_i2c *i2c)
     tmp  = (sample_cnt_div & 0x7) << 8 | (step_cnt_div & 0x3f) << 0 | tmp;
     i2c->timing_reg=tmp;
     if (0 == i2c->timing_reg) {
-      I2CLOG("n-hs base address 0x%p, tmp=0x%x\n",i2c->base,tmp);
       //aee_kernel_warning(TAG, "@%s():%d, \n", __func__, __LINE__);
     }
     //I2C_TIMING_REG_BACKUP[i2c->id]=tmp;
@@ -1213,8 +1210,6 @@ static S32 mt_i2c_probe(struct platform_device *pdev)
   i2c->pdmabase = DMA_I2C_BASE_CH(i2c->id);
 #endif
   
-  I2CLOG(" id: %d, reg: 0x%p, dma_reg: 0x%p, irq: %d\n", i2c->id, i2c->base, i2c->pdmabase, i2c->irqnr);
-
   spin_lock_init(&i2c->lock);
   init_waitqueue_head(&i2c->wait);
 
diff --git a/drivers/misc/mediatek/i2c/mt6580/i2c_common.c b/drivers/misc/mediatek/i2c/mt6580/i2c_common.c
index b656a6013..8b48167f0 100644
--- a/drivers/misc/mediatek/i2c/mt6580/i2c_common.c
+++ b/drivers/misc/mediatek/i2c/mt6580/i2c_common.c
@@ -15,7 +15,6 @@ static ssize_t show_config(struct device *dev, struct device_attribute *attr, ch
 {
   int len = strlen(data_buffer);
   memcpy(buff,data_buffer,len);
-  printk("Return Value:%s\n",data_buffer);
   return len;
 }
 
@@ -110,7 +109,6 @@ static int i2c_test_reg(int bus_id,int val)
   adap = i2c_get_adapter(bus_id);
   if (!adap) return -1;
   i2c = container_of(adap,mt_i2c,adap);
-  printk("I2C%d base address 0x%p\n",bus_id,i2c->base);
   //write i2c writable register with 0
   i2c_writel(i2c,OFFSET_SLAVE_ADDR,val);
   i2c_writel(i2c,OFFSET_INTR_MASK,val);
@@ -136,7 +134,6 @@ static int i2c_soft_reset(int bus_id)
   adap = i2c_get_adapter(bus_id);
   if (!adap) return -1;
   i2c = container_of(adap,mt_i2c,adap);
-  printk("I2C%d base address 0x%p\n",bus_id, i2c->base);
   //write i2c writable register with 0
   i2c_writel(i2c,OFFSET_SOFTRESET,1);
   /* If everything went ok (i.e. 1 msg transmitted), return #bytes
@@ -152,10 +149,8 @@ static int i2c_ext_conf_test(int bus_id,int val)
   adap = i2c_get_adapter(bus_id);
   if (!adap) return -1;
   i2c = container_of(adap,mt_i2c,adap);
-  printk("I2C%d base address 0x%p\n",bus_id, i2c->base);
   //write i2c writable register with 0
   i2c_writel(i2c,OFFSET_EXT_CONF,val);
-  printk("EXT_CONF 0x%x",i2c_readl(i2c,OFFSET_EXT_CONF));
   /* If everything went ok (i.e. 1 msg transmitted), return #bytes
      transmitted, else error code. */
   i2c_put_adapter(adap);
@@ -208,7 +203,6 @@ static ssize_t set_config(struct device *dev, struct device_attribute *attr, con
   int ret = 0;
 
   unsigned char tmpbuffer[128];
-  printk("%s\n", buf);
   //if ( sscanf(buf, "%d %d %d %d %d %d %d %d %d %d %d %d %s", &bus_id, &address, &operation, &trans_mode, &trans_stop, &speed_mode, &pushpull_mode, &query_mode, &timing, &trans_num, &trans_auxlen,&dir, data_buffer) ) {
   if ( sscanf(buf, "%d %x %d %d %d %d %d %d %d %d %d %1023s", &bus_id, &address, &operation, &trans_mode, &trans_stop, &speed_mode, &pushpull_mode, &query_mode, &timing, &trans_num, &trans_auxlen,data_buffer) ) {
       if((address != 0)&&(operation<=2)){
@@ -298,8 +292,6 @@ static ssize_t set_config(struct device *dev, struct device_attribute *attr, con
       }
 
       get_hexbuffer(data_buffer, vir_addr);
-      printk(KERN_ALERT"bus_id:%d,address:%x,count:%x,ext_flag:0x%x,timing:%d\n", bus_id,address,number,ext_flag,timing);
-      printk(KERN_ALERT"data_buffer:%s\n", data_buffer);
 
       if ( trans_mode == 1 ){
         /*DMA*/
@@ -320,15 +312,12 @@ static ssize_t set_config(struct device *dev, struct device_attribute *attr, con
         if ( operation == 1 ) {
           hex2string(vir_addr, tmpbuffer, length >> 1);
           sprintf(data_buffer, "1 %s", tmpbuffer);
-          printk("received data: %s\n", tmpbuffer);
         } else if ( operation == 0 ){
           hex2string(vir_addr, tmpbuffer, trans_auxlen);
           sprintf(data_buffer, "1 %s", tmpbuffer);
-          printk("received data: %s\n", tmpbuffer);
         } else {
           sprintf(data_buffer, "1 %s", "00");
         }
-        printk("Actual return Value:%d 0x%p\n",ret, vir_addr);
       } else if ( ret < 0 ) {
 
         if ( ret == -EINVAL) {
@@ -340,7 +329,6 @@ static ssize_t set_config(struct device *dev, struct device_attribute *attr, con
         } else {
           sprintf(data_buffer, "0 %s", "unknow error");
         }
-        printk("Actual return Value:%d 0x%p\n",ret, vir_addr);
       }
 
       if (trans_mode == 1 && vir_addr != NULL) {/*DMA MODE*/
@@ -402,7 +390,6 @@ static int i2c_common_probe(struct platform_device *pdev)
 {
   int ret = 0;
   //your code here, your should save client in your own way
-  printk(KERN_ALERT"i2c_common device probe\n");
   ret = device_create_file(&pdev->dev, &dev_attr_ut);
   return ret;
 }
@@ -436,7 +423,6 @@ static struct platform_device i2c_common_device = {
 
 static int __init xxx_init( void )
 {
-  printk(KERN_ALERT"i2c_common device init\n");
   platform_device_register(&i2c_common_device);
   return platform_driver_register(&i2c_common_driver);
 }
diff --git a/drivers/misc/mediatek/irq/mt6580/irq.c b/drivers/misc/mediatek/irq/mt6580/irq.c
index 51da4ef39..0e860cdb6 100644
--- a/drivers/misc/mediatek/irq/mt6580/irq.c
+++ b/drivers/misc/mediatek/irq/mt6580/irq.c
@@ -288,7 +288,6 @@ int mt_get_supported_irq_num(void)
 	dist_base = of_iomap(node, 0);
 	ret = readl_relaxed(dist_base + GIC_DIST_CTR) & 0x1f;
 	ret = (ret + 1) * 32;
-	pr_notice("gic supported max = %d\n", ret);
 	return ret;
 }
 EXPORT_SYMBOL(mt_get_supported_irq_num);
@@ -1277,11 +1276,6 @@ void mt_irq_dump_status(int irq)
 {
 	if (irq >= NR_IRQS)
 		return;
-	pr_notice
-	    ("[INT] irq:%d,enable:%x,active:%x,pending:%x,pri:%x,grp:%x,target:%x,sens:%x,pol:%x\n",
-	     irq, get_mask(irq), get_active_status(irq),
-	     get_pending_status(irq), get_pri(irq), get_grp(irq),
-	     get_target(irq), get_sens(irq), get_pol(irq));
 
 }
 EXPORT_SYMBOL(mt_irq_dump_status);
diff --git a/drivers/misc/mediatek/keypad/kpd.c b/drivers/misc/mediatek/keypad/kpd.c
index c168becbc..c452fa4d8 100644
--- a/drivers/misc/mediatek/keypad/kpd.c
+++ b/drivers/misc/mediatek/keypad/kpd.c
@@ -234,8 +234,6 @@ static inline void kpd_update_aee_state(void)
 				kpd_print("try to cancel hrtimer\n");
 #if AEE_ENABLE_5_15
 				if (flags_5s) {
-					printk
-					    ("Pressed Volup + Voldown5s~15s then trigger aee manual dump.\n");
 					aee_kernel_reminding("manual dump",
 							     "Trigger Vol Up +Vol Down 5s");
 				}
@@ -355,7 +353,6 @@ static void kpd_pwrkey_eint_handler(void)
 #if KPD_PWRKEY_USE_PMIC
 void kpd_pwrkey_pmic_handler(unsigned long pressed)
 {
-	printk(KPD_SAY "Power Key generate, pressed=%ld\n", pressed);
 	if (!kpd_input_dev) {
 		printk("KPD input device not ready\n");
 		return;
@@ -367,7 +364,6 @@ void kpd_pwrkey_pmic_handler(unsigned long pressed)
 
 void kpd_pmic_rstkey_handler(unsigned long pressed)
 {
-	printk(KPD_SAY "PMIC reset Key generate, pressed=%ld\n", pressed);
 	if (!kpd_input_dev) {
 		printk("KPD input device not ready\n");
 		return;
@@ -405,8 +401,6 @@ static void kpd_keymap_handler(unsigned long data)
 			/* bit is 1: not pressed, 0: pressed */
 			pressed = !(new_state[i] & mask);
 			if (kpd_show_hw_keycode) {
-				printk(KPD_SAY "(%s) HW keycode = %u\n",
-				       pressed ? "pressed" : "released", hw_keycode);
 			}
 			BUG_ON(hw_keycode >= KPD_NUM_KEYS);
 			linux_keycode = kpd_keymap[hw_keycode];
@@ -455,282 +449,221 @@ long kpd_dev_ioctl(struct file *file, unsigned int cmd, unsigned long arg)
 #if KPD_AUTOTEST
 	case PRESS_OK_KEY:	/* KPD_AUTOTEST disable auto test setting to resolve CR ALPS00464496 */
 		if (test_bit(KEY_OK, kpd_input_dev->keybit)) {
-			printk("[AUTOTEST] PRESS OK KEY!!\n");
 			input_report_key(kpd_input_dev, KEY_OK, 1);
 			input_sync(kpd_input_dev);
 		} else {
-			printk("[AUTOTEST] Not Support OK KEY!!\n");
 		}
 		break;
 	case RELEASE_OK_KEY:
 		if (test_bit(KEY_OK, kpd_input_dev->keybit)) {
-			printk("[AUTOTEST] RELEASE OK KEY!!\n");
 			input_report_key(kpd_input_dev, KEY_OK, 0);
 			input_sync(kpd_input_dev);
 		} else {
-			printk("[AUTOTEST] Not Support OK KEY!!\n");
 		}
 		break;
 	case PRESS_MENU_KEY:
 		if (test_bit(KEY_MENU, kpd_input_dev->keybit)) {
-			printk("[AUTOTEST] PRESS MENU KEY!!\n");
 			input_report_key(kpd_input_dev, KEY_MENU, 1);
 			input_sync(kpd_input_dev);
 		} else {
-			printk("[AUTOTEST] Not Support MENU KEY!!\n");
 		}
 		break;
 	case RELEASE_MENU_KEY:
 		if (test_bit(KEY_MENU, kpd_input_dev->keybit)) {
-			printk("[AUTOTEST] RELEASE MENU KEY!!\n");
 			input_report_key(kpd_input_dev, KEY_MENU, 0);
 			input_sync(kpd_input_dev);
 		} else {
-			printk("[AUTOTEST] Not Support MENU KEY!!\n");
 		}
 
 		break;
 	case PRESS_UP_KEY:
 		if (test_bit(KEY_UP, kpd_input_dev->keybit)) {
-			printk("[AUTOTEST] PRESS UP KEY!!\n");
 			input_report_key(kpd_input_dev, KEY_UP, 1);
 			input_sync(kpd_input_dev);
 		} else {
-			printk("[AUTOTEST] Not Support UP KEY!!\n");
 		}
 		break;
 	case RELEASE_UP_KEY:
 		if (test_bit(KEY_UP, kpd_input_dev->keybit)) {
-			printk("[AUTOTEST] RELEASE UP KEY!!\n");
 			input_report_key(kpd_input_dev, KEY_UP, 0);
 			input_sync(kpd_input_dev);
 		} else {
-			printk("[AUTOTEST] Not Support UP KEY!!\n");
 		}
 		break;
 	case PRESS_DOWN_KEY:
 		if (test_bit(KEY_DOWN, kpd_input_dev->keybit)) {
-			printk("[AUTOTEST] PRESS DOWN KEY!!\n");
 			input_report_key(kpd_input_dev, KEY_DOWN, 1);
 			input_sync(kpd_input_dev);
 		} else {
-			printk("[AUTOTEST] Not Support DOWN KEY!!\n");
 		}
 		break;
 	case RELEASE_DOWN_KEY:
 		if (test_bit(KEY_DOWN, kpd_input_dev->keybit)) {
-			printk("[AUTOTEST] RELEASE DOWN KEY!!\n");
 			input_report_key(kpd_input_dev, KEY_DOWN, 0);
 			input_sync(kpd_input_dev);
 		} else {
-			printk("[AUTOTEST] Not Support DOWN KEY!!\n");
 		}
 		break;
 	case PRESS_LEFT_KEY:
 		if (test_bit(KEY_LEFT, kpd_input_dev->keybit)) {
-			printk("[AUTOTEST] PRESS LEFT KEY!!\n");
 			input_report_key(kpd_input_dev, KEY_LEFT, 1);
 			input_sync(kpd_input_dev);
 		} else {
-			printk("[AUTOTEST] Not Support LEFT KEY!!\n");
 		}
 		break;
 	case RELEASE_LEFT_KEY:
 		if (test_bit(KEY_LEFT, kpd_input_dev->keybit)) {
-			printk("[AUTOTEST] RELEASE LEFT KEY!!\n");
 			input_report_key(kpd_input_dev, KEY_LEFT, 0);
 			input_sync(kpd_input_dev);
 		} else {
-			printk("[AUTOTEST] Not Support LEFT KEY!!\n");
 		}
 		break;
 
 	case PRESS_RIGHT_KEY:
 		if (test_bit(KEY_RIGHT, kpd_input_dev->keybit)) {
-			printk("[AUTOTEST] PRESS RIGHT KEY!!\n");
 			input_report_key(kpd_input_dev, KEY_RIGHT, 1);
 			input_sync(kpd_input_dev);
 		} else {
-			printk("[AUTOTEST] Not Support RIGHT KEY!!\n");
 		}
 		break;
 	case RELEASE_RIGHT_KEY:
 		if (test_bit(KEY_RIGHT, kpd_input_dev->keybit)) {
-			printk("[AUTOTEST] RELEASE RIGHT KEY!!\n");
 			input_report_key(kpd_input_dev, KEY_RIGHT, 0);
 			input_sync(kpd_input_dev);
 		} else {
-			printk("[AUTOTEST] Not Support RIGHT KEY!!\n");
 		}
 		break;
 	case PRESS_HOME_KEY:
 		if (test_bit(KEY_HOME, kpd_input_dev->keybit)) {
-			printk("[AUTOTEST] PRESS HOME KEY!!\n");
 			input_report_key(kpd_input_dev, KEY_HOME, 1);
 			input_sync(kpd_input_dev);
 		} else {
-			printk("[AUTOTEST] Not Support HOME KEY!!\n");
 		}
 		break;
 	case RELEASE_HOME_KEY:
 		if (test_bit(KEY_HOME, kpd_input_dev->keybit)) {
-			printk("[AUTOTEST] RELEASE HOME KEY!!\n");
 			input_report_key(kpd_input_dev, KEY_HOME, 0);
 			input_sync(kpd_input_dev);
 		} else {
-			printk("[AUTOTEST] Not Support HOME KEY!!\n");
 		}
 		break;
 	case PRESS_BACK_KEY:
 		if (test_bit(KEY_BACK, kpd_input_dev->keybit)) {
-			printk("[AUTOTEST] PRESS BACK KEY!!\n");
 			input_report_key(kpd_input_dev, KEY_BACK, 1);
 			input_sync(kpd_input_dev);
 		} else {
-			printk("[AUTOTEST] Not Support BACK KEY!!\n");
 		}
 		break;
 	case RELEASE_BACK_KEY:
 		if (test_bit(KEY_BACK, kpd_input_dev->keybit)) {
-			printk("[AUTOTEST] RELEASE BACK KEY!!\n");
 			input_report_key(kpd_input_dev, KEY_BACK, 0);
 			input_sync(kpd_input_dev);
 		} else {
-			printk("[AUTOTEST] Not Support BACK KEY!!\n");
 		}
 		break;
 	case PRESS_CALL_KEY:
 		if (test_bit(KEY_CALL, kpd_input_dev->keybit)) {
-			printk("[AUTOTEST] PRESS CALL KEY!!\n");
 			input_report_key(kpd_input_dev, KEY_CALL, 1);
 			input_sync(kpd_input_dev);
 		} else {
-			printk("[AUTOTEST] Not Support CALL KEY!!\n");
 		}
 		break;
 	case RELEASE_CALL_KEY:
 		if (test_bit(KEY_CALL, kpd_input_dev->keybit)) {
-			printk("[AUTOTEST] RELEASE CALL KEY!!\n");
 			input_report_key(kpd_input_dev, KEY_CALL, 0);
 			input_sync(kpd_input_dev);
 		} else {
-			printk("[AUTOTEST] Not Support CALL KEY!!\n");
 		}
 		break;
 
 	case PRESS_ENDCALL_KEY:
 		if (test_bit(KEY_ENDCALL, kpd_input_dev->keybit)) {
-			printk("[AUTOTEST] PRESS ENDCALL KEY!!\n");
 			input_report_key(kpd_input_dev, KEY_ENDCALL, 1);
 			input_sync(kpd_input_dev);
 		} else {
-			printk("[AUTOTEST] Not Support ENDCALL KEY!!\n");
 		}
 		break;
 	case RELEASE_ENDCALL_KEY:
 		if (test_bit(KEY_ENDCALL, kpd_input_dev->keybit)) {
-			printk("[AUTOTEST] RELEASE ENDCALL KEY!!\n");
 			input_report_key(kpd_input_dev, KEY_ENDCALL, 0);
 			input_sync(kpd_input_dev);
 		} else {
-			printk("[AUTOTEST] Not Support ENDCALL KEY!!\n");
 		}
 		break;
 	case PRESS_VLUP_KEY:
 		if (test_bit(KEY_VOLUMEUP, kpd_input_dev->keybit)) {
-			printk("[AUTOTEST] PRESS VOLUMEUP KEY!!\n");
 			input_report_key(kpd_input_dev, KEY_VOLUMEUP, 1);
 			input_sync(kpd_input_dev);
 		} else {
-			printk("[AUTOTEST] Not Support VOLUMEUP KEY!!\n");
 		}
 		break;
 	case RELEASE_VLUP_KEY:
 		if (test_bit(KEY_VOLUMEUP, kpd_input_dev->keybit)) {
-			printk("[AUTOTEST] RELEASE VOLUMEUP KEY!!\n");
 			input_report_key(kpd_input_dev, KEY_VOLUMEUP, 0);
 			input_sync(kpd_input_dev);
 		} else {
-			printk("[AUTOTEST] Not Support VOLUMEUP KEY!!\n");
 		}
 		break;
 	case PRESS_VLDOWN_KEY:
 		if (test_bit(KEY_VOLUMEDOWN, kpd_input_dev->keybit)) {
-			printk("[AUTOTEST] PRESS VOLUMEDOWN KEY!!\n");
 			input_report_key(kpd_input_dev, KEY_VOLUMEDOWN, 1);
 			input_sync(kpd_input_dev);
 		} else {
-			printk("[AUTOTEST] Not Support VOLUMEDOWN KEY!!\n");
 		}
 		break;
 	case RELEASE_VLDOWN_KEY:
 		if (test_bit(KEY_VOLUMEDOWN, kpd_input_dev->keybit)) {
-			printk("[AUTOTEST] RELEASE VOLUMEDOWN KEY!!\n");
 			input_report_key(kpd_input_dev, KEY_VOLUMEDOWN, 0);
 			input_sync(kpd_input_dev);
 		} else {
-			printk("[AUTOTEST] Not Support VOLUMEDOWN KEY!!\n");
 		}
 		break;
 	case PRESS_FOCUS_KEY:
 		if (test_bit(KEY_FOCUS, kpd_input_dev->keybit)) {
-			printk("[AUTOTEST] PRESS FOCUS KEY!!\n");
 			input_report_key(kpd_input_dev, KEY_FOCUS, 1);
 			input_sync(kpd_input_dev);
 		} else {
-			printk("[AUTOTEST] Not Support FOCUS KEY!!\n");
 		}
 		break;
 	case RELEASE_FOCUS_KEY:
 		if (test_bit(KEY_FOCUS, kpd_input_dev->keybit)) {
-			printk("[AUTOTEST] RELEASE FOCUS KEY!!\n");
 			input_report_key(kpd_input_dev, KEY_FOCUS, 0);
 			input_sync(kpd_input_dev);
 		} else {
-			printk("[AUTOTEST] Not Support RELEASE KEY!!\n");
 		}
 		break;
 	case PRESS_CAMERA_KEY:
 		if (test_bit(KEY_CAMERA, kpd_input_dev->keybit)) {
-			printk("[AUTOTEST] PRESS CAMERA KEY!!\n");
 			input_report_key(kpd_input_dev, KEY_CAMERA, 1);
 			input_sync(kpd_input_dev);
 		} else {
-			printk("[AUTOTEST] Not Support CAMERA KEY!!\n");
 		}
 		break;
 	case RELEASE_CAMERA_KEY:
 		if (test_bit(KEY_CAMERA, kpd_input_dev->keybit)) {
-			printk("[AUTOTEST] RELEASE CAMERA KEY!!\n");
 			input_report_key(kpd_input_dev, KEY_CAMERA, 0);
 			input_sync(kpd_input_dev);
 		} else {
-			printk("[AUTOTEST] Not Support CAMERA KEY!!\n");
 		}
 		break;
 	case PRESS_POWER_KEY:
 		if (test_bit(KEY_POWER, kpd_input_dev->keybit)) {
-			printk("[AUTOTEST] PRESS POWER KEY!!\n");
 			input_report_key(kpd_input_dev, KEY_POWER, 1);
 			input_sync(kpd_input_dev);
 		} else {
-			printk("[AUTOTEST] Not Support POWER KEY!!\n");
 		}
 		break;
 	case RELEASE_POWER_KEY:
 		if (test_bit(KEY_POWER, kpd_input_dev->keybit)) {
-			printk("[AUTOTEST] RELEASE POWER KEY!!\n");
 			input_report_key(kpd_input_dev, KEY_POWER, 0);
 			input_sync(kpd_input_dev);
 		} else {
-			printk("[AUTOTEST] Not Support POWER KEY!!\n");
 		}
 		break;
 #endif
 
 	case SET_KPD_KCOL:
 		kpd_auto_test_for_factorymode();	/* API 3 for kpd factory mode auto-test */
-		printk("[kpd_auto_test_for_factorymode] test performed!!\n");
 		break;
 	default:
 		return -EINVAL;
@@ -810,7 +743,6 @@ static int kpd_pdrv_probe(struct platform_device *pdev)
 		pr_warn(KPD_SAY "KP get irqnr failed\n");
 		return -ENODEV;
 	}
-	pr_warn(KPD_SAY "kp base: 0x%p, addr:0x%p,  kp irq: %d\n", kp_base,&kp_base, kp_irqnr);
 #endif
 #if defined(CONFIG_MTK_LEGACY) /*This not need now*/
 #ifdef CONFIG_MTK_LDVT
@@ -935,7 +867,6 @@ static int kpd_pdrv_probe(struct platform_device *pdev)
 		kpd_delete_attr(&kpd_pdrv.driver);
 		return err;
 	}
-    pr_warn(KPD_SAY "%s Done\n", __FUNCTION__);
 	return 0;
 }
 
diff --git a/drivers/misc/mediatek/keypad/mt6580/hal_kpd.c b/drivers/misc/mediatek/keypad/mt6580/hal_kpd.c
index 9e5d16951..58ef937ae 100644
--- a/drivers/misc/mediatek/keypad/mt6580/hal_kpd.c
+++ b/drivers/misc/mediatek/keypad/mt6580/hal_kpd.c
@@ -7,8 +7,6 @@
 #include <linux/aee.h>
 #endif
 
-#define KPD_DEBUG	KPD_YES
-
 #define KPD_SAY		"kpd: "
 #if KPD_DEBUG
 #define kpd_print(fmt, arg...)	printk(KPD_SAY fmt, ##arg)
@@ -22,7 +20,7 @@ extern struct input_dev *kpd_input_dev;
 static u8 kpd_pwrkey_state = !KPD_PWRKEY_POLARITY;
 #endif
 
-static int kpd_show_hw_keycode = 1;
+static int kpd_show_hw_keycode = 0;
 #ifndef EVB_PLATFORM
 static int kpd_enable_lprst = 1;
 #endif
@@ -457,7 +455,6 @@ void kpd_wakeup_src_setting(int enable)
 
 	if (is_fm_radio_playing == 0) {
 		if(enable == 1){
-			kpd_print("enable kpd work!\n");
 			enable_kpd(1);
 		}else{
 			kpd_print("disable kpd work!\n");
@@ -482,7 +479,6 @@ void kpd_init_keymap_state(u16 keymap_state[])
 	for(i = 0;i < KPD_NUM_MEMS;i++){
 	keymap_state[i] = kpd_keymap_state[i];
 	}
-	printk(KPD_SAY "init_keymap_state done: %x %x %x %x %x!\n",keymap_state[0], keymap_state[1], keymap_state[2], keymap_state[3], keymap_state[4]);
 }
 /********************************************************************/
 
diff --git a/drivers/misc/mediatek/lastpc/mt6580/lastpc_plt.c b/drivers/misc/mediatek/lastpc/mt6580/lastpc_plt.c
index 970cf4f9f..3cceb5ae9 100644
--- a/drivers/misc/mediatek/lastpc/mt6580/lastpc_plt.c
+++ b/drivers/misc/mediatek/lastpc/mt6580/lastpc_plt.c
@@ -40,7 +40,6 @@ static int lastpc_plt_dump(struct lastpc_plt *plt, char *buf, int len)
 		sp_value = readl(IOMEM(mcu_base+0x8+(i*0x10)));
 		kallsyms_lookup((unsigned long)pc_value, &size, &offset, NULL, str);
 		ptr += sprintf(ptr, "[LAST PC] CORE_%d PC = 0x%lx(%s + 0x%lx), FP = 0x%lx, SP = 0x%lx\n", i, pc_value, str, offset, fp_value, sp_value);
-		pr_notice("[LAST PC] CORE_%d PC = 0x%lx(%s), FP = 0x%lx, SP = 0x%lx\n", i, pc_value, str, fp_value, sp_value);
 	}
 
 	return 0;
diff --git a/drivers/misc/mediatek/lcm/rm67160_400x400_dsi_cmd_oled/rm67160_400x400_dsi_cmd_oled.c b/drivers/misc/mediatek/lcm/rm67160_400x400_dsi_cmd_oled/rm67160_400x400_dsi_cmd_oled.c
index bfdb0ac1d..f27099d23 100755
--- a/drivers/misc/mediatek/lcm/rm67160_400x400_dsi_cmd_oled/rm67160_400x400_dsi_cmd_oled.c
+++ b/drivers/misc/mediatek/lcm/rm67160_400x400_dsi_cmd_oled/rm67160_400x400_dsi_cmd_oled.c
@@ -270,7 +270,6 @@ static void lcm_init(void)
 
 static void lcm_suspend(void)
 {
-	printk("RM67160 lcm_suspend,idle_clock_mode=%d\n",idle_clock_mode);
 	if(idle_clock_mode == 1)
 	{
     	push_table(lcm_clk_sleep_mode_in_setting, sizeof(lcm_clk_sleep_mode_in_setting) / sizeof(struct LCM_setting_table), 1);
@@ -281,7 +280,6 @@ static void lcm_suspend(void)
     	push_table(lcm_deep_sleep_mode_in_setting, sizeof(lcm_deep_sleep_mode_in_setting) / sizeof(struct LCM_setting_table), 1);
 		MDELAY(20);
 	}
-	LCM_PRINT(" =========== %s, %d \n", "rm67160_480x480 lcm_suspend", __LINE__);
 }
 
 
@@ -346,7 +344,6 @@ static void lcm_setbacklight(void* handle,unsigned int level)
 {
 	unsigned int default_level = 45;
 	unsigned int mapped_level = 0;
-	printk("rm67160 lcm_setbacklight\n");
 	//for LGE backlight IC mapping table
 	if(level > 255) 
 			level = 255;
@@ -367,7 +364,6 @@ static void lcm_setbacklight(void* handle,unsigned int level)
 	}
 	// Refresh value of backlight level.
 	lcm_backlight_level_setting[0].para_list[0] = mapped_level;
-	LCM_PRINT(" lcm_setbacklight setting level is %d,mapped_level=%d \r\n", level,mapped_level);
 	push_table(lcm_backlight_level_setting, sizeof(lcm_backlight_level_setting) / sizeof(struct LCM_setting_table), 1);
 }
 
diff --git a/drivers/misc/mediatek/lcm/rm67160_400x400_dsi_cmd_oled_hehui/rm67160_400x400_dsi_cmd_oled_hehui.c b/drivers/misc/mediatek/lcm/rm67160_400x400_dsi_cmd_oled_hehui/rm67160_400x400_dsi_cmd_oled_hehui.c
index c0a66992b..21acb3fa3 100755
--- a/drivers/misc/mediatek/lcm/rm67160_400x400_dsi_cmd_oled_hehui/rm67160_400x400_dsi_cmd_oled_hehui.c
+++ b/drivers/misc/mediatek/lcm/rm67160_400x400_dsi_cmd_oled_hehui/rm67160_400x400_dsi_cmd_oled_hehui.c
@@ -488,7 +488,6 @@ static void lcm_setbacklight(void* handle,unsigned int level)
 	}
 	// Refresh value of backlight level.
 	lcm_backlight_level_setting[0].para_list[0] = mapped_level;
-	LCM_PRINT(" lcm_setbacklight setting level is %d,mapped_level=%d \r\n", level,mapped_level);
 	push_table(lcm_backlight_level_setting, sizeof(lcm_backlight_level_setting) / sizeof(struct LCM_setting_table), 1);
 }
 
diff --git a/drivers/misc/mediatek/leds/leds_drv.c b/drivers/misc/mediatek/leds/leds_drv.c
index f10848bca..9dc3432a7 100644
--- a/drivers/misc/mediatek/leds/leds_drv.c
+++ b/drivers/misc/mediatek/leds/leds_drv.c
@@ -50,7 +50,7 @@ struct mt65xx_led_data *g_leds_data[MT65XX_LED_TYPE_TOTAL];
 /****************************************************************************
  * DEBUG MACROS
  ***************************************************************************/
-static int debug_enable_led = 1;
+static int debug_enable_led = 0;
 #define LEDS_DRV_DEBUG(format, args...) do { \
 	if (debug_enable_led) \
 	{\
diff --git a/drivers/misc/mediatek/leds/mt6580/leds.c b/drivers/misc/mediatek/leds/mt6580/leds.c
index b70a2d1e6..b02257082 100755
--- a/drivers/misc/mediatek/leds/mt6580/leds.c
+++ b/drivers/misc/mediatek/leds/mt6580/leds.c
@@ -180,7 +180,6 @@ int mt_led_set_pwm(int pwm_num, struct nled_setting* led)
 	pwm_setting.pwm_no = pwm_num;
     pwm_setting.mode = PWM_MODE_OLD;
     
-    LEDS_DEBUG("[LED]led_set_pwm: mode=%d,pwm_no=%d\n", led->nled_mode, pwm_num);  
 	/* We won't choose 32K to be the clock src of old mode because of system performance. */
 	/* The setting here will be clock src = 26MHz, CLKSEL = 26M/1625 (i.e. 16K) */
 	pwm_setting.clk_src = PWM_CLK_OLD_MODE_32K;
@@ -200,9 +199,7 @@ int mt_led_set_pwm(int pwm_num, struct nled_setting* led)
 			break;
             
 		case NLED_BLINK :
-			LEDS_DEBUG("[LED]LED blink on time = %d offtime = %d\n",led->blink_on_time,led->blink_off_time);
 			time_index = find_time_index(led->blink_on_time + led->blink_off_time);
-			LEDS_DEBUG("[LED]LED div is %d\n",time_index);
 			pwm_setting.clk_div = time_index;
 			pwm_setting.PWM_MODE_OLD_REGS.DATA_WIDTH = (led->blink_on_time + led->blink_off_time) * MIN_FRE_OLD_PWM / div_array_hal[time_index];
 			pwm_setting.PWM_MODE_OLD_REGS.THRESH = (led->blink_on_time*100) / (led->blink_on_time + led->blink_off_time);
@@ -336,16 +333,13 @@ int mt_led_blink_pmic(enum mt65xx_led_pmic pmic_type, struct nled_setting *led)
 {
 	int time_index = 0;
 	int duty = 0;
-	LEDS_DEBUG("[LED]led_blink_pmic: pmic_type=%d\n", pmic_type);  
 	
 	if((pmic_type != MT65XX_LED_PMIC_NLED_ISINK0 && pmic_type!= MT65XX_LED_PMIC_NLED_ISINK1 && 
 		pmic_type!= MT65XX_LED_PMIC_NLED_ISINK2 && pmic_type!= MT65XX_LED_PMIC_NLED_ISINK3) || led->nled_mode != NLED_BLINK) {
 		return -1;
 	}
 				
-	LEDS_DEBUG("[LED]LED blink on time = %d offtime = %d\n",led->blink_on_time,led->blink_off_time);
 	time_index = find_time_index_pmic(led->blink_on_time + led->blink_off_time);
-	LEDS_DEBUG("[LED]LED index is %d  freqsel=%d\n", time_index, pmic_freqsel_array[time_index]);
 	duty=32*led->blink_on_time/(led->blink_on_time + led->blink_off_time);
 	//pmic_set_register_value(PMIC_RG_G_DRV_2M_CK_PDN(0X0); // DISABLE POWER DOWN ,Indicator no need)
 	pmic_set_register_value(PMIC_RG_DRV_32K_CK_PDN,0x0); // Disable power down  
@@ -432,12 +426,9 @@ int mt_backlight_set_pwm(int pwm_num, u32 level, u32 div, struct PWM_config *con
 		pwm_setting.PWM_MODE_OLD_REGS.DATA_WIDTH = 255; // 256 level
 		pwm_setting.PWM_MODE_OLD_REGS.THRESH = level;
 
-		LEDS_DEBUG("[LEDS][%d]backlight_set_pwm:duty is %d/%d\n", BacklightLevelSupport, level, pwm_setting.PWM_MODE_OLD_REGS.DATA_WIDTH);
-		LEDS_DEBUG("[LEDS][%d]backlight_set_pwm:clk_src/div is %d%d\n", BacklightLevelSupport, pwm_setting.clk_src, pwm_setting.clk_div);
 		if(level >0 && level < 256)
 		{
 			pwm_set_spec_config(&pwm_setting);
-			LEDS_DEBUG("[LEDS][%d]backlight_set_pwm: old mode: thres/data_width is %d/%d\n", BacklightLevelSupport, pwm_setting.PWM_MODE_OLD_REGS.THRESH, pwm_setting.PWM_MODE_OLD_REGS.DATA_WIDTH);
 		}
 		else
 		{
@@ -475,8 +466,6 @@ int mt_backlight_set_pwm(int pwm_num, u32 level, u32 div, struct PWM_config *con
 		pwm_setting.PWM_MODE_FIFO_REGS.GDURATION = (pwm_setting.PWM_MODE_FIFO_REGS.HDURATION + 1) * 32 - 1;
 		pwm_setting.PWM_MODE_FIFO_REGS.WAVE_NUM = 0;
 
-		LEDS_DEBUG("[LEDS]backlight_set_pwm:duty is %d\n", level);
-		LEDS_DEBUG("[LEDS]backlight_set_pwm:clk_src/div/high/low is %d%d%d%d\n", pwm_setting.clk_src, pwm_setting.clk_div, pwm_setting.PWM_MODE_FIFO_REGS.HDURATION, pwm_setting.PWM_MODE_FIFO_REGS.LDURATION);
 
 		if(level > 0 && level <= 32)
 		{
@@ -557,7 +546,6 @@ int mt_brightness_set_pmic(enum mt65xx_led_pmic pmic_type, u32 level, u32 div)
 	  4,      4,      5,      5,      5,      5,      5,      5,
         };
 
-	LEDS_DEBUG("[LED]PMIC#%d:%d\n", pmic_type, level);
 	mutex_lock(&leds_pmic_mutex);
 	if (pmic_type == MT65XX_LED_PMIC_LCD_ISINK)
 	{
@@ -621,9 +609,6 @@ int mt_brightness_set_pmic(enum mt65xx_led_pmic pmic_type, u32 level, u32 div)
 				level = ((level * PMIC_BACKLIGHT_LEVEL) / 255) + 1;
 			}
 
-			LEDS_DEBUG("[LED]Level Mapping = %d \n", level);
-			LEDS_DEBUG("[LED]ISINK DIM Duty = %d \n", duty_mapping[level-1]);
-			LEDS_DEBUG("[LED]ISINK Current = %d \n", current_mapping[level-1]);
 			pmic_set_register_value(PMIC_ISINK_DIM0_DUTY,duty_mapping[level-1]);
 			pmic_set_register_value(PMIC_ISINK_DIM1_DUTY,duty_mapping[level-1]);
 			pmic_set_register_value(PMIC_ISINK_DIM2_DUTY,duty_mapping[level-1]);
@@ -855,7 +840,6 @@ int mt_mt65xx_led_set_cust(struct cust_mt65xx_led *cust, int level)
 			return 1;
           
 		case MT65XX_LED_MODE_GPIO:
-			LEDS_DEBUG("brightness_set_cust:go GPIO mode!!!!!\n");
 			return ((cust_set_brightness)(cust->data))(level);
               
 		case MT65XX_LED_MODE_PMIC:
@@ -887,7 +871,6 @@ int mt_mt65xx_led_set_cust(struct cust_mt65xx_led *cust, int level)
 		if (strcmp(cust->name, "lcd-backlight") == 0) {
 			    bl_brightness_hal = level;
             }
-			LEDS_DEBUG("brightness_set_cust:backlight control by LCM\n");
 			return ((cust_brightness_set)(cust->data))(level, bl_div_hal);
 
 		case MT65XX_LED_MODE_CUST_BLS_PWM:
@@ -908,7 +891,6 @@ void mt_mt65xx_led_work(struct work_struct *work)
 	struct mt65xx_led_data *led_data =
 		container_of(work, struct mt65xx_led_data, work);
 
-	LEDS_DEBUG("[LED]%s:%d\n", led_data->cust.name, led_data->level);
 	mutex_lock(&leds_mutex);
 	mt_mt65xx_led_set_cust(&led_data->cust, led_data->level);
 	mutex_unlock(&leds_mutex);;
@@ -927,12 +909,10 @@ void mt_mt65xx_led_set(struct led_classdev *led_cdev, enum led_brightness level)
 		led_data->level = level;
 		if(strcmp(led_data->cust.name,"lcd-backlight") != 0)
 		{
-			LEDS_DEBUG("[LED]Set NLED directly %d at time %lu\n",led_data->level,jiffies);
 			schedule_work(&led_data->work);				
 		}
 		else
 		{
-			LEDS_DEBUG("[LED]Set Backlight directly %d at time %lu\n",led_data->level,jiffies);
 			//mt_mt65xx_led_set_cust(&led_data->cust, led_data->level);	
 			disp_aal_notify_backlight_changed( (((1 << MT_LED_INTERNAL_LEVEL_BIT_CNT) - 1)*level + 127)/255 );
 		}
@@ -944,12 +924,10 @@ void mt_mt65xx_led_set(struct led_classdev *led_cdev, enum led_brightness level)
 		led_data->level = level;
 		if(strcmp(led_data->cust.name,"lcd-backlight") != 0)
 		{
-			LEDS_DEBUG("[LED]Set NLED directly %d at time %lu\n",led_data->level,jiffies);
-				schedule_work(&led_data->work);
+            schedule_work(&led_data->work);
 		}
 		else
 		{
-				LEDS_DEBUG("[LED]Set Backlight directly %d at time %lu\n",led_data->level,jiffies);
 			if(MT65XX_LED_MODE_CUST_BLS_PWM == led_data->cust.mode)
 			{
 				mt_mt65xx_led_set_cust(&led_data->cust, ((((1 << MT_LED_INTERNAL_LEVEL_BIT_CNT) - 1)*level + 127)/255));
diff --git a/drivers/misc/mediatek/lsq/lsq.c b/drivers/misc/mediatek/lsq/lsq.c
index 9444c3ed4..bcb523b35 100755
--- a/drivers/misc/mediatek/lsq/lsq.c
+++ b/drivers/misc/mediatek/lsq/lsq.c
@@ -117,16 +117,12 @@ static struct platform_device lsq_misc_device = {
 static int __init lsq_init(void)
 {
 	int ret;
-	LSQ_DRV_DEBUG("[LSQ]%s\n", __func__);
 
 	ret = platform_device_register(&lsq_misc_device);
-	if (ret)
-		printk("[LSQ]lsq_init:dev:E%d\n", ret);
 	ret = platform_driver_register(&lsq_misc_driver);
 
 	if (ret)
 	{
-		LSQ_DRV_DEBUG("[LSQ]lsq_init:drv:E%d\n", ret);
 		platform_device_unregister(&lsq_misc_device); 
 		return ret;
 	}
diff --git a/drivers/misc/mediatek/m4u/mt6580/m4u_hw.c b/drivers/misc/mediatek/m4u/mt6580/m4u_hw.c
index 5bd1e2352..5bbd04023 100644
--- a/drivers/misc/mediatek/m4u/mt6580/m4u_hw.c
+++ b/drivers/misc/mediatek/m4u/mt6580/m4u_hw.c
@@ -225,8 +225,6 @@ int mau_start_monitor(int m4u_id, int m4u_slave_id, int mau_set,
     if(0 == m4u_base)
         return -1;
 	
-    M4ULOG_HIGH("mau_start_monitor [%d], start=0x%x, end=0x%x, write: %d, port_mask=0x%x, larb_mask=0x%x\n", mau_set, start, end, wr, port_mask, larb_mask); 
-	
     M4U_WriteReg32(m4u_base, REG_MMU_MAU_START(m4u_slave_id, mau_set), start);
     M4U_WriteReg32(m4u_base, REG_MMU_MAU_START_BIT32(m4u_slave_id, mau_set), !!(bit32));
     M4U_WriteReg32(m4u_base, REG_MMU_MAU_END(m4u_slave_id, mau_set), end);
@@ -956,9 +954,6 @@ int m4u_insert_seq_range(M4U_PORT_ID port,unsigned int MVAStart,unsigned int MVA
     unsigned int m4u_slave_id = m4u_port_2_m4u_slave_id(port);
     M4U_RANGE_DES_T *pSeq = gM4USeq[m4u_index] + M4U_SEQ_NUM(m4u_index)*m4u_slave_id;
 	  
-    M4ULOG_MID("m4u_insert_seq_range , module:%s, MVAStart:0x%x, MVAEnd:0x%x\n", 
-            m4u_get_port_name(port), MVAStart, MVAEnd);
-
     if(MVAEnd - MVAStart < PAGE_SIZE)
     {
         M4ULOG_MID("too small size, skip to insert! module:%s, MVAStart:0x%x, size:%d\n", 
@@ -1100,10 +1095,6 @@ static int _m4u_config_port(int port, int virt, int sec, int dis, int dir)
     unsigned int larb, larb_port;
     int ret = 0;
     
-    if(0 == virt || 1 == sec)    
-    {
-        M4ULOG_HIGH("config_port:%s,v%d,s%d\n", m4u_get_port_name(port), virt, sec);
-    }
     //MMProfileLogEx(M4U_MMP_Events[M4U_MMP_CONFIG_PORT], MMProfileFlagStart, port, virt);
 
     spin_lock(&gM4u_reg_lock);
@@ -1373,10 +1364,6 @@ int m4u_monitor_stop(int m4u_id)
 
     m4u_get_perf_counter(m4u_index, 0, &cnt);
     //read register get the count
-    M4ULOG_MID("[M4U%d-%d] total:%d, main miss:%d, pfh miss(walk):%d, auto pfh:%d\n", 
-        m4u_id, 0,
-        cnt.transaction_cnt, cnt.main_tlb_miss_cnt, cnt.pfh_tlb_miss_cnt,cnt.pfh_cnt);
-	
     return 0;
 }
 
@@ -1738,7 +1725,6 @@ static struct timer_list m4u_isr_pause_timer;
 
 static void m4u_isr_restart(unsigned long unused)
 {
-	M4UMSG("restart m4u irq\n");
 	m4u_intr_modify_all(1);
 }
 
@@ -1754,7 +1740,6 @@ static int m4u_isr_pause(int delay)
 	m4u_intr_modify_all(0);	//disable all intr
 	m4u_isr_pause_timer.expires = jiffies + delay*HZ; //delay seconds
 	add_timer(&m4u_isr_pause_timer);
-	M4UMSG("warning: stop m4u irq for %ds\n", delay);
 	return 0;
 }
 
@@ -1863,8 +1848,6 @@ irqreturn_t MTK_M4U_isr(int irq, void *dev_id)
         int layer, write, m4u_port;
         unsigned int fault_mva, fault_pa;
 		
-        M4UMSG("m4u main interrupt happened: sta=0x%x\n", IntrSrc);
-
         if(IntrSrc & (F_INT_MMU0_MAIN_MSK | F_INT_MMU0_MAU_MSK))
         {
             m4u_slave_id = 0;
@@ -2156,7 +2139,6 @@ int m4u_hw_init(struct m4u_device *m4u_dev, int m4u_id)
 #ifdef M4U_4GBDRAM
     gM4U_4G_DRAM_Mode = enable_4G();
 #endif
-    M4UMSG("4G DRAM Mode is: %d\n", gM4U_4G_DRAM_Mode);
 
     gM4UBaseAddr[m4u_id] = m4u_dev->m4u_base[m4u_id];
     
diff --git a/drivers/misc/mediatek/mach/mt6580/ca7_timer.c b/drivers/misc/mediatek/mach/mt6580/ca7_timer.c
index ef45a296c..459a01de3 100644
--- a/drivers/misc/mediatek/mach/mt6580/ca7_timer.c
+++ b/drivers/misc/mediatek/mach/mt6580/ca7_timer.c
@@ -327,7 +327,6 @@ static int __cpuinit generic_timer_setup(struct clock_event_device *clk)
 {
     struct clock_event_device **this_cpu_clk;
 
-    pr_info("[ca7_timer]%s entry\n", __func__);
     generic_timer_calibrate_rate();
 
     write_cntp_ctl(0x0);
@@ -380,9 +379,6 @@ static int __init generic_timer_register(struct device_node *np)
   	
 		of_node_put(np);
   	
-		pr_alert("%s: generic_timer_rate(0x%lx), PHYS_SECURE_PPI=%d, PHYS_NONSECURE_PPI=%d, VIRT_PPI=%d, HYP_PPI=%d, \n",
-			 __func__, generic_timer_rate, arch_timer_ppi[PHYS_SECURE_PPI], arch_timer_ppi[PHYS_NONSECURE_PPI], arch_timer_ppi[VIRT_PPI], arch_timer_ppi[HYP_PPI]); 
-
     if (timer_evt)
         return -EBUSY;
 
diff --git a/drivers/misc/mediatek/mach/mt6580/core.c b/drivers/misc/mediatek/mach/mt6580/core.c
index a24cae65e..48ce7dc6a 100644
--- a/drivers/misc/mediatek/mach/mt6580/core.c
+++ b/drivers/misc/mediatek/mach/mt6580/core.c
@@ -57,7 +57,6 @@ void __init mt_init(void)
 	    if (!model)
 		model = "<unknown>";
 	    strcpy(mdesc->name, model);
-	    pr_info("mdesc->name=%s\n",mdesc->name);
 	}
     }
 }
diff --git a/drivers/misc/mediatek/mach/mt6580/hotplug.c b/drivers/misc/mediatek/mach/mt6580/hotplug.c
index 8c0440960..5ff851f1b 100644
--- a/drivers/misc/mediatek/mach/mt6580/hotplug.c
+++ b/drivers/misc/mediatek/mach/mt6580/hotplug.c
@@ -171,8 +171,6 @@ static inline void platform_do_lowpower(unsigned int cpu, int *spurious)
  */
 int mt_cpu_kill(unsigned int cpu)
 {
-    HOTPLUG_INFO("mt_cpu_kill, cpu: %d\n", cpu);
-
 #ifdef CONFIG_HOTPLUG_WITH_POWER_CTRL
     switch(cpu)
     {
@@ -224,8 +222,6 @@ void mt_cpu_die(unsigned int cpu)
         wd_api->wd_cpu_hot_plug_off_notify(cpu);
 #endif
 
-    HOTPLUG_INFO("mt_cpu_die, cpu: %d\n", cpu);
-
     /*
      * we're ready for shutdown now, so do it
      */
@@ -253,6 +249,5 @@ int mt_cpu_disable(unsigned int cpu)
     * we don't allow CPU 0 to be shutdown (it is still too special
     * e.g. clock tick interrupts)
     */
-    HOTPLUG_INFO("mt_cpu_disable, cpu: %d\n", cpu);
     return cpu == 0 ? -EPERM : 0;
 }
diff --git a/drivers/misc/mediatek/mach/mt6580/mt-smp.c b/drivers/misc/mediatek/mach/mt6580/mt-smp.c
index 5d657fcf0..806f782a7 100644
--- a/drivers/misc/mediatek/mach/mt6580/mt-smp.c
+++ b/drivers/misc/mediatek/mach/mt6580/mt-smp.c
@@ -116,7 +116,6 @@ void __cpuinit mt_smp_secondary_init(unsigned int cpu)
 #endif
 
     pr_debug("Slave cpu init\n");
-    HOTPLUG_INFO("platform_secondary_init, cpu: %d\n", cpu);
 
     mt_gic_secondary_init();
 
@@ -142,17 +141,12 @@ int __cpuinit mt_smp_boot_secondary(unsigned int cpu, struct task_struct *idle)
 {
     unsigned long timeout;
 
-    pr_crit("[AT]Boot slave CPU\n");
-
     atomic_inc(&hotplug_cpu_count);
-pr_crit("[AT11]Boot slave CPU %d\n",cpu);
     /*
      * Set synchronisation state between this boot processor
      * and the secondary one
      */
     spin_lock(&boot_lock);
-pr_crit("mt_smp_boot_secondary, cpu: %d\n", cpu);
-    HOTPLUG_INFO("mt_smp_boot_secondary, cpu: %d\n", cpu);
     /*
      * The secondary processor is waiting to be released from
      * the holding pen - release it, then wait for it to flag
@@ -310,8 +304,6 @@ void __init mt_smp_init_cpus(void)
     REG_WRITE(CCI400_SI4_SNOOP_CONTROL, REG_READ(CCI400_SI4_SNOOP_CONTROL) | (SNOOP_REQ | DVM_MSG_REQ));
     while (REG_READ(CCI400_STATUS) & CHANGE_PENDING);
  #endif
-    pr_emerg("@@@###[AT] num_possible_cpus(): %u ###@@@\n", num_possible_cpus());
-    pr_emerg("@@@###[AT] num_present_cpus(): %u ###@@@\n", num_present_cpus());
 #if !defined(CONFIG_OF)
     {
     unsigned int i, ncores;
diff --git a/drivers/misc/mediatek/mach/mt6580/mt_clkmgr.c b/drivers/misc/mediatek/mach/mt6580/mt_clkmgr.c
index 9cd6f53b3..49360eb71 100644
--- a/drivers/misc/mediatek/mach/mt6580/mt_clkmgr.c
+++ b/drivers/misc/mediatek/mach/mt6580/mt_clkmgr.c
@@ -4413,7 +4413,6 @@ void clk_stat_bug(void)
 		skip = (clk->cnt == 0) && (clk->state == 0);
 		if (skip)
 			continue;
-		pr_warn(" [%s]state=%u, cnt=%u \n", clk->name, clk->state, clk->cnt);
         }
 
 	for (i = 0; i < NR_CLKMUXS; i++)
@@ -4422,11 +4421,6 @@ void clk_stat_bug(void)
 		
 		clkmuxs = &muxs[i];
 		src_id = clkmuxs->ops->get(clkmuxs);
-		pr_warn("clkmux[%s]: source = %s,source cnt = %d, Drain = %s, Drain cnt = %d \n", 
-			clkmuxs->name,
-			clks[src_id].name,clks[src_id].cnt,
-			clks[clkmuxs->drain].name,
-			clks[clkmuxs->drain].cnt);
 	}
 }
 EXPORT_SYMBOL(clk_stat_bug);
@@ -4435,11 +4429,9 @@ void slp_check_pm_mtcmos_pll(void)
 {
 	int i;
 	slp_chk_mtcmos_pll_stat = 1;
-	pr_warn("[%s]\n", __func__);
 
 	if (pll_is_on(UNIVPLL)) {
 		slp_chk_mtcmos_pll_stat = -1;
-		pr_warn("%s: on\n", plls[UNIVPLL].name);
 		pr_warn("suspend warning: %s is on!!!\n", plls[UNIVPLL].name);
 		pr_warn("warning! warning! warning! it may cause resume fail\n");
 		clk_stat_bug();
@@ -4447,7 +4439,6 @@ void slp_check_pm_mtcmos_pll(void)
 
 	for (i = 0; i < NR_SYSS; i++) {
 		if (subsys_is_on(i)) {
-			pr_warn("%s: on\n", syss[i].name);
 			if (i > SYS_CON) {
 				//aee_kernel_warning("Suspend Warning","%s is on", subsyss[i].name);
 				slp_chk_mtcmos_pll_stat = -1;
@@ -4495,9 +4486,6 @@ static void mt_subsys_init(void)
 
         if (sys->state != sys->default_sta) // XXX: state not match and use default_state (sync with cg_clk[]?)
         {
-            pr_info("[%s]%s, change state: (%u->%u)\n", __func__,
-                     sys->name, sys->state, sys->default_sta);
-
             if (sys->default_sta == PWR_DOWN)
             {
                 disable_subsys_locked(sys, 1);
@@ -4558,11 +4546,6 @@ static void mt_clks_init(void)
 			else
 				clk->cnt = (PWR_ON == clk->state) ? 1 : 0;
 			clk->force_on = 0;
-			pr_info("clks[%d] %s	CNT = %d,	STATE = %d\n",
-				i,
-				clks[i].name,
-				clk->cnt,
-				clk->state);
 		}
 		else
 		{
@@ -4583,12 +4566,6 @@ static void mt_clks_init(void)
 		cg_clk_id src_id;
 		clkmux = &muxs[i];
 		src_id = clkmux->ops->get(clkmux);
-		pr_info("clkmux[%d]: source = %s source cnt = %d, Drain = %s Drain cnt = %d\n",
-			i,
-			clks[src_id].name,
-			clks[src_id].cnt,
-			clks[clkmux->drain].name,
-			clks[clkmux->drain].cnt);
 		clk = id_to_clk(clkmux->drain); // clk (drain)
 		if (NULL != clk) // clk (drain)
 		{
@@ -4608,12 +4585,6 @@ static void mt_clks_init(void)
 	for (i = 0; i < NR_CLKS; i++)
 	{
 		clk = &clks[i];
-		pr_info("%s[%d]:%s cnt=%d state=%d\n",
-			__FUNCTION__,
-			clk - &clks[0],
-			clk->name,
-			clk->cnt,
-			clk->ops->get_state(clk));
 		if (PWR_ON == clk->state)
 		{
 			BUG_ON((MT_CG_INVALID != clk->src) && (NULL != clk->parent));
@@ -4891,15 +4862,6 @@ void dump_clk_info_by_id(cg_clk_id id)
 	struct cg_clk *clk = id_to_clk(id);
 	if (NULL != clk)
 	{
-		pr_info("[%d,\t%d,\t%s,\t"HEX_FMT",\t%s,\t%s,\t%s]\n",
-			id,
-			clk->cnt,
-			(PWR_ON == clk->state) ? "ON" : "OFF",
-			clk->mask,
-			(clk->grp) ? clk->grp->name : "NULL",
-			clk->name,
-			(clk->src < NR_CLKS) ? clks[clk->src].name : "MT_CG_INVALID"
-			);
 	}
 	return;
 }
@@ -5271,8 +5233,6 @@ static ssize_t subsys_test_write(struct file *file, const char __user *buffer,
         }
     }
 
-    pr_info("[%s]%s subsys %d: result is %d\n", __func__, cmd, id, err);
-
     EXIT_FUNC(FUNC_LV_BODY);
     return count;
 }
diff --git a/drivers/misc/mediatek/mach/mt6580/mt_cpufreq.c b/drivers/misc/mediatek/mach/mt6580/mt_cpufreq.c
index da6e84476..2b0df93a7 100755
--- a/drivers/misc/mediatek/mach/mt6580/mt_cpufreq.c
+++ b/drivers/misc/mediatek/mach/mt6580/mt_cpufreq.c
@@ -263,8 +263,6 @@ static unsigned int _mt_cpufreq_get_cpu_level(void)
     unsigned int func_code_0 = _GET_BITS_VAL_(27 : 24, get_devinfo_with_index(FUNC_CODE_EFUSE_INDEX));
     unsigned int func_code_1 = _GET_BITS_VAL_(31 : 28, get_devinfo_with_index(FUNC_CODE_EFUSE_INDEX));
 
-    cpufreq_info("from efuse: function code 0 = 0x%x, function code 1 = 0x%x\n", func_code_0, func_code_1);
-
     /* get CPU clock-frequency from DT */
 #ifdef CONFIG_OF
 #if 0
@@ -300,8 +298,6 @@ static unsigned int _mt_cpufreq_get_cpu_level(void)
     {
         unsigned int cpu_speed_bounding = _GET_BITS_VAL_(3 : 0, get_devinfo_with_index(CPUFREQ_EFUSE_INDEX));
 
-        cpufreq_info("No DT, get CPU frequency bounding from efuse = %x\n", cpu_speed_bounding);
-
         switch (cpu_speed_bounding) {
             case 0:
             case 1:
@@ -513,7 +509,6 @@ void mt_cpufreq_set_pmic_phase(enum pmic_wrap_phase_id phase)
 #endif
 
     if (pw.addr[0].cmd_addr == 0) {
-        cpufreq_warn("pmic table not initialized\n");
         _mt_cpufreq_pmic_table_init();
     }
 
@@ -893,15 +888,6 @@ static enum turbo_mode get_turbo_mode(struct mt_cpu_dvfs *p, unsigned int target
         }
     }
 
-    cpufreq_ver("%s(), mode = %d, temp = %d, target_khz = %d (%d), num_online_cpus = %d\n", 
-                __func__,
-                mode,
-                temp,
-                target_khz,
-                TURBO_MODE_FREQ(mode, target_khz),
-                online_cpus
-                ); // <-XXX
-
     return mode;
 }
 
@@ -1037,7 +1023,6 @@ void mt_cpufreq_restore_default_volt(enum mt_cpu_dvfs_id id)
 
     // Disable turbo mode since PTPOD is disabled
     if (p->turbo_mode) {
-        cpufreq_info("@%s: Turbo mode disabled!\n", __func__);
         p->turbo_mode = 0;
     }
 
@@ -1149,8 +1134,6 @@ static unsigned int get_cur_phy_freq(struct mt_cpu_dvfs *p)
 #endif
 
     cur_khz = _cpu_freq_calc(con1, ckdiv1);
-
-    cpufreq_ver("@%s: cur_khz = %d, con1 = 0x%x, ckdiv1_val = 0x%x\n", __func__, cur_khz, con1, ckdiv1);
 #endif
 
     FUNC_EXIT(FUNC_LV_LOCAL);
@@ -1282,14 +1265,6 @@ static void set_cur_freq(struct mt_cpu_dvfs *p, unsigned int cur_khz, unsigned i
 
     is_fhctl_used = ((target_khz >= CPUFREQ_BOUNDARY_FOR_FHCTL) && (cur_khz >= CPUFREQ_BOUNDARY_FOR_FHCTL)) ? 1 : 0;
 	
-	cpufreq_ver("@%s():%d, cur_khz = %d, target_khz = %d, is_fhctl_used = %d\n",
-                __func__,
-                __LINE__,
-                cur_khz,
-                target_khz,
-                is_fhctl_used
-                );
-
 	if (!is_fhctl_used) {
 		/* set ca7_clkdiv1_sel */
 		switch (target_khz) {
@@ -1533,9 +1508,6 @@ static int set_cur_volt_extbuck(struct mt_cpu_dvfs *p, unsigned int volt) /* vol
     if (NULL != g_pCpuVoltSampler)
         g_pCpuVoltSampler(MT_CPU_DVFS_LITTLE, volt / 100); // mv
 
-	cpufreq_ver("@%s():%d, cur_vproc = %d\n", __func__, __LINE__, cur_vproc);
-
-
     FUNC_EXIT(FUNC_LV_LOCAL);
 
     return ret;
@@ -1579,17 +1551,6 @@ static int _cpufreq_set_locked(struct mt_cpu_dvfs *p, unsigned int cur_khz, unsi
 
     volt = _search_available_volt(p, target_khz);
 
-    if (cur_khz != TURBO_MODE_FREQ(mode, target_khz))
-        cpufreq_ver("@%s(), target_khz = %d (%d), volt = %d (%d), num_online_cpus = %d, cur_khz = %d\n", 
-                    __func__, 
-                    target_khz, 
-                    TURBO_MODE_FREQ(mode, target_khz),
-                    volt, 
-                    TURBO_MODE_VOLT(mode, volt),
-                    num_online_cpus(),
-                    cur_khz
-                    );
-
 	//volt = TURBO_MODE_VOLT(mode, volt);
 	//target_khz = TURBO_MODE_FREQ(mode, target_khz);
 
@@ -1637,12 +1598,6 @@ static int _cpufreq_set_locked(struct mt_cpu_dvfs *p, unsigned int cur_khz, unsi
             goto out;
     }
 
-	cpufreq_dbg("@%s(): Vproc = %dmv, freq = %d KHz\n",
-                __func__, 
-                (p->ops->get_cur_volt(p)) / 100,
-                p->ops->get_cur_phy_freq(p)
-                );
-
     // trigger exception if freq/volt not correct during stress
     if (do_dvfs_stress_test) {
         BUG_ON(p->ops->get_cur_volt(p) < volt);
@@ -1720,16 +1675,6 @@ static int __cpuinit turbo_mode_cpu_callback(struct notifier_block *nfb,
     struct device *dev;
     struct mt_cpu_dvfs *p = id_to_cpu_dvfs(0); // TODO: FIXME, for E1
 
-    cpufreq_ver("@%s():%d, cpu = %d, action = %lu, oppidx = %d, num_online_cpus = %d, num_online_cpus_delta = %d\n", 
-                            __func__, 
-                            __LINE__, 
-                            cpu, 
-                            action, 
-                            p->idx_opp_tbl, 
-                            online_cpus,
-                            num_online_cpus_delta
-                            ); // <-XXX
-
     dev = get_cpu_device(cpu);
 
     if (dev) {
@@ -1753,16 +1698,6 @@ static int __cpuinit turbo_mode_cpu_callback(struct notifier_block *nfb,
                     break;
             }
         }
-
-        cpufreq_ver("@%s():%d, cpu = %d, action = %lu, oppidx = %d, num_online_cpus = %d, num_online_cpus_delta = %d\n", 
-                                __func__, 
-                                __LINE__, 
-                                cpu, 
-                                action, 
-                                p->idx_opp_tbl, 
-                                online_cpus,
-                                num_online_cpus_delta
-                                ); // <-XXX
     }
 
 #else	// XXX: DON'T USE cpufreq_driver_target() for the case which cur_freq == target_freq
@@ -1839,8 +1774,6 @@ static int _sync_opp_tbl_idx(struct mt_cpu_dvfs *p)
     }
 
     if (i >= 0) {
-        cpufreq_info("%s freq = %d\n", cpu_dvfs_get_name(p), cpu_dvfs_get_cur_freq(p));
-
         // TODO: apply correct voltage???
 
         ret = 0;
@@ -1995,16 +1928,6 @@ static int setup_power_table(struct mt_cpu_dvfs *p)
         }
     }
 
-    /* dump power table */
-    for (i = 0; i < p->nr_opp_tbl * possible_cpu; i++) {
-        cpufreq_info("[%d] = { .cpufreq_khz = %d,\t.cpufreq_ncpu = %d,\t.cpufreq_power = %d }\n",
-                i,
-                p->power_tbl[i].cpufreq_khz,
-                p->power_tbl[i].cpufreq_ncpu,
-                p->power_tbl[i].cpufreq_power
-                );
-    }
-
 #if 0 // def CONFIG_THERMAL // TODO: FIXME
     mtk_cpufreq_register(p->power_tbl, p->nr_power_tbl);
 #endif
@@ -2127,8 +2050,6 @@ void mt_cpufreq_thermal_protect(unsigned int limited_power)
 {
     FUNC_ENTER(FUNC_LV_API);
 
-    cpufreq_info("%s(): limited_power = %d\n", __func__, limited_power);
-
 #ifdef CONFIG_CPU_FREQ
     {
         struct cpufreq_policy *policy;
@@ -2183,8 +2104,6 @@ void mt_cpufreq_thermal_protect(unsigned int limited_power)
             }
         }
 
-        cpufreq_info("found = %d, limited_max_freq = %d, limited_max_ncpu = %d\n", found, p->limited_max_freq, p->limited_max_ncpu);
-
         cpufreq_unlock(flag);                                   /* <- unlock */
         hps_set_cpu_num_limit(LIMIT_THERMAL, p->limited_max_ncpu, 0);
         // correct opp idx will be calcualted in _thermal_limited_verify()
@@ -2287,8 +2206,6 @@ static int _thermal_limited_verify(struct mt_cpu_dvfs *p, int new_opp_idx)
             break;
     }
 
-    cpufreq_info("%s(): idx = %d, limited_max_ncpu = %d, limited_max_freq = %d\n", __func__, i, p->limited_max_ncpu, p->limited_max_freq);
-
     for (; i < p->nr_opp_tbl * possible_cpu; i++) {
         if (p->power_tbl[i].cpufreq_ncpu == online_cpu) {
             if (target_khz >= p->power_tbl[i].cpufreq_khz) {
@@ -2300,10 +2217,8 @@ static int _thermal_limited_verify(struct mt_cpu_dvfs *p, int new_opp_idx)
 
     if (found) {
         target_khz = p->power_tbl[i].cpufreq_khz;
-        cpufreq_info("%s(): freq found, idx = %d, target_khz = %d, online_cpu = %d\n", __func__, i, target_khz, online_cpu);
     } else {
         target_khz = p->limited_max_freq;
-        cpufreq_info("%s(): freq not found, set to limited_max_freq = %d\n", __func__, target_khz);
     }
 
     i = _search_available_freq_idx(p, target_khz, CPUFREQ_RELATION_H); // TODO: refine this function for idx searching
@@ -2324,12 +2239,6 @@ static unsigned int _calc_new_opp_idx(struct mt_cpu_dvfs *p, int new_opp_idx)
     /* for ramp down */
 #ifdef CONFIG_CPU_DVFS_RAMP_DOWN
     if (_keep_max_freq(p, cpu_dvfs_get_cur_freq(p), cpu_dvfs_get_freq_by_idx(p, new_opp_idx))) {
-        cpufreq_info("%s(): ramp down, idx = %d, freq_old = %d, freq_new = %d\n", 
-                    __func__, 
-                    new_opp_idx, 
-                    cpu_dvfs_get_cur_freq(p), 
-                    cpu_dvfs_get_freq_by_idx(p, new_opp_idx)
-                    );
         new_opp_idx = p->idx_opp_tbl;
     }
 #endif
@@ -2340,7 +2249,6 @@ static unsigned int _calc_new_opp_idx(struct mt_cpu_dvfs *p, int new_opp_idx)
 
         if (idx != -1 && new_opp_idx > idx) {
             new_opp_idx = idx;
-            cpufreq_info("%s(): hevc limited freq, idx = %d\n", __func__, new_opp_idx);
         }
     }
 
@@ -2349,7 +2257,6 @@ static unsigned int _calc_new_opp_idx(struct mt_cpu_dvfs *p, int new_opp_idx)
 
     if (idx != -1 && idx != new_opp_idx) {
         new_opp_idx = idx;
-        cpufreq_info("%s(): thermal limited freq, idx = %d\n", __func__, new_opp_idx);
     }
 
     /* for early suspend */
@@ -2366,7 +2273,6 @@ static unsigned int _calc_new_opp_idx(struct mt_cpu_dvfs *p, int new_opp_idx)
 
         if (idx != -1 && new_opp_idx < idx) {
             new_opp_idx = idx;
-            cpufreq_dbg("%s(): limited max freq by user, idx = %d\n", __func__, new_opp_idx);
         }
     }
 
@@ -2377,7 +2283,6 @@ static unsigned int _calc_new_opp_idx(struct mt_cpu_dvfs *p, int new_opp_idx)
         idx = _search_available_freq_idx(p, CPU_DVFS_FREQ1, CPUFREQ_RELATION_L);
         if (idx != -1) {
             new_opp_idx = idx;
-            cpufreq_info("%s(): for ptpod init, idx = %d\n", __func__, new_opp_idx);
         }      
     }
 
@@ -2463,8 +2368,6 @@ static int _mt_cpufreq_init(struct cpufreq_policy *policy)
     if (policy->cpu >= max_cpu_num) // TODO: FIXME
         return -EINVAL;
 
-    cpufreq_info("@%s: max_cpu_num: %d\n", __func__, max_cpu_num);
-
     policy->shared_type = CPUFREQ_SHARED_TYPE_ANY;
     cpumask_setall(policy->cpus);
 
@@ -3005,8 +2908,6 @@ static unsigned int _mt_get_cpu_freq(void)
     DRV_WriteReg32(CLK26CALI_0, clk26cali_0);
     DRV_WriteReg32(CLK26CALI_1, clk26cali_1);
 
-    cpufreq_dbg("CLK26CALI_1 = 0x%x, CPU freq = %d KHz\n", temp, output);
-
     if(i>10) {
         cpufreq_dbg("meter not finished!\n");
         return 0;
@@ -3050,8 +2951,6 @@ void dvfs_set_cpu_volt(enum mt_cpu_dvfs_id id, int volt)  // volt: mv * 100
 {
     struct mt_cpu_dvfs *p = id_to_cpu_dvfs(id);
 
-    cpufreq_dbg("%s(%d, %d)\n", __func__, id, volt);
-
     if (!p) {
         cpufreq_err("%s(%d, %d), id is wrong\n", __func__, id, volt);
         return;
@@ -3059,19 +2958,11 @@ void dvfs_set_cpu_volt(enum mt_cpu_dvfs_id id, int volt)  // volt: mv * 100
 
     if (_set_cur_volt_locked(p, volt))
         cpufreq_err("%s(%d, %d), set volt fail\n", __func__, id, volt);
-
-	cpufreq_dbg("%s(%d, %d) Vproc = %d\n",
-        __func__,
-        id, 
-        volt,
-		    p->ops->get_cur_volt(p)
-        );
 }
 
 /* NOTE: This is ONLY for PTPOD SLT. Should not adjust VCORE in other cases. */
 void dvfs_set_vcore_ao_volt(int pmic_val)
 {
-    cpufreq_dbg("%s(%d)\n", __func__, pmic_val);
     mt_cpufreq_set_pmic_cmd(PMIC_WRAP_PHASE_NORMAL, IDX_NM_VCORE, pmic_val);
     mt_cpufreq_apply_pmic_cmd(IDX_NM_VCORE);
 }
@@ -3090,8 +2981,6 @@ void dvfs_disable_by_ptpod(int id)
 {
     struct mt_cpu_dvfs *p = id_to_cpu_dvfs(MT_CPU_DVFS_LITTLE);
 
-    cpufreq_dbg("%s()\n", __func__); // <-XXX
-    
     //little_freq_backup = _mt_cpufreq_get_cur_phy_freq(MT_CPU_DVFS_LITTLE);
 	switch (id) {
 	case PTP_CTRL_CPU:
@@ -3113,8 +3002,6 @@ void dvfs_enable_by_ptpod(int id)
 {
     struct mt_cpu_dvfs *p = id_to_cpu_dvfs(MT_CPU_DVFS_LITTLE);
 
-    cpufreq_dbg("%s()\n", __func__); // <-XXX
-    
 	switch (id) {
 	case PTP_CTRL_CPU:
     dvfs_set_cpu_volt(MT_CPU_DVFS_LITTLE, vcpu_backup);
@@ -3297,8 +3184,6 @@ static ssize_t cpufreq_fftt_test_proc_write(struct file *file, const char __user
         start = (unsigned long)sched_clock();
         udelay(_delay_us_buf);
         _delay_us = ((unsigned long)sched_clock() - start) / 1000;
-
-        cpufreq_ver("@%s(%lu), _delay_us = %lu, loops_per_jiffy = %lu\n", __func__, _delay_us_buf, _delay_us, loops_per_jiffy);
     }
 
 	free_page((unsigned int)buf);
diff --git a/drivers/misc/mediatek/mach/mt6580/mt_dcm.c b/drivers/misc/mediatek/mach/mt6580/mt_dcm.c
index f2e083b52..9d26e525a 100644
--- a/drivers/misc/mediatek/mach/mt6580/mt_dcm.c
+++ b/drivers/misc/mediatek/mach/mt6580/mt_dcm.c
@@ -1243,8 +1243,6 @@ void dcm_set_default(unsigned int type)
         int i;
         DCM *dcm;
 
-        dcm_info("[%s]type:0x%08x\n", __func__, type);
-
         mutex_lock(&dcm_lock);
 
         for (i = 0, dcm=&dcm_array[0]; i < NR_DCM_TYPE; i++, dcm++) {
@@ -1252,10 +1250,6 @@ void dcm_set_default(unsigned int type)
                         dcm->saved_state = dcm->current_state = dcm->default_state;
                         dcm->disable_refcnt = 0;
                         dcm->func(dcm->current_state);
-
-                        dcm_info("[%16s 0x%08x] current state:%d (%d)\n", 
-                                 dcm->name, dcm->typeid, dcm->current_state, dcm->disable_refcnt);
-                        
                 }
         }
 
@@ -1267,8 +1261,6 @@ void dcm_set_state(unsigned int type, int state)
         int i;
         DCM *dcm;
 
-        dcm_info("[%s]type:0x%08x, set:%d\n", __func__, type, state);
-
         mutex_lock(&dcm_lock);
 
         for (i = 0, dcm=&dcm_array[0]; type && (i < NR_DCM_TYPE); i++, dcm++) {
@@ -1280,10 +1272,6 @@ void dcm_set_state(unsigned int type, int state)
                                 dcm->current_state = state;
                                 dcm->func(dcm->current_state);
                         }
-
-                        dcm_info("[%16s 0x%08x] current state:%d (%d)\n", 
-                                 dcm->name, dcm->typeid, dcm->current_state, dcm->disable_refcnt);
-
                 }
         }
 
@@ -1296,8 +1284,6 @@ void dcm_disable(unsigned int type)
         int i;
         DCM *dcm;
 
-        dcm_info("[%s]type:0x%08x\n", __func__, type);
-
         mutex_lock(&dcm_lock);
 
         for (i = 0, dcm=&dcm_array[0]; type && (i < NR_DCM_TYPE); i++, dcm++) {
@@ -1307,10 +1293,6 @@ void dcm_disable(unsigned int type)
                         dcm->current_state = DCM_OFF;
                         dcm->disable_refcnt++;
                         dcm->func(dcm->current_state);
-
-                        dcm_info("[%16s 0x%08x] current state:%d (%d)\n", 
-                                 dcm->name, dcm->typeid, dcm->current_state, dcm->disable_refcnt);
-
                 }
         }
 
@@ -1323,8 +1305,6 @@ void dcm_restore(unsigned int type)
         int i;
         DCM *dcm;
 
-        dcm_info("[%s]type:0x%08x\n", __func__, type);
-
         mutex_lock(&dcm_lock);
 
         for (i = 0, dcm=&dcm_array[0]; type && (i < NR_DCM_TYPE); i++, dcm++) {
@@ -1337,10 +1317,6 @@ void dcm_restore(unsigned int type)
                                 dcm->current_state = dcm->saved_state;
                                 dcm->func(dcm->current_state);
                         }
-
-                        dcm_info("[%16s 0x%08x] current state:%d (%d)\n", 
-                                 dcm->name, dcm->typeid, dcm->current_state, dcm->disable_refcnt);
-
                 }
         }
 
@@ -1350,17 +1326,6 @@ void dcm_restore(unsigned int type)
 
 void dcm_dump_state(int type)
 {
-        int i;
-        DCM *dcm;
-
-        dcm_info("\n******** dcm dump state ********* \n");
-        for (i = 0, dcm=&dcm_array[0]; i < NR_DCM_TYPE; i++, dcm++) {
-                if (type & dcm->typeid) {
-                        dcm_info("[%-16s 0x%08x] current state:%d (%d)\n", 
-                                 dcm->name, dcm->typeid, dcm->current_state, dcm->disable_refcnt);
-                }
-        }
-
         return;
 }
 
@@ -1369,31 +1334,6 @@ void dcm_dump_state(int type)
 
 void dcm_dump_regs(void)
 {
-        dcm_info("\n******** dcm dump register ********* \n");
-		//ARMCORE
-		REG_DUMP(INFRA_RSVD1);
-        REG_DUMP(INFRA_TOPCKGEN_DCMCTL);
-        REG_DUMP(INFRA_TOPCKGEN_DCMDBC);
-		REG_DUMP(CLK_GATING_CTRL0);
-		#ifdef _DCM_ACLK_STRESS_
-		REG_DUMP(MPLL_FREDIV_EN);
-		#endif
-		//ARMCORE PLL DIV
-		REG_DUMP(TOP_CKMUXSEL);
-        REG_DUMP(TOP_CKDIV1);
-		//MCUSYS
-		REG_DUMP(MCUCFG_ACLKEN_DIV);
-		REG_DUMP(MCUCFG_MISC_CONFIG);
-		REG_DUMP(MCU_BIU_CON);
-		//INFRA,PERI,PMIC,USB
-		REG_DUMP(INFRABUS_DCMCTL1);
-		REG_DUMP(INFRABUS_DCMCTL0);
-		//EMI
-		REG_DUMP(TOPEMI_DCMCTL);
-		//DRAMC
-		REG_DUMP(DRAMC_PD_CTRL);
-		//EMI CONH
-		REG_DUMP(EMI_CONH);
         return;
 }
 
diff --git a/drivers/misc/mediatek/mach/mt6580/mt_devs.c b/drivers/misc/mediatek/mach/mt6580/mt_devs.c
index 8753868e8..625f26ad1 100644
--- a/drivers/misc/mediatek/mach/mt6580/mt_devs.c
+++ b/drivers/misc/mediatek/mach/mt6580/mt_devs.c
@@ -588,7 +588,6 @@ static struct resource resource_xhci[] = {
 
 static void xhci_hcd_release (struct device *dev)
 {
-    printk(KERN_INFO "dev = 0x%08X.\n", (uint32_t)dev);
 }
 
 static struct platform_device mtk_xhci_dev = {
@@ -1231,7 +1230,6 @@ static int __init parse_tag_devinfo_data_fixup(const struct tag *tags)
 
     /* print chip id for debugging purpose */
     //printk("tag_devinfo_data_rid, indx[%d]:0x%x\n", 12,g_devinfo_data[12]);
-    printk("tag_devinfo_data size:%d\n", size);
 	return 0;
 }
 #ifdef DFO_DEBUG
@@ -1292,15 +1290,7 @@ static void parse_dfo_tag(struct tag *t)
     int nr = ((t->hdr.size << 2) - sizeof(struct tag_header)) / sizeof(tag_dfo_boot);
     tag_dfo_boot *p = 0;
     p = &(t->u.dfo_data);
-    printk(KERN_ALERT"%s start\n", __FUNCTION__);
-    printk(KERN_ALERT"tag_header size: %d, tag_dfo_boot size: %d\n"
-            "hdr.size: %d\n",
-            sizeof(struct tag_header), sizeof(tag_dfo_boot),
-            t->hdr.size);
-    printk(KERN_ALERT"number of tags: %d\n", nr);
     for (i = 0; i < nr; i++) {
-        printk(KERN_ALERT"dfo[%d]: %s, 0x%08lx\n", i,
-              p->info[0].name, p->info[0].value);
         /*
          * add dfo tags into dfo_db
          */
@@ -1497,15 +1487,6 @@ void mt_fixup(struct tag *tags, char **cmdline, struct meminfo *mi)
     } else // we should always have reserved memory
     	BUG();
 
-    MTK_MEMCFG_LOG_AND_PRINTK(KERN_ALERT
-            "[PHY layout]avaiable DRAM size (lk) = 0x%llx\n"
-            "[PHY layout]avaiable DRAM size = 0x%llx\n"
-            "[PHY layout]FB       :   0x%llx - 0x%llx  (0x%llx)\n",
-            (unsigned long long)bl_mem_sz,
-            (unsigned long long)kernel_mem_sz,
-            (unsigned long long)FB_START,
-            (unsigned long long)(FB_START + FB_SIZE - 1),
-            (unsigned long long)FB_SIZE);
     if(g_boot_mode == FACTORY_BOOT)
         MTK_MEMCFG_LOG_AND_PRINTK(KERN_ALERT
                 "[PHY layout]3D       :   0x%llx - 0x%llx  (0x%llx)\n",
@@ -1577,7 +1558,6 @@ void mt_dt_fixup(struct tag *tags, char **cmdline, struct meminfo *mi)
             if (!model)
                 model = "<unknown>";
             strcpy(mdesc->name, model);
-            pr_info("mdesc->name=%s\n",mdesc->name);
         }
     }
 
@@ -1589,8 +1569,6 @@ void mt_dt_fixup(struct tag *tags, char **cmdline, struct meminfo *mi)
     if (cmdline_tag) cmdline_filter(cmdline_tag, (char*)&temp_command_line);
 #endif
 
-    printk(KERN_ALERT"Load default dfo data...\n");
-
     init_dfo_db(); /* init dfo_db */
 
     tags = of_get_flat_dt_prop(node, "atag,boot", NULL);
@@ -1621,11 +1599,6 @@ void mt_dt_fixup(struct tag *tags, char **cmdline, struct meminfo *mi)
     tags = of_get_flat_dt_prop(node, "atag,mdinfo", NULL);
     if (tags)
     {
-        printk(KERN_ALERT "Get MD inf from META\n");
-        printk(KERN_ALERT "md_inf[0]=%d\n",tags->u.mdinfo_data.md_type[0]);
-        printk(KERN_ALERT "md_inf[1]=%d\n",tags->u.mdinfo_data.md_type[1]);
-        printk(KERN_ALERT "md_inf[2]=%d\n",tags->u.mdinfo_data.md_type[2]);
-        printk(KERN_ALERT "md_inf[3]=%d\n",tags->u.mdinfo_data.md_type[3]);
         md_inf_from_meta[0]=tags->u.mdinfo_data.md_type[0];
         md_inf_from_meta[1]=tags->u.mdinfo_data.md_type[1];
         md_inf_from_meta[2]=tags->u.mdinfo_data.md_type[2];
@@ -1637,7 +1610,6 @@ void mt_dt_fixup(struct tag *tags, char **cmdline, struct meminfo *mi)
          * Always use default dfo setting in META mode.
          * We can fix abnormal dfo setting this way.
          */
-        printk(KERN_ALERT"(META mode) Load default dfo data...\n");
 #ifdef CONFIG_MTK_ECCCI_DRIVER
         ccci_parse_meta_md_setting(md_inf_from_meta);
 #endif
@@ -1651,7 +1623,7 @@ void mt_dt_fixup(struct tag *tags, char **cmdline, struct meminfo *mi)
     unsigned long v = 0x5a;
     /* normal case test */
     if (!dfo_query("key1", &v)) {
-        printk(KERN_ALERT"dfo_query normal case PASS (%s, 0x%08lx)\n",
+        
                 "key1", v);
     } else {
         printk(KERN_ERR"dfo_query normal case FAIL\n");
@@ -2336,17 +2308,12 @@ __init int mt_board_init(void)
 #if defined(CONFIG_MTK_ACCDET)
 #ifndef CONFIG_OF
     retval = platform_device_register(&accdet_device);
-    printk("[%s]: accdet_device, retval=%d \n!", __func__, retval);
 
 	if (retval != 0)
 	{
 		printk("platform_device_accdet_register error:(%d)\n", retval);
 		return retval;
 	}
-	else
-	{
-		printk("platform_device_accdet_register done!\n");
-	}
 #endif
 #endif
 
@@ -2360,10 +2327,6 @@ __init int mt_board_init(void)
 		printk("platform_device_usbacm_register error:(%d)\n", retval);
 		return retval;
 	}
-	else
-	{
-		printk("platform_device_usbacm_register done!\n");
-	}
 
 #endif
 
@@ -2798,7 +2761,6 @@ extern void DFS_Reserved_Memory(void);
 
 void __weak mtk_wcn_consys_memory_reserve(void)
 {
-    printk(KERN_ERR"weak reserve function: %s", __FUNCTION__);
 }
 
 void mt_reserve(void)
diff --git a/drivers/misc/mediatek/mach/mt6580/mt_gpt.c b/drivers/misc/mediatek/mach/mt6580/mt_gpt.c
index 302135846..65e240c83 100644
--- a/drivers/misc/mediatek/mach/mt6580/mt_gpt.c
+++ b/drivers/misc/mediatek/mach/mt6580/mt_gpt.c
@@ -198,7 +198,6 @@ static irqreturn_t gpt_handler(int irq, void *dev_id)
             handlers[id]((unsigned long)dev_id);
         }
     } else {
-        printk(KERN_WARNING "GPT id is %d\n", id);
     }
 
     return IRQ_HANDLED;
@@ -659,7 +658,6 @@ static inline void setup_clkevt(u32 freq)
                 freq / HZ, clkevt_handler, GPT_ISR);
 
     __gpt_get_cmp(dev, &cmp); 
-    printk("GPT1_CMP = %d, HZ = %d\n", cmp, HZ);
     
     clockevents_register_device(evt);
 }
@@ -684,8 +682,6 @@ static inline void setup_syscnt(void)
 	
 	  setup_gpt_dev_locked(dev, GPT_FREE_RUN, GPT_CLK_SRC_SYS, GPT_CLK_DIV_1,
                 0, NULL, 0);   
-
-    printk("fwq sysc count \n");
 }
 
 static ssize_t gpt_stat_read(struct file *file, char __user *buf, size_t size, loff_t *ppos)
@@ -740,8 +736,6 @@ static int __init gpt_mod_init(void)
 	xgpt_dir = proc_mkdir("mt_xgpt", NULL);
 	proc_create("xgpt_stat", S_IRUGO, xgpt_dir, &xgpt_cmd_proc_fops);
 
-	printk("GPT: iniit\n" );
-
   return 0;
 }
 
@@ -769,8 +763,6 @@ static void __init mt_gpt_init(struct device_node *node)
 	
 		boot_time_value = xgpt_boot_up_time(); /*record the time when init GPT*/
 	
-		pr_alert("mt_gpt_init: tmr_regs=0x%x, tmr_irq=%d, freq=%d \n", (u32)xgpt_timers.tmr_regs, xgpt_timers.tmr_irq, freq);	
-	
 		gpt_devs_init();
 	
     for (i = 0; i < NR_GPTS; i++) {
diff --git a/drivers/misc/mediatek/mach/mt6580/mt_gpufreq.c b/drivers/misc/mediatek/mach/mt6580/mt_gpufreq.c
index 802a8b678..9a6b12e56 100644
--- a/drivers/misc/mediatek/mach/mt6580/mt_gpufreq.c
+++ b/drivers/misc/mediatek/mach/mt6580/mt_gpufreq.c
@@ -397,15 +397,10 @@ static struct task_struct *mt_gpufreq_up_task;
 static int _mt_gpufreq_input_boost_task(void *data)
 {
     while (1) {
-        gpufreq_dbg("@%s: begin\n", __func__);
-
         if(NULL != g_pGpufreq_input_boost_notify) {
-            gpufreq_dbg("@%s: g_pGpufreq_input_boost_notify\n", __func__);
             g_pGpufreq_input_boost_notify(g_gpufreq_max_id);
         }
 
-        gpufreq_dbg("@%s: end\n", __func__);
-
         set_current_state(TASK_INTERRUPTIBLE);
         schedule();
 
@@ -424,13 +419,10 @@ static int _mt_gpufreq_input_boost_task(void *data)
         unsigned int code, int value)
 {
     if(mt_gpufreq_ready == false) {
-        gpufreq_warn("@%s: GPU DVFS not ready!\n", __func__);
         return;
     }
 
     if ((type == EV_KEY) && (code == BTN_TOUCH) && (value == 1) && (mt_gpufreq_input_boost_state == 1)) {
-        gpufreq_dbg("@%s: accept.\n", __func__);
-
         wake_up_process(mt_gpufreq_up_task);
     }
 }
@@ -531,14 +523,11 @@ static void _mt_gpufreq_set_cur_freq(unsigned int freq_new)
             clksrc = MT_CG_MPLL_D14;
             break;
         default:
-            gpufreq_err("@%s: Unknown target freq = %d\n", __func__, freq_new);
             BUG();
     }
 
     clkmux_sel(MT_CLKMUX_MFG_GFMUX_SEL, clksrc, "GPU_DVFS");
 
-    gpufreq_dbg("@%s: freq_new = %d, clksrc = 0x%x\n", __func__, freq_new, clksrc);
-
     if(NULL != g_pFreqSampler)
         g_pFreqSampler(freq_new);
 }
@@ -572,12 +561,9 @@ static unsigned int _mt_gpufreq_get_cur_freq(void)
             freq = GPU_DVFS_FREQ4;  //107.25 MHz
             break;
         default:
-            gpufreq_err("@%s: Unknown MFG MUX value = 0x%x\n", __func__, mfg_gfmux_sel);
             BUG();
     }
 
-    gpufreq_dbg("@%s: mfg_gfmux_sel = 0x%x, freq = %d\n", __func__, mfg_gfmux_sel, freq);
-
     return freq; //KHz
 }
 
@@ -631,7 +617,6 @@ static void _mt_update_gpufreqs_power_table(void)
     int i = 0, temp = 0;
 
     if (mt_gpufreq_ready == false) {
-        gpufreq_warn("@%s: GPU DVFS not ready\n", __func__);
         return;
     }
 
@@ -641,8 +626,6 @@ static void _mt_update_gpufreqs_power_table(void)
     temp = 40;
 #endif
 
-    gpufreq_dbg("@%s, temp = %d\n", __func__, temp);
-
     mutex_lock(&mt_gpufreq_lock);
 
     if((temp > 0) && (temp < 125)) {
@@ -654,8 +637,6 @@ static void _mt_update_gpufreqs_power_table(void)
             gpufreq_dbg("update mt_gpufreqs_power[%d].gpufreq_power = %d\n", i, mt_gpufreqs_power[i].gpufreq_power);
         }
     }
-    else
-        gpufreq_err("@%s: temp < 0 or temp > 125, NOT update power table!\n", __func__);
 
     mutex_unlock(&mt_gpufreq_lock);
 }
@@ -677,19 +658,12 @@ static void _mt_setup_gpufreqs_power_table(int num)
     temp = 40;
 #endif
 
-    gpufreq_info("@%s: temp = %d \n", __func__, temp);
-
     if((temp < 0) || (temp > 125)) {
-        gpufreq_warn("@%s: temp < 0 or temp > 125!\n", __func__);
         temp = 65;
     }
 
     for (i = 0; i < num; i++) {
         _mt_gpufreq_power_calculation(i, mt_gpufreqs[i].gpufreq_khz, mt_gpufreqs[i].gpufreq_volt, temp);
-
-        gpufreq_info("mt_gpufreqs_power[%d].gpufreq_khz = %u\n", i, mt_gpufreqs_power[i].gpufreq_khz);
-        gpufreq_info("mt_gpufreqs_power[%d].gpufreq_volt = %u\n", i, mt_gpufreqs_power[i].gpufreq_volt);
-        gpufreq_info("mt_gpufreqs_power[%d].gpufreq_power = %u\n", i, mt_gpufreqs_power[i].gpufreq_power);
     }
 
 #ifdef CONFIG_THERMAL
@@ -800,7 +774,6 @@ static void _mt_gpufreq_set_initial(void)
 
     // Not found, set to LPM
     if (i == mt_gpufreqs_num) {
-        gpufreq_err("@%s: freq(%d KHz) not found in DVFS table, set to lowest freq!\n", __func__, cur_freq);
         g_cur_gpu_OPPidx = mt_gpufreqs_num - 1;
         _mt_gpufreq_set_cur_freq(mt_gpufreqs[mt_gpufreqs_num - 1].gpufreq_khz);
     }
@@ -854,8 +827,6 @@ static void _mt_gpufreq_oc_protect(unsigned int limited_index)
 {
     mutex_lock(&mt_gpufreq_power_lock);
 
-    gpufreq_dbg("@%s: limited_index = %d\n", __func__, limited_index);
-
     mt_gpufreq_power_limited_index_array[IDX_OC_LIMITED] = limited_index;
     _mt_gpufreq_power_throttle_protect();
 
@@ -866,15 +837,11 @@ static void _mt_gpufreq_oc_protect(unsigned int limited_index)
 
 void mt_gpufreq_oc_callback(BATTERY_OC_LEVEL oc_level)
 {
-    gpufreq_dbg("@%s: oc_level = %d\n", __func__, oc_level);
-
     if(mt_gpufreq_ready == false) {
-        gpufreq_warn("@%s: GPU DVFS not ready!\n", __func__);
         return;
     }
 
     if(g_limited_oc_ignore_state == true) {
-        gpufreq_info("@%s: g_limited_oc_ignore_state == true!\n", __func__);
         return;
     }
 
@@ -905,8 +872,6 @@ static void _mt_gpufreq_low_batt_volume_protect(unsigned int limited_index)
 {
     mutex_lock(&mt_gpufreq_power_lock);
 
-    gpufreq_dbg("@%s: limited_index = %d\n", __func__, limited_index);
-
     mt_gpufreq_power_limited_index_array[IDX_LOW_BATT_VOLUME_LIMITED] = limited_index;
     _mt_gpufreq_power_throttle_protect();
 
@@ -917,15 +882,11 @@ static void _mt_gpufreq_low_batt_volume_protect(unsigned int limited_index)
 
 void mt_gpufreq_low_batt_volume_callback(BATTERY_PERCENT_LEVEL low_battery_volume)
 {
-    gpufreq_dbg("@%s: low_battery_volume = %d\n", __func__, low_battery_volume);
-
     if(mt_gpufreq_ready == false) {
-        gpufreq_warn("@%s: GPU DVFS not ready!\n", __func__);
         return;
     }
 
     if(g_limited_low_batt_volume_ignore_state == true) {
-        gpufreq_info("@%s: g_limited_low_batt_volume_ignore_state == true!\n", __func__);
         return;
     }
 
@@ -956,7 +917,6 @@ static void _mt_gpufreq_low_batt_volt_protect(unsigned int limited_index)
 {
     mutex_lock(&mt_gpufreq_power_lock);
 
-    gpufreq_dbg("@%s: limited_index = %d\n", __func__, limited_index);
     mt_gpufreq_power_limited_index_array[IDX_LOW_BATT_VOLT_LIMITED] = limited_index;
     _mt_gpufreq_power_throttle_protect();
 
@@ -970,15 +930,11 @@ static void _mt_gpufreq_low_batt_volt_protect(unsigned int limited_index)
  *******************************************************/
 void mt_gpufreq_low_batt_volt_callback(LOW_BATTERY_LEVEL low_battery_level)
 {
-    gpufreq_dbg("@%s: low_battery_level = %d\n", __func__, low_battery_level);
-
     if(mt_gpufreq_ready == false) {
-        gpufreq_warn("@%s: GPU DVFS not ready!\n", __func__);
         return;
     }
 
     if(g_limited_low_batt_volt_ignore_state == true) {
-        gpufreq_info("@%s: g_limited_low_batt_volt_ignore_state == true!\n", __func__);
         return;
     }
 
@@ -1032,8 +988,6 @@ static unsigned int _mt_gpufreq_get_limited_freq(unsigned int limited_power)
     if (!found)
         limited_freq = mt_gpufreqs_power[mt_gpufreqs_power_num - 1].gpufreq_khz;
 
-    gpufreq_info("@%s: limited_freq = %d\n", __func__, limited_freq);
-
     return limited_freq;
 }
 
@@ -1045,27 +999,22 @@ void mt_gpufreq_thermal_protect(unsigned int limited_power)
     mutex_lock(&mt_gpufreq_power_lock);
 
     if(mt_gpufreq_ready == false) {
-        gpufreq_warn("@%s: GPU DVFS not ready!\n", __func__);
         mutex_unlock(&mt_gpufreq_power_lock);
         return;
     }
 
     if (mt_gpufreqs_num == 0) {
-        gpufreq_warn("@%s: mt_gpufreqs_num == 0!\n", __func__);
         mutex_unlock(&mt_gpufreq_power_lock);
         return;
     }
 
     if(g_limited_thermal_ignore_state == true) {
-        gpufreq_info("@%s: g_limited_thermal_ignore_state == true!\n", __func__);
         mutex_unlock(&mt_gpufreq_power_lock);
         return;
     }
 
     mt_gpufreq_thermal_limited_gpu_power = limited_power;
 
-    gpufreq_dbg("@%s: limited_power = %d\n", __func__, limited_power);
-
 #ifdef MT_GPUFREQ_DYNAMIC_POWER_TABLE_UPDATE
     _mt_update_gpufreqs_power_table();
 #endif
@@ -1159,19 +1108,16 @@ unsigned int mt_gpufreq_target(unsigned int idx)
     }
 
     if(mt_gpufreq_volt_enable_state == 0) {
-        gpufreq_info("mt_gpufreq_volt_enable_state == 0! return\n");
         mutex_unlock(&mt_gpufreq_lock);
         return -ENOSYS;
     }
 
 #ifdef MT_GPU_DVFS_RANDOM_TEST
     idx = _mt_gpufreq_idx_get(5);
-    gpufreq_dbg("@%s: random test index is %d !\n", __func__, idx);
 #endif
 
     if (idx > (mt_gpufreqs_num - 1)) {
         mutex_unlock(&mt_gpufreq_lock);
-        gpufreq_err("@%s: idx out of range! idx = %d\n", __func__, idx);
         return -1;
     }
 
@@ -1180,7 +1126,6 @@ unsigned int mt_gpufreq_target(unsigned int idx)
      *************************************************/
     if(mt_gpufreq_fixed_freq_state == true) {
         mutex_unlock(&mt_gpufreq_lock);
-        gpufreq_info("@%s: GPU freq is fixed by user! fixed_freq = %dKHz\n", __func__, mt_gpufreq_fixed_frequency);
         return 0;
     }
 
@@ -1195,8 +1140,6 @@ unsigned int mt_gpufreq_target(unsigned int idx)
     target_volt = mt_gpufreqs[idx].gpufreq_volt;
     target_OPPidx = idx;
 
-    gpufreq_dbg("@%s: begin, receive freq: %d, OPPidx: %d\n", __func__, target_freq, target_OPPidx);
-
     /**********************************
      * Check if need to keep max frequency
      ***********************************/
@@ -1282,12 +1225,9 @@ unsigned int mt_gpufreq_voltage_enable_set(unsigned int enable)
 {
     int ret = 0;
 
-    gpufreq_dbg("@%s: enable = %x\n", __func__, enable);
-
     mutex_lock(&mt_gpufreq_lock);
 
     if(mt_gpufreq_ready == false) {
-        gpufreq_warn("@%s: GPU DVFS not ready!\n", __func__);
         mutex_unlock(&mt_gpufreq_lock);
         return -ENOSYS;
     }
@@ -1314,12 +1254,10 @@ EXPORT_SYMBOL(mt_gpufreq_get_dvfs_table_num);
 unsigned int mt_gpufreq_get_freq_by_idx(unsigned int idx)
 {
     if(mt_gpufreq_ready == false) {
-        gpufreq_warn("@%s: GPU DVFS not ready!\n", __func__);
         return -ENOSYS;
     }
 
     if(idx < mt_gpufreqs_num) {
-        gpufreq_dbg("@%s: idx = %d, frequency= %d\n", __func__, idx, mt_gpufreqs[idx].gpufreq_khz);
         return mt_gpufreqs[idx].gpufreq_khz;
     }
 
@@ -1449,7 +1387,6 @@ static int _mt_gpufreq_pdrv_probe(struct platform_device *pdev)
     /**********************
      * setup gpufreq table
      ***********************/
-    gpufreq_info("setup gpufreqs table\n");
 
     mt_gpufreq_dvfs_table_type = _mt_gpufreq_get_dvfs_table_type();
     if (mt_gpufreq_dvfs_table_type == 0)
@@ -1468,9 +1405,6 @@ static int _mt_gpufreq_pdrv_probe(struct platform_device *pdev)
      ***********************/
     _mt_gpufreq_set_initial();
 
-    gpufreq_info("GPU current frequency = %dKHz\n", _mt_gpufreq_get_cur_freq());
-    gpufreq_info("g_cur_gpu_OPPidx = %d\n", g_cur_gpu_OPPidx);
-
     mt_gpufreq_ready = true;
 
 #ifdef MT_GPUFREQ_INPUT_BOOST
@@ -2307,8 +2241,6 @@ static int __init _mt_gpufreq_init(void)
 {
     int ret = 0;
 
-    gpufreq_info("@%s\n", __func__);
-
 #ifdef CONFIG_PROC_FS
 
     /* init proc */
diff --git a/drivers/misc/mediatek/mach/mt6580/mt_hotplug_strategy_algo.c b/drivers/misc/mediatek/mach/mt6580/mt_hotplug_strategy_algo.c
index f5c988d9c..17d24f876 100644
--- a/drivers/misc/mediatek/mach/mt6580/mt_hotplug_strategy_algo.c
+++ b/drivers/misc/mediatek/mach/mt6580/mt_hotplug_strategy_algo.c
@@ -491,17 +491,6 @@ void hps_algo_hmp(void)
      * algo - end
      */
 ALGO_END_WITH_ACTION:
-    hps_warn("(%04x)(%u)(%u)action end(%u)(%u)(%u)(%u) (%u)(%u)(%u)(%u)(%u)(%u)(%u)(%u)(%u)(%u) (%u)(%u)(%u) (%u)(%u)(%u) (%u)(%u)(%u)(%u)(%u)\n",
-        hps_ctxt.action, little_num_online, big_num_online,
-        hps_ctxt.cur_loads, hps_ctxt.cur_tlp, hps_ctxt.cur_iowait, hps_ctxt.cur_nr_heavy_task, 
-        hps_ctxt.little_num_limit_thermal, hps_ctxt.big_num_limit_thermal,
-        hps_ctxt.little_num_limit_low_battery, hps_ctxt.big_num_limit_low_battery,
-        hps_ctxt.little_num_limit_ultra_power_saving, hps_ctxt.big_num_limit_ultra_power_saving,
-        hps_ctxt.little_num_limit_power_serv, hps_ctxt.big_num_limit_power_serv,
-        hps_ctxt.little_num_base_perf_serv, hps_ctxt.big_num_base_perf_serv,
-        hps_ctxt.up_loads_sum, hps_ctxt.up_loads_count, hps_ctxt.up_loads_history_index, 
-        hps_ctxt.down_loads_sum, hps_ctxt.down_loads_count, hps_ctxt.down_loads_history_index, 
-        hps_ctxt.rush_count, hps_ctxt.tlp_sum, hps_ctxt.tlp_count, hps_ctxt.tlp_history_index, hps_ctxt.tlp_avg);
     hps_ctxt_reset_stas_nolock();
 ALGO_END_WO_ACTION:
     mutex_unlock(&hps_ctxt.lock);
@@ -803,13 +792,6 @@ void hps_algo_smp(void)
      * algo - end
      */
 ALGO_END_WITH_ACTION:
-    hps_warn("(%04x)(%u)action end(%u)(%u)(%u)(%u) (%u)(%u)(%u)(%u)(%u) (%u)(%u)(%u) (%u)(%u)(%u) (%u)(%u)(%u)(%u)(%u)\n",
-        hps_ctxt.action, little_num_online,
-        hps_ctxt.cur_loads, hps_ctxt.cur_tlp, hps_ctxt.cur_iowait, hps_ctxt.cur_nr_heavy_task, 
-        hps_ctxt.little_num_limit_thermal, hps_ctxt.little_num_limit_low_battery, hps_ctxt.little_num_limit_ultra_power_saving, hps_ctxt.little_num_limit_power_serv, hps_ctxt.little_num_base_perf_serv, 
-        hps_ctxt.up_loads_sum, hps_ctxt.up_loads_count, hps_ctxt.up_loads_history_index, 
-        hps_ctxt.down_loads_sum, hps_ctxt.down_loads_count, hps_ctxt.down_loads_history_index, 
-        hps_ctxt.rush_count, hps_ctxt.tlp_sum, hps_ctxt.tlp_count, hps_ctxt.tlp_history_index, hps_ctxt.tlp_avg);
     hps_ctxt_reset_stas_nolock();
 ALGO_END_WO_ACTION:
     mutex_unlock(&hps_ctxt.lock);
diff --git a/drivers/misc/mediatek/mach/mt6580/mt_hotplug_strategy_core.c b/drivers/misc/mediatek/mach/mt6580/mt_hotplug_strategy_core.c
index dbf5971e1..57d93684f 100644
--- a/drivers/misc/mediatek/mach/mt6580/mt_hotplug_strategy_core.c
+++ b/drivers/misc/mediatek/mach/mt6580/mt_hotplug_strategy_core.c
@@ -65,8 +65,6 @@ static int _hps_task_main(void *data)
     int cnt = 0;
     void (*algo_func_ptr)(void);
 
-    hps_ctxt_print_basic(1);
-
     if (hps_ctxt.is_hmp)
         algo_func_ptr = hps_algo_hmp;
     else
@@ -94,7 +92,6 @@ static int _hps_task_main(void *data)
             break;
     } //while(1)
 
-    hps_warn("leave _hps_task_main, cnt:%08d\n", cnt++);
     return 0;
 }
 
@@ -117,11 +114,9 @@ int hps_task_start(void)
         sched_setscheduler_nocheck(hps_ctxt.tsk_struct_ptr, SCHED_FIFO, &param);
         get_task_struct(hps_ctxt.tsk_struct_ptr);
         wake_up_process(hps_ctxt.tsk_struct_ptr);
-        hps_warn("hps_task_start success, ptr: %p, pid: %d\n", hps_ctxt.tsk_struct_ptr, hps_ctxt.tsk_struct_ptr->pid);
     }
     else
     {
-        hps_warn("hps task already exist, ptr: %p, pid: %d\n", hps_ctxt.tsk_struct_ptr, hps_ctxt.tsk_struct_ptr->pid);
     }
 
     return 0;
@@ -162,8 +157,6 @@ int hps_core_init(void)
 {
     int r = 0;
 
-    hps_warn("hps_core_init\n");
-
     //init and start task
     r = hps_task_start();
     if (r)
@@ -182,8 +175,6 @@ int hps_core_deinit(void)
 {
     int r = 0;
 
-    hps_warn("hps_core_deinit\n");
-
     hps_task_stop();
 
     return r;
diff --git a/drivers/misc/mediatek/mach/mt6580/mt_hotplug_strategy_cpu.c b/drivers/misc/mediatek/mach/mt6580/mt_hotplug_strategy_cpu.c
index c82add0c9..0b38e4908 100644
--- a/drivers/misc/mediatek/mach/mt6580/mt_hotplug_strategy_cpu.c
+++ b/drivers/misc/mediatek/mach/mt6580/mt_hotplug_strategy_cpu.c
@@ -165,8 +165,6 @@ int hps_cpu_init(void)
     int r = 0;
     char str1[32];
 
-    hps_warn("hps_cpu_init\n");
-
     //init cpu arch in hps_ctxt
     //init cpumask
     cpumask_clear(&hps_ctxt.little_cpumask);
@@ -181,9 +179,7 @@ int hps_cpu_init(void)
     //cpulist_parse("0-3", &hps_ctxt.little_cpumask);
 
     cpulist_scnprintf(str1, sizeof(str1), &hps_ctxt.little_cpumask);
-    hps_warn("hps_ctxt.little_cpumask: %s\n", str1);
     cpulist_scnprintf(str1, sizeof(str1), &hps_ctxt.big_cpumask);
-    hps_warn("hps_ctxt.big_cpumask: %s\n", str1);
     if (cpumask_weight(&hps_ctxt.little_cpumask) == 0)
     {
         cpumask_copy(&hps_ctxt.little_cpumask, &hps_ctxt.big_cpumask);
@@ -229,8 +225,6 @@ int hps_cpu_init(void)
     hps_ctxt.big_num_limit_ultra_power_saving = cpumask_weight(&hps_ctxt.big_cpumask);
     hps_ctxt.big_num_limit_power_serv = cpumask_weight(&hps_ctxt.big_cpumask);
 
-    hps_warn("%s: little_cpu_id_min: %u, little_cpu_id_max: %u, big_cpu_id_min: %u, big_cpu_id_max: %u\n", __func__, hps_ctxt.little_cpu_id_min, hps_ctxt.little_cpu_id_max, hps_ctxt.big_cpu_id_min, hps_ctxt.big_cpu_id_max);
-
     return r;
 }
 
@@ -241,8 +235,6 @@ int hps_cpu_deinit(void)
 {
     int r = 0;
 
-    hps_warn("hps_cpu_deinit\n");
-
     return r;
 }
-   
\ No newline at end of file
+   
diff --git a/drivers/misc/mediatek/mach/mt6580/mt_hotplug_strategy_main.c b/drivers/misc/mediatek/mach/mt6580/mt_hotplug_strategy_main.c
index 0e11ff56d..0f1ecfeeb 100644
--- a/drivers/misc/mediatek/mach/mt6580/mt_hotplug_strategy_main.c
+++ b/drivers/misc/mediatek/mach/mt6580/mt_hotplug_strategy_main.c
@@ -372,8 +372,6 @@ void hps_ctxt_print_algo_stats_tlp(int toUart)
 #ifdef CONFIG_HAS_EARLYSUSPEND
 static void hps_early_suspend(struct early_suspend *h)
 {
-    hps_warn("hps_early_suspend\n");
-
     mutex_lock(&hps_ctxt.lock);
     hps_ctxt.state = STATE_EARLY_SUSPEND;
 
@@ -391,9 +389,6 @@ static void hps_early_suspend(struct early_suspend *h)
     }
     mutex_unlock(&hps_ctxt.lock);
 
-    hps_warn("state: %u, enabled: %u, early_suspend_enabled: %u, suspend_enabled: %u, rush_boost_enabled: %u\n",
-        hps_ctxt.state, hps_ctxt.enabled, hps_ctxt.early_suspend_enabled, hps_ctxt.suspend_enabled, hps_ctxt.rush_boost_enabled);
-
     return;
 }
 #endif //#ifdef CONFIG_HAS_EARLYSUSPEND
@@ -404,17 +399,12 @@ static void hps_early_suspend(struct early_suspend *h)
 #ifdef CONFIG_HAS_EARLYSUSPEND
 static void hps_late_resume(struct early_suspend *h)
 {
-    hps_warn("hps_late_resume\n");
-
     mutex_lock(&hps_ctxt.lock);
     hps_ctxt.rush_boost_enabled = hps_ctxt.rush_boost_enabled_backup;
 
     hps_ctxt.state = STATE_LATE_RESUME;
     mutex_unlock(&hps_ctxt.lock);
 
-    hps_warn("state: %u, enabled: %u, early_suspend_enabled: %u, suspend_enabled: %u, rush_boost_enabled: %u\n",
-        hps_ctxt.state, hps_ctxt.enabled, hps_ctxt.early_suspend_enabled, hps_ctxt.suspend_enabled, hps_ctxt.rush_boost_enabled);
-
     return;
 }
 #endif //#ifdef CONFIG_HAS_EARLYSUSPEND
@@ -427,8 +417,6 @@ static void hps_late_resume(struct early_suspend *h)
  */
 static int hps_probe(struct platform_device *pdev)
 {
-    hps_warn("hps_probe\n");
-
     return 0;
 }
 
@@ -437,8 +425,6 @@ static int hps_probe(struct platform_device *pdev)
  */
 static int hps_suspend(struct platform_device *pdev, pm_message_t state)
 {
-    hps_warn("hps_suspend\n");
-
     if (!hps_ctxt.suspend_enabled)
         goto suspend_end;
 
@@ -449,8 +435,6 @@ static int hps_suspend(struct platform_device *pdev, pm_message_t state)
 
 suspend_end:
     hps_ctxt.state = STATE_SUSPEND;
-    hps_warn("state: %u, enabled: %u, early_suspend_enabled: %u, suspend_enabled: %u, rush_boost_enabled: %u\n",
-        hps_ctxt.state, hps_ctxt.enabled, hps_ctxt.early_suspend_enabled, hps_ctxt.suspend_enabled, hps_ctxt.rush_boost_enabled);
 
     return 0;
 }
@@ -461,7 +445,6 @@ suspend_end:
 static int hps_resume(struct platform_device *pdev)
 {
     unsigned int cpu;
-    hps_warn("hps_resume\n");
 
     if (!hps_ctxt.suspend_enabled)
         goto resume_end;
@@ -481,8 +464,6 @@ static int hps_resume(struct platform_device *pdev)
 
 resume_end:
     hps_ctxt.state = STATE_EARLY_SUSPEND;
-    hps_warn("state: %u, enabled: %u, early_suspend_enabled: %u, suspend_enabled: %u, rush_boost_enabled: %u\n",
-        hps_ctxt.state, hps_ctxt.enabled, hps_ctxt.early_suspend_enabled, hps_ctxt.suspend_enabled, hps_ctxt.rush_boost_enabled);
 
     return 0;
 }
@@ -497,8 +478,6 @@ static int __init hps_init(void)
 {
     int r = 0;
 
-    hps_warn("hps_init\n");
-
     //hps_cpu_init() must before hps_core_init()
     r = hps_cpu_init();
     if (r)
@@ -537,8 +516,6 @@ static void __exit hps_exit(void)
 {
     int r = 0;
 
-    hps_warn("hps_exit\n");
-
     hps_ctxt.init_state = INIT_STATE_NOT_READY;
 
     r = hps_core_deinit();
diff --git a/drivers/misc/mediatek/mach/mt6580/mt_hotplug_strategy_procfs.c b/drivers/misc/mediatek/mach/mt6580/mt_hotplug_strategy_procfs.c
index 6c62044f2..c616fcd4b 100644
--- a/drivers/misc/mediatek/mach/mt6580/mt_hotplug_strategy_procfs.c
+++ b/drivers/misc/mediatek/mach/mt6580/mt_hotplug_strategy_procfs.c
@@ -955,8 +955,6 @@ int hps_procfs_init()
         PROC_ENTRY(memory_debug),
     };
 
-    hps_warn("hps_procfs_init\n");
-
     hps_dir = proc_mkdir("hps", NULL);
     if (hps_dir == NULL)
     {
diff --git a/drivers/misc/mediatek/mach/mt6580/mt_idle.c b/drivers/misc/mediatek/mach/mt6580/mt_idle.c
index 52cd79f85..b365d828f 100644
--- a/drivers/misc/mediatek/mach/mt6580/mt_idle.c
+++ b/drivers/misc/mediatek/mach/mt6580/mt_idle.c
@@ -477,25 +477,6 @@ out:
         {
             if ((smp_processor_id() == 0))
             {
-                int i = 0;
-
-                for (i = 0; i < nr_cpu_ids; i++) {
-                    idle_ver("soidle_cnt[%d]=%lu, rgidle_cnt[%d]=%lu\n",
-                            i, soidle_cnt[i], i, rgidle_cnt[i]);
-                }
-
-                for (i = 0; i < NR_REASONS; i++) {
-                    idle_ver("[%d]soidle_block_cnt[0][%s]=%lu\n", i, reason_name[i],
-                            soidle_block_cnt[0][i]);
-                }
-
-                for (i = 0; i < NR_GRPS; i++) {
-                    idle_ver("[%02d]soidle_condition_mask[%-8s]=0x%08x\t\t"
-                            "soidle_block_mask[%-8s]=0x%08x\n", i,
-                            grp_get_name(i), soidle_condition_mask[i],
-                            grp_get_name(i), soidle_block_mask[i]);
-                }
-
                 memset(soidle_block_cnt, 0, sizeof(soidle_block_cnt));
                 soidle_block_prev_time = idle_get_current_time_ms();
             }
@@ -809,28 +790,9 @@ out:
         {
             if ((smp_processor_id() == 0))
             {
-                for (i = 0; i < nr_cpu_ids; i++) {
-                    idle_ver("dpidle_cnt[%d]=%lu, rgidle_cnt[%d]=%lu\n",
-                            i, dpidle_cnt[i], i, rgidle_cnt[i]);
-                }
-
-                for (i = 0; i < NR_REASONS; i++) {
-                    idle_ver("[%d]dpidle_block_cnt[%s]=%lu\n", i, reason_name[i],
-                            dpidle_block_cnt[i]);
-                }
-
-                for (i = 0; i < NR_GRPS; i++) {
-                    idle_ver("[%02d]dpidle_condition_mask[%-8s]=0x%08x\t\t"
-                            "dpidle_block_mask[%-8s]=0x%08x\n", i,
-                            grp_get_name(i), dpidle_condition_mask[i],
-                            grp_get_name(i), dpidle_block_mask[i]);
-                }
                 memset(dpidle_block_cnt, 0, sizeof(dpidle_block_cnt));
                 dpidle_block_prev_time = idle_get_current_time_ms();
-
             }
-
-
         }
         dpidle_block_cnt[reason]++;
         return false;
@@ -1145,7 +1107,6 @@ static inline void soidle_pre_handler(void)
     //stop Mali dvfs_callback timer
     if (!mtk_gpu_sodi_entry())
     {
-        idle_ver("not stop GPU timer in SODI\n");
     }
     
 #ifndef CONFIG_MTK_FPGA
@@ -1169,7 +1130,6 @@ static inline void soidle_post_handler(void)
     //restart Mali dvfs_callback timer
     if (!mtk_gpu_sodi_exit())
     {
-        idle_ver("not restart GPU timer outside SODI\n");
     }
     
 #ifndef CONFIG_MTK_FPGA
@@ -1234,8 +1194,6 @@ static inline int soidle_handler(int cpu)
 
 #ifdef SPM_SODI_PROFILE_TIME
             gpt_get_cnt(SPM_SODI_PROFILE_APXGPT,&soidle_profile[3]);
-            idle_ver("SODI: cpu_freq:%u, 1=>2:%u, 2=>3:%u, 3=>4:%u\n", mt_cpufreq_get_cur_freq(0),
-                 soidle_profile[1]-soidle_profile[0], soidle_profile[2]-soidle_profile[1], soidle_profile[3]-soidle_profile[2]);
 #endif
             return 1;
         }
@@ -1307,16 +1265,10 @@ static inline int dpidle_handler(int cpu)
             dpidle_post_handler();
             ret = 1;
 #ifdef CONFIG_SMP
-            idle_ver("DP:timer_left=%d, timer_left2=%d, delta=%d\n",
-                dpidle_timer_left, dpidle_timer_left2, dpidle_timer_left-dpidle_timer_left2);
 #else
-            idle_ver("DP:timer_left=%d, timer_left2=%d, delta=%d, timeout val=%d\n",
-                dpidle_timer_left, dpidle_timer_left2, dpidle_timer_left2-dpidle_timer_left,dpidle_timer_cmp-dpidle_timer_left);
 #endif
 #ifdef SPM_DEEPIDLE_PROFILE_TIME
             gpt_get_cnt(SPM_PROFILE_APXGPT,&dpidle_profile[3]);
-            idle_ver("1:%u, 2:%u, 3:%u, 4:%u\n",
-                 dpidle_profile[0], dpidle_profile[1], dpidle_profile[2],dpidle_profile[3]);
 #endif
         }
     }
@@ -1719,8 +1671,6 @@ void mt_idle_init(void)
     int err = 0;
     int i = 0;
 
-    idle_info("[%s]entry!!\n", __func__);
-
     arm_pm_idle = arch_idle;
 
     err = request_gpt(idle_gpt, GPT_ONE_SHOT, GPT_CLK_SRC_SYS, GPT_CLK_DIV_1,
diff --git a/drivers/misc/mediatek/mach/mt6580/mt_pm_init.c b/drivers/misc/mediatek/mach/mt6580/mt_pm_init.c
index e9a6c198a..24fa2c981 100644
--- a/drivers/misc/mediatek/mach/mt6580/mt_pm_init.c
+++ b/drivers/misc/mediatek/mach/mt6580/mt_pm_init.c
@@ -507,7 +507,6 @@ static int __init mt_power_management_init(void)
 //    mt_dcm_init(); // dynamic clock management init
 
 
-    pm_init_dir = proc_mkdir("pm_init", NULL);
     pm_init_dir = proc_mkdir("pm_init", NULL);
     if (!pm_init_dir)
     {
diff --git a/drivers/misc/mediatek/mach/mt6580/mt_ptp.c b/drivers/misc/mediatek/mach/mt6580/mt_ptp.c
index 80fccec43..3d9ce79c7 100755
--- a/drivers/misc/mediatek/mach/mt6580/mt_ptp.c
+++ b/drivers/misc/mediatek/mach/mt6580/mt_ptp.c
@@ -2421,8 +2421,6 @@ static void ptp_init01_finish(struct ptp_det *det);
 /*
  * CONFIG (SW releated)
  */
-#define CONFIG_PTP_SHOWLOG    1
-
 #define EN_ISR_LOG			 (0)
 
 #define PTP_GET_REAL_VAL	 (1) /* get val from efuse */
@@ -2922,7 +2920,6 @@ static void base_ops_disable_locked(struct ptp_det *det, int reason)
 		break;
 	}
 
-	ptp_notice("Disable PTP-OD[%s] done.\n", det->name);
 	det->disabled |= reason;
 
 	FUNC_EXIT(FUNC_LV_HELP);
@@ -2949,18 +2946,15 @@ static int base_ops_init01(struct ptp_det *det)
 	FUNC_ENTER(FUNC_LV_HELP);
 
 	if (unlikely(!HAS_FEATURE(det, FEA_INIT01))) {
-		ptp_notice("det %s has no INIT01\n", det->name);
 		FUNC_EXIT(FUNC_LV_HELP);
 		return -1;
 	}
 
 	if (det->disabled & BY_PROCFS) {
-		ptp_notice("[%s] Disabled by PROCFS\n", __func__);
 		FUNC_EXIT(FUNC_LV_HELP);
 		return -2;
 	}
 
-	ptp_notice("%s(%s) start (ptp_level = 0x%08X).\n", __func__, det->name, ptp_level);
 	//atomic_inc(&ctrl->in_init);
 	//ptp_init01_prepare(det);
 	// det->ops->dump_status(det); // <-@@@
@@ -2976,20 +2970,15 @@ static int base_ops_init02(struct ptp_det *det)
 	FUNC_ENTER(FUNC_LV_HELP);
 
 	if (unlikely(!HAS_FEATURE(det, FEA_INIT02))) {
-		ptp_notice("det %s has no INIT02\n", det->name);
 		FUNC_EXIT(FUNC_LV_HELP);
 		return -1;
 	}
 
 	if (det->disabled & BY_PROCFS) {
-		ptp_notice("[%s] Disabled by PROCFS\n", __func__);
 		FUNC_EXIT(FUNC_LV_HELP);
 		return -2;
 	}
 
-	ptp_notice("%s(%s) start (ptp_level = 0x%08X).\n", __func__, det->name, ptp_level);
-	ptp_notice("DCVOFFSETIN = 0x%08X\n", det->DCVOFFSETIN);
-	ptp_notice("AGEVOFFSETIN = 0x%08X\n", det->AGEVOFFSETIN);
 	// det->ops->dump_status(det); // <-@@@
 	det->ops->set_phase(det, PTP_PHASE_INIT02);
 
@@ -3006,19 +2995,15 @@ static int base_ops_mon_mode(struct ptp_det *det)
 	FUNC_ENTER(FUNC_LV_HELP);
 
 	if (!HAS_FEATURE(det, FEA_MON)) {
-		ptp_notice("det %s has no MON mode\n", det->name);
 		FUNC_EXIT(FUNC_LV_HELP);
 		return -1;
 	}
 
 	if (det->disabled & BY_PROCFS) {
-		ptp_notice("[%s] Disabled by PROCFS\n", __func__);
 		FUNC_EXIT(FUNC_LV_HELP);
 		return -2;
 	}
 
-	ptp_notice("%s(%s) start (ptp_level = 0x%08X).\n", __func__, det->name, ptp_level);
-
 #ifdef CONFIG_THERMAL
 	ts_bank = det->ctrl_id; // TODO: FIXME
 	get_thermal_slope_intercept(&ts_info, ts_bank);
@@ -3030,7 +3015,6 @@ static int base_ops_mon_mode(struct ptp_det *det)
 #endif
 
 	if ((det->PTPINITEN == 0x0) || (det->PTPMONEN == 0x0)) {
-		ptp_notice("PTPINITEN = 0x%08X, PTPMONEN = 0x%08X\n", det->PTPINITEN, det->PTPMONEN);
 		FUNC_EXIT(FUNC_LV_HELP);
 		return 1;
 	}
@@ -3242,7 +3226,6 @@ static int base_ops_get_temp(struct ptp_det *det)
 static int base_ops_get_volt(struct ptp_det *det)
 {
 	FUNC_ENTER(FUNC_LV_HELP);
-	ptp_warning("[%s] default func\n", __func__);
 	FUNC_EXIT(FUNC_LV_HELP);
 
 	return 0;
@@ -3251,7 +3234,6 @@ static int base_ops_get_volt(struct ptp_det *det)
 static int base_ops_set_volt(struct ptp_det *det)
 {
 	FUNC_ENTER(FUNC_LV_HELP);
-	ptp_warning("[%s] default func\n", __func__);
 	FUNC_EXIT(FUNC_LV_HELP);
 
 	return 0;
@@ -3260,7 +3242,6 @@ static int base_ops_set_volt(struct ptp_det *det)
 static void base_ops_restore_default_volt(struct ptp_det *det)
 {
 	FUNC_ENTER(FUNC_LV_HELP);
-	ptp_warning("[%s] default func\n", __func__);
 	FUNC_EXIT(FUNC_LV_HELP);
 }
 
@@ -3424,29 +3405,6 @@ static enum hrtimer_restart ptp_log_timer_func(struct hrtimer *timer)
 
 	FUNC_ENTER(FUNC_LV_HELP);
 
-	for_each_det(det) {
-		ptp_notice("PTP_LOG: PTPOD[%s] (%d) - "
-			   "(%d, %d, %d, %d, %d, %d, %d, %d) - "
-			   "(%d, %d, %d, %d, %d, %d, %d, %d)\n",
-			   det->name, det->ops->get_temp(det),
-			   PTP_PMIC_VAL_TO_VOLT(det->volt_tbl_pmic[0]),
-			   PTP_PMIC_VAL_TO_VOLT(det->volt_tbl_pmic[1]),
-			   PTP_PMIC_VAL_TO_VOLT(det->volt_tbl_pmic[2]),
-			   PTP_PMIC_VAL_TO_VOLT(det->volt_tbl_pmic[3]),
-			   PTP_PMIC_VAL_TO_VOLT(det->volt_tbl_pmic[4]),
-			   PTP_PMIC_VAL_TO_VOLT(det->volt_tbl_pmic[5]),
-			   PTP_PMIC_VAL_TO_VOLT(det->volt_tbl_pmic[6]),
-			   PTP_PMIC_VAL_TO_VOLT(det->volt_tbl_pmic[7]),
-			   det->freq_tbl[0],
-			   det->freq_tbl[1],
-			   det->freq_tbl[2],
-			   det->freq_tbl[3],
-			   det->freq_tbl[4],
-			   det->freq_tbl[5],
-			   det->freq_tbl[6],
-			   det->freq_tbl[7]);
-	}
-
 	hrtimer_forward_now(timer, ns_to_ktime(LOG_INTERVAL));
 	FUNC_EXIT(FUNC_LV_HELP);
 
@@ -3535,7 +3493,6 @@ static void ptp_init_det(struct ptp_det *det, struct ptp_devinfo *devinfo)
 	ptp_det_id det_id = det_to_id(det);
 
 	FUNC_ENTER(FUNC_LV_HELP);
-	printk("det name=%s,det_id=%d", det->name, det_id);
 
 	inherit_base_det(det);
 
@@ -3561,7 +3518,6 @@ static void ptp_init_det(struct ptp_det *det, struct ptp_devinfo *devinfo)
 
 	if (NULL != det->ops->get_volt) {
 		det->VBOOT = PTP_VOLT_TO_PMIC_VAL(det->ops->get_volt(det));
-		printk(KERN_ALERT "@%s(), det->VBOOT = %d\n", __func__, det->VBOOT);
 	}
 
 	switch (det_id) {
@@ -3620,7 +3576,6 @@ static void ptp_set_ptp_volt(struct ptp_det *det)
 	struct ptp_ctrl *ctrl = id_to_ptp_ctrl(det->ctrl_id);
 
 	cur_temp = det->ops->get_temp(det);
-	ptp_debug("ptp_set_ptp_volt cur_temp = %d\n", cur_temp);
 	if (cur_temp <= 33000) {
 		low_temp_offset = 10;
 		ctrl->volt_update |= PTP_VOLT_UPDATE;
@@ -3780,8 +3735,6 @@ static inline void handle_init01_isr(struct ptp_det *det)
 {
 	FUNC_ENTER(FUNC_LV_LOCAL);
 
-	ptp_isr_info("@ %s(%s)\n", __func__, det->name);
-
 	det->dcvalues[PTP_PHASE_INIT01]		= ptp_read(PTP_DCVALUES);
 	det->ptp_freqpct30[PTP_PHASE_INIT01] = ptp_read(PTP_FREQPCT30);
 	det->ptp_26c[PTP_PHASE_INIT01]		= ptp_read(PTP_PTPINTEN + 0x10);
@@ -3822,8 +3775,6 @@ static inline void handle_init02_isr(struct ptp_det *det)
 
 	FUNC_ENTER(FUNC_LV_LOCAL);
 
-	ptp_isr_info("@ %s(%s)\n", __func__, det->name);
-
 	det->dcvalues[PTP_PHASE_INIT02]		= ptp_read(PTP_DCVALUES);
 	det->ptp_freqpct30[PTP_PHASE_INIT02] = ptp_read(PTP_FREQPCT30);
 	det->ptp_26c[PTP_PHASE_INIT02]		= ptp_read(PTP_PTPINTEN + 0x10);
@@ -3851,12 +3802,6 @@ static inline void handle_init02_isr(struct ptp_det *det)
 
 	memcpy(det->volt_tbl_init2, det->volt_tbl, sizeof(det->volt_tbl_init2));
 
-	for (i = 0; i < NR_FREQ; i++)
-		ptp_isr_info("ptp_detectors[%s].volt_tbl[%d] = 0x%08X (%d)\n",
-			     det->name, i, det->volt_tbl[i], PTP_PMIC_VAL_TO_VOLT(det->volt_tbl[i]));
-
-	ptp_isr_info("ptp_level = 0x%08X\n", ptp_level);
-
 	ptp_set_ptp_volt(det);
 
 	/*
@@ -3907,8 +3852,6 @@ static inline void handle_mon_mode_isr(struct ptp_det *det)
 
 	FUNC_ENTER(FUNC_LV_LOCAL);
 
-	ptp_isr_info("@ %s(%s)\n", __func__, det->name);
-
 	det->dcvalues[PTP_PHASE_MON]		= ptp_read(PTP_DCVALUES);
 	det->ptp_freqpct30[PTP_PHASE_MON]	= ptp_read(PTP_FREQPCT30);
 	det->ptp_26c[PTP_PHASE_MON]		    = ptp_read(PTP_PTPINTEN + 0x10);
@@ -3943,11 +3886,6 @@ static inline void handle_mon_mode_isr(struct ptp_det *det)
 	det->volt_tbl[6] = (temp >> 16) & 0xff;
 	det->volt_tbl[7] = (temp >> 24) & 0xff;
 
-	for (i = 0; i < NR_FREQ; i++)
-		ptp_isr_info("ptp_detectors[%s].volt_tbl[%d] = 0x%08X (%d)\n",
-			     det->name, i, det->volt_tbl[i], PTP_PMIC_VAL_TO_VOLT(det->volt_tbl[i]));
-
-	ptp_isr_info("ptp_level = 0x%08X\n", ptp_level);
 	//ptp_isr_info("ISR : TEMPSPARE1 = 0x%08X\n", ptp_read(TEMPSPARE1)); //wait for thermal
 	ptp_set_ptp_volt(det);
 
@@ -3999,12 +3937,6 @@ static inline void ptp_isr_handler(struct ptp_det *det)
 	PTPINTSTS = ptp_read(PTP_PTPINTSTS);
 	PTPEN = ptp_read(PTP_PTPEN);
 
-	ptp_isr_info("[%s]\n", det->name);
-	ptp_isr_info("PTPINTSTS = 0x%08X\n", PTPINTSTS);
-	ptp_isr_info("PTP_PTPEN = 0x%08X\n", PTPEN);
-	ptp_isr_info("*(0x%08X) = 0x%08X\n", (unsigned int)PTP_DCVALUES, ptp_read(PTP_DCVALUES));
-	ptp_isr_info("*(0x%08X) = 0x%08X\n", (unsigned int)PTP_AGECOUNT, ptp_read(PTP_AGECOUNT));
-
 	if (PTPINTSTS == 0x1) { /* PTP init1 or init2 */
 		if ((PTPEN & 0x7) == 0x1)   /* PTP init1 */
 			handle_init01_isr(det);
@@ -4072,7 +4004,6 @@ static irqreturn_t ptp_isr(int irq, void *dev_id)
 		det = &ptp_detectors[i];
 
 		det->ops->switch_bank(det);
-		mt_ptp_reg_dump_locked(); // TODO: FIXME, for temp reg dump <-XXX
 		ptp_isr_handler(det);
 	}
 
@@ -4178,11 +4109,8 @@ void ptp_init01(void)
 			unsigned int vboot;
 #if 1
 			vboot = PTP_VOLT_TO_PMIC_VAL(det->ops->get_volt(det));
-			printk(KERN_ALERT "@%s(),vboot = %d\n", __func__, vboot);
 
 			if (vboot != det->VBOOT) {
-				ptp_error("@%s():%d, get_volt(%s) = 0x%08X, VBOOT = 0x%08X\n", __func__, __LINE__, det->name, vboot, det->VBOOT);
-				aee_kernel_warning("mt_ptp", "@%s():%d, get_volt(%s) = 0x%08X, VBOOT = 0x%08X\n", __func__, __LINE__, det->name, vboot, det->VBOOT);
 			}
 
 #else
@@ -4379,12 +4307,6 @@ void get_devinfo(struct ptp_devinfo *p)
 	val[3] = ptp_read(0x1000918C); /* PTP_OD3 */
 #endif
 
-	printk(KERN_CRIT "val[0]=0x%x\n", val[0]);
-	printk(KERN_CRIT "val[1]=0x%x\n", val[1]);
-	printk(KERN_CRIT "val[2]=0x%x\n", val[2]);
-	printk(KERN_CRIT "val[3]=0x%x\n", val[3]);
-	printk(KERN_CRIT "p->PTPINITEN=0x%x\n", p->PTPINITEN);
-	printk(KERN_CRIT "p->PTPMONEN=0x%x\n", p->PTPMONEN);
 	//p->PTPINITEN = 0; // TODO: FIXME
 	//p->PTPMONEN  = 0; // TODO: FIXME
 #endif
@@ -4410,8 +4332,6 @@ static int ptp_probe(struct platform_device *pdev)
 		WARN_ON(1);
 	}
 
-	ptp_notice("Set PTP IRQ OK.\n");
-
 	//	ptp_level = mt_ptp_get_level();
 	//	atomic_set(&ptp_init01_cnt, 0);
 	for_each_ctrl(ctrl) {
@@ -4656,8 +4576,6 @@ static int ptp_dump_proc_show(struct seq_file *m, void *v)
 	// ptp_detectors[PTP_DET_LITTLE].ops->dump_status(&ptp_detectors[PTP_DET_LITTLE]); // <-XXX
 	// ptp_detectors[PTP_DET_BIG].ops->dump_status(&ptp_detectors[PTP_DET_BIG]); // <-XXX
 
-	mt_ptp_reg_dump();
-
 	for (i = 0; i < sizeof(struct ptp_devinfo) / sizeof(unsigned int); i++)
 		seq_printf(m, "PTP_OD%d\t= 0x%08X\n", i, val[i]);
 
@@ -4812,12 +4730,10 @@ static ssize_t ptp_log_en_proc_write(struct file *file,
 
 	switch (ptp_log_en) {
 	case 0:
-		ptp_notice("ptp log disabled.\n");
 		hrtimer_cancel(&ptp_log_timer);
 		break;
 
 	case 1:
-		ptp_notice("ptp log enabled.\n");
 		hrtimer_start(&ptp_log_timer, ns_to_ktime(LOG_INTERVAL), HRTIMER_MODE_REL);
 		break;
 
@@ -5040,7 +4956,6 @@ static int __init ptp_init(void)
 	get_devinfo(&ptp_devinfo);
 
 	if (0 == ptp_devinfo.PTPINITEN) {
-		ptp_notice("PTPINITEN = 0x%08X\n", ptp_devinfo.PTPINITEN);
 		FUNC_EXIT(FUNC_LV_MODULE);
 		return 0;
 	}
@@ -5058,7 +4973,6 @@ static int __init ptp_init(void)
 	err = platform_driver_register(&ptp_driver);
 
 	if (err) {
-		ptp_notice("PTP driver callback register failed..\n");
 		FUNC_EXIT(FUNC_LV_MODULE);
 		return err;
 	}
@@ -5071,7 +4985,6 @@ static int __init ptp_init(void)
 static void __exit ptp_exit(void)
 {
 	FUNC_ENTER(FUNC_LV_MODULE);
-	ptp_notice("PTP de-initialization\n");
 	FUNC_EXIT(FUNC_LV_MODULE);
 }
 
diff --git a/drivers/misc/mediatek/mach/mt6580/mt_sleep.c b/drivers/misc/mediatek/mach/mt6580/mt_sleep.c
index 08b7f70e3..34ef183a3 100644
--- a/drivers/misc/mediatek/mach/mt6580/mt_sleep.c
+++ b/drivers/misc/mediatek/mach/mt6580/mt_sleep.c
@@ -117,8 +117,6 @@ static u32 slp_spm_data = 0;
 
 static enum hrtimer_restart slp_auto_suspend_resume_timer_func(struct hrtimer *timer)
 {
-    slp_crit2("do slp_auto_suspend_resume_timer_func\n");
-
     slp_auto_suspend_resume = 0;
     slp_auto_suspend_resume_cnt =0;
 
@@ -139,7 +137,6 @@ static int slp_auto_suspend_resume_thread_handler(void *unused)
         wait_event_interruptible(slp_auto_suspend_resume_timer_waiter, slp_auto_suspend_resume_timer_flag != 0);
         slp_auto_suspend_resume_timer_flag = 0;
         charging_suspend_enable();
-        slp_crit2("slp_auto_suspend_resume_thread_handler charging_suspend_enable\n");
 
     } while (!kthread_should_stop());
 
@@ -189,10 +186,6 @@ static int slp_suspend_ops_valid(suspend_state_t state)
 static int slp_suspend_ops_begin(suspend_state_t state)
 {
     /* legacy log */
-    slp_notice("@@@@@@@@@@@@@@@@@@@@\n");
-    slp_notice("Chip_pm_begin(%u)(%u)\n", is_cpu_pdn(slp_spm_flags), is_infra_pdn(slp_spm_flags));
-    slp_notice("@@@@@@@@@@@@@@@@@@@@\n");
-
     slp_wake_reason = WR_NONE;
 
     return 0;
@@ -201,10 +194,6 @@ static int slp_suspend_ops_begin(suspend_state_t state)
 static int slp_suspend_ops_prepare(void)
 {
     /* legacy log */
-    slp_notice("@@@@@@@@@@@@@@@@@@@@\n");
-    slp_crit2("Chip_pm_prepare\n");
-    slp_notice("@@@@@@@@@@@@@@@@@@@@\n");
-
 #if 0
     if (slp_chk_golden)
         mt_power_gs_dump_suspend();
@@ -217,13 +206,11 @@ static int slp_suspend_ops_prepare(void)
 extern void mtkpasr_phaseone_ops(void);
 static int slp_suspend_ops_prepare_late(void)
 {
-	slp_notice("[%s]\n",__FUNCTION__);
 	mtkpasr_phaseone_ops();
 	return 0;
 }
 static void slp_suspend_ops_wake(void)
 {
-	slp_notice("[%s]\n",__FUNCTION__);
 }
 
 /* PASR/DPD SW operations */
@@ -238,10 +225,6 @@ static int enter_pasrdpd(void)
 	int error = 0;
 	u32 sr = 0, dpd = 0;
 
-    	slp_notice("@@@@@@@@@@@@@@@@@@@@\n");
-	slp_crit2("[%s]\n",__FUNCTION__);
-    	slp_notice("@@@@@@@@@@@@@@@@@@@@\n");
-	
 	/* Setup SPM wakeup event firstly */
 	spm_set_wakeup_src_check();
 
@@ -252,7 +235,6 @@ static int enter_pasrdpd(void)
 		slp_crit2("[PM_WAKEUP] Failed to enter PASR!\n");
 	} else {	
 		/* Call SPM/DPD control API */
-		slp_crit2("MR17[0x%x] DPD[0x%x]\n",sr,dpd);
 		/* Should configure SR */
 		if (mtkpasr_enable_sr == 0) {
 			sr = 0x0;
@@ -264,25 +246,16 @@ static int enter_pasrdpd(void)
 		//	printk(KERN_ERR "[%s][%d] PM: Failed to configure MRW PASR [%d]!\n",__FUNCTION__,__LINE__,mrw_error);
 		//}
 	}
-	slp_crit2("Bye [%s]\n",__FUNCTION__);
-
 	return error;
 }
 static void leave_pasrdpd(void)
 {
-  	slp_notice("@@@@@@@@@@@@@@@@@@@@\n");
-	slp_crit2("[%s]\n",__FUNCTION__);
-   	slp_notice("@@@@@@@@@@@@@@@@@@@@\n");
-
 	/* Disable PASR */
 	exit_pasr_dpd_config();
 
-	slp_crit2("[%d]\n",__LINE__);
-
 	/* End PASR/DPD SW operations */
 	pasr_exit();
 	
-	slp_crit2("Bye [%s]\n",__FUNCTION__);
 }
 #endif
 
@@ -304,10 +277,6 @@ static int slp_suspend_ops_enter(suspend_state_t state)
 #endif
 
     /* legacy log */
-    slp_notice("@@@@@@@@@@@@@@@@@@@@\n");
-    slp_crit2("Chip_pm_enter\n");
-    slp_notice("@@@@@@@@@@@@@@@@@@@@\n");
-
 
 #if !defined (CONFIG_MTK_FPGA)
     if (slp_dump_gpio)
@@ -368,28 +337,16 @@ LEAVE_SLEEP:
 
 static void slp_suspend_ops_finish(void)
 {
-    /* legacy log */
-    slp_notice("@@@@@@@@@@@@@@@@@@@@\n");
-    slp_crit2("Chip_pm_finish\n");
-    slp_notice("@@@@@@@@@@@@@@@@@@@@\n");
 }
 
 static void slp_suspend_ops_end(void)
 {
-    /* legacy log */
-    slp_notice("@@@@@@@@@@@@@@@@@@@@\n");
-    slp_notice("Chip_pm_end\n");
-    slp_notice("@@@@@@@@@@@@@@@@@@@@\n");
-
     if (1 == slp_auto_suspend_resume)
     {
-        slp_crit2("slp_auto_suspend_resume_cnt = %d \n", slp_auto_suspend_resume_cnt);
         slp_auto_suspend_resume_cnt++;
         
         if (10 < slp_auto_suspend_resume_cnt)
         {
-            slp_crit2("do spm_usb_resume\n");
-
             wake_lock(&spm_suspend_lock);
             slp_auto_suspend_resume = 0;
             slp_auto_suspend_resume_cnt =0;
@@ -420,9 +377,6 @@ int slp_set_wakesrc(u32 wakesrc, bool enable, bool ck26m_on)
     int r;
     unsigned long flags;
 
-    slp_notice("wakesrc = 0x%x, enable = %u, ck26m_on = %u\n",
-               wakesrc, enable, ck26m_on);
-
 #if SLP_REPLACE_DEF_WAKESRC
     if (wakesrc & WAKE_SRC_CFG_KEY)
 #else
@@ -497,9 +451,6 @@ void slp_module_init(void)
 {
     spm_output_sleep_option();
 
-    slp_notice("SLEEP_DPIDLE_EN:%d, REPLACE_DEF_WAKESRC:%d, SUSPEND_LOG_EN:%d\n",
-               SLP_SLEEP_DPIDLE_EN, SLP_REPLACE_DEF_WAKESRC, SLP_SUSPEND_LOG_EN);
-
     #if 1
     suspend_set_ops(&slp_suspend_ops);
     #endif
@@ -531,7 +482,6 @@ void slp_start_auto_suspend_resume_timer(u32 sec)
     charging_suspend_disable();
 
     slp_time = sec;
-	slp_crit2("slp_start_auto_suspend_resume_timer init = %d\n", slp_time);
 
 	ktime = ktime_set(slp_time, 0);
 
diff --git a/drivers/misc/mediatek/mach/mt6580/mtk_ccci_helper.c b/drivers/misc/mediatek/mach/mt6580/mtk_ccci_helper.c
index 7a5bb3ba1..9b7732103 100644
--- a/drivers/misc/mediatek/mach/mt6580/mtk_ccci_helper.c
+++ b/drivers/misc/mediatek/mach/mt6580/mtk_ccci_helper.c
@@ -101,8 +101,6 @@ static int internal_md_power_down(void *data)
 	unsigned short i;
 	unsigned int md_topsm_base, modem2g_topsm_base, tdd_base;
 
-	printk("[ccci/ctl] (0)internal md disabled, so power down!\n");
-
 	//printk("[ccci/ctl] (0)call md_power_on...\n");
 
 	md_power_on(0);
@@ -111,8 +109,6 @@ static int internal_md_power_down(void *data)
 	modem2g_topsm_base 	= (unsigned int)ioremap_nocache(MODEM2G_TOPSM_BASE, 0x8C0);
 	tdd_base 			= (unsigned int)ioremap_nocache(TDD_BASE, 			0x010);
 
-	printk("[ccci/ctl] (0)MD2G/HSPA power down...\n");
-	
 	/*[MD2G/HSPA] MDMCU Control Power Down Sequence*/
 	mt_reg_sync_writel((*MODEM2G_TOPSM_RM_PWR_CON0(modem2g_topsm_base)) | 0x44, MODEM2G_TOPSM_RM_PWR_CON0(modem2g_topsm_base));
 	mt_reg_sync_writel((*MODEM2G_TOPSM_RM_PWR_CON1(modem2g_topsm_base)) | 0x44, MODEM2G_TOPSM_RM_PWR_CON1(modem2g_topsm_base));
@@ -159,8 +155,6 @@ static int internal_md_power_down(void *data)
 		status = *((volatile unsigned short*)TDD_HALT_STATUS_ADDR(tdd_base));
 	}
 #endif
-	printk("[ccci/ctl] (0)ABB power down...\n");
-	
 	/*[ABB] MDMCU Control Power Down Sequence*/
 	mt_reg_sync_writel((*MD_TOPSM_RM_PWR_CON0(md_topsm_base))  | 0x00000090, MD_TOPSM_RM_PWR_CON0(md_topsm_base));
 	mt_reg_sync_writel((*MD_TOPSM_RM_PLL_MASK0(md_topsm_base)) | 0xFFFF0000, MD_TOPSM_RM_PLL_MASK0(md_topsm_base));
@@ -168,8 +162,6 @@ static int internal_md_power_down(void *data)
 	mt_reg_sync_writel((*MODEM2G_TOPSM_RM_PLL_MASK0(modem2g_topsm_base)) | 0xFFFFFFFF, MODEM2G_TOPSM_RM_PLL_MASK0(modem2g_topsm_base));
 	mt_reg_sync_writel((*MODEM2G_TOPSM_RM_PLL_MASK1(modem2g_topsm_base)) | 0x0000000F, MODEM2G_TOPSM_RM_PLL_MASK1(modem2g_topsm_base));
 
-	printk("[ccci/ctl] (0)MDMCU power down...\n");
-
 	/*[MDMCU] APMCU Control Power Down Sequence*/
 	mt_reg_sync_writel(0xFFFFFFFF, MD_TOPSM_SM_REQ_MASK(md_topsm_base));
 	mt_reg_sync_writel(0x00000000, MD_TOPSM_RM_TMR_PWR0(md_topsm_base));
@@ -181,16 +173,12 @@ static int internal_md_power_down(void *data)
 	mt_reg_sync_writel(0xFFFFFFFF, MODEM2G_TOPSM_RM_PLL_MASK0(modem2g_topsm_base));
 	mt_reg_sync_writel(0xFFFFFFFF, MODEM2G_TOPSM_RM_PLL_MASK1(modem2g_topsm_base));
 
-	printk("[ccci/ctl] (0)call md_power_off...\n");
-
 	md_power_off(0, 100);
 
 	iounmap((void*)md_topsm_base);
 	iounmap((void*)modem2g_topsm_base);
 	iounmap((void*)tdd_base);
 
-	printk("[ccci/ctl] (0)internal md power down done...\n");
-
 	return 0;
 }
 
@@ -351,12 +339,10 @@ static int get_ccci_dfo_setting(char item[], unsigned int *val)
 		ccci_name = ccci_dfo_setting[i].name;
 		ccci_value = ccci_dfo_setting[i].value;
 		if(!strcmp(ccci_name, item)) {
-			printk("[ccci/ctl] (0)Get DFO:%s:0x%08X\n", ccci_name, ccci_value);
 			*val = (unsigned int)ccci_value;
 			return 0;
 		}
 	}
-	printk("[ccci/ctl] (0)DFO:%s not found\n", item);
 	return -1;
 }
 
@@ -391,14 +377,10 @@ static void cal_md_mem_usage(void)
 	if(md1_en && (md_share_mem_size[MD_SYS1]>0) && (md_resv_mem_size[MD_SYS1]>0)) {
 		// Setting is OK
 	} else if (md1_en && ((md_share_mem_size[MD_SYS1]<=0) || (md_resv_mem_size[MD_SYS1]<=0))) {
-		printk("[ccci/ctl] (0)[Error]DFO Setting for md1 wrong: <%d:0x%08X:0x%08X>\n", 
-				md1_en, md_resv_mem_size[MD_SYS1], md_share_mem_size[MD_SYS1]);
 		md_share_mem_size[MD_SYS1] = MD1_SMEM_SIZE;
 		md_resv_mem_size[MD_SYS1] = MD1_MEM_SIZE;
 	} else {
 		// Has conflict
-		printk("[ccci/ctl] (0)[Error]DFO Setting for md1 conflict: <%d:0x%08X:0x%08X>\n", 
-				md1_en, md_resv_mem_size[MD_SYS1], md_share_mem_size[MD_SYS1]);
 		md1_en = 0;
 		md_share_mem_size[MD_SYS1]=0;
 		md_resv_mem_size[MD_SYS1]=0;
@@ -452,7 +434,6 @@ void ccci_md_mem_reserve(void)
 	if(ptr)
 	{
 		md_resv_mem_addr[MD_SYS1] =(unsigned int) ptr;
-		printk("[ccci/ctl] (0)md mem reserve successfully,ptr=%p,size=%d\n",ptr,modem_size_list[0]);
 	}else{
 		printk("[ccci/ctl] (0)md mem reserve fail.\n");
 		md_resv_mem_addr[MD_SYS1] =0;
@@ -487,7 +468,6 @@ int parse_ccci_dfo_setting(void *dfo_tbl, int num)
 				*ccci_value = tag_value;
 			}
 		}
-		printk("[ccci/ctl] (0)DFO:%s:0x%08X\n", ccci_name, *ccci_value);
 	}
 	cal_md_mem_usage();
 
@@ -504,7 +484,6 @@ int parse_ccci_dfo_setting(void *dfo_data, int num)
 	for (i=0; i<(sizeof(ccci_dfo_setting)/sizeof(dfo_item_t)); i++) { // CCCI DFO feature index
 		ccci_name = ccci_dfo_setting[i].name;
 		ccci_value = ccci_dfo_setting[i].value;
-		printk("[ccci/ctl] (0)DFO:%s:0x%08X\n", ccci_name, ccci_value);
 	}
 	
 	cal_md_mem_usage();
@@ -541,13 +520,6 @@ static void collect_md_setting(void)
 	if ( (md_resv_smem_addr[MD_SYS1]&(2*1024*1024 - 1)) != 0 )
 		printk("[ccci/ctl] (0) md1 share memory addr %08x is not 2M align!!\n", md_resv_smem_addr[MD_SYS1]);
 
-	printk("[ccci/ctl] (0)EN(%d):MemBase(0x%08X)\n", md1_en, md_resv_smem_base);
-
-	printk("[ccci/ctl] (0)MemStart(0x%08X):MemSize(0x%08X)\n", \
-		md_resv_mem_addr[MD_SYS1], md_resv_mem_size[MD_SYS1]);
-
-	printk("[ccci/ctl] (0)SmemStart(0x%08X):SmemSize(0x%08X)\n", \
-		md_resv_smem_addr[MD_SYS1], md_share_mem_size[MD_SYS1]);
 }
 
 
@@ -571,7 +543,6 @@ int parse_meta_md_setting(unsigned char args[])
 			} else if(md_setting_flag&MD_2G_FLAG) {
 				md_support[MD_SYS1] = modem_2g;
 			}
-			printk("[ccci/ctl] (0)Meta active id:1, md type:%d\n", md_support[MD_SYS1]);
 			break;
 			
 		default:
@@ -1241,10 +1212,6 @@ static ccci_pm_cb_item_t resume_cb_table[MAX_MD_NUM][MAX_SLEEP_API];
 
 void register_suspend_notify(int md_id, unsigned int id, void (*func)(int))
 {
-	if((id >= MAX_SLEEP_API) || (func == NULL) || (md_id >= MAX_MD_NUM)) {
-		printk("[ccci/ctl] (0)invalid suspend parameter(md:%d, cmd:%d)!\n", md_id, id);
-	}
-	
 	if (suspend_cb_table[md_id][id].cb_func == NULL){
 		suspend_cb_table[md_id][id].cb_func = func;
 		suspend_cb_table[md_id][id].md_id = md_id;
@@ -1288,8 +1255,6 @@ static int ccci_helper_suspend(struct platform_device *dev, pm_message_t state)
 	void	(*func)(int);
 	int		md_id;
 
-	printk( "\nccci_helper_suspend\n" );
-
 	for (i = 0; i < MAX_MD_NUM; i++) {
 		for (j = 0; j < SLP_ID_MAX; j++) {
 			func = suspend_cb_table[i][j].cb_func;
@@ -1308,8 +1273,6 @@ static int ccci_helper_resume(struct platform_device *dev)
 	void	(*func)(int);
 	int		md_id;
 
-	printk( "\nccci_helper_resume\n" );
-
 	for (i = 0; i < MAX_MD_NUM; i++) {
 		for (j = 0; j < RSM_ID_MAX; j++) {
 			func = resume_cb_table[i][j].cb_func;
@@ -1444,7 +1407,6 @@ int ccci_reserve_mem_of_init(struct reserved_mem * rmem, unsigned long node, con
         CH_ERR("memory reserve key %s not support\n", uname);  
         return 0;
     }
-    CH_MSG_INF(md_id, "hlp", "reserve_mem_of_init, rptr=0x%pa, rsize=0x%x\n", &rptr, rsize);
     // md_resv_mem_list[md_id] = rptr;    // ROM + RAM + SMEM
     md_resv_mem_addr[md_id] = (unsigned int)rptr;    // ROM + RAM + SMEM
     modem_size_list[md_id]= rsize;     // maybe 24M (22 + 2)
@@ -1536,7 +1498,6 @@ int ccci_get_fo_setting(char item[], unsigned int *val)
 		ccci_name = ccci_fos_default_setting[i].name;
 		ccci_value = ccci_fos_default_setting[i].value;
 		if(!strcmp(ccci_name, item)) {
-			CH_MSG("FO:%s -> %08x\n", item, ccci_value);
 			*val = (unsigned int)ccci_value;
 			return 0;
 		}
@@ -1606,16 +1567,12 @@ static void cal_md_settings(int md_id)
      */	
     md_resv_mem_size[md_id]= round_up(modem_size_list[md_id] - md_share_mem_size[md_id], get_md_smem_align(md_id));
     md_resv_smem_addr[md_id] = md_resv_mem_addr[md_id] + md_resv_mem_size[md_id];
-    CH_MSG_INF(md_id, "hlp", "md%d modem_total_size=0x%x,md_size=0x%x, smem_size=0x%x\n",(md_id+1)
-    	, modem_size_list[md_id],md_resv_mem_size[md_id],md_share_mem_size[md_id]);	
     if ((md_usage_case&(1<<md_id)) && ((md_resv_mem_addr[md_id]&(CCCI_MEM_ALIGN - 1)) != 0))
     	CH_MSG_INF(md_id, "hlp", "md%d memory addr is not 32M align!!!\n", (md_id+1));
 
     if ((md_usage_case&(1<<md_id)) && ((md_resv_smem_addr[md_id]&(CCCI_SMEM_ALIGN_MD1 - 1)) != 0))
     	CH_MSG_INF(md_id, "hlp", "md%d share memory addr %pa is not 0x%x align!!\n", (md_id+1), &md_resv_smem_addr[md_id], CCCI_SMEM_ALIGN_MD1);
 
-    CH_MSG_INF(md_id, "hlp", "MemStart: 0x%pa, MemSize:0x%08X\n",&md_resv_mem_addr[md_id], md_resv_mem_size[md_id]);
-    CH_MSG_INF(md_id, "hlp", "SMemStart: 0x%pa, SMemSize:0x%08X\n",&md_resv_smem_addr[md_id], md_share_mem_size[md_id]);
 }
 
 
@@ -1671,8 +1628,6 @@ static int __init ccci_helper_init(void)
 
 void ccci_helper_exit(void)
 {
-	printk("[ccci/ctl] (0)ccci_helper_exit\n");
-
 	// free ccci helper sys fs
 	memset((void*)cmd_map_table, 0, sizeof(cmd_map_table));
 
@@ -1784,10 +1739,8 @@ static int __init ccci_helper_init(void)
 	
 	md_power_kthread = kthread_run(internal_md_power_down, NULL, "md_power_off_kthread");
 	if (IS_ERR(md_power_kthread)) {
-		printk("[ccci/ctl] (0)create kthread for power off md fail, only direct call API\n");
 		return internal_md_power_down(NULL);
 	} else {
-		printk("[ccci/ctl] (0)create kthread for power off md ok\n");
 	}
 	
 #endif
diff --git a/drivers/misc/mediatek/mach/mt6580/sf6580_weg_l/leds/mt65xx/cust_leds.c b/drivers/misc/mediatek/mach/mt6580/sf6580_weg_l/leds/mt65xx/cust_leds.c
index ad0732c91..006d258f9 100755
--- a/drivers/misc/mediatek/mach/mt6580/sf6580_weg_l/leds/mt65xx/cust_leds.c
+++ b/drivers/misc/mediatek/mach/mt6580/sf6580_weg_l/leds/mt65xx/cust_leds.c
@@ -134,8 +134,6 @@ unsigned int Cust_SetBacklight(int level, int div)
 	mt_set_gpio_dir(GPIO_SIGNAL_LCM_BACKLIAGHT_PIN, GPIO_DIR_OUT);
 
 
-	printk("Cust_SetBacklight,level=%d\n",level);
-
 	if(level == 0)
 	{
 			mt_set_gpio_out(GPIO_SIGNAL_LCM_BACKLIAGHT_PIN, GPIO_OUT_ZERO);
@@ -156,7 +154,6 @@ unsigned int Cust_SetBacklight(int level, int div)
 #if defined(Z43W5)
 void turn_onoff_charge_led(BOOL On)
 {
-	printk("turn_onoff_charge_led,on=d%\n",On);
 	if( On == 1)
 	{
 		mt_set_gpio_mode(GPIO_INDICATE_LED_PIN, GPIO_INDICATE_LED_PIN_M_GPIO);
@@ -192,8 +189,6 @@ unsigned int Cust_Set_button_led(int level, int div)
 #ifdef GPIO_SIGNAL_LED_RED_PIN 
 unsigned int Cust_SetRedlight(int level, int div)
 {
-	printk("Cust_SetRedlight,level=%d\n",level);
-
 	mt_set_gpio_mode(GPIO_SIGNAL_LED_RED_PIN, 0);
 	mt_set_gpio_dir(GPIO_SIGNAL_LED_RED_PIN, GPIO_DIR_OUT);
 
@@ -209,8 +204,6 @@ unsigned int Cust_SetRedlight(int level, int div)
 #ifdef GPIO_SIGNAL_LED_GREEN_PIN 
 unsigned int Cust_SetGreenlight(int level, int div)
 {
-	printk("Cust_SetRedlight,level=%d\n",level);
-
 	mt_set_gpio_mode(GPIO_SIGNAL_LED_GREEN_PIN, 0);
 	mt_set_gpio_dir(GPIO_SIGNAL_LED_GREEN_PIN, GPIO_DIR_OUT);
 
@@ -226,8 +219,6 @@ unsigned int Cust_SetGreenlight(int level, int div)
 #ifdef GPIO_SIGNAL_LED_BLUE_PIN 
 unsigned int Cust_SetBluelight(int level, int div)
 {
-	printk("Cust_SetRedlight,level=%d\n",level);
-
 	mt_set_gpio_mode(GPIO_SIGNAL_LED_BLUE_PIN, 0);
 	mt_set_gpio_dir(GPIO_SIGNAL_LED_BLUE_PIN, GPIO_DIR_OUT);
 
@@ -246,14 +237,11 @@ unsigned int Cust_SetBluelight(int level, int div)
 
 void gesture_function_open(BOOL on)
 {
-	printk(KERN_ERR"gesture_function_open,on=%d\n",on);
 	if( on == 1)
 	{
-		printk(KERN_ERR"1111111111111111111111111\n");
 		gesture_function_enable =1;
 	}else
 	{
-		printk(KERN_ERR"00000000000000000000000000\n");
 		gesture_function_enable =0;
 	}
 }
@@ -262,31 +250,22 @@ void gesture_function_open(BOOL on)
 extern int ofn_open_1(int enable);
 unsigned int Cust_SetJogBall(int level)
 {
-	printk("Cust_SetJogBall,level=%d\n",level);
 	if(level == 201)
 	{
-		printk("############0#############\n");
 		gesture_function_open(0);
 	}
 	else if(level == 202)
 	{
-		printk("############1#############\n");
 		gesture_function_open(1);
 	}
 	else if(level == 203)
 	{
-		printk("############203#############\n");
 		idle_clock_mode = 0;
 	}
 	else if(level == 204)
 	{
-		printk("############204#############\n");
 		idle_clock_mode = 1;
 	}
-	else
-	{
-		printk("############nothing#############\n");
-	}
 }
 #else
 unsigned int Cust_SetJogBall(int level)
diff --git a/drivers/misc/mediatek/masp/mt6580/module/sec_mod.c b/drivers/misc/mediatek/masp/mt6580/module/sec_mod.c
index e923aa659..d4a9fae58 100644
--- a/drivers/misc/mediatek/masp/mt6580/module/sec_mod.c
+++ b/drivers/misc/mediatek/masp/mt6580/module/sec_mod.c
@@ -203,8 +203,6 @@ static int sec_init(struct platform_device * dev)
     int ret = 0;
     dev_t id;    
 
-    printk( "[%s] sec_init (%d)\n", SEC_DEV_NAME, ret);
-
     hacc_base = of_iomap(dev->dev.of_node, 0);
     if (!hacc_base) {
         printk(KERN_ERR "[%s] HACC register remapping failed\n", SEC_DEV_NAME);
@@ -252,10 +250,6 @@ static int sec_init(struct platform_device * dev)
 
     proc_create("rid", 0, NULL, &sec_proc_rid_fops);
 
-#ifdef MTK_SECURITY_MODULE_LITE
-    printk("[MASP Lite] version '%s%s', enter.\n",BUILD_TIME,BUILD_BRANCH);
-#endif
-
 exit:
     if (ret != 0) 
     {
@@ -279,11 +273,7 @@ static void sec_exit(void)
     unregister_chrdev_region(sec.id, 1);
     memset(&sec, 0, sizeof(sec));
 
-#ifdef MTK_SECURITY_MODULE_LITE    
-    printk("[MASP Lite] version '%s%s', exit.\n",BUILD_TIME,BUILD_BRANCH);
-#else
     sec_core_exit();
-#endif
 }
 
 /**************************************************************************
diff --git a/drivers/misc/mediatek/mem/mtk_memcfg.c b/drivers/misc/mediatek/mem/mtk_memcfg.c
index da51e53ea..7ef70cf88 100644
--- a/drivers/misc/mediatek/mem/mtk_memcfg.c
+++ b/drivers/misc/mediatek/mem/mtk_memcfg.c
@@ -143,8 +143,6 @@ static int do_fragmentation(void *n)
 				cnt--;
 			}
 			spin_unlock(&frag_page_list_lock);
-			pr_alert("round: %lu, fragmentation-trigger free pages %d left\n",
-				 mtk_memcfg_frag_round, cnt);
 		}
 #endif
 		while (1) {
@@ -167,8 +165,6 @@ static int do_fragmentation(void *n)
 			cnt++;
 		}
 		mtk_memcfg_frag_round++;
-		pr_alert("round: %lu, fragmentation-trigger allocate %d pages %d MB\n",
-			 mtk_memcfg_frag_round, cnt, (cnt << PAGE_SHIFT) >> 20);
 		msleep(500);
 	}
 
@@ -185,9 +181,7 @@ mtk_memcfg_frag_write(struct file *file, const char __user *buffer,
 		if (get_user(state, buffer))
 			return -EFAULT;
 		state -= '0';
-		pr_alert("%s state = %d\n", __func__, state);
 		if (state) {
-			pr_alert("activate do_fragmentation kthread\n");
 			p = kthread_create(do_fragmentation, NULL,
 					   "fragmentationd");
 			if (!IS_ERR(p))
@@ -355,11 +349,6 @@ static int dt_scan_memory(unsigned long node, const char *uname, int depth, void
 		if (size == 0)
 			continue;
 
-		MTK_MEMCFG_LOG_AND_PRINTK(KERN_ALERT
-			"[debug]DRAM size (dt) :  0x%llx - 0x%llx  (0x%llx)\n",
-				(unsigned long long)base,
-				(unsigned long long)base + (unsigned long long)size - 1,
-				(unsigned long long)size);
 		kernel_mem_sz += size;
 	}
 
@@ -368,15 +357,6 @@ static int dt_scan_memory(unsigned long node, const char *uname, int depth, void
 			"orig_dram_info", NULL);
 	if (dram_info) {
 		for (i = 0; i < dram_info->rank_num; i++) {
-			MTK_MEMCFG_LOG_AND_PRINTK(KERN_ALERT
-				"[debug]orig_dram rank[%d]   :   "
-				"0x%08llx - 0x%08llx (0x%llx)\n",
-				i,
-				dram_info->rank_info[i].start,
-				dram_info->rank_info[i].start +
-				dram_info->rank_info[i].size - 1,
-				dram_info->rank_info[i].size
-				);
 			phone_dram_sz += dram_info->rank_info[i].size;
 		}
 	}
@@ -386,16 +366,6 @@ static int dt_scan_memory(unsigned long node, const char *uname, int depth, void
 			"mblock_info", NULL);
 	if (mblock_info) {
 		for (i = 0; i < mblock_info->mblock_num; i++) {
-			MTK_MEMCFG_LOG_AND_PRINTK(KERN_ALERT
-				"[debug]mblock[%d][r%d]  :   "
-				"0x%08llx - 0x%08llx (0x%llx)\n",
-				i,
-				mblock_info->mblock[i].rank,
-				mblock_info->mblock[i].start,
-				mblock_info->mblock[i].start +
-				mblock_info->mblock[i].size - 1,
-				mblock_info->mblock[i].size
-				);
 			dram_sz += mblock_info->mblock[i].size;
 		}
 	}
@@ -404,14 +374,6 @@ static int dt_scan_memory(unsigned long node, const char *uname, int depth, void
 	mem_desc = (mem_desc_t *)of_get_flat_dt_prop(node,
 			"lca_reserved_mem", NULL);
 	if (mem_desc && mem_desc->size) {
-		MTK_MEMCFG_LOG_AND_PRINTK(KERN_ALERT
-			"[PHY layout]lca_reserved_mem   :   "
-			"0x%08llx - 0x%08llx (0x%llx)\n",
-			mem_desc->start,
-			mem_desc->start +
-			mem_desc->size - 1,
-			mem_desc->size
-			);
 		dram_sz += mem_desc->size;
 	}
 
@@ -419,14 +381,6 @@ static int dt_scan_memory(unsigned long node, const char *uname, int depth, void
 	mem_desc = (mem_desc_t *)of_get_flat_dt_prop(node,
 			"tee_reserved_mem", NULL);
 	if (mem_desc && mem_desc->size) {
-		MTK_MEMCFG_LOG_AND_PRINTK(KERN_ALERT
-			"[PHY layout]tee_reserved_mem   :   "
-			"0x%08llx - 0x%08llx (0x%llx)\n",
-			mem_desc->start,
-			mem_desc->start +
-			mem_desc->size - 1,
-			mem_desc->size
-			);
 		dram_sz += mem_desc->size;
 	}
 
@@ -448,17 +402,6 @@ static int dt_scan_memory(unsigned long node, const char *uname, int depth, void
 #endif
 
 	/* print memory information */
-	MTK_MEMCFG_LOG_AND_PRINTK(KERN_ALERT
-		"[debug]available DRAM size = 0x%llx\n"
-		"[PHY layout]FB (dt) :  0x%llx - 0x%llx  (0x%llx)\n",
-			(unsigned long long)kernel_mem_sz,
-			(unsigned long long)fb_base,
-			(unsigned long long)fb_base + fb_size - 1,
-			(unsigned long long)fb_size);
-
-	pr_alert("fb base: 0x%llx, size: 0x%llx\n",
-		 (unsigned long long)DISP_GetVRamSizeBoot(NULL),
-		 (unsigned long long)mtkfb_get_fb_base());
 
 	return node;
 }
diff --git a/drivers/misc/mediatek/mem/mtk_meminfo.c b/drivers/misc/mediatek/mem/mtk_meminfo.c
index ba17e0977..db430c7b9 100644
--- a/drivers/misc/mediatek/mem/mtk_meminfo.c
+++ b/drivers/misc/mediatek/mem/mtk_meminfo.c
@@ -67,9 +67,6 @@ static int __init init_get_max_DRAM_size(void)
 {
 	if (!phone_dram_sz && !kernel_mem_sz) {
 		if (of_scan_flat_dt(dt_scan_memory, NULL)) {
-			pr_alert("init_get_max_DRAM_size done. phone_dram_sz: 0x%llx, kernel_mem_sz: 0x%llx\n",
-				 (unsigned long long)phone_dram_sz,
-				 (unsigned long long)kernel_mem_sz);
 		} else {
 			pr_err("init_get_max_DRAM_size fail\n");
 			BUG();
diff --git a/drivers/misc/mediatek/mem/mtk_mrdump_setup.c b/drivers/misc/mediatek/mem/mtk_mrdump_setup.c
index 78ee7b6c4..7b7bc3016 100644
--- a/drivers/misc/mediatek/mem/mtk_mrdump_setup.c
+++ b/drivers/misc/mediatek/mem/mtk_mrdump_setup.c
@@ -15,14 +15,7 @@ reservedmem_of_init_fn free_reserve_memory_mrdump_fn(struct reserved_mem *rmem,
 						unsigned long node,
 						const char *uname)
 {
-	pr_alert("%s, name: %s, uname: %s, base: 0x%llx, size: 0x%llx\n",
-		 __func__, rmem->name, uname,
-		 (unsigned long long)rmem->base,
-		 (unsigned long long)rmem->size);
 	if (memblock_is_region_reserved(rmem->base, rmem->size)) {
-		pr_alert
-	    ("mrdump disabled , return reserve memory base = %x size=%x\n",
-			(unsigned int)rmem->base, (unsigned int)rmem->size);
 
 		if (memblock_free(rmem->base, rmem->size)) {
 			pr_alert
diff --git a/drivers/misc/mediatek/mmc-host/emmc_rpmb.c b/drivers/misc/mediatek/mmc-host/emmc_rpmb.c
index 9b6334180..1ec14d459 100644
--- a/drivers/misc/mediatek/mmc-host/emmc_rpmb.c
+++ b/drivers/misc/mediatek/mmc-host/emmc_rpmb.c
@@ -61,7 +61,7 @@ static dciMessage_t *rpmb_dci = NULL;
 #define DBG_EVT_ERR         (1 << 31) /* Error event */
 #define DBG_EVT_ALL         (0xffffffff)
 
-#define DBG_EVT_MASK        (DBG_EVT_ALL)
+#define DBG_EVT_MASK        (DBG_EVT_NONE)
 
 #define MSG(evt, fmt, args...) \
 do {    \
diff --git a/drivers/misc/mediatek/mmc-host/mt6580/dbg.c b/drivers/misc/mediatek/mmc-host/mt6580/dbg.c
index 8be6e048c..53a43fc39 100644
--- a/drivers/misc/mediatek/mmc-host/mt6580/dbg.c
+++ b/drivers/misc/mediatek/mmc-host/mt6580/dbg.c
@@ -2775,7 +2775,6 @@ int msdc_debug_proc_init(void)
 	prEntry = proc_create("msdc_debug", 0660, NULL, &msdc_proc_fops);
 #endif
 	if (prEntry) {
-		pr_err("[%s]: successfully create /proc/msdc_debug\n", __func__);
 		proc_set_user(prEntry, 0, 1001);
 	} else {
 		pr_err("[%s]: failed to create /proc/msdc_debug\n", __func__);
@@ -2787,7 +2786,6 @@ int msdc_debug_proc_init(void)
 	prEntry = proc_create("msdc_help", 0440, NULL, &msdc_help_fops);
 #endif
 	if (prEntry) {
-		pr_err("[%s]: successfully create /proc/msdc_help\n", __func__);
 	} else {
 		pr_err("[%s]: failed to create /proc/msdc_help\n", __func__);
 	}
@@ -2798,7 +2796,6 @@ int msdc_debug_proc_init(void)
 	prEntry = proc_create("msdc_FT", 0440, NULL, &msdc_FT_fops);
 #endif
 	if (prEntry) {
-		pr_err("[%s]: successfully create /proc/msdc_FT\n", __func__);
 	} else {
 		pr_err("[%s]: failed to create /proc/msdc_FT\n", __func__);
 	}
@@ -2810,7 +2807,6 @@ int msdc_debug_proc_init(void)
 	prEntry = proc_create("msdc_DVT", 0440, NULL, &msdc_DVT_fops);
 #endif
 	if (prEntry) {
-		pr_err("[%s]: successfully create /proc/msdc_DVT\n", __func__);
 	} else {
 		pr_err("[%s]: failed to create /proc/msdc_DVT\n", __func__);
 	}
@@ -2824,7 +2820,6 @@ int msdc_debug_proc_init(void)
 #endif
 	if (tune) {
 		proc_set_user(tune, 0, 1001);
-		pr_err("[%s]: successfully create /proc/msdc_tune\n", __func__);
 	} else {
 		pr_err("[%s]: failed to create /proc/msdc_tune\n", __func__);
 	}
@@ -2834,7 +2829,6 @@ int msdc_debug_proc_init(void)
 	tune_flag = proc_create("msdc_tune_flag", 0440, NULL, &msdc_tune_flag_fops);
 #endif
 	if (tune_flag) {
-		pr_err("[%s]: successfully create /proc/msdc_tune_flag\n", __func__);
 	} else {
 		pr_err("[%s]: failed to create /proc/msdc_tune_flag\n", __func__);
 	}
@@ -2846,7 +2840,6 @@ int msdc_debug_proc_init(void)
 #endif
 	if (voltage_flag) {
 		proc_set_user(voltage_flag, 0, 1001);
-		pr_err("[%s]: successfully create /proc/msdc_voltage_flag\n", __func__);
 	} else {
 		pr_err("[%s]: failed to create /proc/msdc_voltage_flag\n", __func__);
 	}
diff --git a/drivers/misc/mediatek/mmc-host/mt6580/mt_sd_misc.c b/drivers/misc/mediatek/mmc-host/mt6580/mt_sd_misc.c
index 8001ad078..b740f8619 100755
--- a/drivers/misc/mediatek/mmc-host/mt6580/mt_sd_misc.c
+++ b/drivers/misc/mediatek/mmc-host/mt6580/mt_sd_misc.c
@@ -121,7 +121,6 @@ void msdc_check_init_done(void)
     BUG_ON(!host->mmc);
     host->mmc->card_init_wait(host->mmc);
     BUG_ON(!host->mmc->card);
-    printk("[%s]: get the emmc init done signal\n", __func__);
     return;
 }
 
@@ -166,13 +165,8 @@ static int simple_sd_ioctl_multi_rw(struct msdc_ioctl* msdc_ctl)
 
     mmc_claim_host(host_ctl->mmc);
 
-#if DEBUG_MMC_IOCTL
-    printk("user want access %d partition\n",msdc_ctl->partition);
-#endif
-
     ret = mmc_send_ext_csd(host_ctl->mmc->card, l_buf);
     if (ret) {
-        printk("mmc_send_ext_csd error, multi rw\n");
         goto multi_end;
     }
 
@@ -260,7 +254,6 @@ static int simple_sd_ioctl_multi_rw(struct msdc_ioctl* msdc_ctl)
     msdc_cmd.arg = msdc_ctl->address;
 
     if (!mmc_card_blockaddr(host_ctl->mmc->card)){
-        printk("this device use byte address!!\n");
         msdc_cmd.arg <<= 9;
     }
     msdc_cmd.flags = MMC_RSP_SPI_R1 | MMC_RSP_R1 | MMC_CMD_ADTC;
@@ -275,7 +268,6 @@ static int simple_sd_ioctl_multi_rw(struct msdc_ioctl* msdc_ctl)
     msdc_data.sg_len = 1;
 
 #if DEBUG_MMC_IOCTL
-    printk("total size is %d\n",msdc_ctl->total_size);
 #endif
     sg_init_one(&msdc_sg, sg_msdc_multi_buffer, msdc_ctl->total_size);
     mmc_set_data_timeout(&msdc_data, host_ctl->mmc->card);
@@ -377,13 +369,8 @@ static int simple_sd_ioctl_single_rw(struct msdc_ioctl* msdc_ctl)
 
     mmc_claim_host(host_ctl->mmc);
 
-#if DEBUG_MMC_IOCTL
-    printk("user want access %d partition\n",msdc_ctl->partition);
-#endif
-
     ret = mmc_send_ext_csd(host_ctl->mmc->card, l_buf);
     if (ret) {
-        printk("mmc_send_ext_csd error, single rw\n");
         goto single_end;
     }
 #ifdef CONFIG_MTK_EMMC_SUPPORT
@@ -420,9 +407,6 @@ static int simple_sd_ioctl_single_rw(struct msdc_ioctl* msdc_ctl)
         goto single_end;
     }
 
-#if DEBUG_MMC_IOCTL
-    printk("start MSDC_SINGLE_READ_WRITE !!\n");
-#endif
     memset(&msdc_data, 0, sizeof(struct mmc_data));
     memset(&msdc_mrq, 0, sizeof(struct mmc_request));
     memset(&msdc_cmd, 0, sizeof(struct mmc_command));
@@ -450,7 +434,6 @@ static int simple_sd_ioctl_single_rw(struct msdc_ioctl* msdc_ctl)
     msdc_cmd.arg = msdc_ctl->address;
 
     if (!mmc_card_blockaddr(host_ctl->mmc->card)){
-        printk("the device is used byte address!\n");
         msdc_cmd.arg <<= 9;
     }
 
@@ -461,9 +444,6 @@ static int simple_sd_ioctl_single_rw(struct msdc_ioctl* msdc_ctl)
     msdc_data.sg = &msdc_sg;
     msdc_data.sg_len = 1;
 
-#if DEBUG_MMC_IOCTL
-    printk("single block: ueser buf address is 0x%p!\n",msdc_ctl->buffer);
-#endif
     sg_init_one(&msdc_sg, sg_msdc_multi_buffer, msdc_ctl->total_size);
     mmc_set_data_timeout(&msdc_data, host_ctl->mmc->card);
 
@@ -472,7 +452,6 @@ static int simple_sd_ioctl_single_rw(struct msdc_ioctl* msdc_ctl)
     if (msdc_ctl->partition){
         ret = mmc_send_ext_csd(host_ctl->mmc->card,l_buf);
         if (ret) {
-            printk("mmc_send_ext_csd error, single rw\n");
             goto single_end;
         }
 
@@ -541,19 +520,10 @@ static int simple_sd_ioctl_get_cid(struct msdc_ioctl* msdc_ctl)
     BUG_ON(!host_ctl->mmc);
     BUG_ON(!host_ctl->mmc->card);
 
-#if DEBUG_MMC_IOCTL
-    printk("user want the cid in msdc slot%d \n",msdc_ctl->host_num);
-#endif
 
     if (copy_to_user(msdc_ctl->buffer, &host_ctl->mmc->card->raw_cid, 16))
         return -EFAULT;
 
-#if DEBUG_MMC_IOCTL
-    printk("cid:0x%x,0x%x,0x%x,0x%x\n",host_ctl->mmc->card->raw_cid[0],
-            host_ctl->mmc->card->raw_cid[1],
-            host_ctl->mmc->card->raw_cid[2],
-            host_ctl->mmc->card->raw_cid[3]);
-#endif
     return 0;
 
 }
@@ -568,19 +538,9 @@ static int simple_sd_ioctl_get_csd(struct msdc_ioctl* msdc_ctl)
     BUG_ON(!host_ctl->mmc);
     BUG_ON(!host_ctl->mmc->card);
 
-#if DEBUG_MMC_IOCTL
-    printk("user want the csd in msdc slot%d \n",msdc_ctl->host_num);
-#endif
-
     if (copy_to_user(msdc_ctl->buffer, &host_ctl->mmc->card->raw_csd, 16))
         return -EFAULT;
 
-#if DEBUG_MMC_IOCTL
-    printk("csd:0x%x,0x%x,0x%x,0x%x\n",host_ctl->mmc->card->raw_csd[0],
-            host_ctl->mmc->card->raw_csd[1],
-            host_ctl->mmc->card->raw_csd[2],
-            host_ctl->mmc->card->raw_csd[3]);
-#endif
     return 0;
 
 }
@@ -604,9 +564,6 @@ static int simple_sd_ioctl_get_bootpart(struct msdc_ioctl* msdc_ctl)
 
     mmc_claim_host(host_ctl->mmc);
 
-#if DEBUG_MMC_IOCTL
-    printk("user want get boot partition info in msdc slot%d \n", msdc_ctl->host_num);
-#endif
     ret = mmc_send_ext_csd(host_ctl->mmc->card, l_buf);
     if (ret) {
         printk("mmc_send_ext_csd error, get boot part\n");
@@ -614,10 +571,6 @@ static int simple_sd_ioctl_get_bootpart(struct msdc_ioctl* msdc_ctl)
     }
     bootpart = (l_buf[EXT_CSD_PART_CFG] & 0x38) >> 3;
 
-#if DEBUG_MMC_IOCTL
-    printk("bootpart Byte[EXT_CSD_PART_CFG] =%x, booten=%x \n", l_buf[EXT_CSD_PART_CFG],bootpart);
-#endif
-
     if (MSDC_CARD_DUNM_FUNC != msdc_ctl->opcode) {
         if (copy_to_user(msdc_ctl->buffer, &bootpart, 1)) {
             ret = -EFAULT;
@@ -664,9 +617,6 @@ static int simple_sd_ioctl_set_bootpart(struct msdc_ioctl* msdc_ctl)
 
     mmc_claim_host(host_ctl->mmc);
 
-#if DEBUG_MMC_IOCTL
-    printk("user want set boot partition in msdc slot%d \n",msdc_ctl->host_num);
-#endif
     ret = mmc_send_ext_csd(host_ctl->mmc->card, l_buf);
     if (ret) {
         printk("mmc_send_ext_csd error, set boot partition \n");
@@ -688,7 +638,6 @@ static int simple_sd_ioctl_set_bootpart(struct msdc_ioctl* msdc_ctl)
         /* active boot partition */
         l_buf[EXT_CSD_PART_CFG] &= ~0x38;
         l_buf[EXT_CSD_PART_CFG] |= (bootpart << 3);
-        printk("mmc_switch set %x \n", l_buf[EXT_CSD_PART_CFG]);
         ret = mmc_switch(host_ctl->mmc->card, 0, EXT_CSD_PART_CFG, l_buf[EXT_CSD_PART_CFG], 1000);
         if (ret) {
             printk("mmc_switch error, set boot partition \n");
@@ -718,9 +667,6 @@ static int simple_sd_ioctl_get_partition_size(struct msdc_ioctl* msdc_ctl)
 
     mmc_claim_host(host_ctl->mmc);
 
-#if DEBUG_MMC_IOCTL
-    printk("user want get size of partition=%d\n",msdc_ctl->partition);
-#endif
     ret = mmc_send_ext_csd(host_ctl->mmc->card, l_buf);
     if (ret) {
         printk("mmc_send_ext_csd error, get boot part\n");
@@ -743,13 +689,9 @@ static int simple_sd_ioctl_get_partition_size(struct msdc_ioctl* msdc_ctl)
                 partitionsize  = (u64)(host_ctl->mmc->card->csd.capacity << (host_ctl->mmc->card->csd.read_blkbits - 9)) * 512 ;
             break;
         default:
-            printk("not support partition =%d \n", msdc_ctl->partition);
             partitionsize = 0;
             break;
     }
-#if DEBUG_MMC_IOCTL
-    printk("bootpart partitionsize =%llx \n", partitionsize);
-#endif
     if (copy_to_user(msdc_ctl->buffer, &partitionsize, 8)) {
         ret = -EFAULT;
     }
@@ -779,23 +721,10 @@ static int simple_sd_ioctl_get_excsd(struct msdc_ioctl* msdc_ctl)
 
     mmc_claim_host(host_ctl->mmc);
 
-#if DEBUG_MMC_IOCTL
-    printk("user want the extend csd in msdc slot%d \n",msdc_ctl->host_num);
-#endif
     mmc_send_ext_csd(host_ctl->mmc->card,l_buf);
     if (copy_to_user(msdc_ctl->buffer, l_buf, 512))
         return -EFAULT;
 
-#if DEBUG_MMC_IOCTL
-    for (i = 0; i < 512; i++)
-    {
-        printk("%x", l_buf[i]);
-        if (0 == ((i + 1) % 16)){
-            printk("\n");
-        }
-    }
-#endif
-
     if (copy_to_user(msdc_ctl->buffer, l_buf, 512))
         return -EFAULT;
 
@@ -847,13 +776,6 @@ static int simple_sd_ioctl_set_driving(struct msdc_ioctl* msdc_ctl)
     base = mtk_msdc_host[msdc_ctl->host_num]->base;
 #ifndef FPGA_PLATFORM
    enable_clock(msdc_cg_clk_id[msdc_ctl->host_num], "SD");
-#if DEBUG_MMC_IOCTL
-    printk("set: clk driving is 0x%x\n", msdc_ctl->clk_pu_driving);
-    printk("set: cmd driving is 0x%x\n", msdc_ctl->cmd_pu_driving);
-    printk("set: dat driving is 0x%x\n", msdc_ctl->dat_pu_driving);
-    printk("set: rst driving is 0x%x\n", msdc_ctl->rst_pu_driving);
-    printk("set: ds driving is 0x%x\n", msdc_ctl->ds_pu_driving);
-#endif
     host = mtk_msdc_host[msdc_ctl->host_num];
     host->hw->clk_drv = msdc_ctl->clk_pu_driving;
     host->hw->cmd_drv = msdc_ctl->cmd_pu_driving;
@@ -912,13 +834,6 @@ static int simple_sd_ioctl_get_driving(struct msdc_ioctl* msdc_ctl)
 #ifndef FPGA_PLATFORM
     enable_clock(msdc_cg_clk_id[msdc_ctl->host_num], "SD");
     msdc_get_driving(mtk_msdc_host[msdc_ctl->host_num], msdc_ctl);
-#if DEBUG_MMC_IOCTL
-    printk("read: clk driving is 0x%x\n", msdc_ctl->clk_pu_driving);
-    printk("read: cmd driving is 0x%x\n", msdc_ctl->cmd_pu_driving);
-    printk("read: dat driving is 0x%x\n", msdc_ctl->dat_pu_driving);
-    printk("read: rst driving is 0x%x\n", msdc_ctl->rst_pu_driving);
-    printk("read: ds driving is 0x%x\n", msdc_ctl->ds_pu_driving);
-#endif
 #endif
 
     return 0;
@@ -966,7 +881,6 @@ static int simple_sd_ioctl_sd30_mode_switch(struct msdc_ioctl* msdc_ctl)
 #else
             msdc_host_mode2[id] &= (~MMC_CAP2_HS200_1_8V_SDR);
 #endif
-            printk("[****SD_Debug****]host will support Highspeed\n");
             break;
         case UHS_SDR12:
             msdc_host_mode[id] |= MMC_CAP_UHS_SDR12;
@@ -976,7 +890,6 @@ static int simple_sd_ioctl_sd30_mode_switch(struct msdc_ioctl* msdc_ctl)
 #else
             msdc_host_mode2[id] &= (~MMC_CAP2_HS200_1_8V_SDR);
 #endif
-            printk("[****SD_Debug****]host will support UHS-SDR12\n");
             break;
         case UHS_SDR25:
             msdc_host_mode[id] |= MMC_CAP_UHS_SDR12|MMC_CAP_UHS_SDR25;
@@ -986,7 +899,6 @@ static int simple_sd_ioctl_sd30_mode_switch(struct msdc_ioctl* msdc_ctl)
 #else
             msdc_host_mode2[id] &= (~MMC_CAP2_HS200_1_8V_SDR);
 #endif
-            printk("[****SD_Debug****]host will support UHS-SDR25\n");
             break;
         case UHS_SDR50:
             msdc_host_mode[id] |= MMC_CAP_UHS_SDR12|MMC_CAP_UHS_SDR25|MMC_CAP_UHS_SDR50;
@@ -996,7 +908,6 @@ static int simple_sd_ioctl_sd30_mode_switch(struct msdc_ioctl* msdc_ctl)
 #else
             msdc_host_mode2[id] &= (~MMC_CAP2_HS200_1_8V_SDR);
 #endif
-            printk("[****SD_Debug****]host will support UHS-SDR50\n");
             break;
         case UHS_SDR104:
             msdc_host_mode[id] |= MMC_CAP_UHS_SDR12|MMC_CAP_UHS_SDR25|MMC_CAP_UHS_SDR50|MMC_CAP_UHS_DDR50|MMC_CAP_1_8V_DDR|MMC_CAP_UHS_SDR104;
@@ -1004,7 +915,6 @@ static int simple_sd_ioctl_sd30_mode_switch(struct msdc_ioctl* msdc_ctl)
 #if defined(MSDC0_EMMC50_SUPPORT)
             msdc_host_mode2[id] &= (~MMC_CAP2_HS400_1_8V_DDR);
 #endif
-            printk("[****SD_Debug****]host will support UHS-SDR104\n");
             break;
         case UHS_DDR50:
             msdc_host_mode[id] |= MMC_CAP_UHS_SDR12|MMC_CAP_UHS_SDR25|MMC_CAP_UHS_DDR50|MMC_CAP_1_8V_DDR;
@@ -1014,13 +924,11 @@ static int simple_sd_ioctl_sd30_mode_switch(struct msdc_ioctl* msdc_ctl)
 #else
             msdc_host_mode2[id] &= (~MMC_CAP2_HS200_1_8V_SDR);
 #endif
-            printk("[****SD_Debug****]host will support UHS-DDR50\n");
             break;
 #if defined(MSDC0_EMMC50_SUPPORT)
         case 6: //EMMC_HS400:
             msdc_host_mode[id] |= MMC_CAP_UHS_SDR12|MMC_CAP_UHS_SDR25|MMC_CAP_UHS_SDR50|MMC_CAP_UHS_DDR50|MMC_CAP_1_8V_DDR|MMC_CAP_UHS_SDR104;
             msdc_host_mode2[id] |= MMC_CAP2_HS200_1_8V_SDR | MMC_CAP2_HS400_1_8V_DDR;
-            printk("[****SD_Debug****]host will support EMMC_HS400\n");
             break;
 #endif
         default             :
@@ -1028,26 +936,21 @@ static int simple_sd_ioctl_sd30_mode_switch(struct msdc_ioctl* msdc_ctl)
             break;
     }
 
-        printk(KERN_ERR "\n [%s]: msdc%d, line:%d, msdc_host_mode2=%d\n", __func__, id, __LINE__, msdc_host_mode2[id]);
     switch(msdc_ctl->sd30_drive){
         case DRIVER_TYPE_A :
             msdc_host_mode[id] |= MMC_CAP_DRIVER_TYPE_A;
             msdc_host_mode[id] &= (~MMC_CAP_DRIVER_TYPE_C)&(~MMC_CAP_DRIVER_TYPE_D);
-            printk("[****SD_Debug****]host will support DRIVING TYPE A\n");
             break;
         case DRIVER_TYPE_B :
             msdc_host_mode[id] &= (~MMC_CAP_DRIVER_TYPE_A)&(~MMC_CAP_DRIVER_TYPE_C)&(~MMC_CAP_DRIVER_TYPE_D);
-            printk("[****SD_Debug****]host will support DRIVING TYPE B\n");
             break;
         case DRIVER_TYPE_C :
             msdc_host_mode[id] |= MMC_CAP_DRIVER_TYPE_C;
             msdc_host_mode[id] &= (~MMC_CAP_DRIVER_TYPE_A)&(~MMC_CAP_DRIVER_TYPE_D);
-            printk("[****SD_Debug****]host will support DRIVING TYPE C\n");
             break;
         case DRIVER_TYPE_D :
             msdc_host_mode[id] |= MMC_CAP_DRIVER_TYPE_D;
             msdc_host_mode[id] &= (~MMC_CAP_DRIVER_TYPE_A)&(~MMC_CAP_DRIVER_TYPE_C);
-            printk("[****SD_Debug****]host will support DRIVING TYPE D\n");
             break;
         default:
             printk("[****SD_Debug****]invalid sd30_drive:%d\n", msdc_ctl->sd30_drive);
@@ -1214,9 +1117,6 @@ static int simple_mmc_get_disk_info(struct mbr_part_info* mpi, unsigned char* na
      * and 64bit address calculate */
     disk_part_iter_init(&piter, disk, 0);
     while ((part = disk_part_iter_next(&piter))){
-#if DEBUG_MMC_IOCTL
-        printk("part_name = %s    name = %s\n", part->info->volname, name);
-#endif
         if (!strncmp(part->info->volname, name, PARTITION_NAME_LENGTH)){
             mpi->start_sector = part->start_sect;
             mpi->nr_sects = part->nr_sects;
@@ -1265,9 +1165,6 @@ static int simple_mmc_get_disk_info(struct mbr_part_info* mpi, unsigned char* na
     while ((part = disk_part_iter_next(&piter))){
         for (i = 0; i < PART_NUM; i++) {
             if (PartInfo[i].partition_idx != 0 && PartInfo[i].partition_idx == part->partno) {
-#if DEBUG_MMC_IOCTL
-                printk("part_name = %s    name = %s\n", PartInfo[i].name, name);
-#endif
                 if (!strncmp(PartInfo[i].name, name, PARTITION_NAME_LENGTH)){
                     mpi->start_sector = part->start_sect;
                     mpi->nr_sects = part->nr_sects;
@@ -1321,13 +1218,8 @@ static int simple_mmc_erase_func(unsigned int start, unsigned int size)
         goto end;
     }
 
-    printk("[%s]: start=0x%x, size=%d, arg=0x%x, can_trim=(0x%x),EXT_CSD_SEC_GB_CL_EN=0x%lx\n",
-                    __func__, start, size, arg, host->mmc->card->ext_csd.sec_feature_support, EXT_CSD_SEC_GB_CL_EN);
     mmc_erase(host->mmc->card, start, size, arg);
 
-#if DEBUG_MMC_IOCTL
-    printk("[%s]: erase done....arg=0x%x\n", __func__, arg);
-#endif
 end:
     mmc_release_host(host->mmc);
 
@@ -1385,10 +1277,6 @@ static int simple_sd_ioctl_erase_selected_area(struct msdc_ioctl* msdc_ctl)
 	else
 		arg = MMC_ERASE_ARG;
 
-#if DEBUG_MMC_IOCTL
-    printk("Erase range %x~%x\n",from, from+nr-1);
-#endif
-
     if ( mmc_card_mmc(card) ) {
     	if (card->quirks & MMC_QUIRK_INAND_CMD38) {
     		err = mmc_switch(card, EXT_CSD_CMD_SET_NORMAL,
@@ -1430,7 +1318,6 @@ static int simple_mmc_erase_partition(unsigned char* name)
 
         if (l_ret == 0){
             /* do erase */
-            printk("erase %s start sector: 0x%x size: 0x%x \n", mbr_part.part_name, mbr_part.start_sector, mbr_part.nr_sects);
             simple_mmc_erase_func(mbr_part.start_sector, mbr_part.nr_sects);
         }
     }
@@ -1502,7 +1389,6 @@ static long simple_sd_ioctl(struct file *file, unsigned int cmd, unsigned long a
             msdc_ctl.result = simple_sd_ioctl_get_excsd(&msdc_ctl);
             break;
         case MSDC_DRIVING_SETTING:
-            printk("in ioctl to change driving\n");
             if (1 == msdc_ctl.iswrite){
                 msdc_ctl.result = simple_sd_ioctl_set_driving(&msdc_ctl);
             } else {
@@ -1559,8 +1445,6 @@ static int simple_sd_probe(struct platform_device *pdev)
 {
     int ret = 0;
 
-    printk("in misc_sd_probe function\n");
-
     return ret;
 }
 
@@ -1592,7 +1476,6 @@ static int __init simple_sd_init(void)
         printk(KERN_ERR DRV_NAME_MISC ": Can't register driver\n");
         return ret;
     }
-    printk(KERN_INFO DRV_NAME_MISC ": MediaTek simple SD/MMC Card Driver\n");
 
     /*msdc0 is for emmc only, just for emmc*/
     //ret = misc_register(&simple_msdc_em_dev[host->id]);
diff --git a/drivers/misc/mediatek/mmc-host/mt6580/sd.c b/drivers/misc/mediatek/mmc-host/mt6580/sd.c
index 103b4b028..e547ae637 100755
--- a/drivers/misc/mediatek/mmc-host/mt6580/sd.c
+++ b/drivers/misc/mediatek/mmc-host/mt6580/sd.c
@@ -287,7 +287,6 @@ bool hwPowerOn_fpga(void){
     sdr_write16(PWR_GPIO, (l_val | PWR_MASK_VOL_33 | PWR_MASK_EN)); // | PWR_GPIO_L4_DIR));
 
     l_val = sdr_read16(PWR_GPIO);
-    printk("[%s]: pwr gpio = 0x%x\n", __func__, l_val);
     return true;
 }
 EXPORT_SYMBOL(hwPowerOn_fpga);
@@ -301,7 +300,6 @@ bool hwPowerSwitch_fpga(void){
     sdr_write16(PWR_GPIO, (l_val | PWR_MASK_VOL_18));
 
     l_val = sdr_read16(PWR_GPIO);
-    printk("[%s]: pwr gpio = 0x%x\n", __func__, l_val);
     return true;
 }
 EXPORT_SYMBOL(hwPowerSwitch_fpga);
@@ -313,7 +311,6 @@ bool hwPowerDown_fpga(void){
     sdr_write8(PWR_GPIO, (l_val & PWR_MASK_VOL_33_MASK & PWR_MASK_EN_MASK));
 
     l_val = sdr_read16(PWR_GPIO);
-    printk("[%s]: pwr gpio = 0x%x\n", __func__, l_val);
     return true;
 }
 EXPORT_SYMBOL(hwPowerDown_fpga);
@@ -579,15 +576,12 @@ static void msdc_dump_ldo_sts(struct msdc_host *host)
         case 0:
             pwrap_read( 0x0508, &ldo_en );
             pwrap_read( 0x052E, &ldo_vol );
-            INIT_MSG(" VEMC_EN[0x0508][bit14=%s]=0x%x, VEMC_VOL[0x052E][bit7=%s]=0x%x\n", (((ldo_en >> 14) & 0x01) ? "enable" : "disable"), ldo_en, (((ldo_vol >> 7) & 0x01) ? "3.3V" : "3.0V"), ldo_vol);
             break;
         case 1:
             pwrap_read( 0x0504, &ldo_en );
             pwrap_read( 0x052A, &ldo_vol );
-            INIT_MSG(" VMC_EN[0x0504][bit12=%s]=0x%x, VMC_VOL[0x052A][bit4=%s]=0x%x\n", (((ldo_en >> 12) & 0x01) ? "enable" : "disable"), ldo_en, (((ldo_vol >> 4) & 0x01) ? "3.3V" : "1.8V"), ldo_vol);
             pwrap_read( 0x0506, &ldo_en );
             pwrap_read( 0x052C, &ldo_vol );
-            INIT_MSG(" VMCH_EN[0x0506][bit14=%s]=0x%x, VMCH_VOL[0x052C][bit7=%s]=0x%x\n", (((ldo_en >> 14) & 0x01) ? "enable" : "disable"), ldo_en, (((ldo_vol >> 7) & 0x01) ? "3.3V" : "3.0V"), ldo_vol);
             break;
         default:
             break;
@@ -659,11 +653,10 @@ void msdc_dump_ioconfig_padctl(struct msdc_host *host)
 
     for(i=0; i<MSDC_IOCONFIG_ITEMS; i++) {
         sdr_get_field(base+msdc_ioconfg_reg_offsets[host->id][i], msdc_ioconfg_reg_masks[host->id][i], val);
-        printk(KERN_ERR "%s=%x\n", msdc_ioconfig_names[i], val);
     }
 }
 
-unsigned int msdc_dump_reg_level=2;
+unsigned int msdc_dump_reg_level=0;
 void msdc_dump_info(u32 id)
 {
     struct msdc_host *host = mtk_msdc_host[id];
@@ -672,14 +665,12 @@ void msdc_dump_info(u32 id)
     if ( msdc_dump_reg_level==0 ) return;
 
     if(host == NULL) {
-        printk("msdc host<%d> null\r\n", id);
         return;
     }
     base = host->base;
 
     // 1: dump msdc hw register
     msdc_dump_register(host);
-    INIT_MSG("latest_INT_status<0x%.8x>",latest_int_status[id]);
 
     if ( msdc_dump_reg_level==1 ) return;
 
@@ -758,7 +749,6 @@ struct dma_addr* msdc_get_dma_address(int host_id)
     //spin_lock(&host->lock);
     sdr_get_field(MSDC_DMA_CTRL, MSDC_DMA_CTRL_MODE, mode);
     if(mode == 1){
-        printk(KERN_CRIT "Desc.DMA\n");
         bd = host->dma.bd;
         i = 0;
         while(i < MAX_BD_PER_GPD){
@@ -775,7 +765,6 @@ struct dma_addr* msdc_get_dma_address(int host_id)
         }
     }
     else if(mode == 0){
-        printk(KERN_CRIT "Basic DMA\n");
         msdc_latest_dma_address[i].start_address = sdr_read32(MSDC_DMA_SA);
     msdc_latest_dma_address[i].size = sdr_read32(MSDC_DMA_LEN);
         msdc_latest_dma_address[i].end = 1;
@@ -903,7 +892,6 @@ static void msdc_top_reset(struct msdc_host *host){
         }
     }
 
-    printk(KERN_ERR "[%s]: msdc%d, top reset\n", __func__, host->id);
     sdr_set_field(0xf0003000, (0x1 << 19), 0x1);
     mdelay(1);
     sdr_set_field(0xf0003000, (0x1 << 19), 0x0);
@@ -1162,7 +1150,6 @@ bool msdc_hwPowerOn(MSDC_POWER_DOMAIN powerId, int powerVolt, char *mode_name)
     /* New API voltage use micro V */
     regulator_set_voltage(reg, powerVolt, powerVolt);
     regulator_enable(reg);
-    printk(KERN_WARNING "msdc_hwPowerOn:%d: volt:%d name:%s", powerId, powerVolt, mode_name);
 
     return TRUE;
 }
@@ -1187,7 +1174,6 @@ bool msdc_hwPowerDown(MSDC_POWER_DOMAIN powerId, char *mode_name)
 
     /* New API voltage use micro V */
     regulator_disable(reg);
-    printk(KERN_WARNING "msdc_hwPowerOff:%d: name:%s", powerId, mode_name);
 
     return TRUE;
 }
@@ -1197,24 +1183,19 @@ static u32 msdc_ldo_power(u32 on, MSDC_POWER_DOMAIN powerId, u32 powerVolt, u32
 {
     if (on) { // want to power on
         if (*status == 0) {  // can power on
-            printk(KERN_WARNING "msdc LDO<%d> power on<%d>\n", powerId, powerVolt);
             msdc_hwPowerOn(powerId, powerVolt, "msdc");
             *status = powerVolt;
         } else if (*status == powerVolt) {
-            printk(KERN_ERR "msdc LDO<%d><%d> power on again!\n", powerId, powerVolt);
         } else { // for sd3.0 later
-            printk(KERN_WARNING "msdc LDO<%d> change<%d> to <%d>\n", powerId, *status, powerVolt);
             msdc_hwPowerDown(powerId, "msdc");
             msdc_hwPowerOn(powerId, powerVolt, "msdc");
             *status = powerVolt;
         }
     } else {  // want to power off
         if (*status != 0) {  // has been powerred on
-            printk(KERN_WARNING "msdc LDO<%d> power off\n", powerId);
             msdc_hwPowerDown(powerId, "msdc");
             *status = 0;
         } else {
-            printk(KERN_ERR "LDO<%d> not power on\n", powerId);
         }
     }
 
@@ -1705,7 +1686,6 @@ static void msdc_emmc_power(struct msdc_host *host,u32 on)
 #ifdef MTK_MSDC_BRINGUP_DEBUG
     pwrap_read( 0x0508, &ldo_en );
     pwrap_read( 0x052E, &ldo_vol );
-    INIT_MSG(" VEMC_EN[0x0508][bit14=%s]=0x%x, VEMC_VOL[0x052E][bit7=%s]=0x%x\n", (((ldo_en >> 14) & 0x01) ? "enable" : "disable"), ldo_en, (((ldo_vol >> 7) & 0x01) ? "3.3V" : "3.0V"), ldo_vol);
 #endif
 
 }
@@ -1741,10 +1721,8 @@ static void msdc_sd_power(struct msdc_host *host,u32 on)
 #ifdef MTK_MSDC_BRINGUP_DEBUG
     pwrap_read( 0x0504, &ldo_en );
     pwrap_read( 0x052A, &ldo_vol );
-    INIT_MSG(" VMC_EN[0x0504][bit12=%s]=0x%x, VMC_VOL[0x052A][bit4=%s]=0x%x\n", (((ldo_en >> 12) & 0x01) ? "enable" : "disable"), ldo_en, (((ldo_vol >> 4) & 0x01) ? "3.3V" : "1.8V"), ldo_vol);
     pwrap_read( 0x0506, &ldo_en );
     pwrap_read( 0x052C, &ldo_vol );
-    INIT_MSG(" VMCH_EN[0x0506][bit14=%s]=0x%x, VMCH_VOL[0x052C][bit7=%s]=0x%x\n", (((ldo_en >> 14) & 0x01) ? "enable" : "disable"), ldo_en, (((ldo_vol >> 7) & 0x01) ? "3.3V" : "3.0V"), ldo_vol);
 #endif
 }
 
@@ -1841,27 +1819,15 @@ static void msdc_reset_tmo_tune_counter(struct msdc_host *host,TUNE_COUNTER inde
         switch (index)
         {
             case cmd_counter:
-                if(host->rwcmd_time_tune != 0)
-                    ERR_MSG("TMO TUNE CMD Times(%d)", host->rwcmd_time_tune);
                 host->rwcmd_time_tune = 0;
                 break;
             case read_counter  :
-                if(host->read_time_tune != 0)
-                    ERR_MSG("TMO TUNE READ Times(%d)", host->read_time_tune);
                 host->read_time_tune = 0;
                 break;
             case write_counter :
-                if(host->write_time_tune != 0)
-                    ERR_MSG("TMO TUNE WRITE Times(%d)", host->write_time_tune);
                 host->write_time_tune = 0;
                 break;
             case all_counter   :
-                if(host->rwcmd_time_tune != 0)
-                    ERR_MSG("TMO TUNE CMD Times(%d)", host->rwcmd_time_tune);
-                if(host->read_time_tune != 0)
-                    ERR_MSG("TMO TUNE READ Times(%d)", host->read_time_tune);
-                if(host->write_time_tune != 0)
-                    ERR_MSG("TMO TUNE WRITE Times(%d)", host->write_time_tune);
                 host->rwcmd_time_tune = 0;
                 host->read_time_tune = 0;
                 host->write_time_tune = 0;
@@ -1881,33 +1847,19 @@ static void msdc_reset_crc_tune_counter(struct msdc_host *host,TUNE_COUNTER inde
         switch (index)
         {
             case cmd_counter:
-                if(host->t_counter.time_cmd != 0)
-                    ERR_MSG("CRC TUNE CMD Times(%d)", host->t_counter.time_cmd);
                 host->t_counter.time_cmd = 0;
                 break;
             case read_counter  :
-                if(host->t_counter.time_read != 0)
-                    ERR_MSG("CRC TUNE READ Times(%d)", host->t_counter.time_read);
                 host->t_counter.time_read = 0;
                 break;
             case write_counter :
-                if(host->t_counter.time_write != 0)
-                    ERR_MSG("CRC TUNE WRITE Times(%d)", host->t_counter.time_write);
                 host->t_counter.time_write = 0;
                 break;
             case all_counter   :
-                if(host->t_counter.time_cmd != 0)
-                    ERR_MSG("CRC TUNE CMD Times(%d)", host->t_counter.time_cmd);
-                if(host->t_counter.time_read != 0)
-                    ERR_MSG("CRC TUNE READ Times(%d)", host->t_counter.time_read);
-                if(host->t_counter.time_write != 0)
-                    ERR_MSG("CRC TUNE WRITE Times(%d)", host->t_counter.time_write);
                 host->t_counter.time_cmd = 0;
                 host->t_counter.time_read = 0;
                 host->t_counter.time_write = 0;
               #if defined(MSDC0_EMMC50_SUPPORT)
-                if(host->t_counter.time_hs400 != 0)
-                    ERR_MSG("TUNE HS400 Times(%d)", host->t_counter.time_hs400);
                 host->t_counter.time_hs400 = 0;
               #endif
                 break;
@@ -1947,7 +1899,6 @@ static void msdc_set_bad_card_and_remove(struct msdc_host *host)
             tasklet_hi_schedule(&host->card_tasklet);
         else
             mmc_remove_card(host->mmc->card);
-        ERR_MSG("Do remove the bad card, block_bad_card=%d, card_inserted=%d", host->block_bad_card, host->card_inserted);
     }
 }
 
@@ -1955,8 +1906,6 @@ void msdc_sd_power_off(void)
 {
 	struct msdc_host *host = mtk_msdc_host[1];
 
-	pr_err("Power Off, SD card\n");
-
 	/* power must be on */
 	g_msdc1_io = 3300000;
 	g_msdc1_flash = 3300000;
@@ -2213,7 +2162,6 @@ static void msdc_tasklet_card(unsigned long arg)
             mmc_card_set_removed(host->mmc->card);
         ERR_MSG("remove bad SD card");
     } else {
-        ERR_MSG("card found<%s>", inserted ? "inserted" : "removed");
     }
 
     host->card_inserted = inserted;
@@ -2239,11 +2187,9 @@ static void msdc_tasklet_card(unsigned long arg)
         msdc_reset_tmo_tune_counter(host, all_counter);
     }
 
-    ERR_MSG("host->suspend(%d)",host->suspend);
     if (!host->suspend && host->sd_cd_insert_work) {
         mmc_detect_change(host->mmc, msecs_to_jiffies(200));
     }
-    ERR_MSG("insert_workqueue(%d)",host->sd_cd_insert_work);
 }
 
 #ifdef CONFIG_SDIOAUTOK_SUPPORT
@@ -2266,7 +2212,6 @@ static int ot_thread_func(void *data)
 
     if(atomic_read(&host->ot_work.ot_disable))
 	{
-		printk("[SDIO_OnlineTuning][%s] online tuning is disabled\n", __func__);
 		if(chg_volt)
 		{
 			host->ot_work.chg_volt = 0;
@@ -2280,7 +2225,6 @@ static int ot_thread_func(void *data)
 
 	if(atomic_read(&host->ot_work.autok_done) == 0)
 	{
-		printk("[SDIO_OnlineTuning][%s] auto-K haven't done\n", __func__);
 		if(chg_volt)
 		{
 			host->ot_work.chg_volt = 0;
@@ -2294,7 +2238,6 @@ static int ot_thread_func(void *data)
 
     if(host->mmc->card == NULL)
     {
-        printk("[SDIO_OnlineTuning][%s] sdio card is not ready\n", __func__);
 		if(chg_volt)
 		{
 		    host->ot_work.chg_volt = 0;
@@ -2307,7 +2250,6 @@ static int ot_thread_func(void *data)
 
     if(host->hw->host_function != MSDC_SDIO)
     {
-        printk("[SDIO_OnlineTuning][%s] Non SDIO device enter msdc_online_tuning!!!! \n", __func__);
 		if(chg_volt)
 		{
 		    host->ot_work.chg_volt = 0;
@@ -2320,7 +2262,6 @@ static int ot_thread_func(void *data)
 
     if(host->suspend)
     {
-        printk("[SDIO_OnlineTuning][%s] MSDC%d Suspended!!!! \n", __func__, host->id);
 		if(chg_volt)
 		{
 			host->ot_work.chg_volt = 0;
@@ -2340,8 +2281,6 @@ static int ot_thread_func(void *data)
 
         cur_temperature = mtk_thermal_get_temp(MTK_THERMAL_SENSOR_CPU);
 
-        printk("[SDIO_OnlineTuning][%s] cur_temperature = %d, host->pre_temper = %d\n", __func__, cur_temperature, host->pre_temper);
-
         if((cur_temperature != -127000) && (host->pre_temper != -127000) && (abs(cur_temperature-host->pre_temper) > OT_TEMPDIFF_BOUNDRY)) {
             if((err = msdc_online_tuning(host, 1, 0x00B0)) != 0) {
                 //printk("[SDIO_OnlineTuning][%s] msdc_online_tuning fail, err = %d\n", __func__, err);
@@ -2352,11 +2291,9 @@ static int ot_thread_func(void *data)
     else
 #endif // MTK_SDIO30_DETECT_THERMAL
     {
-        printk("[SDIO_OnlineTuning][%s] change volt\n", __func__);
         if((err = msdc_online_tuning(host, 1, 0x00B0)) != 0) {
             //printk("[SDIO_OnlineTuning][%s] msdc_online_tuning fail, err = %d\n", __func__, err);
         }
-        printk("[SDIO_OnlineTuning][%s] onine tuning done (change volt)\n", __func__);
         return 0;
     }
 
@@ -2375,7 +2312,6 @@ static void start_online_tuning(unsigned long data)
 
     task = kthread_run(&ot_thread_func,(void *)(&host->ot_work),"online tuning");
     if (IS_ERR(task)) {
-        printk("[%s][SDIO_TEST_MODE] create thread fail, do online tuning directly\n", __func__);
         ot_thread_func((void *)(&host->ot_work));
     }
 }
@@ -2400,8 +2336,6 @@ static void msdc_select_clksrc(struct msdc_host* host, int clksrc)
     }
 #endif
 
-    printk(KERN_ERR "[%s]: msdc%d change clk_src from %dKHz to %d:%dKHz\n", __func__, host->id, (host->hclk/1000), clksrc, (hclks[clksrc]/1000));
-
 #ifndef FPGA_PLATFORM
     sprintf(name, "MSDC%d", host->id);
 
@@ -2458,7 +2392,6 @@ static void msdc_set_mclk(struct msdc_host *host, unsigned int state, u32 hz)
 #endif
 
     if (!hz) { // set mmc system clock to 0
-        printk(KERN_ERR "msdc%d -> set mclk to 0",host->id);
         if (is_card_sdio(host) || (host->hw->flags & MSDC_SDIO_IRQ)) {
             host->saved_para.hz = hz;
 #ifdef SDIO_ERROR_BYPASS
@@ -2474,7 +2407,6 @@ static void msdc_set_mclk(struct msdc_host *host, unsigned int state, u32 hz)
         hz = 50*1000*1000;
         msdc_sdio_set_long_timing_delay_by_freq(host, hz);
     }
-    printk("[%s] hz = %d\n", __func__, hz);
 
     msdc_irq_save(flags);
 
@@ -2492,16 +2424,12 @@ static void msdc_set_mclk(struct msdc_host *host, unsigned int state, u32 hz)
         if (hz > 52000000) {
             /* Change clock source to 187Mhz for HS200 */
             if (clksrc != MSDC0_CLKSRC_187MHZ) {
-                printk("[SD%d] hz=(%dkHz), change clock source form (%d) to (%d)\n",
-                    host->id, hz/1000, clksrc, MSDC0_CLKSRC_187MHZ);
                 clksrc = MSDC0_CLKSRC_187MHZ;
                 hclk = hclks[clksrc];
             }
         } else {
             /* Change clock source to 208Mhz form HS200 to other mode */
             if (clksrc != MSDC0_CLKSRC_208MHZ) {
-                printk("[SD%d] hz=(%dkHz), change clock source form (%d) to (%d)\n",
-                    host->id, hz/1000, clksrc, MSDC0_CLKSRC_208MHZ);
                 clksrc = MSDC0_CLKSRC_208MHZ;
                 hclk = hclks[clksrc];
             }
@@ -2511,16 +2439,12 @@ static void msdc_set_mclk(struct msdc_host *host, unsigned int state, u32 hz)
         if (hz > 100000000) {
             /* Change clock source to 208Mhz for SDR104 */
             if (clksrc != MSDC1_CLKSRC_208MHZ) {
-                printk("[SD%d] hz=(%dkHz), change clock source form (%d) to (%d)\n",
-                    host->id, hz/1000, clksrc, MSDC1_CLKSRC_208MHZ);
                 clksrc = MSDC1_CLKSRC_208MHZ;
                 hclk = hclks[clksrc];
             }
         } else {
             /* Change clock source to 187Mhz form SDR104 to other mode */
             if (clksrc != MSDC1_CLKSRC_187MHZ) {
-                printk("[SD%d] hz=(%dkHz), change clock source form (%d) to (%d)\n",
-                    host->id, hz/1000, clksrc, MSDC1_CLKSRC_187MHZ);
                 clksrc = MSDC1_CLKSRC_187MHZ;
                 hclk = hclks[clksrc];
             }
@@ -2604,9 +2528,6 @@ static void msdc_set_mclk(struct msdc_host *host, unsigned int state, u32 hz)
 
     }
 
-    printk(KERN_ERR "msdc%d -> !!! Set<%dKHz> Source<%dKHz> -> sclk<%dKHz> state<%d> mode<%d> div<%d> hs400_src<%d>" ,
-           host->id, hz/1000, hclk/1000, sclk/1000, state, mode, div, hs400_src);
-
     msdc_irq_restore(flags);
 }
 extern int mmc_sd_power_cycle(struct mmc_host *host, u32 ocr, struct mmc_card *card);
@@ -2649,7 +2570,6 @@ static u32 msdc_power_tuning(struct msdc_host *host)
         if((host->power_cycle < MSDC_MAX_POWER_CYCLE) && (host->power_cycle_enable))
         {
             // power cycle
-            ERR_MSG("the %d time, Power cycle start", host->power_cycle);
             spin_unlock(&host->lock);
 #ifdef FPGA_PLATFORM
             hwPowerDown_fpga();
@@ -2660,8 +2580,6 @@ static u32 msdc_power_tuning(struct msdc_host *host)
 				host->hw->clk_drv = 4;
 				host->hw->cmd_drv = 4;
 				host->hw->dat_drv = 4;
-				ERR_MSG("clk_drv = %d, cmd_drv = %d, dat_drv = %d",
-					host->hw->clk_drv, host->hw->cmd_drv, host->hw->dat_drv);
 			}
 
             if(host->power_control)
@@ -2743,7 +2661,6 @@ static u32 msdc_power_tuning(struct msdc_host *host)
             host->error = host_err;
             if(!ret)
                 host->power_cycle_enable = 0;
-            ERR_MSG("the %d time, Power cycle Done, host->error(0x%x), ret(%d)", host->power_cycle,host->error, ret);
             (host->power_cycle)++;
 		} else if (host->continuous_fail_request_count < MSDC_MAX_CONTINUOUS_FAIL_REQUEST_COUNT) {
 				host->continuous_fail_request_count++;
@@ -2849,18 +2766,14 @@ int msdc_reinit(struct msdc_host *host)
     if(host->hw->host_function == MSDC_SD){
         if ((!(host->hw->flags & MSDC_CD_PIN_EN)) && (host->block_bad_card == 0)) {
             // power cycle
-            ERR_MSG("SD card Re-Init!");
             mmc_claim_host(host->mmc);
-            ERR_MSG("SD card Re-Init get host!");
             spin_lock(&host->lock);
-            ERR_MSG("SD card Re-Init get lock!");
             msdc_clksrc_onoff(host, 1);
             if(host->app_cmd_arg){
                 while((err = msdc_get_card_status(mmc, host, &status))) {
                     ERR_MSG("SD card Re-Init in get card status!err(%d)",err);
                     if(err == (unsigned int)-EIO){
                         if (msdc_tune_cmdrsp(host)) {
-                            ERR_MSG("update cmd para failed");
                             break;
                         }
                     }else {
@@ -2875,14 +2788,12 @@ int msdc_reinit(struct msdc_host *host)
                         msdc_clksrc_onoff(host, 0);
                         spin_unlock(&host->lock);
                         mmc_release_host(host->mmc);
-                        ERR_MSG("SD Card is ready.");
                         return 0;
                     }
                 }
             }
 
             msdc_clksrc_onoff(host, 0);
-            ERR_MSG("Reinit start..");
             mmc->ios.clock = HOST_MIN_MCLK;
             mmc->ios.bus_width = MMC_BUS_WIDTH_1;
             mmc->ios.timing = MMC_TIMING_LEGACY;
@@ -2909,8 +2820,6 @@ int msdc_reinit(struct msdc_host *host)
                 msleep(50);
                 tmo--;
             }
-            ERR_MSG("Reinit %s",ret == 0 ? "success" : "fail");
-
        }
        if((host->hw->flags & MSDC_CD_PIN_EN) && (host->mmc->card) && mmc_card_present(host->mmc->card) && (!mmc_card_removed(host->mmc->card)) && (host->block_bad_card == 0))
            ret = 0;
@@ -2932,7 +2841,6 @@ static u32 msdc_abort_data(struct msdc_host *host)
     while (state != 4) { // until status to "tran"
         msdc_reset_hw(host->id);
         while ((err = msdc_get_card_status(mmc, host, &status))) {
-            ERR_MSG("CMD13 ERR<%d>",err);
             if (err != (unsigned int)-EIO) {
                 return msdc_power_tuning(host);
             } else if (msdc_tune_cmdrsp(host)) {
@@ -2943,26 +2851,20 @@ static u32 msdc_abort_data(struct msdc_host *host)
 
         state = R1_CURRENT_STATE(status);
 		if (pre_state != state) {
-			ERR_MSG("check card state<%d>", state);
 			pre_state = state;
 		}
 
         if (state == 5 || state == 6) {
-			if ((count++ % 20000) == 0) /* reduce log */
-				ERR_MSG("state<%d> need cmd12 to stop, count %d", state, count);
             msdc_send_stop(host); // don't tuning
         } else if (state == 7) {  // busy in programing
-            ERR_MSG("state<%d> card is busy", state);
             spin_unlock(&host->lock);
             msleep(100);
             spin_lock(&host->lock);
         } else if (state != 4) {
-            ERR_MSG("state<%d> ??? ", state);
             return msdc_power_tuning(host);
         }
 
         if (time_after(jiffies, tmo)) {
-			ERR_MSG("abort timeout. cmd12 count = %d, Do power cycle", count);
             if(host->hw->host_function == MSDC_SD && (host->sclk >= 100000000 || (host->state == MSDC_STATE_DDR)))
                 host->sd_30_busy++;
             return msdc_power_tuning(host);
@@ -2983,11 +2885,9 @@ static u32 msdc_polling_idle(struct msdc_host *host)
 
     while (state != 4) { // until status to "tran"
         while ((err = msdc_get_card_status(mmc, host, &status))) {
-            ERR_MSG("CMD13 ERR<%d>",err);
             if (err != (unsigned int)-EIO) {
                 return msdc_power_tuning(host);
             } else if (msdc_tune_cmdrsp(host)) {
-                ERR_MSG("update cmd para failed");
                 return 1;
             }
         }
@@ -2995,21 +2895,16 @@ static u32 msdc_polling_idle(struct msdc_host *host)
         state = R1_CURRENT_STATE(status);
         //ERR_MSG("check card state<%d>", state);
         if (state == 5 || state == 6) {
-			if ((count++ % 20000) == 0) /* reduce log */
-				ERR_MSG("state<%d> need cmd12 to stop, count %d", state, count);
             msdc_send_stop(host); // don't tuning
         } else if (state == 7) {  // busy in programing
-            ERR_MSG("state<%d> card is busy", state);
             spin_unlock(&host->lock);
             msleep(100);
             spin_lock(&host->lock);
         } else if (state != 4) {
-            ERR_MSG("state<%d> ??? ", state);
             return msdc_power_tuning(host);
         }
 
         if (time_after(jiffies, tmo)) {
-			ERR_MSG("abort timeout. cmd12 count = %d, Do power cycle", count);
             return msdc_power_tuning(host);
         }
     }
@@ -3180,10 +3075,6 @@ static int msdc_ett_offline_to_driver(struct msdc_host *host)
         //printk(KERN_ERR"msdc <%d> <%s> <%s>\n", i, g_mmcTable[i].pro_name, pro_name);
 
         if ((g_mmcTable[i].m_id == m_id) && (!strncmp(g_mmcTable[i].pro_name, pro_name, 6))) {
-            printk(KERN_ERR "msdc ett index<%d>: <%d> <%d> <0x%x> <0x%x> <0x%x>\n", i,
-                g_mmcTable[i].r_smpl, g_mmcTable[i].d_smpl,
-                g_mmcTable[i].cmd_rxdly, g_mmcTable[i].rd_rxdly, g_mmcTable[i].wr_rxdly);
-
             // set to msdc0
 
             msdc_set_smpl(host, hs400, g_mmcTable[i].r_smpl, TYPE_CMD_RESP_EDGE, NULL);
@@ -3570,7 +3461,6 @@ static void msdc_pm(pm_message_t state, void *data)
         atomic_set(&host->ot_work.autok_done, 0);
 #endif
 
-        printk(KERN_ERR "msdc%d -> %s Suspend",host->id, evt == PM_EVENT_SUSPEND ? "PM" : "USR");
         if(host->hw->flags & MSDC_SYS_SUSPEND){
 #ifdef CONFIG_MTK_EMMC_SUPPORT
             if(host->hw->host_function == MSDC_EMMC && host->mmc->card && mmc_card_mmc(host->mmc->card)){
@@ -3612,14 +3502,12 @@ static void msdc_pm(pm_message_t state, void *data)
         }
 
         if (evt == PM_EVENT_RESUME && host->pm_state.event == PM_EVENT_USER_SUSPEND) {
-            ERR_MSG("PM Resume when in USR Suspend");
             goto end;
         }
 
         host->suspend = 0;
         host->pm_state = state;
 
-        printk(KERN_ERR "msdc%d -> %s Resume",host->id,evt == PM_EVENT_RESUME ? "PM" : "USR");
 
         if(host->hw->flags & MSDC_SYS_SUSPEND) {
 #ifdef CONFIG_MTK_EMMC_SUPPORT
@@ -3673,7 +3561,6 @@ end:
 #endif
     if ((evt == PM_EVENT_SUSPEND) || (evt == PM_EVENT_USER_SUSPEND)) {
         if((host->hw->host_function == MSDC_SDIO) && (evt == PM_EVENT_USER_SUSPEND)){
-            printk(KERN_ERR "msdc%d -> MSDC Device Request Suspend",host->id);
         }
         msdc_gate_clock(host, 0);
     }else {
@@ -3699,7 +3586,6 @@ static u64 msdc_get_user_capacity(struct msdc_host *host)
             device_legacy_capacity = mmc->card->csd.capacity * (2 << (mmc->card->csd.read_blkbits - 1));
         } else{
             device_legacy_capacity = mmc->card->csd.capacity;
-            ERR_MSG("XXX read_blkbits = 0 XXX");
         }
         device_capacity = (u64)(mmc->card->ext_csd.sectors)* 512 > device_legacy_capacity ? (u64)(mmc->card->ext_csd.sectors)* 512 : device_legacy_capacity;
     }
@@ -3808,7 +3694,6 @@ void msdc_get_cache_region_func(struct msdc_host   *host)
 	} else {
 		g_cache_part_start = (sector_t)(-1);
 		g_cache_part_end = (sector_t)(-1);
-		printk(KERN_ERR "There is no cache info\n");
 	}
 
 	lp_hd_struct = NULL;
@@ -3820,10 +3705,8 @@ void msdc_get_cache_region_func(struct msdc_host   *host)
 	} else {
 		g_usrdata_part_start = (sector_t)(-1);
 		g_usrdata_part_end = (sector_t)(-1);
-		printk(KERN_ERR "There is no userdata info\n");
 	}
 
-    printk(KERN_ERR "cache(0x%llX~0x%llX, usrdata(0x%llX~0x%llX)\n", g_cache_part_start, g_cache_part_end, g_usrdata_part_start, g_usrdata_part_end);
 #endif
     return;
 }
@@ -3860,7 +3743,6 @@ static int msdc_cache_ctrl(struct msdc_host *host, unsigned int enable, u32 *sta
     mrq.cmd = &cmd; cmd.mrq = &mrq;
     cmd.data = NULL;
 
-    ERR_MSG("do disable Cache, cmd=0x%x, arg=0x%x \n", cmd.opcode, cmd.arg);
     err = msdc_do_command(host, &cmd, 0, CMD_TIMEOUT);  // tune until CMD13 pass.
 
     if (status) {
@@ -3889,7 +3771,6 @@ int msdc_get_cache_region(void)
 
         mmc_claim_host(host->mmc);
         if (!mmc_cache_ctrl(host->mmc, 1))
-            printk("[%s]: cache_size=%dKB, cache_ctrl=%d\n", __func__, (host->mmc->card->ext_csd.cache_size/8), host->mmc->card->ext_csd.cache_ctrl);
         mmc_release_host(host->mmc);
     }
     msdc_get_cache_region_func(host);
@@ -3908,9 +3789,7 @@ static struct excel_info* msdc_reserve_part_info(unsigned char* name)
 
     /* find reserve partition */
     for (i = 0; i < PART_NUM; i++) {
-        printk("name = %s\n", PartInfo[i].name);  //====================debug
         if (0 == strcmp(name, PartInfo[i].name)){
-            printk("size = %llu\n", PartInfo[i].size);//=======================debug
             return &PartInfo[i];
         }
     }
@@ -3971,7 +3850,6 @@ int msdc_get_reserve(void)
 
     l_mtk_reserve = (unsigned int)(lp_excel_info->start_address & 0xFFFFUL) << 8; /* unit is 512B */
 
-    printk("mtk reserve: start address = %llu\n", lp_excel_info->start_address); //============================debug
 
 #ifdef CONFIG_MTK_EMMC_SUPPORT_OTP
     lp_excel_info = msdc_reserve_part_info("otp");
@@ -3982,11 +3860,8 @@ int msdc_get_reserve(void)
 
     l_otp_reserve = (unsigned int)(lp_excel_info->start_address & 0xFFFFUL) << 8; /* unit is 512B */
 
-    printk("otp reserve: start address = %llu\n", lp_excel_info->start_address);//========================debug
     l_otp_reserve -= l_mtk_reserve;  /* the size info stored with total reserved size */
 #endif
-    printk("total reserve: l_otp_reserve = 0x%x blocks, l_mtk_reserve = 0x%x blocks, l_offset = 0x%x blocks\n",
-             l_otp_reserve, l_mtk_reserve, l_offset);
 #endif
 
     return (l_offset + l_otp_reserve + l_mtk_reserve);
@@ -4079,7 +3954,6 @@ static unsigned int msdc_command_start(struct msdc_host   *host,
     else if (opcode == MMC_SELECT_CARD) {
 		resp = (cmd->arg != 0) ? RESP_R1 : RESP_NONE;
         host->app_cmd_arg = cmd->arg;
-        printk(KERN_WARNING "msdc%d select card<0x%.8x>", host->id,cmd->arg);  // select and de-select
     } else if (opcode == SD_IO_RW_DIRECT || opcode == SD_IO_RW_EXTENDED)
         resp = RESP_R1; /* SDIO workaround. */
     else if (opcode == SD_SEND_IF_COND && (mmc_cmd_type(cmd) == MMC_CMD_BCR))
@@ -4132,7 +4006,7 @@ static unsigned int msdc_command_start(struct msdc_host   *host,
 #ifdef MTK_MSDC_USE_CACHE
             if(sbc && host->mmc->card && mmc_card_mmc(host->mmc->card) && (host->mmc->card->ext_csd.cache_ctrl & 0x1)){
                 if(sdr_read32(SDC_BLK_NUM) != (sbc->arg & 0xFFFF))//if the block number is bigger than 0xFFFF, then CMD23 arg will be failed to set it.
-                    printk("msdc%d: acmd23 arg(0x%x) failed to match the block num(0x%x), SDC_BLK_NUM(0x%x)\n", host->id, sbc->arg, host->mrq->cmd->data->blocks, sdr_read32(SDC_BLK_NUM));
+                {}
                 else
                     sdr_write32(SDC_BLK_NUM, sbc->arg);
                 N_MSG(CMD, "SBC addr<0x%x>, arg<0x%x> ", cmd->arg, sbc->arg);
@@ -4178,7 +4052,6 @@ static unsigned int msdc_command_start(struct msdc_host   *host,
                 break;
 
             if (time_after(jiffies, tmo)) {
-                ERR_MSG("XXX cmd_busy timeout: before CMD<%d>", opcode);
                 cmd->error = (unsigned int)-ETIMEDOUT;
                 msdc_reset_hw(host->id);
                 return cmd->error;
@@ -4189,7 +4062,6 @@ static unsigned int msdc_command_start(struct msdc_host   *host,
             if (!sdc_is_busy())
                 break;
             if (time_after(jiffies, tmo)) {
-                ERR_MSG("XXX sdc_busy timeout: before CMD<%d>", opcode);
                 cmd->error = (unsigned int)-ETIMEDOUT;
                 msdc_reset_hw(host->id);
                 return cmd->error;
@@ -4301,7 +4173,6 @@ static unsigned int msdc_command_resp_polling(struct msdc_host   *host,
         }
 
         if (time_after(jiffies, tmo)) {
-            printk(KERN_ERR "[%s]: msdc%d XXX CMD<%d> polling_for_completion timeout ARG<0x%.8x>", __func__, host->id, cmd->opcode, cmd->arg);
             cmd->error = (unsigned int)-ETIMEDOUT;
             host->sw_timeout++;
             msdc_dump_info(host->id);
@@ -4321,7 +4192,6 @@ static unsigned int msdc_command_resp_polling(struct msdc_host   *host,
                     intsts = MSDC_INT_RSPCRCERR;
                     g_err_tune_dbg_count--;
                 }
-                printk("[%s]: got the error cmd:%d, arg=%d, dbg error=%d, cmd->error=%d, count=%d\n", __func__, g_err_tune_dbg_cmd, g_err_tune_dbg_arg, g_err_tune_dbg_error, cmd->error, g_err_tune_dbg_count);
             }
         }
 
@@ -4330,11 +4200,9 @@ static unsigned int msdc_command_resp_polling(struct msdc_host   *host,
             if(g_err_tune_dbg_error & MTK_MSDC_ERROR_ACMD_TMO){
                 intsts = MSDC_INT_ACMDTMO;
                 g_err_tune_dbg_count--;
-                printk("[%s]: got the error cmd:%d, dbg error=%d, sbc->error=%d, count=%d\n", __func__, g_err_tune_dbg_cmd, g_err_tune_dbg_error, sbc->error, g_err_tune_dbg_count);
             }else if(g_err_tune_dbg_error & MTK_MSDC_ERROR_ACMD_CRC){
                 intsts = MSDC_INT_ACMDCRCERR;
                 g_err_tune_dbg_count--;
-                printk("[%s]: got the error cmd:%d, dbg error=%d, sbc->error=%d, count=%d\n", __func__, g_err_tune_dbg_cmd, g_err_tune_dbg_error, sbc->error, g_err_tune_dbg_count);
             }
         }
 #endif
@@ -4364,8 +4232,6 @@ static unsigned int msdc_command_resp_polling(struct msdc_host   *host,
 					/* workaround for latch error */
 					if (((cmd->opcode == 13) || (cmd->opcode == 25)) && (*rsp & R1_OUT_OF_RANGE)
 						&& (host->hw->host_function == MSDC_EMMC)) {
-						pr_err("[%s]: msdc%d XXX CMD<%d> resp<0x%.8x>,bit31=1,force make crc error\n",
-							__func__, host->id, cmd->opcode, *rsp);
 						cmd->error = (unsigned int)-EIO;
 						if (cmd->opcode == 25)
 							msdc_reset_hw(host->id);
@@ -4374,19 +4240,13 @@ static unsigned int msdc_command_resp_polling(struct msdc_host   *host,
             }
         } else if (intsts & MSDC_INT_RSPCRCERR) {
             cmd->error = (unsigned int)-EIO;
-            pr_err("[%s]: msdc%d XXX CMD<%d> MSDC_INT_RSPCRCERR Arg<0x%.8x>", __func__,
-                    host->id, cmd->opcode, cmd->arg);
 			if (((MMC_RSP_R1B == mmc_resp_type(cmd)) || (cmd->opcode == 13))
 				&& (host->hw->host_function != MSDC_SDIO)) {
-				pr_err("[%s]: msdc%d XXX CMD<%d> ARG<0x%.8X> is R1B, CRC not reset hw...\n",
-					__func__, host->id, cmd->opcode, cmd->arg);
             } else {
                 msdc_reset_hw(host->id);
             }
         } else if (intsts & MSDC_INT_CMDTMO) {
             cmd->error = (unsigned int)-ETIMEDOUT;
-            pr_err("[%s]: msdc%d XXX CMD<%d> MSDC_INT_CMDTMO Arg<0x%.8x>", __func__,
-                    host->id, cmd->opcode, cmd->arg);
             if ((cmd->opcode != 52) && (cmd->opcode != 8) && (cmd->opcode != 5)
                && (cmd->opcode != 55) && (cmd->opcode != 1) && (cmd->opcode != 12)) {
                 msdc_dump_info(host->id);
@@ -4396,8 +4256,6 @@ static unsigned int msdc_command_resp_polling(struct msdc_host   *host,
 
 			if (((MMC_RSP_R1B == mmc_resp_type(cmd)) || (cmd->opcode == 13))
 				&& (host->hw->host_function != MSDC_SDIO)) {
-				pr_err("[%s]: msdc%d XXX CMD<%d> ARG<0x%.8X> is R1B, TMO not reset hw...\n",
-					__func__, host->id, cmd->opcode, cmd->arg);
             } else {
                 msdc_reset_hw(host->id);
             }
@@ -4502,14 +4360,12 @@ static int msdc_pio_abort(struct msdc_host *host, struct mmc_data *data, unsigne
 
     if (time_after(jiffies, tmo)) {
         data->error = (unsigned int)-ETIMEDOUT;
-        ERR_MSG("XXX PIO Data Timeout: CMD<%d>", host->mrq->cmd->opcode);
         msdc_dump_info(host->id);
         ret = 1;
     }
 
     if(ret) {
         msdc_reset_hw(host->id);
-        ERR_MSG("msdc pio find abort");
     }
     return ret;
 }
@@ -4599,10 +4455,6 @@ int msdc_pio_read(struct msdc_host *host, struct mmc_data *data)
 
             ptr = sg_virt(sg);
 
-            if(ptr==NULL)
-                ERR_MSG("msdc0:sg_virt %p", ptr);
-
-
             if (flag==1)  // High memory and more than 1 va address va and  not continous
             {
                 for(i=0;i<totalpages;i++)
@@ -5022,7 +4874,6 @@ end:
     {
         for(i=0;i< totalpages;i++)
         kunmap(hmpage + i);
-        printk(KERN_ERR "msdc0 write unmap 0x%x:\n",left);
     }
     data->bytes_xfered += size;
     N_MSG(FIO, "        PIO Write<%d>bytes", size);
@@ -5178,7 +5029,6 @@ static int msdc_dma_config(struct msdc_host *host, struct msdc_dma *dma)
             for (j = 0; j < bdlen; j++) {
 #ifdef MSDC_DMA_VIOLATION_DEBUG
                 if (g_dma_debug[host->id] && (msdc_latest_operation_type[host->id] == OPER_TYPE_READ)){
-                    printk("[%s] msdc%d do write 0x10000\n", __func__, host->id);
                     dma_address = 0x10000;
                 } else{
                     dma_address = sg_dma_address(sg);
@@ -5376,7 +5226,6 @@ static unsigned int ot_find_next_gear(u32 CRCResult, const u32 tune_wind_size, c
     else
         *fTestedGear |= (test_gear_range >> (tune_wind_size - new_gear));
 
-	printk("[SDIO_OnlineTuning][%s], cur_gear = 0x%x, new_gear = 0x%x, tune_wind_size = 0x%x, CRCResult = 0x%x\n", __func__, cur_gear, new_gear, tune_wind_size, CRCResult);
 
     return new_gear;
 }
@@ -5430,7 +5279,6 @@ static int ot_command_resp_polling(struct msdc_host *host, struct mmc_command *c
         if (time_after(jiffies, tmo)) {
             cmd->error = (unsigned int)-ETIMEDOUT;
             host->sw_timeout++;
-            printk("[SDIO_OnlineTuning][%s] SW timeout, intsts = 0x%x\n", __func__, intsts);
             msdc_dump_info(host->id);
             msdc_reset_hw(host->id);
             goto out;
@@ -5449,7 +5297,6 @@ static int ot_command_resp_polling(struct msdc_host *host, struct mmc_command *c
     /* timeout */
     if (intsts & flagTmo)
     {
-        printk("[SDIO_OnlineTuning]Device CMD/DAT timeout, MSDC_INT = 0x%x\n", intsts);
         cmd->error = (unsigned int)-ETIMEDOUT;
         msdc_reset_hw(host->id);
     }
@@ -5478,10 +5325,6 @@ static int ot_do_command(struct msdc_host *host, u32 rawcmd, u32 rawarg, u32 *pi
     while(sdc_is_cmd_busy() || sdc_is_busy())
     {
         if (time_after(jiffies, tmo)) {
-            if(sdc_is_cmd_busy())
-                printk("[SDIO_OnlineTuning]XXX sdc_cmd_busy timeout\n");
-            else if(sdc_is_busy())
-                printk("[SDIO_OnlineTuning]XXX sdc_busy timeout\n");
             cmd->error = (unsigned int)-ETIMEDOUT;
             msdc_reset_hw(host->id);
             return cmd->error;  /* Fix me: error handling */
@@ -5568,15 +5411,12 @@ static unsigned int ot_init(struct msdc_host *host, struct ot_data *potData)
 
     /* Set gear window size */
     sdr_write32(SDIO_TUNE_WIND, potData->tune_wind_size);
-    printk("[SDIO_OnlineTuning]gear window size = %d\n", potData->tune_wind_size);
 
     /* Get current delay settings */
     sdr_get_field(MSDC_PAD_TUNE0, MSDC_PAD_TUNE0_CMDRDLY, potData->orig_cmdrdly);    // Get cmd delay
     potData->cmdrdly = potData->orig_cmdrdly;
-    printk("[SDIO_OnlineTuning]cmd delay = 0x%x\n", potData->orig_cmdrdly);
 
     rxdly0 = sdr_read32(MSDC_DAT_RDDLY0);
-    printk("[SDIO_OnlineTuning]DAT read delay line 0 = 0x%x\n", rxdly0);
     if (potData->eco_ver >= 4) {
         potData->orig_dat0rddly = (rxdly0 >> 24) & 0x1F;
         potData->orig_dat1rddly = (rxdly0 >> 16) & 0x1F;
@@ -5592,7 +5432,6 @@ static unsigned int ot_init(struct msdc_host *host, struct ot_data *potData)
     if(potData->orig_ddlsel == 0)
     {
         sdr_get_field(MSDC_PAD_TUNE0, MSDC_PAD_TUNE0_DATRRDLY, potData->orig_paddatrddly);    // Get read delay
-        printk("[SDIO_OnlineTuning]PAD DAT RD RXDLY = 0x%x\n", potData->orig_paddatrddly);
         potData->dat0rddly = potData->orig_paddatrddly;
         potData->dat1rddly = potData->orig_paddatrddly;
         potData->dat2rddly = potData->orig_paddatrddly;
@@ -5698,7 +5537,6 @@ static int ot_process(struct msdc_host *host, struct ot_data *potData, u32 rawcm
         rawarg |= 1 << 31;
     }
 
-    printk("[SDIO_OnlineTuning]enter command start, rw = %d, rawcmd = 0x%x, rawarg = 0x%x\n", rw, rawcmd, rawarg);
     if (ot_do_command(host, rawcmd, rawarg, &intsts) != 0) {
         printk("[SDIO_OnlineTuning]command start fail, err = %d\n", host->cmd->error);
         ret = host->cmd->error;
@@ -5788,7 +5626,6 @@ static int ot_process(struct msdc_host *host, struct ot_data *potData, u32 rawcm
 
     if((intsts & MSDC_INT_ACMD53_FAIL) == 0)    // All CRC Pass
     {
-        printk("[SDIO_OnlineTuning]CRC Pass, intsts = 0x%x\n", intsts);
         return 0;
     }
 
@@ -5804,7 +5641,6 @@ static int ot_process(struct msdc_host *host, struct ot_data *potData, u32 rawcm
         potData->cmdrdly = ot_find_next_gear(CRCStatus_CMD, potData->tune_wind_size, potData->cmdrdly, &potData->fCmdTestedGear);
         sdr_set_field(MSDC_PAD_TUNE0, MSDC_PAD_TUNE0_CMDRDLY, potData->cmdrdly);    // Set cmd delay
 
-        printk("[SDIO_OnlineTuning]goto _retry (Cmd), cmd delay = %d \n", potData->cmdrdly);
         potData->retry = 1;
         return 0;
     }
@@ -5887,7 +5723,6 @@ static int ot_process(struct msdc_host *host, struct ot_data *potData, u32 rawcm
         }
         sdr_write32(MSDC_DAT_RDDLY0, rxdly0);
 
-        printk("[SDIO_OnlineTuning]goto _retry (Read) \n");
         potData->retry = 1;
         return 0;
     }
@@ -5928,7 +5763,6 @@ static unsigned int msdc_online_tuning(struct msdc_host *host, unsigned fn, unsi
     struct mmc_command *orig_cmd = host->cmd;
     struct mmc_command cmd;
 
-    printk("[SDIO_OnlineTuning]Enter %s \n", __func__);
 
     /* ungate clock */
     msdc_ungate_clock(host);  // set sw flag
@@ -5969,8 +5803,6 @@ _retry:
 
     if (time_after(jiffies, tmo))
     {
-        printk("[SDIO_OnlineTuning]online tuning timeout\n");
-
         ret = -1;
 
         goto out;
@@ -5978,7 +5810,6 @@ _retry:
 
     if(otData.cmddlypass == 0)
     {
-        printk("[SDIO_OnlineTuning][%s]fCmdTestedGear = 0x%x\n", __func__, otData.fCmdTestedGear);
         ret = ot_adjust_tunewnd(host, &otData.fCmdTestedGear, &tune_wind_size_cmd, &CRCPass);
         otData.tune_wind_size = tune_wind_size_cmd;
         if(ret == -1)
@@ -5988,7 +5819,6 @@ _retry:
     {
         if(otData.datrddlypass == 0)
         {
-            printk("[SDIO_OnlineTuning][%s]fDatTestedGear = 0x%x\n", __func__, otData.fDatTestedGear);
             ret = ot_adjust_tunewnd(host, &otData.fDatTestedGear, &tune_wind_size_dat, &CRCPass);
             otData.tune_wind_size = tune_wind_size_dat;
             if(ret == -1)
@@ -5999,7 +5829,6 @@ _retry:
     {
         if(otData.dat0rddlypass == 0)
         {
-            printk("[SDIO_OnlineTuning][%s]fDat0TestedGear = 0x%x\n", __func__, otData.fDat0TestedGear);
             ret = ot_adjust_tunewnd(host, &otData.fDat0TestedGear, &tune_wind_size_dat0, &CRCPass);
             otData.tune_wind_size = tune_wind_size_dat0;
             if(ret == -1)
@@ -6007,7 +5836,6 @@ _retry:
         }
         else if(otData.dat1rddlypass == 0)
         {
-            printk("[SDIO_OnlineTuning][%s]fDat1TestedGear = 0x%x\n", __func__, otData.fDat1TestedGear);
             ret = ot_adjust_tunewnd(host, &otData.fDat1TestedGear, &tune_wind_size_dat1, &CRCPass);
             otData.tune_wind_size = tune_wind_size_dat1;
             if(ret == -1)
@@ -6015,7 +5843,6 @@ _retry:
         }
         else if(otData.dat2rddlypass == 0)
         {
-            printk("[SDIO_OnlineTuning][%s]fDat2TestedGear = 0x%x\n", __func__, otData.fDat2TestedGear);
             ret = ot_adjust_tunewnd(host, &otData.fDat2TestedGear, &tune_wind_size_dat2, &CRCPass);
             otData.tune_wind_size = tune_wind_size_dat2;
             if(ret == -1)
@@ -6023,7 +5850,6 @@ _retry:
         }
         else if(otData.dat3rddlypass == 0)
         {
-            printk("[SDIO_OnlineTuning][%s]fDat3TestedGear = 0x%x\n", __func__, otData.fDat3TestedGear);
             ret = ot_adjust_tunewnd(host, &otData.fDat3TestedGear, &tune_wind_size_dat3, &CRCPass);
             otData.tune_wind_size = tune_wind_size_dat3;
             if(ret == -1)
@@ -6069,12 +5895,10 @@ out:
         }
         sdr_write32(MSDC_DAT_RDDLY0, rxdly0);
 
-        printk("[SDIO_OnlineTuning]ret = %d, vcore_uv_off = 0x%x, cmd delay = 0x%x\n", ret, vcore_uv_off, otData.orig_cmdrdly);
     }
     else if(otData.orig_ddlsel == 0)
     {
         sdr_set_field(MSDC_PAD_TUNE0, MSDC_PAD_TUNE0_DATRRDLY, otData.dat0rddly);    // Set read delay
-        printk("[SDIO_OnlineTuning]ret = %d, dat delay = 0x%x \n", ret, otData.dat0rddly);
     }
 
     ot_deinit(host, otData);
@@ -6136,14 +5960,12 @@ static int msdc_do_request(struct mmc_host*mmc, struct mmc_request*mrq)
         {
             if (host->saved_para.suspend_flag)
             {
-                ERR_MSG("msdc resume[s] cur_cfg=%x, save_cfg=%x, cur_hz=%d, save_hz=%d", sdr_read32(MSDC_CFG), host->saved_para.msdc_cfg, host->mclk, host->saved_para.hz);
                 host->saved_para.suspend_flag = 0;
                 msdc_restore_info(host);
             }
             else if ((host->saved_para.msdc_cfg !=0) &&
                 ((sdr_read32(MSDC_CFG)&0xFFFFFF9F)!= (host->saved_para.msdc_cfg&0xFFFFFF9F)))
             {
-                ERR_MSG("msdc resume[ns] cur_cfg=%x, save_cfg=%x, cur_hz=%d, save_hz=%d", sdr_read32(MSDC_CFG), host->saved_para.msdc_cfg, host->mclk, host->saved_para.hz);
                 msdc_restore_info(host);
             }
         }
@@ -6153,8 +5975,6 @@ static int msdc_do_request(struct mmc_host*mmc, struct mmc_request*mrq)
     {
         //if((!u_sdio_irq_counter) && (!u_msdc_irq_counter))
         //ERR_MSG("Ahsin u_sdio_irq_counter=%d, u_msdc_irq_counter=%d  int_sdio_irq_enable=%d SDC_CFG=%x MSDC_INTEN=%x MSDC_INT=%x MSDC_PATCH_BIT0=%x", u_sdio_irq_counter, u_msdc_irq_counter, int_sdio_irq_enable, sdr_read32(SDC_CFG),sdr_read32(MSDC_INTEN),sdr_read32(MSDC_INT),sdr_read32(MSDC_PATCH_BIT0));
-        if ((u_sdio_irq_counter>0) && ((u_sdio_irq_counter%800)==0))
-            ERR_MSG("Ahsin sdio_irq=%d, msdc_irq=%d  SDC_CFG=%x MSDC_INTEN=%x MSDC_INT=%x ", u_sdio_irq_counter, u_msdc_irq_counter, sdr_read32(SDC_CFG), sdr_read32(MSDC_INTEN), sdr_read32(MSDC_INT));
     }
 #endif
 
@@ -6171,7 +5991,6 @@ static int msdc_do_request(struct mmc_host*mmc, struct mmc_request*mrq)
      * if find abnormal, try to reset msdc first
      */
     if (msdc_txfifocnt() || msdc_rxfifocnt()) {
-        printk("[SD%d] register abnormal,please check!\n",host->id);
         msdc_reset_hw(host->id);
     }
 
@@ -6352,8 +6171,6 @@ static int msdc_do_request(struct mmc_host*mmc, struct mmc_request*mrq)
         #endif
             spin_unlock(&host->lock);
             if(!wait_for_completion_timeout(&host->xfer_done, DAT_TIMEOUT)){
-                ERR_MSG("XXX CMD<%d> ARG<0x%x> wait xfer_done<%d> timeout!!", cmd->opcode, cmd->arg,data->blocks * data->blksz);
-
                 host->sw_timeout++;
             #ifdef STO_LOG
                 if (unlikely(dumpMSDC()))
@@ -6416,7 +6233,6 @@ static int msdc_do_request(struct mmc_host*mmc, struct mmc_request*mrq)
             /* Secondly: pio data phase */
             if (read) {
 #ifdef MTK_MSDC_DUMP_FIFO
-                printk("[%s]: start pio read\n", __func__);
 #endif
                 if (msdc_pio_read(host, data)){
                     msdc_gate_clock(host,0);
@@ -6425,7 +6241,6 @@ static int msdc_do_request(struct mmc_host*mmc, struct mmc_request*mrq)
                 }
             } else {
 #ifdef MTK_MSDC_DUMP_FIFO
-                printk("[%s]: start pio write\n", __func__);
 #endif
                 if (msdc_pio_write(host, data)) {
                     msdc_gate_clock(host,0);
@@ -6591,7 +6406,6 @@ done:
 			emmc_sleep_failed = 1;
 			if (mrq->cmd->arg & (1<<15)) {
 				mrq->cmd->error = 0x0;
-				pr_err("eMMC sleep CMD5 TMO will reinit...\n");
 			} else {
 				host->error |= REQ_CMD_TMO;
 			}
@@ -6714,7 +6528,6 @@ static int msdc_tune_rw_request(struct mmc_host*mmc, struct mmc_request*mrq)
      * if find abnormal, try to reset msdc first
      */
     if (msdc_txfifocnt() || msdc_rxfifocnt()) {
-        printk("[SD%d] register abnormal,please check!\n",host->id);
         msdc_reset_hw(host->id);
     }
 
@@ -6792,7 +6605,6 @@ static int msdc_tune_rw_request(struct mmc_host*mmc, struct mmc_request*mrq)
 #endif
     spin_unlock(&host->lock);
     if(!wait_for_completion_timeout(&host->xfer_done, DAT_TIMEOUT)){
-        ERR_MSG("XXX CMD<%d> ARG<0x%x> wait xfer_done<%d> timeout!!", cmd->opcode, cmd->arg,data->blocks * data->blksz);
         host->sw_timeout++;
 #ifdef STO_LOG
         if (unlikely(dumpMSDC()))
@@ -6997,7 +6809,6 @@ static int msdc_do_request_async(struct mmc_host*mmc, struct mmc_request*mrq)
     BUG_ON(mmc == NULL);
     BUG_ON(mrq == NULL);
     if (!is_card_present(host) || host->power_mode == MMC_POWER_OFF) {
-        ERR_MSG("cmd<%d> arg<0x%x> card<%d> power<%d>", mrq->cmd->opcode,mrq->cmd->arg,is_card_present(host), host->power_mode);
         mrq->cmd->error = (unsigned int)-ENOMEDIUM;
         if(mrq->done)
             mrq->done(mrq);         // call done directly.
@@ -7016,7 +6827,6 @@ static int msdc_do_request_async(struct mmc_host*mmc, struct mmc_request*mrq)
      * if find abnormal, try to reset msdc first
      */
     if (msdc_txfifocnt() || msdc_rxfifocnt()) {
-        printk("[SD%d] register abnormal,please check!\n",host->id);
         msdc_reset_hw(host->id);
     }
 
@@ -7311,7 +7121,6 @@ static int msdc_lower_freq(struct msdc_host *host)
     u32 div, mode, hs400_src;
     void __iomem *base = host->base;
 
-    ERR_MSG("need to lower freq");
     msdc_reset_crc_tune_counter(host,all_counter);
     sdr_get_field(MSDC_CFG, MSDC_CFG_CKMOD, mode);
     sdr_get_field(MSDC_CFG, MSDC_CFG_CKDIV, div);
@@ -7328,7 +7137,6 @@ static int msdc_lower_freq(struct msdc_host *host)
 #endif
 
     if (div >= MSDC_MAX_FREQ_DIV) {
-        ERR_MSG("but, div<%d> power tuning", div);
         return msdc_power_tuning(host);
 #if defined(MSDC0_EMMC50_SUPPORT)
     } else if((mode == 3) && (host->id == 0)){ //when HS400 low freq, you cannot change to mode 2 (DDR mode), else read data will be latched by clk, but not ds pin when card speed mode is still HS400.
@@ -7344,7 +7152,6 @@ static int msdc_lower_freq(struct msdc_host *host)
         msdc_clk_stable(host,mode, div, hs400_src);
         host->sclk = hclks[host->hw->clk_src]/(2*4*(div+1));
 
-        ERR_MSG("new div<%d>, mode<%d> new freq.<%dKHz>", div + 1, mode,host->sclk/1000);
         return 0;
 #endif
     } else if(mode == 1){
@@ -7352,13 +7159,11 @@ static int msdc_lower_freq(struct msdc_host *host)
         msdc_clk_stable(host,mode, div, hs400_src);
         host->sclk = (div == 0) ? hclks[host->hw->clk_src]/2 : hclks[host->hw->clk_src]/(4*div);
 
-        ERR_MSG("new div<%d>, mode<%d> new freq.<%dKHz>", div, mode,host->sclk/1000);
         return 0;
     }
     else{
         msdc_clk_stable(host,mode, div + 1, hs400_src);
         host->sclk = (mode == 2) ? hclks[host->hw->clk_src]/(2*4*(div+1)) : hclks[host->hw->clk_src]/(4*(div+1));
-        ERR_MSG("new div<%d>, mode<%d> new freq.<%dKHz>", div + 1, mode,host->sclk/1000);
         return 0;
     }
 }
@@ -7431,8 +7236,6 @@ static int msdc_tune_cmdrsp(struct msdc_host *host)
 	sdr_get_field(MSDC_PAD_TUNE0, MSDC_PAD_TUNE0_CMDRDLY, orig_rdly);
 	sdr_get_field(MSDC_PAD_TUNE0, MSDC_PAD_TUNE0_CMDRRDLY, orig_rrdly);
 	sdr_get_field(MSDC_PATCH_BIT1, MSDC_PB1_CMD_RSP_TA_CNTR, orig_cmdrtc);
-	INIT_MSG("TUNE_CMD: rsmpl<%d> rdly<%d> rrdly<%d> cmdrtc<%d> sfreq.<%d>",
-		orig_rsmpl, orig_rdly, orig_rrdly, orig_cmdrtc, host->sclk);
 #ifdef STO_LOG
 	if (unlikely(dumpMSDC())) {
 		AddStorageTrace(STORAGE_LOGGER_MSG_MSDC_DO, msdc_do_request, "sd_tune_ok RSPL", orig_rsmpl);
@@ -7602,8 +7405,6 @@ static void emmc_hs400_backup(void)
         if(hs400_backup_reg_list[i].restore_func){
             err = hs400_backup_reg_list[i].restore_func(0);
             if(err) {
-                printk(KERN_ERR "[%s]: failed to restore reg[%p][0x%x], expected value[0x%x], actual value[0x%x] err=0x%x",
-                        __func__, (hs400_backup_reg_list[i].addr+mtk_msdc_host[0]->base), hs400_backup_reg_list[i].mask, hs400_backup_reg_list[i].default_value, sdr_read32((const volatile void *)(hs400_backup_reg_list[i].addr+mtk_msdc_host[0]->base)), err);
             }
         }
     }
@@ -7625,11 +7426,8 @@ static void emmc_hs400_restore(void)
         if(hs400_backup_reg_list[i].restore_func){
             err = hs400_backup_reg_list[i].restore_func(1);
             if(err) {
-                printk(KERN_ERR "[%s]:failed to restore reg[%p][0x%x], expected value[0x%x], actual value[0x%x] err=0x%x",
-                        __func__, (hs400_backup_reg_list[i].addr+mtk_msdc_host[0]->base), hs400_backup_reg_list[i].mask, hs400_backup_reg_list[i].value, sdr_read32(hs400_backup_reg_list[i].addr), err);
             }
         }
-        printk("[%s]:i:%d, reg=%p, value=0x%x\n", __func__, i, (hs400_backup_reg_list[i].addr+mtk_msdc_host[0]->base), sdr_read32((const volatile void *)(hs400_backup_reg_list[i].addr+mtk_msdc_host[0]->base)));
     }
 
     return;
@@ -7677,8 +7475,6 @@ static int emmc_hs400_tune_rw(struct msdc_host *host)
         if(cur_ds_dly3 != orig_ds_dly3){
             sdr_set_field(EMMC50_PAD_DS_TUNE, MSDC_EMMC50_PAD_DS_TUNE_DLY3, cur_ds_dly3);
         }
-        INIT_MSG("HS400_TUNE: orig_ds_dly1<0x%x>, orig_ds_dly3<0x%x>, cur_ds_dly1<0x%x>, cur_ds_dly3<0x%x>",
-                                orig_ds_dly1, orig_ds_dly3, cur_ds_dly1, cur_ds_dly3 );
    }
 out:
     return err;
@@ -7901,7 +7697,6 @@ static int msdc_tune_read(struct msdc_host *host)
     sdr_get_field(MSDC_PATCH_BIT0, MSDC_PB0_RD_DAT_SEL, orig_dsmpl);
     cur_rxdly0 = sdr_read32(MSDC_DAT_RDDLY0);
     cur_rxdly1 = sdr_read32(MSDC_DAT_RDDLY1);
-    INIT_MSG("TUNE_READ: dsmpl<%d> rxdly0<0x%x> rxdly1<0x%x> dsel<%d> dl_cksel<%d> sfreq.<%d>", orig_dsmpl, cur_rxdly0, cur_rxdly1,orig_dsel,orig_dl_cksel,host->sclk);
 
     return result;
 }
@@ -7986,8 +7781,6 @@ static int msdc_tune_write(struct msdc_host	*host)
 	sdr_get_field(MSDC_IOCON, MSDC_IOCON_W_D_SMPL, orig_dsmpl);
 	sdr_get_field(MSDC_PATCH_BIT1, MSDC_PB1_WRDAT_CRCS_TA_CNTR,	orig_d_cntr);
 	cur_rxdly0 = sdr_read32(MSDC_DAT_RDDLY0);
-	INIT_MSG("TUNE_WRITE: dsmpl<%d>	rxdly0<0x%x> wrrdly<0x%x> d_cntr<%d> sfreq.<%d>",
-		orig_dsmpl, cur_rxdly0, orig_wrrdly, orig_d_cntr, host->sclk);
 
 	return result;
 }
@@ -8034,13 +7827,11 @@ static void msdc_reset_para(struct msdc_host *host)
 
     if (dsmpl == 0) {
         msdc_set_smpl(host, hs400, 1, TYPE_READ_DATA_EDGE, NULL);
-        ERR_MSG("set dspl<0>");
         sdr_set_field(MSDC_PAD_TUNE0, MSDC_PAD_TUNE0_CMDRDLY, 0);
     }
 
     if (rsmpl == 0) {
         msdc_set_smpl(host, hs400, 1, TYPE_CMD_RESP_EDGE, NULL);
-        ERR_MSG("set rspl<0>");
         sdr_write32(MSDC_DAT_RDDLY0, 0);
         sdr_set_field(MSDC_PAD_TUNE0, MSDC_PAD_TUNE0_DATWRDLY, 0);
     }
@@ -8072,8 +7863,6 @@ static void msdc_dump_trans_error(struct msdc_host   *host,
     }
 #endif
 
-    ERR_MSG("XXX CMD<%d><0x%x> Error<%d> Resp<0x%x>", cmd->opcode, cmd->arg, cmd->error, cmd->resp[0]);
-
 #if 0
     if ((cmd->opcode == MMC_SLEEP_AWAKE) && (cmd->error == (unsigned int)-ETIMEDOUT)) {
         if (cmd->arg & (1 << 15)) {
@@ -8086,26 +7875,12 @@ static void msdc_dump_trans_error(struct msdc_host   *host,
     }
 #endif
 
-    if (data) {
-        ERR_MSG("XXX DAT block<%d> Error<%d>", data->blocks, data->error);
-    }
-
-    if (stop) {
-        ERR_MSG("XXX STOP<%d><0x%x> Error<%d> Resp<0x%x>", stop->opcode, stop->arg, stop->error, stop->resp[0]);
-    }
-
-    if (sbc) {
-        ERR_MSG("XXX SBC<%d><0x%x> Error<%d> Resp<0x%x>", sbc->opcode, sbc->arg, sbc->error, sbc->resp[0]);
-    }
-
 #ifdef MTK_SDIO30_ONLINE_TUNING_SUPPORT
     if((host->hw->host_function == MSDC_SDIO) && (cmd) && (data) &&
         ((cmd->error == -EIO) || (data->error == -EIO)))
     {
         u32 vcore_uv_off = autok_get_current_vcore_offset();
         int cur_temperature = mtk_thermal_get_temp(MTK_THERMAL_SENSOR_CPU);
-
-        ERR_MSG("XXX Vcore<0x%x> CPU_Temperature<%d>", vcore_uv_off, cur_temperature);
     }
 #endif
 
@@ -8130,7 +7905,6 @@ static void msdc_dump_trans_error(struct msdc_host   *host,
 #ifdef SDIO_ERROR_BYPASS
     if(is_card_sdio(host)&&(host->sdio_error!=-EIO)&&(cmd->opcode==53)&&(sg_dma_len(data->sg)>4)){
         host->sdio_error = -EIO;
-        ERR_MSG("XXX SDIO Error ByPass");
     }
 #endif
 }
@@ -8149,12 +7923,10 @@ static void msdc_ops_request_legacy(struct mmc_host *mmc, struct mmc_request *mr
     u32 ticks = 0, opcode = 0, sizes = 0, bRx = 0;
     msdc_reset_crc_tune_counter(host,all_counter);
     if(host->mrq){
-        ERR_MSG("XXX host->mrq<0x%p> cmd<%d>arg<0x%x>", host->mrq, host->mrq->cmd->opcode, host->mrq->cmd->arg);
         BUG();
     }
 
     if (!is_card_present(host) || host->power_mode == MMC_POWER_OFF) {
-        ERR_MSG("cmd<%d> arg<0x%x> card<%d> power<%d>", mrq->cmd->opcode,mrq->cmd->arg,is_card_present(host), host->power_mode);
         mrq->cmd->error = (unsigned int)-ENOMEDIUM;
 
 #if 1
@@ -8202,7 +7974,6 @@ static void msdc_ops_request_legacy(struct mmc_host *mmc, struct mmc_request *mr
         if ((sbc != NULL) && (sbc->error == (unsigned int)-ETIMEDOUT)) {
             if (cmd->opcode == MMC_READ_MULTIPLE_BLOCK || cmd->opcode == MMC_WRITE_MULTIPLE_BLOCK ){
                 /* not tuning, go out directly */
-                printk("===[%s:%d]==cmd23 timeout==\n", __func__, __LINE__);
                 goto out;
             }
         }
@@ -8366,12 +8137,10 @@ static void msdc_ops_request_legacy(struct mmc_host *mmc, struct mmc_request *mr
 
     if((host->read_time_tune)&&(cmd->opcode == MMC_READ_SINGLE_BLOCK || cmd->opcode == MMC_READ_MULTIPLE_BLOCK)){
         host->read_time_tune = 0;
-        ERR_MSG("Read recover");
         msdc_dump_trans_error(host, cmd, data, stop, sbc);
     }
     if((host->write_time_tune) && (cmd->opcode == MMC_WRITE_BLOCK || cmd->opcode == MMC_WRITE_MULTIPLE_BLOCK)){
         host->write_time_tune = 0;
-        ERR_MSG("Write recover");
         msdc_dump_trans_error(host, cmd, data, stop, sbc);
     }
     host->sw_timeout = 0;
@@ -8456,22 +8225,14 @@ static void msdc_tune_async_request(struct mmc_host *mmc, struct mmc_request *mr
 #else
         WARN_ON(host->mrq);
 #endif
-        ERR_MSG("XXX host->mrq<0x%p> cmd<%d>arg<0x%x>", host->mrq, host->mrq->cmd->opcode, host->mrq->cmd->arg);
         if(host->mrq->data){
-            ERR_MSG("XXX request data size<%d>",host->mrq->data->blocks * host->mrq->data->blksz);
-            ERR_MSG("XXX request attach to host force data timeout and retry");
             host->mrq->data->error = (unsigned int)-ETIMEDOUT;
         } else{
-            ERR_MSG("XXX request attach to host force cmd timeout and retry");
             host->mrq->cmd->error = (unsigned int)-ETIMEDOUT;
         }
-        ERR_MSG("XXX current request <0x%p> cmd<%d>arg<0x%x>", mrq,mrq->cmd->opcode, mrq->cmd->arg);
-        if(mrq->data)
-            ERR_MSG("XXX current request data size<%d>",mrq->data->blocks * mrq->data->blksz);
     }
 
     if (!is_card_present(host) || host->power_mode == MMC_POWER_OFF) {
-        ERR_MSG("cmd<%d> arg<0x%x> card<%d> power<%d>", mrq->cmd->opcode,mrq->cmd->arg, is_card_present(host), host->power_mode);
         mrq->cmd->error = (unsigned int)-ENOMEDIUM;
         //mrq->done(mrq);         // call done directly.
         return;
@@ -8529,7 +8290,6 @@ static void msdc_tune_async_request(struct mmc_host *mmc, struct mmc_request *mr
         if ((sbc != NULL) && (sbc->error == (unsigned int)-ETIMEDOUT)) {
             if (cmd->opcode == MMC_READ_MULTIPLE_BLOCK || cmd->opcode == MMC_WRITE_MULTIPLE_BLOCK ){
                 /* not tuning, go out directly */
-                printk("===[%s:%d]==cmd23 timeout==\n", __func__, __LINE__);
                 goto out;
             }
         }
@@ -8679,17 +8439,14 @@ static void msdc_tune_async_request(struct mmc_host *mmc, struct mmc_request *mr
 
     if((host->rwcmd_time_tune)&&(cmd->opcode == MMC_READ_SINGLE_BLOCK || cmd->opcode == MMC_READ_MULTIPLE_BLOCK || cmd->opcode == MMC_WRITE_BLOCK || cmd->opcode == MMC_WRITE_MULTIPLE_BLOCK)){
         host->rwcmd_time_tune = 0;
-        ERR_MSG("RW cmd recover");
         msdc_dump_trans_error(host, cmd, data, stop, sbc);
     }
     if((host->read_time_tune)&&(cmd->opcode == MMC_READ_SINGLE_BLOCK || cmd->opcode == MMC_READ_MULTIPLE_BLOCK) ){
         host->read_time_tune = 0;
-        ERR_MSG("Read recover");
         msdc_dump_trans_error(host, cmd, data, stop, sbc);
     }
     if((host->write_time_tune) && (cmd->opcode == MMC_WRITE_BLOCK || cmd->opcode == MMC_WRITE_MULTIPLE_BLOCK)){
         host->write_time_tune = 0;
-        ERR_MSG("Write recover");
         msdc_dump_trans_error(host, cmd, data, stop, sbc);
     }
     host->power_cycle_enable = 1;
@@ -8902,7 +8659,6 @@ static void msdc_ops_set_ios(struct mmc_host *mmc, struct mmc_ios *ios)
                     mmc->card->ext_csd.card_type &= ~EXT_CSD_CARD_TYPE_DDR_1_8V;
                 }
             }
-            printk(KERN_ERR "[%s]: msdc%d, ext_csd.card_type=0x%x\n", __func__, host->id, mmc->card->ext_csd.card_type);
         }
 #endif
 
@@ -9161,14 +8917,12 @@ static void msdc_ops_enable_sdio_irq(struct mmc_host *mmc, int enable)
             hw->disable_sdio_eirq(); /* combo_sdio_disable_eirq */
         }
     } else {
-       ERR_MSG("XXX ");  /* so never enter here */
 #if (MSDC_DATA1_INT == 1)
        if (host->hw->flags & MSDC_SDIO_IRQ)
        {
            int_sdio_irq_enable = enable;
            if (!u_sdio_irq_counter)
            {
-               printk("msdc2 u_sdio_irq_counter=1 \n");
            }
 
            if (u_sdio_irq_counter < 0xFFFF)
@@ -9176,9 +8930,6 @@ static void msdc_ops_enable_sdio_irq(struct mmc_host *mmc, int enable)
            else
                u_sdio_irq_counter = 1;
 
-           if (u_sdio_irq_counter <7)
-               printk("msdc2 sdio_irq enable: %d \n",int_sdio_irq_enable);
-
            //ERR_MSG("Ahsin int_sdio_irq_enable=%d  u_sdio_irq_counter=%d",int_sdio_irq_enable,u_sdio_irq_counter);
        }
 #endif
@@ -9328,7 +9079,6 @@ static bool msdc_check_written_data(struct mmc_host *mmc,struct mmc_request *mrq
         return 0;
     }
     if (!is_card_present(host) || host->power_mode == MMC_POWER_OFF) {
-        ERR_MSG("cmd<%d> arg<0x%x> card<%d> power<%d>", mrq->cmd->opcode,mrq->cmd->arg,is_card_present(host), host->power_mode);
         mrq->cmd->error = (unsigned int)-ENOMEDIUM;
         return 0;
     }
@@ -9451,7 +9201,6 @@ static irqreturn_t msdc1_eint_handler(int irq, void *dev_id)
 
     if (got_bad_card == 0)
         tasklet_hi_schedule(&host->card_tasklet);
-    printk("SD card %s(%x:%x)",(host->hw->cd_level ^ host->sd_cd_polarity) ? "insert":"remove", host->hw->cd_level, host->sd_cd_polarity);
 
     return IRQ_HANDLED;
 }
@@ -9524,14 +9273,9 @@ static irqreturn_t msdc_irq(int irq, void *dev_id)
 #endif
     /* sdio interrupt */
     if (intsts & MSDC_INT_SDIOIRQ){
-        IRQ_MSG("XXX MSDC_INT_SDIOIRQ");  /* seems not sdio irq */
 #if (MSDC_DATA1_INT == 1)
         if (host->hw->flags & MSDC_SDIO_IRQ)
         {
-            if (!u_msdc_irq_counter)
-            {
-                printk("msdc2 u_msdc_irq_counter=1 \n");
-            }
             if (u_msdc_irq_counter <0xFFFF)
                 u_msdc_irq_counter = u_msdc_irq_counter + 1;
             else
@@ -9558,7 +9302,6 @@ static irqreturn_t msdc_irq(int irq, void *dev_id)
                     intsts = MSDC_INT_DATCRCERR;
                     g_err_tune_dbg_count--;
                 }
-                printk("[%s]: got the error cmd:%d, dbg error 0x%x, data->error=%d, count=%d \n", __func__, g_err_tune_dbg_cmd, g_err_tune_dbg_error,data->error, g_err_tune_dbg_count);
             }
 
             if((g_err_tune_dbg_cmd == MMC_STOP_TRANSMISSION) && stop && (host->autocmd & MSDC_AUTOCMD12)){
@@ -9569,7 +9312,6 @@ static irqreturn_t msdc_irq(int irq, void *dev_id)
                     intsts =MSDC_INT_ACMDCRCERR;
                     g_err_tune_dbg_count--;
                 }
-                printk("[%s]: got the error cmd:%d, dbg error 0x%x, stop->error=%d, host->error=%d, count=%d\n", __func__, g_err_tune_dbg_cmd, g_err_tune_dbg_error, stop->error, host->error, g_err_tune_dbg_count);
             }
         }
 #endif
@@ -9655,12 +9397,9 @@ static irqreturn_t msdc_irq(int irq, void *dev_id)
             if (intsts & MSDC_INT_DATTMO){
                 data->error = (unsigned int)-ETIMEDOUT;
                 msdc_set_timeout(host, host->timeout_ns * 2, host->timeout_clks);
-                ERR_MSG("XXX CMD<%d> Arg<0x%.8x> MSDC_INT_DATTMO", host->mrq->cmd->opcode, host->mrq->cmd->arg);
             }
             else if (intsts & MSDC_INT_DATCRCERR){
                 data->error = (unsigned int)-EIO;
-                ERR_MSG("XXX CMD<%d> Arg<0x%.8x> MSDC_INT_DATCRCERR, SDC_DCRC_STS<0x%x>",
-                      host->mrq->cmd->opcode, host->mrq->cmd->arg, sdr_read32(SDC_DCRC_STS));
             }
 
             if (host->dma_xfer) {
@@ -9750,7 +9489,6 @@ static irqreturn_t msdc_irq(int irq, void *dev_id)
                         intsts = MSDC_INT_RSPCRCERR;
                         g_err_tune_dbg_count--;
                     }
-                    printk("[%s]: got the error cmd:%d, arg=%d, dbg error=%d, cmd->error=%d, count=%d\n", __func__, g_err_tune_dbg_cmd, g_err_tune_dbg_arg, g_err_tune_dbg_error, cmd->error, g_err_tune_dbg_count);
                 }
             }
         }
@@ -9774,11 +9512,9 @@ static irqreturn_t msdc_irq(int irq, void *dev_id)
 				host->continuous_fail_request_count = 0;
         } else if (intsts & MSDC_INT_RSPCRCERR) {
             cmd->error = (unsigned int)-EIO;
-            ERR_MSG("XXX CMD<%d> MSDC_INT_RSPCRCERR Arg<0x%.8x>",cmd->opcode, cmd->arg);
             msdc_reset_hw(host->id);
         }else if (intsts & MSDC_INT_CMDTMO) {
             cmd->error = (unsigned int)-ETIMEDOUT;
-            ERR_MSG("XXX CMD<%d> MSDC_INT_CMDTMO Arg<0x%.8x>",cmd->opcode, cmd->arg);
             msdc_reset_hw(host->id);
         }
         if(intsts & (MSDC_INT_CMDRDY | MSDC_INT_RSPCRCERR | MSDC_INT_CMDTMO))
@@ -9831,22 +9567,17 @@ static void msdc_check_write_timeout(struct work_struct *work)
 			/* if anything goes wrong, let block driver do the error handling. */
 			err = msdc_get_card_status(mmc, host, &status);
 			if (err) {
-				ERR_MSG("CMD13 ERR<%d>", err);
 				break;
 			}
 
 			state = R1_CURRENT_STATE(status);
 			if (pre_state != state) {
-				ERR_MSG("check card state<%d>", state);
 				pre_state = state;
 			}
 
 			if (state == R1_STATE_DATA || state == R1_STATE_RCV) {
-				if ((count++ % 20000) == 0) /* reduce log */
-					ERR_MSG("state<%d> need cmd12 to stop, count %d", state, count);
 				msdc_send_stop(host);
 			} else if (state == R1_STATE_PRG) {
-				ERR_MSG("state<%d> card is busy", state);
 				spin_unlock(&host->lock);
 				msleep(100);
 				spin_lock(&host->lock);
@@ -9911,13 +9642,11 @@ static void msdc_enable_cd_irq(struct msdc_host *host, int enable)
             host->sd_cd_polarity = 1;
             /* request irq for eint (either way) */
             if (request_irq(cd_irq, msdc1_eint_handler, IRQF_TRIGGER_HIGH, "MSDC1_INS-eint", NULL)) {
-                printk(KERN_ERR "MSDC1 IRQ LINE NOT AVAILABLE!!\n");
             }
         } else {
             host->sd_cd_polarity = 0;
             /* request irq for eint (either way) */
             if (request_irq(cd_irq, msdc1_eint_handler, IRQF_TRIGGER_LOW, "MSDC1_INS-eint", NULL)) {
-                printk(KERN_ERR "MSDC1 IRQ LINE NOT AVAILABLE!!\n");
             }
         }
     } else {
@@ -10125,8 +9854,6 @@ static void msdc_init_hw(struct msdc_host *host)
     msdc_set_pad_init(host);
 #endif
 
-    INIT_MSG("msdc drving<clk %d,cmd %d,dat %d>",hw->clk_drv,hw->cmd_drv,hw->dat_drv);
-
     /* write crc timeout detection */
     sdr_set_field(MSDC_PATCH_BIT0, 1 << 30, 1);
 
@@ -10363,7 +10090,6 @@ void SRC_trigger_signal(int i_on)
 {
     if ((ghost!= NULL) && (ghost->hw->flags & MSDC_SDIO_IRQ))
     {
-        printk("msdc2 SRC_trigger_signal %d \n",i_on);
         src_clk_control = i_on;
         if (src_clk_control)
         {
@@ -10372,8 +10098,6 @@ void SRC_trigger_signal(int i_on)
             if(ghost->mmc->sdio_irq_thread &&  (atomic_read(&ghost->mmc->sdio_irq_thread_abort) == 0))      //if (ghost->mmc->sdio_irq_thread)
             {
                 mmc_signal_sdio_irq(ghost->mmc);
-                if (u_msdc_irq_counter<3)
-                    printk("msdc2 SRC_trigger_signal mmc_signal_sdio_irq \n");
             }
             //printk("msdc2 SRC_trigger_signal ghost->id=%d\n",ghost->id);
         }
@@ -10411,7 +10135,6 @@ int sdio_stop_transfer(void)
     {
         if(mtk_msdc_host[hostidx]==NULL)
         {
-            printk("[%s] mtk_msdc_host[%d] = NULL\n", __func__, hostidx);
             continue;
         }
         if(is_card_sdio(mtk_msdc_host[hostidx]))
@@ -10421,7 +10144,6 @@ int sdio_stop_transfer(void)
             while(1)
             {
                 if (atomic_read(&host->ot_done)) {
-                    printk("[%s] msdc%d prev. online tuning done, host->ot_work.chg_volt = %d\n", __func__, host->id, host->ot_work.chg_volt);
                     break;
                 }
 
@@ -10430,14 +10152,12 @@ int sdio_stop_transfer(void)
 #endif  // MTK_SDIO30_ONLINE_TUNING_SUPPORT
             if(atomic_read(&host->sdio_stopping))
             {
-                printk("[%s] msdc%d sdio stopping\n", __func__, host->id);
                 wait_for_completion_interruptible(&host->ot_work.ot_complete);
                 //return -1;
             }
 #ifdef MTK_SDIO30_ONLINE_TUNING_SUPPORT
 			else if(atomic_read(&host->ot_done) == 0)
 			{
-				printk("[%s] msdc%d online tuning is working\n", __func__, host->id);
 				wait_for_completion_interruptible(&host->ot_work.ot_complete);
 				//return -1;
 			}
@@ -10486,13 +10206,11 @@ int sdio_start_ot_transfer(void)
 
 	count--;
 	if(count != 0)
-		printk("[%s] sdio stop and start are not pairwise, count = %d\n", __func__, count);
 
     for(hostidx = 0; hostidx < HOST_MAX_NUM; hostidx++)
     {
         if(mtk_msdc_host[hostidx]==NULL)
         {
-            printk("[%s] mtk_msdc_host[%d] = NULL\n", __func__, hostidx);
             continue;
         }
         if(is_card_sdio(mtk_msdc_host[hostidx]))
@@ -10502,13 +10220,10 @@ int sdio_start_ot_transfer(void)
             u32 vcore_uv_off, vcore_sel, vcore_uv, fIdent = 0;
             static u32 prev_vcore_sel = 0;
 
-            printk("[%s] msdc%d Check vcore\n", __func__, host->id);
-
             vcore_uv_off = autok_get_current_vcore_offset();
             vcore_uv = mt65x2_vcore_tbl[vcore_uv_off];
             vcore_sel = msdc_autok_get_vcore(vcore_uv, &fIdent);
             if(vcore_sel == prev_vcore_sel) {
-                printk("[%s] voltage doesn't change\n", __func__);
                 atomic_set(&host->sdio_stopping, 0);
                 complete(&host->ot_work.ot_complete);
                 autok_release_host(host);
@@ -10593,8 +10308,6 @@ static int msdc_drv_probe(struct platform_device *pdev)
     volatile u16 l_val;
 #endif
 
-    printk("of msdc DT probe %s! \n", pdev->dev.of_node->name);
-
     /* iomap register */
     base = of_iomap(pdev->dev.of_node, 0);
     if (!base) {
@@ -10602,12 +10315,10 @@ static int msdc_drv_probe(struct platform_device *pdev)
         return -ENOMEM;
     }
     else {
-        printk("of_iomap for msdc @ 0x%p\n", base);
     }
 
     /* get irq #  */
     irq = irq_of_parse_and_map(pdev->dev.of_node, 0);
-    printk("msdc get irq # %d\n", irq);
     BUG_ON(irq < 0);
     l_irq_data.irq = irq;
 
@@ -10615,31 +10326,26 @@ static int msdc_drv_probe(struct platform_device *pdev)
     if (msdc_gpio_node == NULL) {
  	    msdc_gpio_node = of_find_compatible_node(NULL, NULL, "mediatek,GPIO");
         msdc_gpio_base = of_iomap(msdc_gpio_node, 0);
-        printk("of_iomap for gpio base @ 0x%p\n", msdc_gpio_base);
     }
 
     if (msdc_io_cfg_left_node == NULL) {
  	    msdc_io_cfg_left_node = of_find_compatible_node(NULL, NULL, "mediatek,IOCFG_L");
         msdc_io_cfg_left_base = of_iomap(msdc_io_cfg_left_node, 0);
-        printk("of_iomap for IOCFG_L base @ 0x%p\n", msdc_io_cfg_left_base);
     }
 
     if (msdc_io_cfg_top_node == NULL) {
  	    msdc_io_cfg_top_node = of_find_compatible_node(NULL, NULL, "mediatek,IOCFG_T");
         msdc_io_cfg_top_base = of_iomap(msdc_io_cfg_top_node, 0);
-        printk("of_iomap for IOCFG_T base @ 0x%p\n", msdc_io_cfg_top_base);
     }
 
     if (msdc_io_cfg_bottom_node == NULL) {
  	    msdc_io_cfg_bottom_node = of_find_compatible_node(NULL, NULL, "mediatek,IOCFG_B");
         msdc_io_cfg_bottom_base = of_iomap(msdc_io_cfg_bottom_node, 0);
-        printk("of_iomap for IOCFG_B base @ 0x%p\n", msdc_io_cfg_bottom_base);
     }
 
     if (msdc_io_cfg_right_node == NULL) {
  	    msdc_io_cfg_right_node = of_find_compatible_node(NULL, NULL, "mediatek,IOCFG_R");
         msdc_io_cfg_right_base = of_iomap(msdc_io_cfg_right_node, 0);
-        printk("of_iomap for IOCFG_R base @ 0x%p\n", msdc_io_cfg_right_base);
     }
 
     if (reg_VEMC_3V3 == NULL) {
@@ -10658,33 +10364,28 @@ static int msdc_drv_probe(struct platform_device *pdev)
     if (msdc_apmixed_node == NULL) {
  	    msdc_apmixed_node = of_find_compatible_node(NULL, NULL, "mediatek,APMIXED");
         msdc_apmixed_base = of_iomap(msdc_apmixed_node, 0);
-        printk("of_iomap for APMIXED base @ 0x%p\n", msdc_apmixed_base);
     }
 
     if (msdc_topckgen_node == NULL) {
  	    msdc_topckgen_node = of_find_compatible_node(NULL, NULL, "mediatek,TOPCKGEN");
         msdc_topckgen_base = of_iomap(msdc_topckgen_node, 0);
-        printk("of_iomap for TOPCKGEN base @ 0x%p\n", msdc_topckgen_base);
     }
 
     if (msdc_infracfg_node == NULL) {
         msdc_infracfg_node = of_find_compatible_node(NULL, NULL, "mediatek,INFRACFG");
         msdc_infracfg_base = of_iomap(msdc_infracfg_node, 0);
-        printk("of_iomap for infracfg base @ 0x%p\n", msdc_infracfg_base);
     }
 
 #ifdef FPGA_PLATFORM
     if (fpga_pwr_gpio == NULL) {
         fpga_pwr_gpio = of_iomap(pdev->dev.of_node, 1);
         fpga_pwr_gpio_eo = fpga_pwr_gpio + 0x4;
-        printk("FPAG PWR_GPIO, PWR_GPIO_EO address 0x%p, 0x%p\n", fpga_pwr_gpio, fpga_pwr_gpio_eo);
     }
 
     l_val = sdr_read16(PWR_GPIO_EO);
     sdr_write16(PWR_GPIO_EO, (l_val |/* PWR_GPIO_L4_DIR |*/ PWR_MASK_EN | PWR_MASK_VOL_33 | PWR_MASK_VOL_18));
 
     l_val = sdr_read16(PWR_GPIO_EO);
-    printk("[%s]: pwr gpio dir = 0x%x\n", __func__, l_val);
 #endif
 
     if (first_probe == 0) {
@@ -10695,28 +10396,24 @@ static int msdc_drv_probe(struct platform_device *pdev)
     if (strcmp(pdev->dev.of_node->name, "MSDC0") == 0) {
         hw = &msdc0_hw;
         pdev->id = 0;
-        printk("platform_data hw:0x%p, is msdc0_hw \n", hw);
     }
 #endif
 #if defined(CFG_DEV_MSDC1)
     if (strcmp(pdev->dev.of_node->name, "MSDC1") == 0) {
         hw = &msdc1_hw;
         pdev->id = 1;
-        printk("platform_data hw:0x%p, is msdc1_hw \n", hw);
     }
 #endif
 #if defined(CFG_DEV_MSDC2)
     if (strcmp(pdev->dev.of_node->name, "MSDC2") == 0) {
         hw = &msdc2_hw;
         pdev->id = 2;
-        printk("platform_data hw:0x%p, is msdc2_hw \n", hw);
     }
 #endif
 #if defined(CFG_DEV_MSDC3)
     if (strcmp(pdev->dev.of_node->name, "MSDC3") == 0) {
         hw = &msdc3_hw;
         pdev->id = 3;
-        printk("platform_data hw:0x%p, is msdc3_hw \n", hw);
     }
 #endif
 
@@ -10726,7 +10423,6 @@ static int msdc_drv_probe(struct platform_device *pdev)
     if ((pdev->id == 1) && (hw->host_function == MSDC_SD) && (msdc_eint_node == NULL)) {
         msdc_eint_node = of_find_compatible_node(NULL, NULL, "mediatek, MSDC1_INS-eint");
         if (msdc_eint_node) {
-            printk("find MSDC1_INS-eint node!!\n");
             hw->flags |= (MSDC_CD_PIN_EN | MSDC_REMOVABLE);
 
             /* get irq #  */
@@ -10736,7 +10432,6 @@ static int msdc_drv_probe(struct platform_device *pdev)
             if (!cd_irq) {
                 printk("can't irq_of_parse_and_map for card detect eint!!\n");
             } else {
-                printk("msdc1 EINT get irq # %d\n", cd_irq);
             }
         } else {
             printk("can't find MSDC1_INS-eint compatible node\n");
@@ -10758,7 +10453,6 @@ static int msdc_drv_probe(struct platform_device *pdev)
 			else if (g_msdc_vmc_cal_org == 0x1)
 				g_msdc_vmc_cal_shift = 0xf;
 		}
-		printk("msdc1 VMC CAL org = 0x%x, shift = 0x%x\n", g_msdc_vmc_cal_org, g_msdc_vmc_cal_shift);
 	}
 
     /* Allocate MMC host for this device */
@@ -10788,7 +10482,6 @@ static int msdc_drv_probe(struct platform_device *pdev)
         mmc->caps2 |= MMC_CAP2_HS200_1_8V_SDR;
     }
 #if defined(MSDC0_EMMC50_SUPPORT)
-    printk("[%s]: hw->flags=0x%lx, MSDC_HS400=0x%x\n", __func__, hw->flags, MSDC_HS400);
     if(hw->flags & MSDC_HS400){
         mmc->caps2 |= MMC_CAP2_HS400_1_8V_DDR;
     }
@@ -10815,8 +10508,6 @@ static int msdc_drv_probe(struct platform_device *pdev)
     if((hw->host_function == MSDC_EMMC) && (hw->flags & MSDC_CACHE) &&
         ((boot_mode == NORMAL_BOOT) || (boot_mode == ALARM_BOOT) || (boot_mode == SW_REBOOT)))
         mmc->caps2 |= MMC_CAP2_CACHE_CTRL;
-
-    printk("[%s]: boot_mode = %d, caps2 = %x \n", __func__, boot_mode, mmc->caps2);
 #endif
 
     /* MMC core transfer sizes tunable parameters */
@@ -11037,18 +10728,12 @@ static int msdc_drv_probe(struct platform_device *pdev)
 #endif
 
 #ifdef MTK_MSDC_BRINGUP_DEBUG
-    printk("[%s]: msdc%d, mmc->caps=0x%x, mmc->caps2=0x%x\n", __func__, host->id, mmc->caps, mmc->caps2);
-    printk(KERN_ERR "[%s]: msdc%d, msdc cg[0x10000024][bit18 for msdc1, bit17 for msdc0]=0x%x, msdc mux[0x10000000][bit20~22 for msdc1, bit11~13 for msdc0]=0x%x\n",
-                     __func__, host->id, sdr_read32(msdc_topckgen_base+0x24), sdr_read32(msdc_topckgen_base));
 #endif
 
 #ifdef FPGA_PLATFORM
   #ifdef CONFIG_MTK_EMMC_SUPPORT
-    printk("[%s]: waiting emmc init complete\n", __func__);
     host->mmc->card_init_wait(host->mmc);
-    printk("[%s]: start read write compare test\n", __func__);
     emmc_multi_rw_compare(0, 0x200, 0xf);
-    printk("[%s]: finish read write compare test\n", __func__);
   #endif
 #endif
 
@@ -11092,8 +10777,6 @@ static int msdc_drv_remove(struct platform_device *pdev)
     host = mmc_priv(mmc);
     BUG_ON(!host);
 
-    ERR_MSG("removed !!!");
-
     platform_set_drvdata(pdev, NULL);
     mmc_remove_host(host->mmc);
     msdc_deinit_hw(host);
@@ -11179,7 +10862,6 @@ static int msdc_drv_suspend(struct platform_device *pdev, pm_message_t state)
                     host->error = 0;
                 }
             }
-            ERR_MSG("msdc suspend cur_cfg=%x, save_cfg=%x, cur_hz=%d, save_hz=%d", sdr_read32(MSDC_CFG), host->saved_para.msdc_cfg, host->mclk, host->saved_para.hz);
         }
     }
     return ret;
@@ -11194,7 +10876,6 @@ static int msdc_drv_resume(struct platform_device *pdev)
 
     if(host->hw->flags & MSDC_SDIO_IRQ)
     {
-        printk("msdc msdc_drv_resume \n");
     }
     state.event = PM_EVENT_RESUME;
     if (mmc && (host->hw->flags & MSDC_SYS_SUSPEND)) {/* will set for card */
@@ -11250,8 +10931,6 @@ static int __init mt_msdc_init(void)
     if ((proc_emmc = proc_create( "emmc", 0, NULL, &proc_emmc_fops)));
 #endif /* CONFIG_MTK_EMMC_SUPPORT && CONFIG_PROC_FS */
 
-    printk(KERN_INFO DRV_NAME ": MediaTek MSDC Driver\n");
-
     msdc_debug_proc_init();
     msdc_init_dma_latest_address();
     return 0;
diff --git a/drivers/misc/mediatek/mt_logger/mt_storage_logger.c b/drivers/misc/mediatek/mt_logger/mt_storage_logger.c
index c7cc78450..1a2ce3733 100644
--- a/drivers/misc/mediatek/mt_logger/mt_storage_logger.c
+++ b/drivers/misc/mediatek/mt_logger/mt_storage_logger.c
@@ -368,7 +368,6 @@ static int storage_logger_dump_write_proc(struct file *file, const char *buffer,
 	tempBufPtr = (char *)storage_logger_mem_pool;
 	logSize = storage_logger_bufsize;
 	u4CopySize = (count < (sizeof(tmpBuf) - 1)) ? count : (sizeof(tmpBuf) - 1);
-	SLog_MSG("storage_logger_bufsize:%d", storage_logger_bufsize);
 	if (copy_from_user(tmpBuf, buffer, u4CopySize)) {
 		goto error;
 	}
@@ -392,7 +391,6 @@ static int storage_logger_dump_write_proc(struct file *file, const char *buffer,
 			old_fs = get_fs();
 			set_fs(KERNEL_DS);
 			while (logSize > 0) {
-				SLog_MSG("logSize:%d", logSize);
 				ret = do_sync_write(fp, tempBufPtr, logSize, &fp->f_pos);
 				if (ret <= 0)
 					goto end;
@@ -452,7 +450,6 @@ static int storage_logger_bufsize_write_proc(struct file *file, const char *buff
 	if (0 != local_logger_bs) {
 		if ((local_logger_bs != storage_logger_bufsize)) {
 			/* Free first, then vmalloc */
-			SLog_MSG("storage_logger_mem_pool_addr:0x%p", storage_logger_mem_pool);
 
 			if (NULL != storage_logger_mem_pool)
 				vfree(storage_logger_mem_pool);
@@ -822,7 +819,6 @@ static int storage_logger_probe(struct platform_device *pdev)
 
 static void storage_logger_remove(struct platform_device *pdev)
 {
-	SLog_MSG("storage_logger_remove");
 }
 
 static int storage_logger_suspend(struct platform_device *pdev, pm_message_t mesg)
@@ -870,7 +866,6 @@ static int storage_logger_write_proc(struct file *file, const char *buffer, size
 	acBuf[CopySize] = '\0';
 
 	if (2 == sscanf(acBuf, "%s %d", cmd, &tmp)) {
-		SLog_MSG("Your command: %s data: %d", cmd, tmp);
 		if (!strncmp(cmd, "ENABLE", sizeof("ENABLE"))) {
 			if (atomic_read(&external_read_counter) > 0) {
 				return count;
@@ -1164,7 +1159,6 @@ static inline struct logger_type_info *find_type_info(unsigned int msg_id)
 #if 1
 static int storage_logger_proc_show(struct seq_file *m, void *v)
 {
-	SLog_MSG("storage_logger_proc_show");
 	/* seq_buf_ptr = m->buf; */
 	m->buf = (char *)storage_logger_mem_pool;
 	m->count = writeIndex << 2;
@@ -1893,7 +1887,6 @@ static int __init storage_logger_init(void)
 	if (!procEntry)
 		SLog_MSG("add /proc/driver/fs_rectime entry fail");
 
-	SLog_MSG("storage_logger_init success\n");
 	return ret;
 }
 
diff --git a/drivers/misc/mediatek/mu3d/drv/musb_gadget.c b/drivers/misc/mediatek/mu3d/drv/musb_gadget.c
index 15b48c25d..37098f718 100644
--- a/drivers/misc/mediatek/mu3d/drv/musb_gadget.c
+++ b/drivers/misc/mediatek/mu3d/drv/musb_gadget.c
@@ -195,7 +195,6 @@ __acquires(ep->musb->lock)
 	int			busy = ep->busy;
 
 	if (unlikely(list_empty(&ep->req_list))) {
-		os_printk(K_ERR, "ep->req_list is empty:%s\n", ep->end_point.name);
 		return;
 	}
 
@@ -209,19 +208,7 @@ __acquires(ep->musb->lock)
 	ep->busy = 1;
 	spin_unlock(&musb->lock);
 	unmap_dma_buffer(req, musb);
-	if (request->status == 0)
-		//dev_dbg(musb->controller, "%s done request %p,  %d/%d\n",
-		os_printk(K_DEBUG, "%s done request %p,  %d/%d\n",
-				ep->end_point.name, request,
-				req->request.actual, req->request.length);
-	else
-		//dev_dbg(musb->controller, "%s request %p, %d/%d fault %d\n",
-		os_printk(K_DEBUG, "%s request %p, %d/%d fault %d\n",
-				ep->end_point.name, request,
-				req->request.actual, req->request.length,
-				request->status);
 
-	os_printk(K_DEBUG, "*************** musb_g_giveback : %p, #%d\n", request, req->request.actual);
 	req->request.complete(&req->ep->end_point, &req->request);
 	spin_lock(&musb->lock);
 	ep->busy = busy;
@@ -237,9 +224,6 @@ static void nuke(struct musb_ep *ep, const int status)
 {
 	struct musb_request	*req = NULL;
 
-	os_printk(K_INFO, "%s status=%d %s-%s\n", __func__, status, ep->end_point.name,
-					(ep->is_in ? "IN": "OUT"));
-
 	ep->busy = 1;
 
 #ifdef USE_SSUSB_QMU
@@ -250,7 +234,6 @@ static void nuke(struct musb_ep *ep, const int status)
 	while (!list_empty(&ep->req_list)) {
 		req = list_first_entry(&ep->req_list, struct musb_request, list);
 		musb_g_giveback(ep, &req->request, status);
-		os_printk(K_INFO, "%s call musb_g_giveback() EP is %s\n", __func__, ep->end_point.name);
 	}
 }
 
@@ -324,8 +307,6 @@ static void txstate(struct musb *musb, struct musb_request *req)
 	u32 txcsr0 = 0, maxp;
 	int			use_dma = 0;
 
-	os_printk(K_DEBUG, "%s\n", __func__);
-
 	musb_ep = req->ep;
 
 	/* we shouldn't get here while DMA is active ... but we do ... */
@@ -361,8 +342,6 @@ static void txstate(struct musb *musb, struct musb_request *req)
 		mu3d_hal_write_fifo(epnum,fifo_count,(u8 *) (request->buf + request->actual), maxp);
 		request->actual += fifo_count;
 
-		os_printk(K_DEBUG, "%s actual=%d, fifo_count=%d\n", __func__, request->actual, fifo_count);
-
 #if 0
 		musb_write_fifo(musb_ep->hw_ep, fifo_count,
 				(u8 *) (request->buf + request->actual));
@@ -498,8 +477,6 @@ static void rxstate(struct musb *musb, struct musb_request *req)
 		return;
 	}
 
-	os_printk(K_DEBUG, "epnum=%d, rxcsr addr=%lX, rxcsr0=%X\n", epnum, (uintptr_t)(musb->endpoints[epnum].addr_rxcsr0), rxcsr0);
-
 	if(rxcsr0 & RX_SENDSTALL) {
 		return;
 	}
@@ -524,9 +501,6 @@ static void rxstate(struct musb *musb, struct musb_request *req)
 		}
 	}
 
-	os_printk(K_DEBUG, "%s length=%d, actual=%d, fifo_count=%d\n", __func__, request->length, request->actual, fifo_count);
-	os_printk(K_DEBUG, "%s len=%d, packet_sz=%d\n", __func__, len, musb_ep->packet_sz);
-
 	/* reach the end or short packet detected */
 	if (request->actual == request->length || fifo_count < musb_ep->packet_sz)
 		musb_g_giveback(musb_ep, request, 0);
@@ -535,9 +509,7 @@ static void rxstate(struct musb *musb, struct musb_request *req)
 #ifdef NEVER
 	/* Check other slot is empty*/
 	rxcsr0 = os_readl(musb->endpoints[epnum].addr_rxcsr0);
-	os_printk(K_DEBUG, "rxcsr0 fifoempty=0x%x\n", rxcsr0 & RX_FIFOEMPTY);
 	if (!(rxcsr0 & RX_FIFOEMPTY)) {
-		printk("==READ AGAIN!!!==\n");
 		musb_g_rx(musb, epnum);
 	}
 #endif /* NEVER */
@@ -603,8 +575,6 @@ static int musb_gadget_enable(struct usb_ep *ep,
 	if (!ep || !desc)
 		return -EINVAL;
 
-	os_printk(K_INFO, "musb_gadget_enable %s\n", ep->name);
-
 	musb_ep = to_musb_ep(ep);
 	hw_ep = musb_ep->hw_ep;
 	musb = musb_ep->musb;
@@ -633,8 +603,6 @@ static int musb_gadget_enable(struct usb_ep *ep,
 
 	musb_ep->packet_sz = maxp;
 
-	os_printk(K_DEBUG, "U3D_EPIER=0x%X\n", os_readl(U3D_EPIER));
-
 	/* enable the interrupts for the endpoint, set the endpoint
 	 * packet size (or fail), set the mode, clear the fifo
 	 */
@@ -653,10 +621,8 @@ static int musb_gadget_enable(struct usb_ep *ep,
 			goto fail;
 
 #ifndef USE_SSUSB_QMU
-		os_printk(K_DEBUG, "epnum=%d, int_txe=0x%x, EPIER=0x%x+\n", epnum, int_txe, os_readl(U3D_EPIER));
 		int_txe |= (1 << epnum);
 		os_writel(U3D_EPIESR, int_txe);
-		os_printk(K_DEBUG, "epnum=%d, int_txe=0x%x, EPIER=0x%x-\n", epnum, int_txe, os_readl(U3D_EPIER));
 #endif
 		dir = USB_TX;
 
@@ -687,10 +653,8 @@ static int musb_gadget_enable(struct usb_ep *ep,
 		}
 
 #ifndef USE_SSUSB_QMU
-		os_printk(K_DEBUG, "int_rxe=0x%x, EPIER=0x%x+\n", int_rxe, os_readl(U3D_EPIER));
 		int_rxe |= (BIT16 << epnum);
 		os_writel(U3D_EPIESR, int_rxe);
-		os_printk(K_DEBUG, "int_rxe=0x%x, EPIER=0x%x-\n", int_rxe, os_readl(U3D_EPIER));
 #endif
 		dir = USB_RX;
 
@@ -747,19 +711,8 @@ static int musb_gadget_enable(struct usb_ep *ep,
 	status = 0;
 
 	musb->active_ep++;
-	os_printk(K_INFO, "[U3D]%s active_ep=%d\n", __func__, musb->active_ep);
 
 	//pr_debug("%s periph: enabled %s for %s %s, %smaxpacket %d\n",
-	os_printk(K_INFO, "[U3D]%s periph: enabled %s for %s %s, %smaxpacket %d\n",
-			musb_driver_name, musb_ep->end_point.name,
-			({ char *s; switch (musb_ep->type) {
-			case USB_ENDPOINT_XFER_BULK:	s = "bulk"; break;
-			case USB_ENDPOINT_XFER_INT: s = "int"; break;
-			default:			s = "iso"; break;
-			}; s; }),
-			musb_ep->is_in ? "IN" : "OUT",
-			musb_ep->dma ? "dma, " : "",
-			musb_ep->packet_sz);
 
 	schedule_work(&musb->irq_work);
 
@@ -780,8 +733,6 @@ static int musb_gadget_disable(struct usb_ep *ep)
 	struct musb_ep	*musb_ep;
 	int		status = 0;
 
-	os_printk(K_INFO, "%s %s\n", __func__, ep->name);
-
 	musb_ep = to_musb_ep(ep);
 	musb = musb_ep->musb;
 	epnum = musb_ep->current_epnum;
@@ -819,7 +770,6 @@ static int musb_gadget_disable(struct usb_ep *ep)
 	schedule_work(&musb->irq_work);
 
 	musb->active_ep--;
-	os_printk(K_INFO, "[U3D]%s active_ep=%d\n", __func__, musb->active_ep);
 
 	if (musb->active_ep == 0 && musb->is_active == 0)
 		schedule_work(&musb->suspend_work);
@@ -883,10 +833,6 @@ void musb_ep_restart(struct musb *musb, struct musb_request *req)
 	 */
 #ifndef USE_SSUSB_QMU
 	//dev_dbg(musb->controller, "<== %s request %p len %u on hw_ep%d\n",
-	os_printk(K_DEBUG, "%s %s request %p len %u on hw_ep%d\n",
-		__func__, req->tx ? "TX/IN" : "RX/OUT",
-		&req->request, req->request.length, req->epnum);
-
 	if (req->tx)
 		txstate(musb, req);
 	else
@@ -922,8 +868,6 @@ static int musb_gadget_queue(struct usb_ep *ep, struct usb_request *req,
 	if (request->ep != musb_ep)
 		return -EINVAL;
 
-	os_printk(K_DEBUG, "%s %s, req=%p, len#%d\n", __func__, ep->name, req, request->request.length);
-
 	dev_dbg(musb->controller, "<== to %s request=%p\n", ep->name, req);
 
 	/* request is mine now... */
@@ -1054,8 +998,6 @@ static int musb_gadget_dequeue(struct usb_ep *ep, struct usb_request *request)
 	if (!ep || !request || to_musb_request(request)->ep != musb_ep)
 		return -EINVAL;
 
-	os_printk(K_INFO, "%s : request 0x%p\n", __func__, request);
-
 	spin_lock_irqsave(&musb->lock, flags);
 
 	list_for_each_entry(r, &musb_ep->req_list, list) {
@@ -1129,7 +1071,6 @@ static int musb_gadget_set_halt(struct usb_ep *ep, int value)
 		return -EINVAL;
 	mbase = musb->mregs;
 
-	os_printk(K_DEBUG, "musb_gadget_set_halt : %s...", ep->name);
 	spin_lock_irqsave(&musb->lock, flags);
 
 	if ((USB_ENDPOINT_XFER_ISOC == musb_ep->type)) {
@@ -1283,7 +1224,6 @@ static void musb_gadget_fifo_flush(struct usb_ep *ep)
 		txcsr0 = os_readl(musb->endpoints[epnum].addr_txcsr0);
 
 		if (!(txcsr0 & TX_FIFOEMPTY)) {
-			os_printk(K_DEBUG, "%s RESET\n", ep->name);
 			os_writel(U3D_EP_RST, os_readl(U3D_EP_RST) | (BIT16<<epnum));//reset TX EP
 			os_writel(U3D_EP_RST, os_readl(U3D_EP_RST) & ~(BIT16<<epnum));//reset reset TX EP
 
@@ -1295,7 +1235,6 @@ static void musb_gadget_fifo_flush(struct usb_ep *ep)
 		_ex_mu3d_hal_flush_qmu(epnum, USB_RX);
 		mu3d_hal_restart_qmu(epnum, USB_RX);
 #endif
-		os_printk(K_DEBUG, "%s RESET\n", ep->name);
 		//os_writew(musb->endpoints[epnum].addr_rxcsr0, rxcsr0 | USB_RXCSR_FLUSHFIFO);
 		//os_writew(musb->endpoints[epnum].addr_rxcsr0, rxcsr0 & (~USB_RXCSR_FLUSHFIFO));
 		os_writel(U3D_EP_RST, os_readl(U3D_EP_RST) | (1 << epnum));//reset RX EP
@@ -1339,7 +1278,6 @@ static int musb_gadget_wakeup(struct usb_gadget *gadget)
 	int		retries;
 
 	spin_lock_irqsave(&musb->lock, flags);
-        os_printk(K_DEBUG, "musb_gadget_wakeup\n");
 
 	switch (musb->xceiv->state) {
 	case OTG_STATE_B_PERIPHERAL:
@@ -1387,7 +1325,6 @@ static int musb_gadget_wakeup(struct usb_gadget *gadget)
 	}
 
 	status = 0;
-	os_printk(K_DEBUG, "****************** musb_gadget_wakeup......\n");
 //	mu3d_hal_resume();
 done:
 	spin_unlock_irqrestore(&musb->lock, flags);
@@ -1406,7 +1343,6 @@ musb_gadget_set_self_powered(struct usb_gadget *gadget, int is_selfpowered)
 static void musb_pullup(struct musb *musb, int is_on)
 {
 	if (musb->is_active == 0) {
-		os_printk(K_INFO, "power and clk is not ready!\n");
 		return;
 	}
 
@@ -1527,8 +1463,6 @@ init_peripheral_ep(struct musb *musb, struct musb_ep *ep, u8 epnum, int is_in)
 			(!epnum || hw_ep->is_shared_fifo) ? "" : (
 				is_in ? "in" : "out"));
 
-	os_printk(K_INFO, "%s, name=%s\n", __func__, ep->name);
-
 	ep->end_point.name = ep->name;
 	INIT_LIST_HEAD(&ep->end_point.ep_list);
 	if (!epnum) {
@@ -1543,8 +1477,6 @@ init_peripheral_ep(struct musb *musb, struct musb_ep *ep, u8 epnum, int is_in)
 		ep->end_point.ops = &musb_ep_ops;
 		list_add_tail(&ep->end_point.ep_list, &musb->g.ep_list);
 	}
-
-	os_printk(K_INFO, "%s, name=%s, maxp=%d\n", __func__, ep->end_point.name, ep->end_point.maxpacket);
 }
 
 /*
@@ -1560,13 +1492,9 @@ static inline void musb_g_init_endpoints(struct musb *musb)
 	/* initialize endpoint list just once */
 	INIT_LIST_HEAD(&(musb->g.ep_list));
 
-	os_printk(K_INFO, "%s nr_endpoints=%d\n", __func__,  musb->nr_endpoints);
-
 	for (epnum = 0, hw_ep = musb->endpoints;
 			epnum < musb->nr_endpoints;
 			epnum++, hw_ep++) {
-		os_printk(K_INFO, "%s epnum=%d shared_fifo=%d rx_maxp=%d tx_maxp=%d\n", \
-			__func__, epnum, hw_ep->is_shared_fifo, hw_ep->max_packet_sz_rx?:0, hw_ep->max_packet_sz_tx?:0);
 		if (hw_ep->is_shared_fifo /* || !epnum */) {
 			init_peripheral_ep(musb, &hw_ep->ep_in, epnum, 0);
 			count++;
@@ -1922,25 +1850,18 @@ extern void ep0_setup(struct musb *musb, struct musb_hw_ep  *hw_ep0, const struc
 
 void musb_conifg_ep0(struct musb *musb)
 {
-	os_printk(K_DEBUG, "U3D_DEVICE_CONF: %x\n", os_readl(U3D_DEVICE_CONF));
-
 	if (os_readl(U3D_DEVICE_CONF) & HW_USB2_3_SEL) { //SS
 		musb->g.speed = USB_SPEED_SUPER;
 		musb->g.ep0->maxpacket = 512;
 
-		os_printk(K_INFO, "musb_g_reset musb->g.speed: super\n");
 		ep0_setup(musb, musb->endpoints, &ep0_cfg_u3);
 	} else { //HS, FS
 		musb->g.speed = (u8)(os_readl(U3D_POWER_MANAGEMENT) & HS_MODE)
 				? USB_SPEED_HIGH : USB_SPEED_FULL;
 		musb->g.ep0->maxpacket = 64;
 
-		os_printk(K_INFO, "musb_g_reset musb->g.speed: %s\n", (musb->g.speed == USB_SPEED_HIGH) ? "high" : "full");
 		ep0_setup(musb, musb->endpoints, &ep0_cfg_u2);
 	}
-
-	os_printk(K_DEBUG, "U3D_EP0CSR: %x\n", os_readl(U3D_EP0CSR));
-	os_printk(K_DEBUG, "U3D_RXCOUNT0: %x\n", os_readl(U3D_RXCOUNT0));
 }
 
 void musb_g_reset(struct musb *musb)
diff --git a/drivers/misc/mediatek/pmic_wrap/mt6580/pwrap_hal.c b/drivers/misc/mediatek/pmic_wrap/mt6580/pwrap_hal.c
index e3a898d46..47f355e2f 100644
--- a/drivers/misc/mediatek/pmic_wrap/mt6580/pwrap_hal.c
+++ b/drivers/misc/mediatek/pmic_wrap/mt6580/pwrap_hal.c
@@ -84,7 +84,6 @@ static S32 pwrap_wacs2_hal( U32  write, U32  adr, U32  wdata, U32 *rdata )
  */
 S32 pwrap_init ( void )
 {
-    PWRAPLOG("There is no PMIC real chip, PMIC_WRAP not init\n");
 	return 0;
 }
 //EXPORT_SYMBOL(pwrap_init);
@@ -810,10 +809,8 @@ static S32 _pwrap_init_sistrobe( void )
 #ifdef SLV_6350    
 			_pwrap_wacs2_nochk(0, MT6350_DEW_READ_TEST, 0, &rdata);
 			if( rdata == MT6350_DEFAULT_VALUE_READ_TEST ) {
-				 PWRAPLOG("_pwrap_init_sistrobe [Read Test of MT6350] pass,index=%d rdata=%x\n", ind,rdata);
      			 result[0] |= (0x1 << ind);
     		}else {
-				 PWRAPLOG("_pwrap_init_sistrobe [Read Test of MT6350] tuning,index=%d rdata=%x\n", ind,rdata);
 			}
 #endif  
 	 }
@@ -1406,8 +1403,6 @@ static int pwrap_of_iomap(void)
 		return -ENOMEM;
 	}
 
-	pr_info("TOPRGU reg: 0x%p\n", toprgu_reg_base);
-	pr_info("TOPCKGEN reg: 0x%p\n", topckgen_base);
 	return 0;
 }
 
@@ -1432,7 +1427,6 @@ static int is_pwrap_init_done(void)
 		pwrap_dump_all_register();
 		return ret;
 	}
-	PWRAPLOG("init successfully done (%d)\n\n", ret);
 	return ret;
 }
 static int __init pwrap_hal_init(void)
@@ -1487,10 +1481,8 @@ static int __init pwrap_hal_init(void)
 		pr_info("PWRAP get irq fail\n");
 		return -ENODEV;
 	}
-	pr_info("PWRAP reg: 0x%p,  irq: %d\n", pwrap_base, pwrap_irq);
 #endif
 
-	PWRAPLOG("HAL init: version %s\n", VERSION);
 	mt_wrp = get_mt_pmic_wrap_drv();	
 	mt_wrp->store_hal = mt_pwrap_store_hal;
 	mt_wrp->show_hal = mt_pwrap_show_hal;
diff --git a/drivers/misc/mediatek/pmic_wrap/mt_pmic_wrap.c b/drivers/misc/mediatek/pmic_wrap/mt_pmic_wrap.c
index 916572d8f..30c5d7582 100644
--- a/drivers/misc/mediatek/pmic_wrap/mt_pmic_wrap.c
+++ b/drivers/misc/mediatek/pmic_wrap/mt_pmic_wrap.c
@@ -137,7 +137,6 @@ static struct syscore_ops pwrap_syscore_ops = {
 static int __init mt_pwrap_init(void)
 {
 	U32 ret = 0;
-	printk("[PWRAP] common driver init, version %s\n", VERSION);
 
 /* if(mt_wrp.init != NULL) */
 /* mt_wrp.init(); */
diff --git a/drivers/misc/mediatek/power/mt6580/battery_meter_hal.c b/drivers/misc/mediatek/power/mt6580/battery_meter_hal.c
index 002ab40e0..9a003d0e5 100755
--- a/drivers/misc/mediatek/power/mt6580/battery_meter_hal.c
+++ b/drivers/misc/mediatek/power/mt6580/battery_meter_hal.c
@@ -59,9 +59,6 @@ void get_hw_chip_diff_trim_value(void)
 
     chip_diff_trim_value_4_0 = reg_val_1 | (reg_val_2 << 3);
 
-    bm_print(BM_LOG_FULL, "[Chip_Trim] Reg[0x%x]=0x%x, Reg[0x%x]=0x%x, chip_diff_trim_value_4_0=%d\n", 
-        0x01C4, upmu_get_reg_value(0x01C4), 0x01C6, upmu_get_reg_value(0x01C6), chip_diff_trim_value_4_0);   
-    
     #else
     bm_print(BM_LOG_FULL,, "[Chip_Trim] need check reg number\n");
     #endif
@@ -69,7 +66,6 @@ void get_hw_chip_diff_trim_value(void)
     switch(chip_diff_trim_value_4_0){       
         case 0:    
             chip_diff_trim_value = 1000; 
-            bm_print(BM_LOG_FULL, "[Chip_Trim] chip_diff_trim_value = 1000\n");
             break;
         case 1:    chip_diff_trim_value = 1005; break;
         case 2:    chip_diff_trim_value = 1010; break;
@@ -106,8 +102,6 @@ void get_hw_chip_diff_trim_value(void)
             break;
     }
 
-    bm_print(BM_LOG_FULL, "[Chip_Trim] %d,%d\n", 
-        chip_diff_trim_value_4_0, chip_diff_trim_value);
 #endif
 }
 
@@ -120,8 +114,6 @@ kal_int32 use_chip_trim_value(kal_int32 not_trim_val)
 
     ret_val=((not_trim_val*chip_diff_trim_value)/1000);
 
-    bm_print(BM_LOG_FULL, "[use_chip_trim_value] %d -> %d\n", not_trim_val, ret_val);
-    
     return ret_val;
 #endif    
 }
@@ -139,13 +131,9 @@ int get_hw_ocv(void)
     #if defined(SWCHR_POWER_PATH)
     adc_result_reg = pmic_get_register_value(PMIC_RG_ADC_OUT_WAKEUP_SWCHR);
     adc_result = (adc_result_reg*r_val_temp*VOLTAGE_FULL_RANGE)/ADC_PRECISE;
-    bm_print(BM_LOG_CRTI, "[oam] get_hw_ocv (swchr) : adc_result_reg=%d, adc_result=%d\n", 
-        adc_result_reg, adc_result);
     #else
     adc_result_reg = pmic_get_register_value(PMIC_RG_ADC_OUT_WAKEUP_PCHR);
     adc_result = (adc_result_reg*r_val_temp*VOLTAGE_FULL_RANGE)/ADC_PRECISE;        
-    bm_print(BM_LOG_CRTI, "[oam] get_hw_ocv (pchr) : adc_result_reg=%d, adc_result=%d\n", 
-        adc_result_reg, adc_result);
     #endif
 
     adc_result += g_hw_ocv_tune_value;
@@ -219,7 +207,6 @@ static kal_int32 read_adc_v_bat_temp(void *data)
         
         if( IMM_IsAdcInitReady() == 0 )
         {
-            bm_print(BM_LOG_CRTI, "[get_tbat_volt] AUXADC is not ready");
             return 0;
         }
     
@@ -228,17 +215,14 @@ static kal_int32 read_adc_v_bat_temp(void *data)
         {
             ret_value = IMM_GetOneChannelValue(Channel, data, &ret_temp);
             ret += ret_temp;
-            bm_print(BM_LOG_FULL, "[get_tbat_volt] ret_temp=%d\n",ret_temp);
         }
         
         ret = ret*1500/4096 ;
         ret = ret/times;
-        bm_print(BM_LOG_CRTI, "[get_tbat_volt] Battery output mV = %d\n",ret);
 
         *(kal_int32*)(data) = ret;
 
     #else
-        bm_print(BM_LOG_FULL, "[read_adc_v_charger] return PMIC_IMM_GetOneChannelValue(4,times,1);\n");
         *(kal_int32*)(data) = PMIC_IMM_GetOneChannelValue(MT6350_AUX_BATON1,*(kal_int32*)(data),1);
     #endif
 #endif
@@ -299,8 +283,6 @@ static kal_int32 fgauge_read_columb_accurate(void *data)
 kal_int8 is_lbat_int=KAL_TRUE;
 void fg_bat_l_int_handler(void)
 {
-	bm_print(BM_LOG_CRTI, "[fg_bat_l_int_handler] \n");
-
 	pmic_set_register_value(PMIC_RG_LBAT_IRQ_EN_MIN,0);
 	pmic_set_register_value(PMIC_RG_LBAT_EN_MIN,0);
 	pmic_set_register_value(PMIC_RG_INT_EN_BAT_L,0);
@@ -331,8 +313,6 @@ static kal_int32 fgauge_set_low_battery_interrupt(void *data)
 
 	rawdata=voltage*4096/1800/4;
 
-	bm_print(BM_LOG_CRTI, "[fgauge_set_low_battery_interrupt] Battery voltage %d %d\n",rawdata,voltage);
-	
 	// 0:set interrupt 
 	pmic_set_register_value(PMIC_RG_INT_EN_BAT_L,1);
 
@@ -378,7 +358,6 @@ void trigger_hw_ocv(void)
 
 	while(pmic_get_register_value(PMIC_RG_ADC_RDY_WAKEUP_PCHR)==0)
 	{
-		bm_print(BM_LOG_FULL, "[trigger_hw_ocv] delay\n");
 		udelay(100);
 	}
 }
@@ -397,7 +376,6 @@ static kal_int32 get_refresh_hw_ocv(void *data)
 		hwocv1=get_hw_ocv();
 		trigger_hw_ocv();
 		hwocv2=get_hw_ocv();
-		bm_print(BM_LOG_CRTI, "[bat_get_zcv]%d %d\n",hwocv1,hwocv2);
 		pmic_set_register_value(PMIC_STRUP_AUXADC_START_SEL,0x0); 
 		pmic_turn_on_clock(0);
 
@@ -444,7 +422,6 @@ kal_int32 bm_ctrl_cmd(BATTERY_METER_CTRL_CMD cmd, void *data)
     {
     	if(bm_func[cmd]==NULL)
     	{
-    		bm_print(BM_LOG_FULL, "[bm_ctrl_cmd] NULL cmd=%d\n",cmd);
     	}
 		else
 		{
diff --git a/drivers/misc/mediatek/power/mt6580/charging_hw_pmic.c b/drivers/misc/mediatek/power/mt6580/charging_hw_pmic.c
index 3b33384bb..7301cc28c 100755
--- a/drivers/misc/mediatek/power/mt6580/charging_hw_pmic.c
+++ b/drivers/misc/mediatek/power/mt6580/charging_hw_pmic.c
@@ -311,11 +311,6 @@ static kal_uint32 charging_set_cv_voltage(void *data)
 
     pmic_set_register_value(PMIC_RG_VBAT_CV_VTH,register_value);
 
-    battery_log(BAT_LOG_CRTI,"[charging_set_cv_voltage] [0x%x]=0x%x, [0x%x]=0x%x\n",
-                    0x000c, upmu_get_reg_value(0x000c),
-                    0x0006, upmu_get_reg_value(0x0006)
-                    );
-
     return status;
 }     
 
@@ -414,7 +409,6 @@ static kal_uint32 charging_get_battery_status(void *data)
     battery_log(BAT_LOG_CRTI,"bat exist for evb\n");
 #else
 	val=pmic_get_register_value(PMIC_BATON_TDET_EN);
-	battery_log(BAT_LOG_FULL,"[charging_get_battery_status] BATON_TDET_EN = %d\n", val);
 	if (val) 
 	{
 	pmic_set_register_value(PMIC_BATON_TDET_EN,1);
@@ -478,8 +472,6 @@ static kal_uint32 charging_get_is_pcm_timer_trigger(void *data)
      else
          *(kal_bool*)(data) = KAL_FALSE;
  
-     battery_log(BAT_LOG_CRTI, "slp_get_wake_reason=%d\n", slp_get_wake_reason());
-
 #endif
         
     return status;
@@ -491,8 +483,6 @@ static kal_uint32 charging_get_is_pcm_timer_trigger(void *data)
      
 #if defined(CONFIG_POWER_EXT) || defined(CONFIG_MTK_FPGA)    
 #else 
-     battery_log(BAT_LOG_CRTI, "charging_set_platform_reset\n");
-  
      arch_reset(0,NULL);
 #endif
          
@@ -507,7 +497,6 @@ static kal_uint32 charging_get_is_pcm_timer_trigger(void *data)
 #else   
      *(kal_uint32*)(data) = get_boot_mode();
  
-     battery_log(BAT_LOG_CRTI, "get_boot_mode=%d\n", get_boot_mode());
 #endif
           
      return status;
@@ -520,7 +509,6 @@ static kal_uint32 charging_set_power_off(void *data)
   
 #if defined(CONFIG_POWER_EXT) || defined(CONFIG_MTK_FPGA)
 #else
-    battery_log(BAT_LOG_CRTI, "charging_set_power_off\n");
 	backlight_brightness_set(0);
 	msleep(200);
     kernel_power_off();
@@ -568,121 +556,89 @@ static kal_uint32 charging_set_ta_current_pattern(void *data)
 	
 	   if(increase == KAL_TRUE)
 	   {
-			battery_log(BAT_LOG_CRTI, "mtk_ta_increase() start\n");
-
 			pmic_set_register_value(PMIC_RG_CS_VTH,set_ta_off_current_reg_value); 
 			msleep(50);
 		
 			// patent start
 			pmic_set_register_value(PMIC_RG_CS_VTH,set_ta_on_current_reg_value); 
-			battery_log(BAT_LOG_CRTI, "mtk_ta_increase() on 1\n");
 			msleep(100);
 			pmic_set_register_value(PMIC_RG_CS_VTH,set_ta_off_current_reg_value); 
-			battery_log(BAT_LOG_CRTI, "mtk_ta_increase() off 1\n");
 			msleep(100);
 	
 			
 			pmic_set_register_value(PMIC_RG_CS_VTH,set_ta_on_current_reg_value); 
-			battery_log(BAT_LOG_CRTI, "mtk_ta_increase() on 2\n");
 			msleep(100);
 			pmic_set_register_value(PMIC_RG_CS_VTH,set_ta_off_current_reg_value); 
-			battery_log(BAT_LOG_CRTI, "mtk_ta_increase() off 2\n");
 			msleep(100);
 	
 		
 			pmic_set_register_value(PMIC_RG_CS_VTH,set_ta_on_current_reg_value); 
-			battery_log(BAT_LOG_CRTI, "mtk_ta_increase() on 3\n");
 			msleep(300);
 			pmic_set_register_value(PMIC_RG_CS_VTH,set_ta_off_current_reg_value);
-			battery_log(BAT_LOG_CRTI, "mtk_ta_increase() off 3\n");
 			msleep(100);
 	
 			
 			pmic_set_register_value(PMIC_RG_CS_VTH,set_ta_on_current_reg_value); 
-			battery_log(BAT_LOG_CRTI, "mtk_ta_increase() on 4\n");
 			msleep(300);
 			pmic_set_register_value(PMIC_RG_CS_VTH,set_ta_off_current_reg_value); 
-			battery_log(BAT_LOG_CRTI, "mtk_ta_increase() off 4\n");
 			msleep(100);
 	
 			
 			pmic_set_register_value(PMIC_RG_CS_VTH,set_ta_on_current_reg_value); 
-			battery_log(BAT_LOG_CRTI, "mtk_ta_increase() on 5\n");
 			msleep(300);
 			pmic_set_register_value(PMIC_RG_CS_VTH,set_ta_off_current_reg_value); 
-			battery_log(BAT_LOG_CRTI, "mtk_ta_increase() off 5\n");
 			msleep(100);
 	
 	
 			pmic_set_register_value(PMIC_RG_CS_VTH,set_ta_on_current_reg_value); 
-			battery_log(BAT_LOG_CRTI, "mtk_ta_increase() on 6\n");
 			msleep(500);
 	
 			pmic_set_register_value(PMIC_RG_CS_VTH,set_ta_off_current_reg_value); 
-			battery_log(BAT_LOG_CRTI, "mtk_ta_increase() off 6\n");
 			msleep(50);
 			// patent end
-	
-			battery_log(BAT_LOG_CRTI, "mtk_ta_increase() end \n");
 	   }
 	   else    //decrease
 	   {
-			battery_log(BAT_LOG_CRTI, "mtk_ta_decrease() start\n");
-	
 			pmic_set_register_value(PMIC_RG_CS_VTH,set_ta_off_current_reg_value); 
 			msleep(50);
 	
 			// patent start    
 			pmic_set_register_value(PMIC_RG_CS_VTH,set_ta_on_current_reg_value); 
-			battery_log(BAT_LOG_CRTI, "mtk_ta_decrease() on 1");
 			msleep(300);
 			pmic_set_register_value(PMIC_RG_CS_VTH,set_ta_off_current_reg_value);
-			battery_log(BAT_LOG_CRTI, "mtk_ta_decrease() off 1");
 			msleep(100);
 			
 			
 			pmic_set_register_value(PMIC_RG_CS_VTH,set_ta_on_current_reg_value); 
-			battery_log(BAT_LOG_CRTI, "mtk_ta_decrease() on 2");
 			msleep(300);
 			pmic_set_register_value(PMIC_RG_CS_VTH,set_ta_off_current_reg_value); 
-			battery_log(BAT_LOG_CRTI, "mtk_ta_decrease() off 2");
 			msleep(100);
 	
 			
 			pmic_set_register_value(PMIC_RG_CS_VTH,set_ta_on_current_reg_value); 
-			battery_log(BAT_LOG_CRTI, "mtk_ta_decrease() on 3");
 			msleep(300);
 			pmic_set_register_value(PMIC_RG_CS_VTH,set_ta_off_current_reg_value); 
-			battery_log(BAT_LOG_CRTI, "mtk_ta_decrease() off 3");
 			msleep(100);
 	
 			
 			pmic_set_register_value(PMIC_RG_CS_VTH,set_ta_on_current_reg_value); 
-			battery_log(BAT_LOG_CRTI, "mtk_ta_decrease() on 4");
 			msleep(100);
 			pmic_set_register_value(PMIC_RG_CS_VTH,set_ta_off_current_reg_value); 
-			battery_log(BAT_LOG_CRTI, "mtk_ta_decrease() off 4");
 			msleep(100);
 	
 			
 			pmic_set_register_value(PMIC_RG_CS_VTH,set_ta_on_current_reg_value); 
-			battery_log(BAT_LOG_CRTI, "mtk_ta_decrease() on 5");
 			msleep(100);
 			pmic_set_register_value(PMIC_RG_CS_VTH,set_ta_off_current_reg_value); 
-			battery_log(BAT_LOG_CRTI, "mtk_ta_decrease() off 5");
 			msleep(100);
 	
 			
 			pmic_set_register_value(PMIC_RG_CS_VTH,set_ta_on_current_reg_value); 
-			battery_log(BAT_LOG_CRTI, "mtk_ta_decrease() on 6");
 			msleep(500);
 		   
 			pmic_set_register_value(PMIC_RG_CS_VTH,set_ta_off_current_reg_value); 
-			battery_log(BAT_LOG_CRTI, "mtk_ta_decrease() off 6");
 			msleep(50);
 			 // patent end
-	
-			battery_log(BAT_LOG_CRTI, "mtk_ta_decrease() end \n"); 
 	   }
 
 	return status;
diff --git a/drivers/misc/mediatek/power/mt6580/pmic.c b/drivers/misc/mediatek/power/mt6580/pmic.c
index aa16bda83..92b394755 100644
--- a/drivers/misc/mediatek/power/mt6580/pmic.c
+++ b/drivers/misc/mediatek/power/mt6580/pmic.c
@@ -277,9 +277,6 @@ void mt6350_dump_register(void)
 //==============================================================================
 void upmu_interrupt_chrdet_int_en(kal_uint32 val)
 {
-    PMICLOG("[upmu_interrupt_chrdet_int_en] val=%d.\r\n", val);
-
-
     pmic_set_register_value(PMIC_RG_INT_EN_CHRDET,val);
 }
 EXPORT_SYMBOL(upmu_interrupt_chrdet_int_en);
@@ -294,7 +291,6 @@ kal_uint32 upmu_get_rgs_chrdet(void)
 
 
     val = pmic_get_register_value(PMIC_RGS_CHRDET);
-    PMICLOG("[upmu_get_rgs_chrdet] CHRDET status = %d\n", val);
 
     return val;
 }
@@ -305,7 +301,6 @@ kal_uint32 upmu_get_rgs_chrdet(void)
 U32 g_reg_value=0;
 static ssize_t show_pmic_access(struct device *dev,struct device_attribute *attr, char *buf)
 {
-    PMICLOG("[show_pmic_access] 0x%x\n", g_reg_value);
     return sprintf(buf, "%u\n", g_reg_value);
 }
 static ssize_t store_pmic_access(struct device *dev,struct device_attribute *attr, const char *buf, size_t size)
@@ -314,23 +309,18 @@ static ssize_t store_pmic_access(struct device *dev,struct device_attribute *att
     char *pvalue = NULL;
     U32 reg_value = 0;
     U32 reg_address = 0;
-    PMICLOG("[store_pmic_access] \n");
     if(buf != NULL && size != 0)
     {
-        PMICLOG("[store_pmic_access] buf is %s \n",buf);
         reg_address = simple_strtoul(buf,&pvalue,16);
 
         if(size > 5)
         {
             reg_value = simple_strtoul((pvalue+1),NULL,16);
-            PMICLOG("[store_pmic_access] write PMU reg 0x%x with value 0x%x !\n",reg_address,reg_value);
             ret=pmic_config_interface(reg_address, reg_value, 0xFFFF, 0x0);
         }
         else
         {
             ret=pmic_read_interface(reg_address, &g_reg_value, 0xFFFF, 0x0);
-            PMICLOG("[store_pmic_access] read PMU reg 0x%x with value 0x%x !\n",reg_address,g_reg_value);
-            PMICLOG("[store_pmic_access] Please use \"cat pmic_access\" to get value\r\n");
         }
     }
     return size;
@@ -344,7 +334,6 @@ kal_uint8 g_reg_value_pmic=0;
 
 static ssize_t show_pmic_dvt(struct device *dev,struct device_attribute *attr, char *buf)
 {
-    PMICLOG("[show_pmic_dvt] 0x%x\n", g_reg_value_pmic);
     return sprintf(buf, "%u\n", g_reg_value_pmic);
 }
 
@@ -353,18 +342,12 @@ static ssize_t store_pmic_dvt(struct device *dev,struct device_attribute *attr,
     char *pvalue = NULL;
     unsigned int test_item = 0;
     
-    PMICLOG("[store_pmic_dvt] \n");
-    
     if(buf != NULL && size != 0)
     {
-        PMICLOG("[store_pmic_dvt] buf is %s and size is %zu \n",buf,size);
         test_item = simple_strtoul(buf,&pvalue,10);
-        PMICLOG("[store_pmic_dvt] test_item=%d\n", test_item);
 
         #ifdef MTK_PMIC_DVT_SUPPORT 
         pmic_dvt_entry(test_item);
-        #else
-        PMICLOG("[store_pmic_dvt] no define MTK_PMIC_DVT_SUPPORT\n");
         #endif
     }    
     return size;
@@ -391,9 +374,6 @@ static int mtk_regulator_enable(struct regulator_dev *rdev)
         val=upmu_get_reg_value(pmu_flags_table[mreg->en_reg].offset);
     }
 
-    PMICLOG("regulator_enable(name=%s id=%d en_reg=%x vol_reg=%x) [%x]=0x%x\n",rdesc->name, rdesc->id
-        ,mreg->en_reg,mreg->vol_reg,add,val);
-
     return 0;
 }
 
@@ -418,9 +398,6 @@ static int mtk_regulator_disable(struct regulator_dev *rdev)
         val=upmu_get_reg_value(pmu_flags_table[mreg->en_reg].offset);       
     }
 
-    PMICLOG("regulator_disable(name=%s id=%d en_reg=%x vol_reg=%x use_count=%d) [%x]=0x%x\n",rdesc->name, rdesc->id
-        ,mreg->en_reg,mreg->vol_reg,rdev->use_count,add,val);
-
     return 0;
 }
 
@@ -434,9 +411,6 @@ static int mtk_regulator_is_enabled(struct regulator_dev *rdev)
 
     en=pmic_get_register_value(mreg->en_reg);
         
-    PMICLOG("regulator_is_enabled(name=%s id=%d en_reg=%x vol_reg=%x en=%d)\n",rdesc->name, rdesc->id
-        ,mreg->en_reg,mreg->vol_reg,en);
-    
     return en;
 }
 
@@ -470,8 +444,6 @@ static int mtk_regulator_get_voltage_sel(struct regulator_dev *rdev)
         }
         else
         {
-            PMICLOG("regulator_get_voltage_sel bugl(name=%s id=%d en_reg=%x vol_reg=%x)\n",rdesc->name, rdesc->id
-                ,mreg->en_reg,mreg->vol_reg);       
         }
     }
     else
@@ -484,14 +456,9 @@ static int mtk_regulator_get_voltage_sel(struct regulator_dev *rdev)
         }
         else
         {
-            PMICLOG("regulator_get_voltage_sel bugl(name=%s id=%d en_reg=%x vol_reg=%x)\n",rdesc->name, rdesc->id
-                ,mreg->en_reg,mreg->vol_reg);       
         }
     }
     
-    PMICLOG("regulator_get_voltage_sel(name=%s id=%d en_reg=%x vol_reg=%x reg/sel:%d voltage:%d [0x%x]=0x%x)\n",rdesc->name, rdesc->id
-        ,mreg->en_reg,mreg->vol_reg,regVal,voltage,add,val);
-
     return regVal;
 }
 
@@ -503,9 +470,6 @@ static int mtk_regulator_set_voltage_sel(struct regulator_dev *rdev,
 
     mreg=container_of(rdesc,struct mtk_regulator,desc);
         
-    PMICLOG("regulator_set_voltage_sel(name=%s id=%d en_reg=%x vol_reg=%x selector=%d)\n",rdesc->name, rdesc->id
-        ,mreg->en_reg,mreg->vol_reg,selector);
-    
 /* VGP2
     0:1200000,->0
     1:1300000,->1
@@ -571,8 +535,6 @@ static int mtk_regulator_list_voltage(struct regulator_dev *rdev,
         }
         else
         {
-            PMICLOG("mtk_regulator_list_voltage bugl(name=%s id=%d en_reg=%x vol_reg=%x)\n",rdesc->name, rdesc->id
-                ,mreg->en_reg,mreg->vol_reg);       
         }
     }
     else
@@ -608,13 +570,11 @@ static ssize_t show_LDO_STATUS(struct device *dev,struct device_attribute *attr,
 
     ret_value=pmic_get_register_value(mreg->en_reg);
 
-    PMICLOG("[EM] LDO_%s_STATUS : %d\n",mreg->desc.name,ret_value);
     return sprintf(buf, "%u\n", ret_value); 
 }
 
 static ssize_t store_LDO_STATUS(struct device *dev,struct device_attribute *attr, const char *buf, size_t size)
 {
-    PMICLOG("[EM] Not Support Write Function\n");    
     return size;
 }
 
@@ -645,7 +605,6 @@ static ssize_t show_LDO_VOLTAGE(struct device *dev,struct device_attribute *attr
         }
         else
         {
-            PMICLOG("[EM][ERROR] LDO_%s_VOLTAGE : voltage=0 vol_reg=0\n", mreg->desc.name);
         }
     }
     else
@@ -655,14 +614,12 @@ static ssize_t show_LDO_VOLTAGE(struct device *dev,struct device_attribute *attr
     }
 
     ret_value=ret_value/1000;
-    PMICLOG("[EM] LDO_%s_VOLTAGE : %d\n", mreg->desc.name,ret_value);
     return sprintf(buf, "%u\n", ret_value);
 
 }
 
 static ssize_t store_LDO_VOLTAGE(struct device *dev,struct device_attribute *attr, const char *buf, size_t size)
 {
-    PMICLOG("[EM] Not Support Write Function\n");    
     return size;
 }
 
@@ -675,12 +632,10 @@ static ssize_t show_BUCK_STATUS(struct device *dev,struct device_attribute *attr
 
     ret_value=pmic_get_register_value(mreg->qi_en_reg);
 
-    PMICLOG("[EM] BUCK_%s_STATUS : %d\n",mreg->desc.name,ret_value);
     return sprintf(buf, "%u\n", ret_value); 
 }
 static ssize_t store_BUCK_STATUS(struct device *dev,struct device_attribute *attr, const char *buf, size_t size)
 {
-    PMICLOG("[EM] Not Support Write Function\n");    
     return size;
 }
 
@@ -711,7 +666,6 @@ static ssize_t show_BUCK_VOLTAGE(struct device *dev,struct device_attribute *att
         }
         else
         {
-            PMICLOG("[EM][ERROR] buck_%s_VOLTAGE : voltage=0 vol_reg=0\n", mreg->desc.name);
         }
     }
     else
@@ -721,12 +675,10 @@ static ssize_t show_BUCK_VOLTAGE(struct device *dev,struct device_attribute *att
     }
 
     ret_value=ret_value/1000;
-    PMICLOG("[EM] BUCK_%s_VOLTAGE : %d\n", mreg->desc.name,ret_value);
     return sprintf(buf, "%u\n", ret_value);
 }
 static ssize_t store_BUCK_VOLTAGE(struct device *dev,struct device_attribute *attr, const char *buf, size_t size)
 {
-    PMICLOG("[EM] Not Support Write Function\n");    
     return size;
 }
 
@@ -950,11 +902,8 @@ void mtk_regulator_init(struct platform_device *dev)
                     {
                         mtk_ldos[i].init_data.constraints.max_uV=(mtk_ldos[i].desc.n_voltages-1)*mtk_ldos[i].desc.uV_step+mtk_ldos[i].desc.min_uV;
                         mtk_ldos[i].init_data.constraints.min_uV=mtk_ldos[i].desc.min_uV;
-                        PMICLOG("test man_uv:%d min_uv:%d  \n", (mtk_ldos[i].desc.n_voltages-1)*mtk_ldos[i].desc.uV_step+mtk_ldos[i].desc.min_uV,
-                            mtk_ldos[i].desc.min_uV);
                     }
                 }
-                PMICLOG("min_uv:%d max_uv:%d  \n", mtk_ldos[i].init_data.constraints.min_uV,mtk_ldos[i].init_data.constraints.max_uV);
             }
 
             mtk_ldos[i].desc.owner=THIS_MODULE;
@@ -964,13 +913,11 @@ void mtk_regulator_init(struct platform_device *dev)
                 ret = PTR_ERR(mtk_ldos[i].rdev);
                 PMICLOG("[regulator_register] failed to register %s (%d)\n", mtk_ldos[i].desc.name, ret);
             } else {
-                PMICLOG("[regulator_register] pass to register %s\n", mtk_ldos[i].desc.name);
             }
             mtk_ldos[i].reg=regulator_get(&(dev->dev), mtk_ldos[i].desc.name);
             isEn=regulator_is_enabled(mtk_ldos[i].reg); 
             if(isEn!=0)
             {
-                PMICLOG("[regulator] %s is default on\n", mtk_ldos[i].desc.name);
                 //ret=regulator_enable(mtk_ldos[i].reg);
             }           
         }
@@ -991,14 +938,12 @@ void pmic6350_regulator_test(void)
         if (mtk_ldos[i].isUsedable==1)
         {
             reg=mtk_ldos[i].reg;
-            PMICLOG("[regulator enable test] %s\n", mtk_ldos[i].desc.name);
             
             ret1=regulator_enable(reg);
             ret2=regulator_is_enabled(reg);
 
             if(ret2==pmic_get_register_value(mtk_ldos[i].en_reg))
             {
-                PMICLOG("[enable test pass] \n");
             }
             else
             {
@@ -1012,7 +957,6 @@ void pmic6350_regulator_test(void)
 
             if(ret2==pmic_get_register_value(mtk_ldos[i].en_reg))
             {
-                PMICLOG("[disable test pass] \n");
             }
             else
             {
@@ -1031,8 +975,6 @@ void pmic6350_regulator_test(void)
         reg=mtk_ldos[i].reg;
         if (mtk_ldos[i].isUsedable==1)
         {
-            PMICLOG("[regulator voltage test] %s voltage:%d \n", mtk_ldos[i].desc.name,mtk_ldos[i].desc.n_voltages);
-
             if(mtk_ldos[i].pvoltages!=NULL)
             {
                 pVoltage=(const int*)mtk_ldos[i].pvoltages;
@@ -1046,9 +988,6 @@ void pmic6350_regulator_test(void)
 
                     if((j==pmic_get_register_value(mtk_ldos[i].vol_reg))&& (pVoltage[j]==rvoltage))
                     {
-                        PMICLOG("[%d:%d]:pass  set_voltage:%d  rvoltage:%d \n",j,pmic_get_register_value(mtk_ldos[i].vol_reg),
-                        pVoltage[j] ,rvoltage); 
-                        
                     }
                     else
                     {
@@ -1187,11 +1126,9 @@ void (*low_battery_callback)(LOW_BATTERY_LEVEL);
 
 void register_low_battery_notify( void (*low_battery_callback)(LOW_BATTERY_LEVEL), LOW_BATTERY_PRIO prio_val )
 {
-    PMICLOG("[register_low_battery_notify] start\n");
 
     lbcb_tb[prio_val].lbcb = low_battery_callback;
     
-    PMICLOG("[register_low_battery_notify] prio_val=%d\n",prio_val);
 }
 
 void exec_low_battery_callback(LOW_BATTERY_LEVEL low_battery_level) //0:no limit
@@ -1200,7 +1137,6 @@ void exec_low_battery_callback(LOW_BATTERY_LEVEL low_battery_level) //0:no limit
 
     if(g_low_battery_stop==1)
     {
-        PMICLOG("[exec_low_battery_callback] g_low_battery_stop=%d\n", g_low_battery_stop);
     }
     else
     {
@@ -1210,7 +1146,6 @@ void exec_low_battery_callback(LOW_BATTERY_LEVEL low_battery_level) //0:no limit
             {
                 low_battery_callback = lbcb_tb[i].lbcb;
                 low_battery_callback(low_battery_level);
-                PMICLOG("[exec_low_battery_callback] prio_val=%d,low_battery=%d\n",i,low_battery_level);
             }        
         }
     }
@@ -1243,25 +1178,12 @@ void low_battery_protect_init(void)
 
     lbat_min_en_setting(1);
     lbat_max_en_setting(0);
-
-    PMICLOG("Reg[0x%x]=0x%x, Reg[0x%x]=0x%x, Reg[0x%x]=0x%x\n", 
-            MT6328_AUXADC_LBAT3, upmu_get_reg_value(MT6328_AUXADC_LBAT3),
-            MT6328_AUXADC_LBAT4, upmu_get_reg_value(MT6328_AUXADC_LBAT4),
-            MT6328_INT_CON0, upmu_get_reg_value(MT6328_INT_CON0)
-            );
-
-    PMICLOG("[low_battery_protect_init] %d mV, %d mV, %d mV\n",
-        POWER_INT0_VOLT, POWER_INT1_VOLT, POWER_INT2_VOLT);
-    PMICLOG("[low_battery_protect_init] Done\n");
-
 }
 
 #endif //#ifdef LOW_BATTERY_PROTECT
 
 void bat_h_int_handler(void)
 {
-    PMICLOG("[bat_h_int_handler]....\n");
-
     //sub-task
 #ifdef LOW_BATTERY_PROTECT
     g_low_battery_level=0;
@@ -1280,19 +1202,12 @@ void bat_h_int_handler(void)
     lbat_min_en_setting(1);   
 #endif
 
-    PMICLOG("Reg[0x%x]=0x%x, Reg[0x%x]=0x%x, Reg[0x%x]=0x%x\n", 
-            MT6328_AUXADC_LBAT3, upmu_get_reg_value(MT6328_AUXADC_LBAT3),
-            MT6328_AUXADC_LBAT4, upmu_get_reg_value(MT6328_AUXADC_LBAT4),
-            MT6328_INT_CON0, upmu_get_reg_value(MT6328_INT_CON0)
-            );
 #endif 
 
 }
 
 void bat_l_int_handler(void)
 {
-    PMICLOG("[bat_l_int_handler]....\n");
-
     //sub-task
 #ifdef LOW_BATTERY_PROTECT
     g_low_battery_level++;
@@ -1304,7 +1219,6 @@ void bat_l_int_handler(void)
     else if(g_low_battery_level==2) 
     exec_low_battery_callback(LOW_BATTERY_LEVEL_2);
     else                            
-    PMICLOG("[bat_l_int_handler]err,g_low_battery_level=%d\n", g_low_battery_level);
 
 #if 0
     lbat_min_en_setting(0);
@@ -1323,12 +1237,6 @@ void bat_l_int_handler(void)
     }
     lbat_max_en_setting(1);
 #endif
-
-    PMICLOG("Reg[0x%x]=0x%x, Reg[0x%x]=0x%x, Reg[0x%x]=0x%x\n", 
-            MT6328_AUXADC_LBAT3, upmu_get_reg_value(MT6328_AUXADC_LBAT3),
-            MT6328_AUXADC_LBAT4, upmu_get_reg_value(MT6328_AUXADC_LBAT4),
-    MT6328_INT_CON0, upmu_get_reg_value(MT6328_INT_CON0)
-    );
 #endif 
 
 }
@@ -1371,11 +1279,7 @@ void (*battery_oc_callback)(BATTERY_OC_LEVEL);
 
 void register_battery_oc_notify( void (*battery_oc_callback)(BATTERY_OC_LEVEL), BATTERY_OC_PRIO prio_val )
 {
-    PMICLOG("[register_battery_oc_notify] start\n");
-
     occb_tb[prio_val].occb = battery_oc_callback;
-    
-    PMICLOG("[register_battery_oc_notify] prio_val=%d\n",prio_val);
 }
 
 void exec_battery_oc_callback(BATTERY_OC_LEVEL battery_oc_level) //0:no limit
@@ -1384,7 +1288,6 @@ void exec_battery_oc_callback(BATTERY_OC_LEVEL battery_oc_level) //0:no limit
 
     if(g_battery_oc_stop==1)
     {
-        PMICLOG("[exec_battery_oc_callback] g_battery_oc_stop=%d\n", g_battery_oc_stop);
     }
     else
     {
@@ -1394,7 +1297,6 @@ void exec_battery_oc_callback(BATTERY_OC_LEVEL battery_oc_level) //0:no limit
             {
                 battery_oc_callback = occb_tb[i].occb;
                 battery_oc_callback(battery_oc_level);
-                PMICLOG("[exec_battery_oc_callback] prio_val=%d,battery_oc_level=%d\n",i,battery_oc_level);
             }        
         }
     }
@@ -1417,16 +1319,6 @@ void battery_oc_protect_init(void)
 
     bat_oc_h_en_setting(0);
     bat_oc_l_en_setting(1);
-
-    PMICLOG("Reg[0x%x]=0x%x, Reg[0x%x]=0x%x, Reg[0x%x]=0x%x\n", 
-        MT6328_FGADC_CON23, upmu_get_reg_value(MT6328_FGADC_CON23),
-        MT6328_FGADC_CON24, upmu_get_reg_value(MT6328_FGADC_CON24),
-        MT6328_INT_CON2, upmu_get_reg_value(MT6328_INT_CON2)
-        );
-
-    PMICLOG("[battery_oc_protect_init] %d mA, %d mA\n",
-        POWER_BAT_OC_CURRENT_H, POWER_BAT_OC_CURRENT_L);
-    PMICLOG("[battery_oc_protect_init] Done\n");  
 }
 
 #endif //#ifdef BATTERY_OC_PROTECT
@@ -1437,24 +1329,11 @@ void battery_oc_protect_reinit(void)
     pmic_set_register_value(PMIC_FG_CUR_HTH,BAT_OC_H_THD_RE);//mt6325_upmu_set_fg_cur_hth(BAT_OC_H_THD_RE);
     pmic_set_register_value(PMIC_FG_CUR_LTH,BAT_OC_L_THD_RE);//mt6325_upmu_set_fg_cur_lth(BAT_OC_L_THD_RE);
 
-    PMICLOG("Reg[0x%x]=0x%x, Reg[0x%x]=0x%x, Reg[0x%x]=0x%x\n", 
-        MT6328_FGADC_CON23, upmu_get_reg_value(MT6328_FGADC_CON23),
-        MT6328_FGADC_CON24, upmu_get_reg_value(MT6328_FGADC_CON24),
-        MT6328_INT_CON2, upmu_get_reg_value(MT6328_INT_CON2)
-        );
-
-    PMICLOG("[battery_oc_protect_reinit] %d mA, %d mA\n",
-        POWER_BAT_OC_CURRENT_H_RE, POWER_BAT_OC_CURRENT_L_RE);
-    PMICLOG("[battery_oc_protect_reinit] Done\n");  
-#else
-    PMICLOG("[battery_oc_protect_reinit] no define BATTERY_OC_PROTECT\n");
 #endif
 }
 
 void fg_cur_h_int_handler(void)
 {
-    PMICLOG("[fg_cur_h_int_handler]....\n");
-     
     //sub-task
 #ifdef BATTERY_OC_PROTECT
     g_battery_oc_level=0;
@@ -1464,18 +1343,11 @@ void fg_cur_h_int_handler(void)
     mdelay(1);
     bat_oc_l_en_setting(1);
     
-    PMICLOG("Reg[0x%x]=0x%x, Reg[0x%x]=0x%x, Reg[0x%x]=0x%x\n", 
-        MT6328_FGADC_CON23, upmu_get_reg_value(MT6328_FGADC_CON23),
-        MT6328_FGADC_CON24, upmu_get_reg_value(MT6328_FGADC_CON24),
-        MT6328_INT_CON2, upmu_get_reg_value(MT6328_INT_CON2)
-        );
 #endif 
 }
 
 void fg_cur_l_int_handler(void)
 {
-    PMICLOG("[fg_cur_l_int_handler]....\n");
-    
     //sub-task
 #ifdef BATTERY_OC_PROTECT
     g_battery_oc_level=1;
@@ -1484,12 +1356,6 @@ void fg_cur_l_int_handler(void)
     bat_oc_l_en_setting(0);
     mdelay(1);
     bat_oc_h_en_setting(1);
-    
-    PMICLOG("Reg[0x%x]=0x%x, Reg[0x%x]=0x%x, Reg[0x%x]=0x%x\n", 
-        MT6328_FGADC_CON23, upmu_get_reg_value(MT6328_FGADC_CON23),
-        MT6328_FGADC_CON24, upmu_get_reg_value(MT6328_FGADC_CON24),
-        MT6328_INT_CON2, upmu_get_reg_value(MT6328_INT_CON2)
-        );
 #endif
 }
 
@@ -1530,15 +1396,10 @@ void (*battery_percent_callback)(BATTERY_PERCENT_LEVEL);
 
 void register_battery_percent_notify( void (*battery_percent_callback)(BATTERY_PERCENT_LEVEL), BATTERY_PERCENT_PRIO prio_val )
 {
-    PMICLOG("[register_battery_percent_notify] start\n");
-
     bpcb_tb[prio_val].bpcb = battery_percent_callback;
     
-    PMICLOG("[register_battery_percent_notify] prio_val=%d\n",prio_val);
-
     if( (g_battery_percent_stop==0) && (g_battery_percent_level==1) )
     {
-        PMICLOG("[register_battery_percent_notify] level l happen\n");
         battery_percent_callback(BATTERY_PERCENT_LEVEL_1);        
     }
 }
@@ -1549,7 +1410,6 @@ void exec_battery_percent_callback(BATTERY_PERCENT_LEVEL battery_percent_level)
 
     if(g_battery_percent_stop==1)
     {
-        PMICLOG("[exec_battery_percent_callback] g_battery_percent_stop=%d\n", g_battery_percent_stop);
     }
     else
     {
@@ -1559,7 +1419,6 @@ void exec_battery_percent_callback(BATTERY_PERCENT_LEVEL battery_percent_level)
             {
                 battery_percent_callback = bpcb_tb[i].bpcb;
                 battery_percent_callback(battery_percent_level);
-                PMICLOG("[exec_battery_percent_callback] prio_val=%d,battery_percent_level=%d\n",i,battery_percent_level);
             }        
         }
     }
@@ -1596,8 +1455,6 @@ int bat_percent_notify_handler(void *unused)
         }
         bat_percent_notify_flag = KAL_FALSE;
         
-        PMICLOG("bat_per_level=%d,bat_per_val=%d\n",g_battery_percent_level,bat_per_val);
-
         mutex_unlock(&bat_percent_notify_mutex);
         wake_unlock(&bat_percent_notify_lock);
        
@@ -1614,7 +1471,6 @@ enum hrtimer_restart bat_percent_notify_task(struct hrtimer *timer)
 {
     bat_percent_notify_flag = KAL_TRUE; 
     wake_up_interruptible(&bat_percent_notify_waiter);
-    PMICLOG("bat_percent_notify_task is called\n");
     
     return HRTIMER_NORESTART;
 }
@@ -1632,10 +1488,6 @@ void bat_percent_notify_init(void)
     {
         PMICLOG("Failed to create bat_percent_notify_thread\n");
     }
-    else
-    {
-        PMICLOG("Create bat_percent_notify_thread : done\n");
-    }
 }
 #endif
 //==============================================================================
@@ -1679,15 +1531,10 @@ void (*dlpt_callback)(unsigned int);
 
 void register_dlpt_notify( void (*dlpt_callback)(unsigned int), DLPT_PRIO prio_val)
 {
-    PMICLOG("[register_dlpt_notify] start\n");
-
     dlpt_cb_tb[prio_val].dlpt_cb = dlpt_callback;
     
-    PMICLOG("[register_dlpt_notify] prio_val=%d\n",prio_val);
-
     if( (g_dlpt_stop==0) && (g_dlpt_val!=0) )
     {
-        PMICLOG("[register_dlpt_notify] dlpt happen\n");
         dlpt_callback(g_dlpt_val);        
     }
 }
@@ -1700,7 +1547,6 @@ void exec_dlpt_callback(unsigned int dlpt_val)
 
     if(g_dlpt_stop==1)
     {
-        PMICLOG("[exec_dlpt_callback] g_dlpt_stop=%d\n", g_dlpt_stop);
     }
     else
     {
@@ -1710,7 +1556,6 @@ void exec_dlpt_callback(unsigned int dlpt_val)
             {
                 dlpt_callback = dlpt_cb_tb[i].dlpt_cb;                
                 dlpt_callback(g_dlpt_val);
-                PMICLOG("[exec_dlpt_callback] g_dlpt_val=%d\n", g_dlpt_val);
             }        
         }
     }
@@ -1750,12 +1595,6 @@ int get_dlpt_iavg(int is_use_zcv)
         rdc_val=1;    
     iavg_val=((zcv_val-vsys_min_2_val)*1000)/rdc_val; // ((mV)*1000)/m-ohm
     
-    PMICLOG("[dlpt] SOC=%d,ZCV=%d,vsys_min_2=%d,rpcb=%d,rfg=%d,rbat=%d,rdc=%d,iavg=%d(mA),is_use_zcv=%d\n", 
-        bat_cap_val,zcv_val,vsys_min_2_val,CUST_R_FG_OFFSET,R_FG_VALUE,rbat_val,rdc_val,iavg_val,is_use_zcv 
-        );
-    PMICLOG("[dlpt_Iavg] %d,%d,%d,%d,%d,%d,%d,%d,%d\n", 
-        bat_cap_val,zcv_val,vsys_min_2_val,CUST_R_FG_OFFSET,R_FG_VALUE,rbat_val,rdc_val,iavg_val,is_use_zcv
-        );
     return iavg_val;
 }
 
@@ -1812,7 +1651,6 @@ int get_rac_val(void)
         volt_1=PMIC_IMM_GetOneChannelValue(MT6328_AUX_BATSNS_AP,5,10);
         #endif
         curr_1=battery_meter_get_battery_current();    
-        PMICLOG("[1,Trigger ADC PTIM mode] volt_1=%d, curr_1=%d\n", volt_1, curr_1);
         
         //Enable dummy load--------------------------------------------------
         pmic_config_interface(0x23C,0x40,0xFFFF,0); //Reg[0x238][6]=0
@@ -1826,14 +1664,6 @@ int get_rac_val(void)
         //mt6325_upmu_set_rg_isink2_double_en(1);
         //mt6325_upmu_set_isink_ch2_en(1);
 
-        PMICLOG("[2,Enable dummy load] [0x%x]=0x%x,[0x%x]=0x%x,[0x%x]=0x%x,[0x%x]=0x%x,[0x%x]=0x%x,[0x%x]=0x%x\n",
-            MT6328_TOP_CKPDN_CON0, upmu_get_reg_value(MT6328_TOP_CKPDN_CON0),
-            MT6328_TOP_CKSEL_CON0, upmu_get_reg_value(MT6328_TOP_CKSEL_CON0),
-            MT6328_ISINK_MODE_CTRL, upmu_get_reg_value(MT6328_ISINK_MODE_CTRL),
-            MT6328_ISINK_EN_CTRL, upmu_get_reg_value(MT6328_ISINK_EN_CTRL),
-            MT6328_ISINK2_CON1, upmu_get_reg_value(MT6328_ISINK2_CON1),
-            MT6328_ISINK_ANA0, upmu_get_reg_value(MT6328_ISINK_ANA0)
-            );
 
         //Wait --------------------------------------------------------------
         msleep(50);
@@ -1845,21 +1675,11 @@ int get_rac_val(void)
         volt_2=PMIC_IMM_GetOneChannelValue(MT6328_AUX_BATSNS_AP,5,10);
         #endif
         curr_2=battery_meter_get_battery_current();    
-        PMICLOG("[3,Trigger ADC PTIM mode] volt_1=%d, curr_1=%d\n", volt_2, curr_2);
         
         //Disable dummy load-------------------------------------------------
         //mt6325_upmu_set_isink_ch2_en(0);
         ////pmic_config_interface(0x23A,0x40,0xFFFF,0); //Reg[0x238][6]=1, move to suspend callback
                 
-        PMICLOG("[4,Disable dummy load] [0x%x]=0x%x,[0x%x]=0x%x,[0x%x]=0x%x,[0x%x]=0x%x,[0x%x]=0x%x,[0x%x]=0x%x\n",
-            MT6328_TOP_CKPDN_CON0, upmu_get_reg_value(MT6328_TOP_CKPDN_CON0),
-            MT6328_TOP_CKSEL_CON0, upmu_get_reg_value(MT6328_TOP_CKSEL_CON0),
-            MT6328_ISINK_MODE_CTRL, upmu_get_reg_value(MT6328_ISINK_MODE_CTRL),
-            MT6328_ISINK_EN_CTRL, upmu_get_reg_value(MT6328_ISINK_EN_CTRL),
-            MT6328_ISINK2_CON1, upmu_get_reg_value(MT6328_ISINK2_CON1),
-            MT6328_ISINK_ANA0, upmu_get_reg_value(MT6328_ISINK_ANA0)
-            );
-
         //Calculate Rac------------------------------------------------------
         if( (curr_2-curr_1) >= 400 ) //40.0mA
         {
@@ -1878,13 +1698,8 @@ int get_rac_val(void)
         else
         {
             ret=-1;
-            PMICLOG("[5,Calculate Rac] bypass due to (curr_x-curr_y) < 40mA\n");
         }  
 
-        PMICLOG("[5,Calculate Rac] volt_1=%d,volt_2=%d,curr_1=%d,curr_2=%d,rac_cal=%d,ret=%d,retry_count=%d\n",
-            volt_1,volt_2,curr_1,curr_2,rac_cal,ret,retry_count
-            );
-    
         //------------------------
         retry_count++;
         
@@ -1917,12 +1732,6 @@ int get_dlpt_imax(void)
         rac_val=1;
     imax_val=((zcv_val-vsys_min_1_val)*1000)/rac_val; // ((mV)*1000)/m-ohm
     
-    PMICLOG("[dlpt] SOC=%d,ZCV=%d,vsys_min_1=%d,rac=%d,imax=%d(mA)\n",
-        bat_cap_val,zcv_val,vsys_min_1_val,rac_val,imax_val
-        );
-    PMICLOG("[dlpt_Imax] %d,%d,%d,%d,%d\n",
-        bat_cap_val,zcv_val,vsys_min_1_val,rac_val,imax_val
-        );
     return imax_val;
 }
 
@@ -1933,7 +1742,6 @@ int dlpt_check_power_off(void)
     ret=0;
     if(g_dlpt_start==0)
     {
-        PMICLOG("[dlpt_check_power_off] not start\n");        
     }
     else
     {
@@ -1946,10 +1754,6 @@ int dlpt_check_power_off(void)
             } else {
                 ret=0;
             }
-
-            PMICLOG("[dlpt_check_power_off] g_iavg_val=%d,POWEROFF_BAT_CURRENT=%d,g_low_battery_level=%d,ret=%d\n", 
-                g_iavg_val, POWEROFF_BAT_CURRENT, g_low_battery_level, ret
-                );
         }
     }
 
@@ -1975,14 +1779,10 @@ int get_dlpt_imax_avg(void)
         timeout_i++;
         if(timeout_i>=timeout_val)
         {
-            PMICLOG("[get_dlpt_imax_avg] timeout, return -1\n");
             return -1;
         }
     }
     
-    PMICLOG("[get_dlpt_imax_avg] %d,%d,%d,%d,%d,i=%d,val_compare=%d,timeout_i=%d\n",
-        val[0],val[1],val[2],val[3],val[4],i,val_compare,timeout_i);
-
     if(i<=0) 
         return -1;
     else     
@@ -2039,7 +1839,6 @@ int dlpt_notify_handler(void *unused)
                     }
                     if(g_imax_val > g_imax_val_pre)
                     {
-                        PMICLOG("[DLPT] g_imax_val=%d,g_imax_val_pre=%d\n", g_imax_val, g_imax_val_pre);
                         g_imax_val=g_imax_val_pre;
                     }
                     else
@@ -2062,15 +1861,8 @@ int dlpt_notify_handler(void *unused)
                 }
                 exec_dlpt_callback(g_imax_val);                
             }
-            else
-            {
-                PMICLOG("[DLPT] bad value, ignore DLPT\n");
-            }
 
             pre_ui_soc=cur_ui_soc;
-
-            PMICLOG("[DLPT_final] %d,%d,%d,%d,%d,%d,%d\n", 
-                g_iavg_val,g_imax_val_pre,pre_ui_soc,cur_ui_soc,diff_ui_soc, IMAX_MAX_VALUE,g_imax_val);
         }
         
         g_dlpt_start=1;
@@ -2091,7 +1883,6 @@ enum hrtimer_restart dlpt_notify_task(struct hrtimer *timer)
 {
     dlpt_notify_flag = KAL_TRUE; 
     wake_up_interruptible(&dlpt_notify_waiter);
-    PMICLOG("dlpt_notify_task is called\n");
     
     return HRTIMER_NORESTART;
 }
@@ -2101,7 +1892,6 @@ int get_system_loading_ma(void)
     int fg_val=0;
     
     if(g_dlpt_start==0) {    
-        PMICLOG("get_system_loading_ma not ready\n");
     } else {
         fg_val = battery_meter_get_battery_current();
         fg_val = fg_val/10;
@@ -2109,7 +1899,6 @@ int get_system_loading_ma(void)
         {
             fg_val = 0-fg_val; // charging
         }        
-        PMICLOG("[get_system_loading_ma] fg_val=%d\n", fg_val);
     }
     
     return fg_val;
@@ -2126,14 +1915,6 @@ void dlpt_notify_init(void)
     hrtimer_start(&dlpt_notify_timer, ktime, HRTIMER_MODE_REL);
 
     dlpt_notify_thread = kthread_run(dlpt_notify_handler, 0, "dlpt_notify_thread");
-    if (IS_ERR(dlpt_notify_thread))
-    {
-        PMICLOG("Failed to create dlpt_notify_thread\n");
-    }
-    else
-    {
-        PMICLOG("Create dlpt_notify_thread : done\n");
-    }
 
 pmic_set_register_value(PMIC_RG_UVLO_VTHL,0);
 
@@ -2152,8 +1933,6 @@ pmic_set_register_value(PMIC_RG_UVLO_VTHL,0);
             PMICLOG("Invalid value(%d)\n", POWER_UVLO_VOLT_LEVEL);
             break;
     }    
-    PMICLOG("POWER_UVLO_VOLT_LEVEL=%d, [0x%x]=0x%x\n", 
-        POWER_UVLO_VOLT_LEVEL, MT6328_CHR_CON17, upmu_get_reg_value(MT6328_CHR_CON17));
 }
 
 #endif //#ifdef DLPT_FEATURE_SUPPORT
@@ -2212,7 +1991,6 @@ void pwrkey_int_handler(void)
     kal_uint32 ret=0;
     static kal_bool  key_press = KAL_FALSE;
     
-    PMICLOG("[pwrkey_int_handler] Press pwrkey %d\n",pmic_get_register_value(PMIC_PWRKEY_DEB));
     if(pmic_get_register_value(PMIC_PWRKEY_DEB) == 1)
     {
 #if defined (CONFIG_MTK_KERNEL_POWER_OFF_CHARGING)
@@ -2222,15 +2000,12 @@ void pwrkey_int_handler(void)
             {
                 key_press = KAL_FALSE;
                 timer_pos = sched_clock();
-                PMICLOG("[pmic_thread_kthread] timer_pos = %ld\r\n",timer_pos);
                 if(timer_pos - timer_pre >= LONG_PWRKEY_PRESS_TIME)
                 {
                     long_pwrkey_press = true;
                 }
-                PMICLOG("[pmic_thread_kthread] timer_pos = %ld, timer_pre = %ld, timer_pos-timer_pre = %ld, long_pwrkey_press = %d\r\n",timer_pos, timer_pre, timer_pos-timer_pre, long_pwrkey_press);
                 if(long_pwrkey_press)   //500ms
                 {
-                    PMICLOG("[pmic_thread_kthread] Power Key Pressed during kernel power off charging, reboot OS\r\n");
                     arch_reset(0, NULL);
                 }
             }
@@ -2241,13 +2016,11 @@ void pwrkey_int_handler(void)
     }
     else
     {
-        PMICLOG("[pwrkey_int_handler] Press pwrkey\n");
 #if defined (CONFIG_MTK_KERNEL_POWER_OFF_CHARGING)
         if(g_boot_mode == KERNEL_POWER_OFF_CHARGING_BOOT)
         {
             key_press = KAL_TRUE;
             timer_pre = sched_clock();
-            PMICLOG("[pmic_thread_kthread] timer_pre = %ld, \r\n",timer_pre);
         }
 #endif
         kpd_pwrkey_pmic_handler(0x1);
@@ -2270,21 +2043,17 @@ void kpd_pmic_rstkey_handler(unsigned long pressed)
 void homekey_int_handler(void)
 {
     kal_uint32 ret=0;
-    PMICLOG("[homekey_int_handler] Press homekey %d \n",pmic_get_register_value(PMIC_FCHRKEY_DEB));
 
 #ifdef KPD_PMIC_RSTKEY_MAP
     if(pmic_get_register_value(PMIC_FCHRKEY_DEB)==1)
     {
-        PMICLOG("[homekey_int_handler] Release HomeKey\r\n");
         kpd_pmic_rstkey_handler(0x0);
     }
     else
     {
-        PMICLOG("[homekey_int_handler] Press HomeKey\r\n");
         kpd_pmic_rstkey_handler(0x1);
     }    
 #else    
-    PMICLOG("[fchr_key_int_handler]....\n");
 #endif
     
     //ret=pmic_config_interface(MT6350_INT_STATUS1, 0x1, 0x1, 0x1);        
@@ -2293,8 +2062,6 @@ void homekey_int_handler(void)
 
 void chrdet_int_handler(void)
 {
-    PMICLOG("[chrdet_int_handler]CHRDET status = %d....\n",pmic_get_register_value(PMIC_RGS_CHRDET));
-
 #ifdef CONFIG_MTK_KERNEL_POWER_OFF_CHARGING
     if (!upmu_get_rgs_chrdet())
     {
@@ -2303,7 +2070,6 @@ void chrdet_int_handler(void)
         
         if(boot_mode == KERNEL_POWER_OFF_CHARGING_BOOT || boot_mode == LOW_POWER_OFF_CHARGING_BOOT)
         {
-            PMICLOG("[chrdet_int_handler] Unplug Charger/USB In Kernel Power Off Charging Mode!  Shutdown OS!\r\n");
             mt_power_off();
         }
     }
@@ -2321,11 +2087,9 @@ void accdet_int_handler(void)
 {
     kal_uint32 ret=0;
 
-    PMICLOG("[accdet_int_handler]....\n");
     
     ret = accdet_irq_handler();
 	if(0 == ret){
-		PMICLOG("[accdet_int_handler] don't finished\n");
 	}
 //    ret=pmic_config_interface(INT_STATUS1,0x1,0x1,2);    
 }
@@ -2335,7 +2099,6 @@ void rtc_int_handler(void)
 {
     kal_uint32 ret=0;
 
-    PMICLOG("[rtc_int_handler]....\n");
 #ifndef CONFIG_EARLY_LINUX_PORTING
     rtc_irq_handler();
 #endif
@@ -2367,7 +2130,6 @@ struct wake_lock pmicThread_lock;
 
 void wake_up_pmic(void)
 {
-    PMICLOG("[wake_up_pmic]\r\n");
     wake_up_process(pmic_thread_handle);
     wake_lock(&pmicThread_lock);    
 }
@@ -2375,7 +2137,6 @@ EXPORT_SYMBOL(wake_up_pmic);
 
 void mt_pmic_eint_irq(void)
 {
-    PMICLOG("[mt_pmic_eint_irq] receive interrupt\n");
     wake_up_pmic();
     return ;
 }
@@ -2388,13 +2149,9 @@ void pmic_enable_interrupt(kal_uint32 intNo,kal_uint32 en,char *str)
 
     if(shift >=ARRAY_SIZE(interrupts))
     {
-        PMICLOG("[pmic_enable_interrupt] fail intno=%d \r\n",intNo);
         return;
     }
 
-    PMICLOG("[pmic_enable_interrupt] intno=%d en=%d str=%s shf=%d no=%d [0x%x]=0x%x\r\n",intNo,en,str,shift,no
-        ,interrupts[shift].en,upmu_get_reg_value(interrupts[shift].en));
-
     if(en==1)
     {
         pmic_config_interface(interrupts[shift].set,0x1,0x1,no);  
@@ -2403,10 +2160,6 @@ void pmic_enable_interrupt(kal_uint32 intNo,kal_uint32 en,char *str)
     {
         pmic_config_interface(interrupts[shift].clear,0x1,0x1,no);  
     }
-
-    PMICLOG("[pmic_enable_interrupt] after [0x%x]=0x%x\r\n",
-        interrupts[shift].en,upmu_get_reg_value(interrupts[shift].en)); 
-    
 } 
 
 void pmic_register_interrupt_callback(kal_uint32 intNo,void (EINT_FUNC_PTR)(void))
@@ -2421,8 +2174,6 @@ void pmic_register_interrupt_callback(kal_uint32 intNo,void (EINT_FUNC_PTR)(void
         return;
     }
 
-    PMICLOG("[pmic_register_interrupt_callback] intno=%d \r\n",intNo);
-
     interrupts[shift].interrupts[no].callback=EINT_FUNC_PTR;
 
 }
@@ -2457,11 +2208,6 @@ void PMIC_EINT_SETTING(void)
         mt_eint_set_hw_debounce(g_eint_pmic_num, g_cust_eint_mt_pmic_debounce_cn);    
         mt_eint_registration(g_eint_pmic_num,g_cust_eint_mt_pmic_type,mt_pmic_eint_irq,0);
         mt_eint_unmask(g_eint_pmic_num);    
-        
-        PMICLOG("[CUST_EINT] CUST_EINT_MT_PMIC_MT6350_NUM=%d\n", g_eint_pmic_num);
-        PMICLOG("[CUST_EINT] CUST_EINT_PMIC_DEBOUNCE_CN=%d\n", g_cust_eint_mt_pmic_debounce_cn);
-        PMICLOG("[CUST_EINT] CUST_EINT_PMIC_TYPE=%d\n", g_cust_eint_mt_pmic_type);
-        PMICLOG("[CUST_EINT] CUST_EINT_PMIC_DEBOUNCE_EN=%d\n", g_cust_eint_mt_pmic_debounce_en);
 }
 
 static void pmic_int_handler(void)
@@ -2473,7 +2219,6 @@ static void pmic_int_handler(void)
 #if 1
         int0 = upmu_get_reg_value(MT6350_INT_CON0);
         int1 = upmu_get_reg_value(MT6350_INT_CON1);
-        PMICLOG("int0 = %x int1 = %x\n", int0, int1);
         upmu_set_reg_value(MT6350_INT_CON0_CLR, 0x0210); // bit[9], bit[4]    
     
 #endif    
@@ -2481,13 +2226,11 @@ static void pmic_int_handler(void)
         {
                 kal_uint32 int_status_val=0;
                 int_status_val=upmu_get_reg_value(interrupts[i].address);
-                PMICLOG("[PMIC_INT] addr[0x%x]=0x%x\n", interrupts[i].address,int_status_val);
         
                 for(j=0;j<PMIC_INT_WIDTH;j++)
                 {
                         if((int_status_val)&(1<<j))
                         {
-                                PMICLOG("[PMIC_INT][%s]  \n", interrupts[i].interrupts[j].name);
                                 if (interrupts[i].interrupts[j].callback!=NULL)
                                 {
                                         interrupts[i].interrupts[j].callback();
@@ -2509,8 +2252,6 @@ static int pmic_thread_kthread(void *x)
     sched_setscheduler(current, SCHED_FIFO, &param);
     set_current_state(TASK_INTERRUPTIBLE);
 
-    PMICLOG("[PMIC_INT] enter\n");
-
     /* Run on a process content */
     while (1) {
         mutex_lock(&pmic_mutex);
@@ -2526,9 +2267,8 @@ static int pmic_thread_kthread(void *x)
         for (i = 0; i < ARRAY_SIZE(interrupts); i++) 
         {
             int_status_val=upmu_get_reg_value(interrupts[i].address);
-            PMICLOG("[PMIC_INT] after ,int_status_val[0x%x]=0x%x\n", interrupts[i].address,int_status_val);     
-        }   
 
+        }   
 
         mdelay(1);
 
@@ -2674,7 +2414,6 @@ static long pmic_ftm_ioctl(struct file *file, unsigned int cmd, unsigned long ar
                 ret = copy_from_user(adc_in_data, user_data_addr, 8);
                 adc_out_data[0] = pmic_is_ext_buck_exist();
                 ret = copy_to_user(user_data_addr, adc_out_data, 8); 
-                PMICLOG("[pmic_ftm_ioctl] Get_IS_EXT_BUCK_EXIST:%d\n", adc_out_data[0]);
             break;
         //#endif
 
@@ -2684,7 +2423,6 @@ static long pmic_ftm_ioctl(struct file *file, unsigned int cmd, unsigned long ar
                 ret = copy_from_user(adc_in_data, user_data_addr, 8);
                 adc_out_data[0] = is_ext_vbat_boost_exist();
                 ret = copy_to_user(user_data_addr, adc_out_data, 8); 
-                PMICLOG("[pmic_ftm_ioctl] Get_IS_EXT_VBAT_BOOST_EXIST:%d\n", adc_out_data[0]);
             break;
         //#endif
         
@@ -2694,7 +2432,6 @@ static long pmic_ftm_ioctl(struct file *file, unsigned int cmd, unsigned long ar
                 ret = copy_from_user(adc_in_data, user_data_addr, 8);
                 adc_out_data[0] = is_ext_swchr_exist();
                 ret = copy_to_user(user_data_addr, adc_out_data, 8); 
-                PMICLOG("[pmic_ftm_ioctl] Get_IS_EXT_SWCHR_EXIST:%d\n", adc_out_data[0]);
             break;
         //#endif
             case Get_IS_EXT_BUCK2_EXIST:
@@ -2702,10 +2439,8 @@ static long pmic_ftm_ioctl(struct file *file, unsigned int cmd, unsigned long ar
                 ret = copy_from_user(adc_in_data, user_data_addr, 8);
                 adc_out_data[0] = is_ext_buck2_exist();
                 ret = copy_to_user(user_data_addr, adc_out_data, 8); 
-                PMICLOG("[pmic_ftm_ioctl] Get_IS_EXT_BUCK2_EXIST:%d\n", adc_out_data[0]);
             break;        
         default:
-            PMICLOG("[pmic_ftm_ioctl] Error ID\n");
             break;
     }
     
@@ -2755,8 +2490,6 @@ void pmic_ftm_init(void)
                                                    pmic_devno, 
                                                    NULL, 
                                                    PMIC_DEVNAME);
-    
-    PMICLOG("[pmic_ftm_init] Done\n");
 }
 
 
@@ -2772,7 +2505,6 @@ void PMIC_INIT_SETTING_V1(void)
         
         //--------------------------------------------------------
         
-        PMICLOG("[Kernel_PMIC_INIT_SETTING_V1] 6350 PMIC Chip = 0x%x\n",chip_version);
         ret = pmic_config_interface(0x2,0xB,0xF,4); // [7:4]: RG_VCDT_HV_VTH; 7V OVP, Tim,Zax
         ret = pmic_config_interface(0xC,0x1,0x7,1); // [3:1]: RG_VBAT_OV_VTH; VBAT_OV=4.3V, Tim Zax, need to check Description
         ret = pmic_config_interface(0x1A,0x3,0xF,0); // [3:0]: RG_CHRWDT_TD; align to 6250's, Tim,zax
@@ -2864,7 +2596,6 @@ void PMIC_INIT_SETTING_V1(void)
         ret = pmic_config_interface(0x420,0x1,0x1, 1); // [1:1]: VCN33_LP_SET
         ret = pmic_config_interface(0x512,0x1,0x1, 14); // [14:14]: RG_VCN18_EN
         ret = pmic_config_interface(0x512,0x1,0x1, 1); // [1:1]: VCN18_LP_SET
-        PMICLOG("[Kernel_PMIC_INIT_SETTING_V1] 2015-01-21...\n");
 
 	/* External Buck WORKAROUND */
 	ret = pmic_config_interface(0x04C,0x1,0x1, 1); // [1:1]: STRUP_EXT_PMIC_SEL
@@ -2914,7 +2645,6 @@ void dump_ldo_status_read_debug(void)
             voltage_reg=-1;
             voltage=-1;
         }
-        PMICLOG("%s   status:%d     voltage:%duv    voltage_reg:%d\n",mtk_bucks[i].desc.name,en,voltage,voltage_reg);
     }   
 
     for (i = 0; i < ARRAY_SIZE(mtk_ldos); i++) 
@@ -2954,8 +2684,6 @@ void dump_ldo_status_read_debug(void)
             pVoltage=(const int*)mtk_ldos[i].pvoltages;
             voltage=pVoltage[0];
         }
-
-        PMICLOG("%s   status:%d     voltage:%duv    voltage_reg:%d\n",mtk_ldos[i].desc.name,en,voltage,voltage_reg);
     }   
 
 
@@ -3122,13 +2850,8 @@ void pmic_debug_init(void)
     }
 
     proc_create("dump_ldo_status", S_IRUGO | S_IWUSR, mt_pmic_dir, &pmic_debug_proc_fops);
-    PMICLOG("proc_create pmic_debug_proc_fops\n" );
 
     proc_create("dump_pmic_reg", S_IRUGO | S_IWUSR, mt_pmic_dir, &pmic_dump_register_proc_fops);
-    PMICLOG("proc_create pmic_dump_register_proc_fops\n");
-
-
-
 }
 
 static kal_bool pwrkey_detect_flag = KAL_FALSE;
@@ -3162,7 +2885,6 @@ int pwrkey_detect_sw_thread_handler(void *unused)
     //PMICLOG("=>charger_hv_detect_sw_workaround \n");
     if (pmic_get_register_value(PMIC_RG_STRUP_75K_CK_PDN)==1)
     {
-        PMICLOG("charger_hv_detect_sw_workaround =0x%x \n",upmu_get_reg_value(0x24e));
         pmic_set_register_value(PMIC_RG_STRUP_75K_CK_PDN,0);
     }
 
@@ -3203,7 +2925,6 @@ void pwrkey_sw_workaround_init(void)
 //==============================================================================
 static ssize_t show_low_battery_protect_ut(struct device *dev,struct device_attribute *attr, char *buf)
 {
-    PMICLOG("[show_low_battery_protect_ut] g_low_battery_level=%d\n", g_low_battery_level);
     return sprintf(buf, "%u\n", g_low_battery_level);
 }
 static ssize_t store_low_battery_protect_ut(struct device *dev,struct device_attribute *attr, const char *buf, size_t size)
@@ -3211,21 +2932,13 @@ static ssize_t store_low_battery_protect_ut(struct device *dev,struct device_att
     char *pvalue = NULL;
     U32 val = 0;
     
-    PMICLOG("[store_low_battery_protect_ut] \n");
-    
     if(buf != NULL && size != 0)
     {
-        PMICLOG("[store_low_battery_protect_ut] buf is %s and size is %zu \n",buf,size);
         val = simple_strtoul(buf,&pvalue,16);
         if(val<=2)
         {
-            PMICLOG("[store_low_battery_protect_ut] your input is %d\n", val);
             exec_low_battery_callback(val);
         }
-        else
-        {
-            PMICLOG("[store_low_battery_protect_ut] wrong number (%d)\n", val);
-        }
     }
     return size;
 }
@@ -3236,7 +2949,6 @@ static DEVICE_ATTR(low_battery_protect_ut, 0664, show_low_battery_protect_ut, st
 //==============================================================================
 static ssize_t show_low_battery_protect_stop(struct device *dev,struct device_attribute *attr, char *buf)
 {
-    PMICLOG("[show_low_battery_protect_stop] g_low_battery_stop=%d\n", g_low_battery_stop);
     return sprintf(buf, "%u\n", g_low_battery_stop);
 }
 static ssize_t store_low_battery_protect_stop(struct device *dev,struct device_attribute *attr, const char *buf, size_t size)
@@ -3244,16 +2956,12 @@ static ssize_t store_low_battery_protect_stop(struct device *dev,struct device_a
     char *pvalue = NULL;
     U32 val = 0;
     
-    PMICLOG("[store_low_battery_protect_stop] \n");
-    
     if(buf != NULL && size != 0)
     {
-        PMICLOG("[store_low_battery_protect_stop] buf is %s and size is %zu \n",buf,size);
         val = simple_strtoul(buf,&pvalue,16);
         if( (val!=0) && (val!=1) )
             val=0;
         g_low_battery_stop = val;
-        PMICLOG("[store_low_battery_protect_stop] g_low_battery_stop=%d\n", g_low_battery_stop);
     }
     return size;
 }
@@ -3264,13 +2972,10 @@ static DEVICE_ATTR(low_battery_protect_stop, 0664, show_low_battery_protect_stop
 //==============================================================================
 static ssize_t show_low_battery_protect_level(struct device *dev,struct device_attribute *attr, char *buf)
 {
-    PMICLOG("[show_low_battery_protect_level] g_low_battery_level=%d\n", g_low_battery_level);
     return sprintf(buf, "%u\n", g_low_battery_level);
 }
 static ssize_t store_low_battery_protect_level(struct device *dev,struct device_attribute *attr, const char *buf, size_t size)
 {
-    PMICLOG("[store_low_battery_protect_level] g_low_battery_level=%d\n", g_low_battery_level);
-   
     return size;
 }
 static DEVICE_ATTR(low_battery_protect_level, 0664, show_low_battery_protect_level, store_low_battery_protect_level); //664
@@ -3282,7 +2987,6 @@ static DEVICE_ATTR(low_battery_protect_level, 0664, show_low_battery_protect_lev
 //==============================================================================
 static ssize_t show_battery_oc_protect_ut(struct device *dev,struct device_attribute *attr, char *buf)
 {
-    PMICLOG("[show_battery_oc_protect_ut] g_battery_oc_level=%d\n", g_battery_oc_level);
     return sprintf(buf, "%u\n", g_battery_oc_level);
 }
 static ssize_t store_battery_oc_protect_ut(struct device *dev,struct device_attribute *attr, const char *buf, size_t size)
@@ -3290,21 +2994,13 @@ static ssize_t store_battery_oc_protect_ut(struct device *dev,struct device_attr
     char *pvalue = NULL;
     U32 val = 0;
     
-    PMICLOG("[store_battery_oc_protect_ut] \n");
-    
     if(buf != NULL && size != 0)
     {
-        PMICLOG("[store_battery_oc_protect_ut] buf is %s and size is %zu \n",buf,size);
         val = simple_strtoul(buf,&pvalue,16);
         if(val<=1)
         {
-            PMICLOG("[store_battery_oc_protect_ut] your input is %d\n", val);
             exec_battery_oc_callback(val);
         }
-        else
-        {
-            PMICLOG("[store_battery_oc_protect_ut] wrong number (%d)\n", val);
-        }
     }
     return size;
 }
@@ -3315,7 +3011,6 @@ static DEVICE_ATTR(battery_oc_protect_ut, 0664, show_battery_oc_protect_ut, stor
 //==============================================================================
 static ssize_t show_battery_oc_protect_stop(struct device *dev,struct device_attribute *attr, char *buf)
 {
-    PMICLOG("[show_battery_oc_protect_stop] g_battery_oc_stop=%d\n", g_battery_oc_stop);
     return sprintf(buf, "%u\n", g_battery_oc_stop);
 }
 static ssize_t store_battery_oc_protect_stop(struct device *dev,struct device_attribute *attr, const char *buf, size_t size)
@@ -3323,16 +3018,12 @@ static ssize_t store_battery_oc_protect_stop(struct device *dev,struct device_at
     char *pvalue = NULL;
     U32 val = 0;
     
-    PMICLOG("[store_battery_oc_protect_stop] \n");
-    
     if(buf != NULL && size != 0)
     {
-        PMICLOG("[store_battery_oc_protect_stop] buf is %s and size is %zu \n",buf,size);
         val = simple_strtoul(buf,&pvalue,16);
         if( (val!=0) && (val!=1) )
             val=0;
         g_battery_oc_stop = val;
-        PMICLOG("[store_battery_oc_protect_stop] g_battery_oc_stop=%d\n", g_battery_oc_stop);
     }
     return size;
 }
@@ -3343,12 +3034,10 @@ static DEVICE_ATTR(battery_oc_protect_stop, 0664, show_battery_oc_protect_stop,
 //==============================================================================
 static ssize_t show_battery_oc_protect_level(struct device *dev,struct device_attribute *attr, char *buf)
 {
-    PMICLOG("[show_battery_oc_protect_level] g_battery_oc_level=%d\n", g_battery_oc_level);
     return sprintf(buf, "%u\n", g_battery_oc_level);
 }
 static ssize_t store_battery_oc_protect_level(struct device *dev,struct device_attribute *attr, const char *buf, size_t size)
 {
-    PMICLOG("[store_battery_oc_protect_level] g_battery_oc_level=%d\n", g_battery_oc_level);
    
     return size;
 }
@@ -3361,7 +3050,6 @@ static DEVICE_ATTR(battery_oc_protect_level, 0664, show_battery_oc_protect_level
 //==============================================================================
 static ssize_t show_battery_percent_protect_ut(struct device *dev,struct device_attribute *attr, char *buf)
 {
-    PMICLOG("[show_battery_percent_protect_ut] g_battery_percent_level=%d\n", g_battery_percent_level);
     return sprintf(buf, "%u\n", g_battery_percent_level);
 }
 static ssize_t store_battery_percent_protect_ut(struct device *dev,struct device_attribute *attr, const char *buf, size_t size)
@@ -3369,20 +3057,16 @@ static ssize_t store_battery_percent_protect_ut(struct device *dev,struct device
     char *pvalue = NULL;
     U32 val = 0;
     
-    PMICLOG("[store_battery_percent_protect_ut] \n");
     
     if(buf != NULL && size != 0)
     {
-        PMICLOG("[store_battery_percent_protect_ut] buf is %s and size is %zu \n",buf,size);
         val = simple_strtoul(buf,&pvalue,16);
         if(val<=1)
         {
-            PMICLOG("[store_battery_percent_protect_ut] your input is %d\n", val);
             exec_battery_percent_callback(val);
         }
         else
         {
-            PMICLOG("[store_battery_percent_protect_ut] wrong number (%d)\n", val);
         }
     }
     return size;
@@ -3394,7 +3078,6 @@ static DEVICE_ATTR(battery_percent_protect_ut, 0664, show_battery_percent_protec
 //==============================================================================
 static ssize_t show_battery_percent_protect_stop(struct device *dev,struct device_attribute *attr, char *buf)
 {
-    PMICLOG("[show_battery_percent_protect_stop] g_battery_percent_stop=%d\n", g_battery_percent_stop);
     return sprintf(buf, "%u\n", g_battery_percent_stop);
 }
 static ssize_t store_battery_percent_protect_stop(struct device *dev,struct device_attribute *attr, const char *buf, size_t size)
@@ -3402,16 +3085,12 @@ static ssize_t store_battery_percent_protect_stop(struct device *dev,struct devi
     char *pvalue = NULL;
     U32 val = 0;
     
-    PMICLOG("[store_battery_percent_protect_stop] \n");
-    
     if(buf != NULL && size != 0)
     {
-        PMICLOG("[store_battery_percent_protect_stop] buf is %s and size is %zu \n",buf,size);
         val = simple_strtoul(buf,&pvalue,16);
         if( (val!=0) && (val!=1) )
             val=0;
         g_battery_percent_stop = val;
-        PMICLOG("[store_battery_percent_protect_stop] g_battery_percent_stop=%d\n", g_battery_percent_stop);
     }
     return size;
 }
@@ -3422,13 +3101,10 @@ static DEVICE_ATTR(battery_percent_protect_stop, 0664, show_battery_percent_prot
 //==============================================================================
 static ssize_t show_battery_percent_protect_level(struct device *dev,struct device_attribute *attr, char *buf)
 {
-    PMICLOG("[show_battery_percent_protect_level] g_battery_percent_level=%d\n", g_battery_percent_level);
     return sprintf(buf, "%u\n", g_battery_percent_level);
 }
 static ssize_t store_battery_percent_protect_level(struct device *dev,struct device_attribute *attr, const char *buf, size_t size)
 {
-    PMICLOG("[store_battery_percent_protect_level] g_battery_percent_level=%d\n", g_battery_percent_level);
-   
     return size;
 }
 static DEVICE_ATTR(battery_percent_protect_level, 0664, show_battery_percent_protect_level, store_battery_percent_protect_level); //664
@@ -3440,7 +3116,6 @@ static DEVICE_ATTR(battery_percent_protect_level, 0664, show_battery_percent_pro
 //==============================================================================
 static ssize_t show_dlpt_ut(struct device *dev,struct device_attribute *attr, char *buf)
 {
-    PMICLOG("[show_dlpt_ut] g_dlpt_val=%d\n", g_dlpt_val);
     return sprintf(buf, "%u\n", g_dlpt_val);
 }
 static ssize_t store_dlpt_ut(struct device *dev,struct device_attribute *attr, const char *buf, size_t size)
@@ -3448,14 +3123,10 @@ static ssize_t store_dlpt_ut(struct device *dev,struct device_attribute *attr, c
     char *pvalue = NULL;
     U32 val = 0;
     
-    PMICLOG("[store_dlpt_ut] \n");
-    
     if(buf != NULL && size != 0)
     {
-        PMICLOG("[store_dlpt_ut] buf is %s and size is %zu \n",buf,size);
         val = simple_strtoul(buf,&pvalue,10);
         
-        PMICLOG("[store_dlpt_ut] your input is %d\n", val);
         exec_dlpt_callback(val);        
     }
     return size;
@@ -3467,7 +3138,6 @@ static DEVICE_ATTR(dlpt_ut, 0664, show_dlpt_ut, store_dlpt_ut); //664
 //==============================================================================
 static ssize_t show_dlpt_stop(struct device *dev,struct device_attribute *attr, char *buf)
 {
-    PMICLOG("[show_dlpt_stop] g_dlpt_stop=%d\n", g_dlpt_stop);
     return sprintf(buf, "%u\n", g_dlpt_stop);
 }
 static ssize_t store_dlpt_stop(struct device *dev,struct device_attribute *attr, const char *buf, size_t size)
@@ -3475,16 +3145,12 @@ static ssize_t store_dlpt_stop(struct device *dev,struct device_attribute *attr,
     char *pvalue = NULL;
     U32 val = 0;
     
-    PMICLOG("[store_dlpt_stop] \n");
-    
     if(buf != NULL && size != 0)
     {
-        PMICLOG("[store_dlpt_stop] buf is %s and size is %zu \n",buf,size);
         val = simple_strtoul(buf,&pvalue,16);
         if( (val!=0) && (val!=1) )
             val=0;
         g_dlpt_stop = val;
-        PMICLOG("[store_dlpt_stop] g_dlpt_stop=%d\n", g_dlpt_stop);
     }
     return size;
 }
@@ -3495,12 +3161,10 @@ static DEVICE_ATTR(dlpt_stop, 0664, show_dlpt_stop, store_dlpt_stop); //664
 //==============================================================================
 static ssize_t show_dlpt_level(struct device *dev,struct device_attribute *attr, char *buf)
 {
-    PMICLOG("[show_dlpt_level] g_dlpt_val=%d\n", g_dlpt_val);
     return sprintf(buf, "%u\n", g_dlpt_val);
 }
 static ssize_t store_dlpt_level(struct device *dev,struct device_attribute *attr, const char *buf, size_t size)
 {
-    PMICLOG("[store_dlpt_level] g_dlpt_val=%d\n", g_dlpt_val);
    
     return size;
 }
@@ -3519,7 +3183,6 @@ static int detect_battery_plug_out_status(void)
 	plug_out_1=pmic_get_register_value(PMIC_STRUP_PWROFF_PREOFF_EN);
 	plug_out_2=pmic_get_register_value(PMIC_STRUP_PWROFF_SEQ_EN);
 
-	PMICLOG("plug_out_1=%d, plug_out_2=%d\n", plug_out_1,plug_out_2);
 	if (plug_out_1 == 0 && plug_out_2 == 0)
 		g_plug_out_status = 1;
 	else
@@ -3536,25 +3199,11 @@ static int pmic_mt_probe(struct platform_device *dev)
 {
     int ret_device_file = 0,i;    
 
-    PMICLOG("******** MT pmic driver probe!! ********\n" );
-
     detect_battery_plug_out_status();
-    dump_ldo_status_read_debug();
-
-    //get PMIC CID
-    PMICLOG("PMIC CID=0x%x.\n", pmic_get_register_value(PMIC_CID));
 
-    PMICLOG("Power Good Status=0x%x.\n", upmu_get_reg_value(MT6350_PGSTATUS));
-    PMICLOG("OC Status0=0x%x.\n", upmu_get_reg_value(MT6350_OCSTATUS0));
-    PMICLOG("OC Status1=0x%x.\n", upmu_get_reg_value(MT6350_OCSTATUS1));
-    PMICLOG("Regulator Status0=0x%x.\n", upmu_get_reg_value(MT6350_EN_STATUS0));
-    PMICLOG("Regulator Status1=0x%x.\n", upmu_get_reg_value(MT6350_EN_STATUS1));    
-    PMICLOG("Thermal Status=0x%x.\n", upmu_get_reg_value(MT6350_STRUP_CON5));
     //pmic initial setting
     PMIC_INIT_SETTING_V1();
-    PMICLOG("[PMIC_INIT_SETTING_V1] Done\n");
     PMIC_CUSTOM_SETTING_V1();
-    PMICLOG("[PMIC_CUSTOM_SETTING_V1] Done\n");
 
 //#if defined(CONFIG_MTK_FPGA)
 #if 0
@@ -3570,10 +3219,8 @@ static int pmic_mt_probe(struct platform_device *dev)
     else
     {
         wake_up_process(pmic_thread_handle);
-        PMICLOG("[pmic_thread_kthread_mt6350] kthread_create Done\n");
     } 
     PMIC_EINT_SETTING();
-    PMICLOG("[PMIC_EINT_SETTING] Done\n");
 #endif
 
 
@@ -3581,26 +3228,18 @@ static int pmic_mt_probe(struct platform_device *dev)
 
 #ifdef LOW_BATTERY_PROTECT
     low_battery_protect_init();
-#else
-    PMICLOG("[PMIC] no define LOW_BATTERY_PROTECT\n" );
 #endif
 
 #ifdef BATTERY_OC_PROTECT
     battery_oc_protect_init();
-#else
-    PMICLOG("[PMIC] no define BATTERY_OC_PROTECT\n" );
 #endif
 
 #ifdef BATTERY_PERCENT_PROTECT
     bat_percent_notify_init();
-#else
-    PMICLOG("[PMIC] no define BATTERY_PERCENT_PROTECT\n" );
 #endif
 
 #ifdef DLPT_FEATURE_SUPPORT
     dlpt_notify_init();
-#else
-    PMICLOG("[PMIC] no define DLPT_FEATURE_SUPPORT\n" );
 #endif
 
 #if 0
@@ -3613,12 +3252,9 @@ static int pmic_mt_probe(struct platform_device *dev)
 #endif
 
     pmic_debug_init();
-    PMICLOG("[PMIC] pmic_debug_init : done.\n" );
 
     pmic_ftm_init();
 
-
-
     //EM BUCK voltage & Status
     for (i = 0; i < ARRAY_SIZE(mtk_bucks); i++) 
     {
@@ -3662,48 +3298,29 @@ static int pmic_mt_probe(struct platform_device *dev)
     ret_device_file = device_create_file(&(dev->dev), &dev_attr_dlpt_level);
 #endif  
 
-    PMICLOG("[PMIC] device_create_file for EM : done.\n" );
-
     //pwrkey_sw_workaround_init();
     return 0;
 }
 
 static int pmic_mt_remove(struct platform_device *dev)
 {
-    PMICLOG("******** MT pmic driver remove!! ********\n" );
-
     return 0;
 }
 
 static void pmic_mt_shutdown(struct platform_device *dev)
 {
-    PMICLOG("******** MT pmic driver shutdown!! ********\n" );
 }
 
 static int pmic_mt_suspend(struct platform_device *dev, pm_message_t state)
 {
-    PMICLOG("******** MT pmic driver suspend!! ********\n" );
-
 #ifdef LOW_BATTERY_PROTECT
     lbat_min_en_setting(0);
     lbat_max_en_setting(0);
-    
-    PMICLOG("Reg[0x%x]=0x%x, Reg[0x%x]=0x%x, Reg[0x%x]=0x%x\n", 
-        MT6328_AUXADC_LBAT3, upmu_get_reg_value(MT6328_AUXADC_LBAT3),
-        MT6328_AUXADC_LBAT4, upmu_get_reg_value(MT6328_AUXADC_LBAT4),
-        MT6328_INT_CON0, upmu_get_reg_value(MT6328_INT_CON0)
-    );
 #endif
     
 #ifdef BATTERY_OC_PROTECT
     bat_oc_h_en_setting(0);
     bat_oc_l_en_setting(0);
-    
-    PMICLOG("Reg[0x%x]=0x%x, Reg[0x%x]=0x%x, Reg[0x%x]=0x%x\n", 
-        MT6328_FGADC_CON23, upmu_get_reg_value(MT6328_FGADC_CON23),
-        MT6328_FGADC_CON24, upmu_get_reg_value(MT6328_FGADC_CON24),
-        MT6328_INT_CON2, upmu_get_reg_value(MT6328_INT_CON2)
-    );
 #endif
 
     return 0;
@@ -3711,8 +3328,6 @@ static int pmic_mt_suspend(struct platform_device *dev, pm_message_t state)
 
 static int pmic_mt_resume(struct platform_device *dev)
 {
-    PMICLOG("******** MT pmic driver resume!! ********\n" );
-
 #ifdef LOW_BATTERY_PROTECT
     lbat_min_en_setting(0);
     lbat_max_en_setting(0);
@@ -3733,12 +3348,6 @@ static int pmic_mt_resume(struct platform_device *dev)
         lbat_min_en_setting(1);
         //lbat_max_en_setting(0);
     }
-    
-    PMICLOG("Reg[0x%x]=0x%x, Reg[0x%x]=0x%x, Reg[0x%x]=0x%x\n", 
-        MT6328_AUXADC_LBAT3, upmu_get_reg_value(MT6328_AUXADC_LBAT3),
-        MT6328_AUXADC_LBAT4, upmu_get_reg_value(MT6328_AUXADC_LBAT4),
-        MT6328_INT_CON0, upmu_get_reg_value(MT6328_INT_CON0)
-    );
 #endif
     
 #ifdef BATTERY_OC_PROTECT
@@ -3750,12 +3359,6 @@ static int pmic_mt_resume(struct platform_device *dev)
         bat_oc_h_en_setting(1);
     else
         bat_oc_l_en_setting(1);
-    
-    PMICLOG("Reg[0x%x]=0x%x, Reg[0x%x]=0x%x, Reg[0x%x]=0x%x\n", 
-        MT6328_FGADC_CON23, upmu_get_reg_value(MT6328_FGADC_CON23),
-        MT6328_FGADC_CON24, upmu_get_reg_value(MT6328_FGADC_CON24),
-        MT6328_INT_CON2, upmu_get_reg_value(MT6328_INT_CON2)
-    );
 #endif
 
     return 0;
@@ -3811,8 +3414,6 @@ static int __init pmic_mt_init(void)
 
     pmic_auxadc_init();
 
-    PMICLOG("****[pmic_mt_init] Initialization : DONE !!\n");
-
     return 0;
 }
 
diff --git a/drivers/misc/mediatek/power/mt6580/pmic_auxadc.c b/drivers/misc/mediatek/power/mt6580/pmic_auxadc.c
index 8af060d73..e76494e17 100644
--- a/drivers/misc/mediatek/power/mt6580/pmic_auxadc.c
+++ b/drivers/misc/mediatek/power/mt6580/pmic_auxadc.c
@@ -85,7 +85,6 @@ void pmic_auxadc_init(void)
 {
 	kal_int32 adc_busy;
 	wake_lock_init(&pmicAuxadc_irq_lock, WAKE_LOCK_SUSPEND, "pmicAuxadc irq wakelock");
-	PMICLOG("****[pmic_auxadc_init] DONE\n");
 }
 
 kal_uint32  pmic_is_auxadc_busy(void)
@@ -223,7 +222,6 @@ kal_int32 PMIC_IMM_GetCurrent(void)
 	wake_unlock(&pmicAuxadc_irq_lock);
 	mutex_unlock(&pmic_adc_mutex);
 
-	PMICLOG("[PMIC_IMM_GetCurrent(share lock)] raw batsns:%d raw isense:%d batsns:%d isense:%d iCharging:%d cnt:%d\n", batsns,isense,ADC_BAT_SENSE,ADC_I_SENSE,ICharging,count);
         pmic_turn_on_clock(TURN_OFF);
 	return ICharging;
 
@@ -499,7 +497,6 @@ kal_uint32 PMIC_IMM_GetOneChannelValue(mt6350_adc_ch_list_enum dwChannel, int de
         	PMICLOG("[AUXADC] clock2 = %x\n", clock );        	        	
        }
        #endif
-       PMICLOG("[AUXADC] ch=%d raw=%d data=%d \n", dwChannel, ret_data,adc_result);
 
 	//return ret_data;
 	
diff --git a/drivers/misc/mediatek/power/mt6580/pmic_chr_type_det.c b/drivers/misc/mediatek/power/mt6580/pmic_chr_type_det.c
index 62856d289..24db7db21 100644
--- a/drivers/misc/mediatek/power/mt6580/pmic_chr_type_det.c
+++ b/drivers/misc/mediatek/power/mt6580/pmic_chr_type_det.c
@@ -92,7 +92,6 @@ static void hw_bc11_init(void)
     
     if(Enable_BATDRV_LOG == BAT_LOG_FULL)
     {
-        battery_xlog_printk(BAT_LOG_FULL, "hw_bc11_init() \r\n");
         hw_bc11_dump_register();
     }    
 
@@ -119,7 +118,6 @@ static U32 hw_bc11_DCD(void)
     
     if(Enable_BATDRV_LOG == BAT_LOG_FULL)
     {
-        battery_xlog_printk(BAT_LOG_FULL, "hw_bc11_DCD() \r\n");
         hw_bc11_dump_register();
     }
     
@@ -155,7 +153,6 @@ static U32 hw_bc11_stepA1(void)
 				
    if(Enable_BATDRV_LOG == BAT_LOG_FULL)
    {
-       battery_xlog_printk(BAT_LOG_FULL, "hw_bc11_stepA1() \r\n");
        hw_bc11_dump_register();
    }
 
@@ -191,7 +188,6 @@ static U32 hw_bc11_stepA2(void)
 
    if(Enable_BATDRV_LOG == BAT_LOG_FULL)
    {
-       battery_xlog_printk(BAT_LOG_FULL, "hw_bc11_stepA2() \r\n");
        hw_bc11_dump_register();
    }
 
@@ -224,7 +220,6 @@ static U32 hw_bc11_stepB2(void)
 
    if(Enable_BATDRV_LOG == BAT_LOG_FULL)
    {
-       battery_xlog_printk(BAT_LOG_FULL, "hw_bc11_stepB2() \r\n");
        hw_bc11_dump_register();
    }
 
@@ -266,7 +261,6 @@ static void hw_bc11_done(void)
 
    if(Enable_BATDRV_LOG == BAT_LOG_FULL)
    {
-       battery_xlog_printk(BAT_LOG_FULL, "hw_bc11_done() \r\n");
        hw_bc11_dump_register();
    }
    
@@ -290,12 +284,10 @@ int hw_charging_get_charger_type(void)
          if(1 == hw_bc11_stepA1())
          {             
              CHR_Type_num = APPLE_2_1A_CHARGER;
-             battery_xlog_printk(BAT_LOG_CRTI, "step A1 : Apple 2.1A CHARGER!\r\n");
          }
          else
          {
              CHR_Type_num = NONSTANDARD_CHARGER;
-             battery_xlog_printk(BAT_LOG_CRTI, "step A1 : Non STANDARD CHARGER!\r\n");
          }
     }
     else
@@ -308,18 +300,15 @@ int hw_charging_get_charger_type(void)
              {
                  is_dcp_type = true;
                  CHR_Type_num = STANDARD_CHARGER;
-                 battery_xlog_printk(BAT_LOG_CRTI, "step B2 : STANDARD CHARGER!\r\n");
              }
              else
              {
                  CHR_Type_num = CHARGING_HOST;
-                 battery_xlog_printk(BAT_LOG_CRTI, "step B2 :  Charging Host!\r\n");
              }
          }
          else
          {
              CHR_Type_num = STANDARD_HOST;
-             battery_xlog_printk(BAT_LOG_CRTI, "step A2 : Standard USB Host!\r\n");
          }
  
     }
@@ -330,4 +319,4 @@ int hw_charging_get_charger_type(void)
     return CHR_Type_num;
 #endif    
 }
-#endif
\ No newline at end of file
+#endif
diff --git a/drivers/misc/mediatek/ram_console/mtk_ram_console.c b/drivers/misc/mediatek/ram_console/mtk_ram_console.c
index f9288d1f3..ac788486d 100755
--- a/drivers/misc/mediatek/ram_console/mtk_ram_console.c
+++ b/drivers/misc/mediatek/ram_console/mtk_ram_console.c
@@ -291,7 +291,6 @@ void pstore_console_show(enum pstore_type_id type_id, struct seq_file *m, void *
 		goto out;
 
 	while ((size = psi->read(&id, &type, &count, &time, &buf, psi)) > 0) {
-		pr_err("ram_console: id %lld, type %d, count %d, size %zx\n", id, type, count, size);
 		if (type == type_id)
 			seq_write(m, buf, size);
 		kfree(buf);
@@ -441,7 +440,6 @@ static int ram_console_lastk_show(struct ram_console_buffer *buffer, struct seq_
 {
 	unsigned int wdt_status;
 	if (ram_console_check_header(buffer) && buffer->sz_buffer != 0) {
-		pr_err("ram_console: buffer %p, size %x(%x)\n", buffer, buffer->sz_buffer, ram_console_buffer->sz_buffer);
 		if (buffer)
 			seq_write(m, buffer, ram_console_buffer->sz_buffer);
 		else
@@ -449,25 +447,9 @@ static int ram_console_lastk_show(struct ram_console_buffer *buffer, struct seq_
 		return 0;
 	}
 	if (buffer->off_pl == 0 || buffer->off_pl + ALIGN(buffer->sz_pl, 64) != buffer->off_lpl) {
-        pr_err("ram_console OTA: sig(0x%p):0x%x, off_lpl(0x%p):0x%x, off_pl(0x%p):0x%x, sz_pl(0x%p):0x%x, off_lk(0x%p):0x%x, off_llk(0x%p):0x%x,sz_lk(0x%p):0x%x\n", 
-            &(buffer->sig), buffer->sig, 
-            &(buffer->off_lpl), buffer->off_lpl, 
-            &(buffer->off_pl), buffer->off_pl, 
-            &(buffer->sz_pl), buffer->sz_pl, 
-            &(buffer->off_lk), buffer->off_lk, 
-            &(buffer->off_llk), buffer->off_llk,
-            &(buffer->sz_lk), buffer->sz_lk);
 		/* workaround for compatiblity to old preloader & lk (OTA) */
 		wdt_status = *((unsigned char*)buffer + 12);
 	} else {
-        pr_err("ram_console NON-OTA: sig(0x%p):0x%x, off_lpl(0x%p):0x%x, off_pl(0x%p):0x%x, sz_pl(0x%p):0x%x, off_lk(0x%p):0x%x, off_llk(0x%p):0x%x,sz_lk(0x%p):0x%x\n", 
-            &(buffer->sig), buffer->sig, 
-            &(buffer->off_lpl), buffer->off_lpl, 
-            &(buffer->off_pl), buffer->off_pl, 
-            &(buffer->sz_pl), buffer->sz_pl, 
-            &(buffer->off_lk), buffer->off_lk, 
-            &(buffer->off_llk), buffer->off_llk,
-            &(buffer->sz_lk), buffer->sz_lk);
 		wdt_status = LAST_RRPL_BUF_VAL(buffer, wdt_status);
     }
 	
@@ -475,9 +457,6 @@ static int ram_console_lastk_show(struct ram_console_buffer *buffer, struct seq_
 		   wdt_status, LAST_RRR_BUF_VAL(buffer, fiq_step));
 
 #ifdef CONFIG_PSTORE_CONSOLE
-	pr_err("ram_console: pstore show start\n");
-	pstore_console_show(PSTORE_TYPE_CONSOLE, m, v);
-	pr_err("ram_console: pstore show end\n");
 #else
 	if (buffer->off_console != 0 && buffer->off_linux + ALIGN(sizeof(struct last_reboot_reason), 64) == buffer->off_console
 	    && buffer->sz_console == buffer->sz_buffer - buffer->off_console && buffer->log_size <= buffer->sz_console &&
@@ -697,8 +676,6 @@ late_initcall(ram_console_late_init);
 
 int ram_console_pstore_reserve_memory(struct reserved_mem *rmem, unsigned long node, const char *uname)
 {
-	pr_alert("[memblock]%s: 0x%llx - 0x%llx (0x%llx)\n", uname, (unsigned long long)rmem->base,
-		 (unsigned long long)rmem->base + (unsigned long long)rmem->size, (unsigned long long)rmem->size);
 	return 0;
 }
 RESERVEDMEM_OF_DECLARE(reserve_memory_pstore, "pstore-reserve-memory", ram_console_pstore_reserve_memory);
diff --git a/drivers/misc/mediatek/rtc/mt6580/mtk_rtc_hal.c b/drivers/misc/mediatek/rtc/mt6580/mtk_rtc_hal.c
index adff7bab8..3b73b892a 100644
--- a/drivers/misc/mediatek/rtc/mt6580/mtk_rtc_hal.c
+++ b/drivers/misc/mediatek/rtc/mt6580/mtk_rtc_hal.c
@@ -133,8 +133,6 @@ u16 hal_rtc_get_register_status(const char * cmd)
 		pdn1 = rtc_read(RTC_PDN1);
 		con = rtc_read(RTC_CON);
 
-		hal_rtc_xinfo("RTC_GPIO 32k status(RTC_PDN1=0x%x)(RTC_CON=0x%x)\n",pdn1, con);
-	
 		if(con & RTC_CON_F32KOB)
 			return 0;
 		else
@@ -183,7 +181,6 @@ void hal_rtc_set_gpio_32k_status(u16 user, bool enable)
 		rtc_write(RTC_PDN1, pdn1);
 		rtc_write_trigger();
 	}
-	hal_rtc_xinfo("RTC_GPIO user %d enable = %d 32k (0x%x)\n", user, enable, pdn1);
 }
 
 void hal_rtc_set_writeif(bool enable)
@@ -235,19 +232,16 @@ void hal_rtc_bbpu_pwdn(void)
 {
 	u16 bbpu, con;
 
-	hal_rtc_xinfo("hal_rtc_bbpu_pwdn (RTC_CON=0x%x)\n",rtc_read(RTC_CON));
 	rtc_writeif_unlock();
 	/* disable 32K export if there are no RTC_GPIO users */
 	if (!(rtc_read(RTC_PDN1) & RTC_GPIO_USER_MASK)) 	{
 		con = rtc_read(RTC_CON) | RTC_CON_F32KOB;
 		rtc_write(RTC_CON, con);
-		hal_rtc_xinfo("hal_rtc_bbpu_pwdn (RTC_CON=0x%x)\n",rtc_read(RTC_CON));
 		rtc_write_trigger();
 	}
 
 	/* pull PWRBB low */
 		bbpu = RTC_BBPU_KEY | RTC_BBPU_AUTO | RTC_BBPU_PWREN;
-		hal_rtc_xinfo("hal_rtc_bbpu_pwdn XTAL (bbpu=0x%x)\n",bbpu);
 		rtc_write(RTC_BBPU, bbpu);
 		rtc_write_trigger();	
 }
@@ -374,13 +368,10 @@ bool hal_rtc_check_pwron_alarm_rg(struct rtc_time *nowtm, struct rtc_time *tm) {
 	pdn2 = rtc_read(RTC_PDN2);
 	spar0 = rtc_read(RTC_SPAR0);
 	spar1 = rtc_read(RTC_SPAR1);
-	hal_rtc_xinfo("pdn1 = 0x%4x\n", pdn1);
 
 	if (pdn1 & RTC_PDN1_PWRON_TIME) {	/* power-on time is available */
 
-		hal_rtc_xinfo("pdn1 = 0x%4x\n", pdn1);
 		hal_rtc_get_tick_time(nowtm);
-		hal_rtc_xinfo("pdn1 = 0x%4x\n", pdn1);
 		if (rtc_read(RTC_TC_SEC) < nowtm->tm_sec) {	/* SEC has carried */
 			hal_rtc_get_tick_time(nowtm);
 		}
@@ -416,12 +407,6 @@ void hal_rtc_get_alarm_time(struct rtc_time *tm, struct rtc_wkalrm *alm) {
 void hal_rtc_set_alarm_time(struct rtc_time *tm) {
 	u16 irqen;
 	
-	hal_rtc_xinfo("read tc time = %04d/%02d/%02d (%d) %02d:%02d:%02d\n",
-		tm->tm_year + 1900, tm->tm_mon + 1, tm->tm_mday,
-		          tm->tm_wday, tm->tm_hour, tm->tm_min, tm->tm_sec);
-		hal_rtc_xinfo("a = %d\n",(rtc_read(RTC_AL_MTH)& (RTC_NEW_SPARE3))|tm->tm_mon);
-		hal_rtc_xinfo("b = %d\n",(rtc_read(RTC_AL_DOM)& (RTC_NEW_SPARE1))|tm->tm_mday);
-		hal_rtc_xinfo("c = %d\n",(rtc_read(RTC_AL_HOU)& (RTC_NEW_SPARE_FG_MASK))|tm->tm_hour);
 		rtc_write(RTC_AL_YEA, (rtc_read(RTC_AL_YEA) & ~(RTC_AL_YEA_MASK)) | (tm->tm_year & RTC_AL_YEA_MASK));
 		rtc_write(RTC_AL_MTH, (rtc_read(RTC_AL_MTH) & (RTC_NEW_SPARE3))|tm->tm_mon);
 		rtc_write(RTC_AL_DOM, (rtc_read(RTC_AL_DOM) & (RTC_NEW_SPARE1))|tm->tm_mday);
@@ -472,8 +457,6 @@ void hal_rtc_read_rg(void) {
 
 	irqen = rtc_read(RTC_IRQ_EN);
 	pdn1 = rtc_read(RTC_PDN1);
-
-	hal_rtc_xinfo("RTC_IRQ_EN = 0x%x, RTC_PDN1 = 0x%x\n",irqen, pdn1);
 }
 
 void hal_rtc_save_pwron_time(bool enable, struct rtc_time *tm, bool logo) {
diff --git a/drivers/misc/mediatek/rtc/mtk_rtc_common.c b/drivers/misc/mediatek/rtc/mtk_rtc_common.c
index 1d90c4934..7cb04b2af 100644
--- a/drivers/misc/mediatek/rtc/mtk_rtc_common.c
+++ b/drivers/misc/mediatek/rtc/mtk_rtc_common.c
@@ -162,8 +162,8 @@ extern void pmic_enable_interrupt(kal_uint32 intNo,kal_uint32 en,char *str);
 static struct rtc_device *rtc;
 static DEFINE_SPINLOCK(rtc_lock);
 
-static int rtc_show_time;
-static int rtc_show_alarm = 1;
+static int rtc_show_time = 0;
+static int rtc_show_alarm = 0;
 
 #if 1
 unsigned long rtc_read_hw_time(void)
@@ -403,7 +403,6 @@ static void rtc_handler(void)
 	bool pwron_alm = false, isLowPowerIrq = false, pwron_alarm = false;
 	struct rtc_time nowtm;
 	struct rtc_time tm;
-	rtc_xinfo("rtc_tasklet_handler start\n");
 
 	spin_lock(&rtc_lock);
 	isLowPowerIrq = hal_rtc_is_lp_irq();
@@ -573,10 +572,6 @@ static int rtc_ops_read_alarm(struct device *dev, struct rtc_wkalrm *alm)
 	tm->tm_year += RTC_MIN_YEAR_OFFSET;
 	tm->tm_mon--;
 
-	rtc_xinfo("read al time = %04d/%02d/%02d %02d:%02d:%02d (%d)\n",
-		  tm->tm_year + 1900, tm->tm_mon + 1, tm->tm_mday,
-		  tm->tm_hour, tm->tm_min, tm->tm_sec, alm->enabled);
-
 	return 0;
 }
 
@@ -597,10 +592,6 @@ static int rtc_ops_set_alarm(struct device *dev, struct rtc_wkalrm *alm)
 	tm->tm_year -= RTC_MIN_YEAR_OFFSET;
 	tm->tm_mon++;
 
-	rtc_xinfo("set al time = %04d/%02d/%02d %02d:%02d:%02d (%d)\n",
-		  tm->tm_year + RTC_MIN_YEAR, tm->tm_mon, tm->tm_mday,
-		  tm->tm_hour, tm->tm_min, tm->tm_sec, alm->enabled);
-
 	spin_lock_irqsave(&rtc_lock, flags);
 	if (alm->enabled == 2) {	/* enable power-on alarm */
 		rtc_save_pwron_time(true, tm, false);
@@ -627,8 +618,6 @@ void rtc_pwm_enable_check(void)
 #ifdef VRTC_PWM_ENABLE
 	U64 time;
 
-	rtc_xinfo("rtc_pwm_enable_check()\n");
-
 	time = sched_clock();
 	do_div(time, 1000000000);
 
@@ -639,7 +628,6 @@ void rtc_pwm_enable_check(void)
 	}
 	else
 	{
-		rtc_xinfo("time=%lld, less than %d, don't enable rtc pwm\n",time,RTC_PWM_ENABLE_POLLING_TIMER);
 	}
 
 #endif
@@ -649,18 +637,15 @@ void rtc_pwm_enable_check(void)
 static int rtc_ops_ioctl(struct device *dev, unsigned int cmd, unsigned long arg)
 {
 	/* dump_stack(); */
-	rtc_xinfo("rtc_ops_ioctl cmd=%d\n", cmd);
 	switch (cmd) {
 	case RTC_AUTOBOOT_ON:
 		{
 			hal_rtc_set_register_status("AUTOBOOT", AUTOBOOT_ON);
-			rtc_xinfo("rtc_ops_ioctl cmd=RTC_AUTOBOOT_ON\n");
 			return 0;
 		}
 	case RTC_AUTOBOOT_OFF:	/* IPO shutdown */
 		{
 			hal_rtc_set_register_status("AUTOBOOT", AUTOBOOT_OFF);
-			rtc_xinfo("rtc_ops_ioctl cmd=RTC_AUTOBOOT_OFF\n");
 			return 0;
 		}
 	default:
@@ -725,7 +710,6 @@ static struct platform_device rtc_pdev = {
 static int __init rtc_device_init(void)
 {
 	int r;
-	rtc_xinfo("rtc_init");
 
 	r = platform_device_register(&rtc_pdev);
 	if (r) {
@@ -783,11 +767,6 @@ static int __init rtc_late_init(void)
 	hal_rtc_read_rg();
 	spin_unlock_irqrestore(&rtc_lock, flags);
 
-	if (crystal_exist_status() == true)
-		rtc_xinfo("There is Crystal\n");
-	else
-		rtc_xinfo("There is no Crystal\n");
-
 #if (defined(MTK_GPS_MT3332))
 	hal_rtc_set_gpio_32k_status(0, true);
 #endif
diff --git a/drivers/misc/mediatek/sched/mt_cpu_affinity/mt_sched.c b/drivers/misc/mediatek/sched/mt_cpu_affinity/mt_sched.c
index a8f328323..ff2c4db6d 100644
--- a/drivers/misc/mediatek/sched/mt_cpu_affinity/mt_sched.c
+++ b/drivers/misc/mediatek/sched/mt_cpu_affinity/mt_sched.c
@@ -423,8 +423,6 @@ static int __init sched_ioctl_init(void)
 	}
 	class_dev = device_create(sched_class, NULL, sched_dev_num, NULL, "mtk_sched");
 
-	pr_alert("MT_SCHED: Init complete, device major number = %d\n", MAJOR(sched_dev_num));
-
 	goto out;
 
 	class_destroy(sched_class);
@@ -560,7 +558,6 @@ static void sched_module_exit(void)
 	class_destroy(sched_class);
 	cdev_del(sched_ioctl_cdev);
 	unregister_chrdev_region(sched_dev_num, 1);
-	pr_alert("MT_SCHED: driver removed.\n");
 }
 module_init(sched_module_init);
 module_exit(sched_module_exit);
diff --git a/drivers/misc/mediatek/sched/mt_sched.c b/drivers/misc/mediatek/sched/mt_sched.c
index a8f328323..ff2c4db6d 100644
--- a/drivers/misc/mediatek/sched/mt_sched.c
+++ b/drivers/misc/mediatek/sched/mt_sched.c
@@ -423,8 +423,6 @@ static int __init sched_ioctl_init(void)
 	}
 	class_dev = device_create(sched_class, NULL, sched_dev_num, NULL, "mtk_sched");
 
-	pr_alert("MT_SCHED: Init complete, device major number = %d\n", MAJOR(sched_dev_num));
-
 	goto out;
 
 	class_destroy(sched_class);
@@ -560,7 +558,6 @@ static void sched_module_exit(void)
 	class_destroy(sched_class);
 	cdev_del(sched_ioctl_cdev);
 	unregister_chrdev_region(sched_dev_num, 1);
-	pr_alert("MT_SCHED: driver removed.\n");
 }
 module_init(sched_module_init);
 module_exit(sched_module_exit);
diff --git a/drivers/misc/mediatek/smi/mt6580/smi_common.c b/drivers/misc/mediatek/smi/mt6580/smi_common.c
index 0780fd1cf..4c872dc69 100644
--- a/drivers/misc/mediatek/smi/mt6580/smi_common.c
+++ b/drivers/misc/mediatek/smi/mt6580/smi_common.c
@@ -107,7 +107,7 @@ static unsigned int default_val_smi_l1arb[SMI_LARB_NR] = { 0 };
 static unsigned int wifi_disp_transaction = 0;
 
 /* debug level */
-static unsigned int smi_debug_level = 0;
+static unsigned int smi_debug_level = 2;
 
 /* tuning mode, 1 for register ioctl */
 static unsigned int smi_tuning_mode = 0;
@@ -338,7 +338,6 @@ static int smi_larb_init( unsigned int larb ){
     // regval2 = M4U_ReadReg32(larb_base , SMI_LARB_MON_BUS_REQ1);
 
     if( 0 == regval ){
-        SMIDBG(1, "Init OSTD for larb_base: 0x%lx\n", larb_base);
         M4U_WriteReg32(larb_base, SMI_LARB_OSTDL_SOFT_EN, 0xffffffff);
     }else{
         SMIMSG(
@@ -379,8 +378,6 @@ int larb_reg_restore( int larb ){
 
     pReg = pLarbRegBackUp[larb];
 
-    SMIDBG(1, "+larb_reg_restore(), larb_idx=%d \n", larb);
-    SMIDBG(1, "m4u part restore, larb_idx=%d \n", larb);
     //warning: larb_con is controlled by set/clr
     regval = *(pReg++);
     M4U_WriteReg32(larb_base, SMI_LARB_CON_CLR, ~(regval));
@@ -427,13 +424,10 @@ static void initSetting( void ){
 
     /* save default larb regs */
     if( !is_default_value_saved ){
-        SMIMSG("Save default config:\n");
         default_val_smi_l1arb[0] = M4U_ReadReg32(SMI_COMMON_EXT_BASE,
             REG_OFFSET_SMI_L1ARB0);
         default_val_smi_l1arb[1] = M4U_ReadReg32(SMI_COMMON_EXT_BASE,
             REG_OFFSET_SMI_L1ARB1);       
-        SMIMSG("l1arb[0-1]= 0x%x,  0x%x\n", default_val_smi_l1arb[0],
-            default_val_smi_l1arb[1]);
 
         is_default_value_saved = 1;
     }
@@ -549,10 +543,8 @@ static int fake_mode_handling(
     if( p_conf->scenario == SMI_BWC_SCEN_WFD ){
         if( p_conf->b_on_off ){
             wifi_disp_transaction = 1;
-            SMIMSG("Enable WFD in profile: %d\n", smi_profile);
         }else{
             wifi_disp_transaction = 0;
-            SMIMSG("Disable WFD in profile: %d\n", smi_profile);
         }
         return 1;
     }else{
@@ -576,13 +568,8 @@ static int ovl_limit_uevent( int bwc_scenario, int ovl_pixel_limit ){
 
     if( pSmiDev != NULL ){
         err = kobject_uevent_env(&(smiDeviceUevent->kobj), KOBJ_CHANGE, envp);
-        SMIMSG("Notify OVL limitaion=%d, SCEN=%d", ovl_pixel_limit,
-            bwc_scenario);
     }
 
-    if(err < 0)
-        SMIMSG(KERN_INFO "[%s] kobject_uevent_env error = %d\n", __func__, err);
-
     return err;
 }
 
@@ -692,55 +679,46 @@ static int smi_bwc_config(
     /* Bandwidth Limiter */
     switch( eFinalScen ){
         case SMI_BWC_SCEN_VP:
-            SMIMSG("[SMI_PROFILE] : %s\n", "SMI_BWC_VP");
             vpSetting();
             g_smi_bwc_mm_info.hw_ovl_limit = SF_HWC_PIXEL_MAX_VP;
             break;
 
         case SMI_BWC_SCEN_SWDEC_VP:
-            SMIMSG("[SMI_PROFILE] : %s\n", "SMI_BWC_SCEN_SWDEC_VP");
             vpSetting();
             g_smi_bwc_mm_info.hw_ovl_limit = SF_HWC_PIXEL_MAX_VP;
             break;
 
         case SMI_BWC_SCEN_ICFP:
-            SMIMSG("[SMI_PROFILE] : %s\n", "SMI_BWC_SCEN_ICFP");
             icfpSetting();
             g_smi_bwc_mm_info.hw_ovl_limit = SF_HWC_PIXEL_MAX_VR;
             break;
         case SMI_BWC_SCEN_VR:
-            SMIMSG("[SMI_PROFILE] : %s\n", "SMI_BWC_VR");
             vrSetting();
             g_smi_bwc_mm_info.hw_ovl_limit = SF_HWC_PIXEL_MAX_VR;
             break;
 
         case SMI_BWC_SCEN_VR_SLOW:
-            SMIMSG("[SMI_PROFILE] : %s\n", "SMI_BWC_VR");
             smi_profile = SMI_BWC_SCEN_VR_SLOW;
             vrSetting();
             g_smi_bwc_mm_info.hw_ovl_limit = SF_HWC_PIXEL_MAX_NORMAL;
             break;
 
         case SMI_BWC_SCEN_VENC:
-            SMIMSG("[SMI_PROFILE] : %s\n", "SMI_BWC_SCEN_VENC");
             vrSetting();
             g_smi_bwc_mm_info.hw_ovl_limit = SF_HWC_PIXEL_MAX_NORMAL;
             break;
 
         case SMI_BWC_SCEN_NORMAL:
-            SMIMSG("[SMI_PROFILE] : %s\n", "SMI_BWC_SCEN_NORMAL");
             g_smi_bwc_mm_info.hw_ovl_limit = SF_HWC_PIXEL_MAX_NORMAL;
             initSetting();
             break;
 
         case SMI_BWC_SCEN_MM_GPU:
-            SMIMSG("[SMI_PROFILE] : %s\n", "SMI_BWC_SCEN_MM_GPU");
             g_smi_bwc_mm_info.hw_ovl_limit = SF_HWC_PIXEL_MAX_NORMAL;
             initSetting();
             break;
 
         default:
-            SMIMSG("[SMI_PROFILE] : %s %d\n", "initSetting", eFinalScen);
             initSetting();
             g_smi_bwc_mm_info .hw_ovl_limit = SF_HWC_PIXEL_MAX_NORMAL;
             break;
@@ -763,20 +741,12 @@ static int smi_bwc_config(
         if( (eFinalScen == SMI_BWC_SCEN_VR_SLOW) && (current_fps != 30) ){ /* force 30 fps in VR slow motion profile */
             primary_display_force_set_vsync_fps(30);
             current_fps = 30;
-            SMIMSG("[SMI_PROFILE] set 30 fps\n");
         }else if( (eFinalScen != SMI_BWC_SCEN_VR_SLOW) && (current_fps == 30) ){ /* back to normal fps */
             current_fps = primary_display_get_fps();
             primary_display_force_set_vsync_fps(current_fps);
-            SMIMSG("[SMI_PROFILE] back to %u fps\n", current_fps);
         }
     }
 
-    SMIMSG("SMI_PROFILE to:%d %s,cur:%d,%d,%d,%d\n", p_conf->scenario,
-        (p_conf->b_on_off ? "on" : "off"), eFinalScen,
-        g_SMIInfo.pu4ConcurrencyTable[SMI_BWC_SCEN_NORMAL],
-        g_SMIInfo.pu4ConcurrencyTable[SMI_BWC_SCEN_VR],
-        g_SMIInfo.pu4ConcurrencyTable[SMI_BWC_SCEN_VP]);
-
     //Debug usage - S
     //smi_dumpDebugMsg();
     //SMIMSG("Config:%d,%d,%d\n" , eFinalScen , g_SMIInfo.pu4ConcurrencyTable[SMI_BWC_SCEN_NORMAL] , (NULL == pu4LocalCnt ? (-1) : pu4LocalCnt[p_conf->scenario]));
@@ -1041,14 +1011,12 @@ static int smi_probe( struct platform_device *pdev ){
 
     static unsigned int smi_probe_cnt = 0;
     struct device* smiDevice = NULL;
-    SMIMSG("Enter smi_probe\n");
     //Debug only
     if( smi_probe_cnt != 0 ){
         SMIERR("Onlye support 1 SMI driver probed\n");
         return 0;
     }
     smi_probe_cnt++;
-    SMIMSG("Allocate smi_dev space\n");
     smi_dev = krealloc(smi_dev, sizeof(struct smi_device), GFP_KERNEL);
 
     if( smi_dev == NULL ){
@@ -1064,7 +1032,6 @@ static int smi_probe( struct platform_device *pdev ){
 
     // Map registers
     for( i = 0; i < SMI_REG_REGION_MAX; i++ ){
-        SMIMSG("Save region: %d\n", i);
         smi_dev->regs[i] = (void *) of_iomap(pdev->dev.of_node, i);
 
         if( !smi_dev->regs[i] ){
@@ -1074,11 +1041,8 @@ static int smi_probe( struct platform_device *pdev ){
 
         // Record the register base in global variable
         gSMIBaseAddrs[i] = (unsigned long) (smi_dev->regs[i]);
-        SMIMSG("DT, i=%d, region=%s, map_addr=0x%p, reg_pa=0x%lx\n", i,
-            smi_get_region_name(i), smi_dev->regs[i], smi_reg_pa_base[i]);
     }
 
-    SMIMSG("Execute smi_register\n");
     if( smi_register() ){
         dev_err(&pdev->dev, "register char failed\n");
         return -EAGAIN;
@@ -1090,12 +1054,9 @@ static int smi_probe( struct platform_device *pdev ){
         SMIERR("Unable to create class, err = %d", ret);
         return ret;
     }
-    SMIMSG("Create davice\n");
     smiDevice = device_create(pSmiClass, NULL, smiDevNo, NULL, "MTK_SMI");
     smiDeviceUevent = smiDevice;
 
-    SMIMSG("SMI probe done.\n");
-
     // To adapt the legacy codes
     smi_reg_base_common_ext = gSMIBaseAddrs[SMI_COMMON_REG_INDX];
     smi_reg_base_barb0 = gSMIBaseAddrs[SMI_LARB0_REG_INDX];
@@ -1107,10 +1068,8 @@ static int smi_probe( struct platform_device *pdev ){
     gLarbBaseAddr[1] = LARB1_BASE;
     
 
-    SMIMSG("Execute smi_common_init\n");
     smi_common_init();
 
-    SMIMSG("Execute SMI_DBG_Init\n");
     SMI_DBG_Init();
     return 0;
 
@@ -1179,19 +1138,16 @@ static struct platform_driver smiDrv ={
 
 static int __init smi_init(void)
 {
-    SMIMSG("smi_init enter\n");
     spin_lock_init(&g_SMIInfo.SMI_lock);
 
     memset(g_SMIInfo.pu4ConcurrencyTable , 0 , SMI_BWC_SCEN_CNT * sizeof(unsigned int));
 
     // Informs the kernel about the function to be called
     // if hardware matching MTK_SMI has been found
-    SMIMSG("register platform driver\n");
     if (platform_driver_register(&smiDrv)){
         SMIERR("failed to register MAU driver");
         return -ENODEV;
     }
-    SMIMSG("exit smi_init\n");
     return 0;
 }
 
@@ -1676,7 +1632,6 @@ long MTK_SMI_COMPAT_ioctl(struct file *filp, unsigned int cmd, unsigned long arg
         {
             if(COMPAT_MTK_IOC_SMI_BWC_CONFIG == MTK_IOC_SMI_BWC_CONFIG)
             {
-                SMIMSG("Optimized compct IOCTL: COMPAT_MTK_IOC_SMI_BWC_CONFIG");
                 return filp->f_op->unlocked_ioctl(filp, cmd,(unsigned long)compat_ptr(arg));
             } else{
 
@@ -1705,7 +1660,6 @@ long MTK_SMI_COMPAT_ioctl(struct file *filp, unsigned int cmd, unsigned long arg
 
             if(COMPAT_MTK_IOC_SMI_BWC_INFO_SET == MTK_IOC_SMI_BWC_INFO_SET)
             {
-                SMIMSG("Optimized compct IOCTL: COMPAT_MTK_IOC_SMI_BWC_INFO_SET");
                 return filp->f_op->unlocked_ioctl(filp, cmd,(unsigned long)compat_ptr(arg));
             } else{
 
@@ -1731,7 +1685,6 @@ long MTK_SMI_COMPAT_ioctl(struct file *filp, unsigned int cmd, unsigned long arg
         {
 
             if(COMPAT_MTK_IOC_SMI_BWC_INFO_GET == MTK_IOC_SMI_BWC_INFO_GET){
-                SMIMSG("Optimized compct IOCTL: COMPAT_MTK_IOC_SMI_BWC_INFO_GET");
                 return filp->f_op->unlocked_ioctl(filp, cmd,(unsigned long)compat_ptr(arg));
             } else{
                 MTK_SMI_COMPAT_BWC_MM_INFO __user *data32;
diff --git a/drivers/misc/mediatek/spi/mt6580/spi-dev.c b/drivers/misc/mediatek/spi/mt6580/spi-dev.c
index 0a67df053..50d731277 100644
--- a/drivers/misc/mediatek/spi/mt6580/spi-dev.c
+++ b/drivers/misc/mediatek/spi/mt6580/spi-dev.c
@@ -69,11 +69,7 @@ static int spi_setup_xfer(struct device *dev, struct spi_transfer *xfer, u32 len
 			return -ENOMEM;
 		}
 #ifdef CONFIG_ARCH_DMA_ADDR_T_64BIT
-		SPIDEV_LOG("Transfer addr:Tx:0x%llx, Rx:0x%llx, before\n",
-			   xfer->tx_dma, xfer->rx_dma);
 #else
-		SPIDEV_LOG("Transfer addr:Tx:0x%x, Rx:0x%x, before\n",
-			   xfer->tx_dma, xfer->rx_dma);
 #endif
 		xfer->len = 32;
 #if 0
@@ -94,11 +90,8 @@ static int spi_setup_xfer(struct device *dev, struct spi_transfer *xfer, u32 len
 		xfer->rx_buf += SPI_CROSS_ALIGN_OFFSET;
 #endif
 #ifdef CONFIG_ARCH_DMA_ADDR_T_64BIT
-		SPIDEV_LOG("Transfer addr:Tx:0x%llx, Rx:0x%llx\n", xfer->tx_dma, xfer->rx_dma);
 #else
-		SPIDEV_LOG("Transfer addr:Tx:0x%x, Rx:0x%x\n", xfer->tx_dma, xfer->rx_dma);
 #endif
-		SPIDEV_LOG("Transfer addr:Tx:0x%p, Rx:0x%p\n", xfer->tx_buf, xfer->rx_buf);
 #if 0
 		for (i = 0; i < cnt; i++)
 			*((u32 *) xfer->tx_buf + i) = tx_buffer + i;
@@ -130,11 +123,8 @@ static int spi_recv_check(struct spi_message *msg)
 		cnt = (xfer->len % 4) ? (xfer->len / 4 + 1) : (xfer->len / 4);
 		for (i = 0; i < cnt; i++) {
 			if (*((u32 *) xfer->rx_buf + i) != *((u32 *) xfer->tx_buf + i)) {
-				SPIDEV_LOG("tx xfer %d is:%.8x\n", i, *((u32 *) xfer->tx_buf + i));
-				SPIDEV_LOG("rx xfer %d is:%.8x\n", i, *((u32 *) xfer->rx_buf + i));
 				/* SPIDEV_LOG("tx xfer %d dma is:%.8x\n", i, ((u32 *) xfer->tx_dma + i)); */
 				/* SPIDEV_LOG("rx xfer %d dma is:%.8x\n", i, ((u32 *) xfer->rx_dma + i)); */
-				SPIDEV_LOG("\n");
 				err++;
 			}
 		}
@@ -144,9 +134,6 @@ static int spi_recv_check(struct spi_message *msg)
 		kfree(xfer->rx_buf);
 	}
 
-	SPIDEV_LOG("Message:0x%p,error %d,actual xfer length is:%d\n", msg, err,
-		   msg->actual_length);
-
 	return err;
 
 }
@@ -183,8 +170,6 @@ static int spi_recv_check_all(struct spi_device *spi, struct spi_message *msg)
 				rec_cac = *((u8 *) xfer->tx_buf + i);
 			}
 			if (*((u8 *) xfer->rx_buf + i) != rec_cac) {
-				SPIDEV_LOG("tx xfer %d is:%x\n", i, *((u8 *) xfer->tx_buf + i));
-				SPIDEV_LOG("rx xfer %d is:%x\n", i, *((u8 *) xfer->rx_buf + i));
 				err++;
 			}
 		}
@@ -192,13 +177,9 @@ static int spi_recv_check_all(struct spi_device *spi, struct spi_message *msg)
 		kfree(xfer->rx_buf);
 	}
 
-	SPIDEV_LOG("Message:0x%p,error %d,actual xfer length is:%d\n", msg, err,
-		   msg->actual_length);
-
 	return err;
 
 }
-
 static void spi_complete(void *arg)
 {
 	static u32 i;
@@ -325,9 +306,7 @@ static int threadfunc3(void *data)
 static int threadfunc4(void *data)
 {
 	/* struct spi_transfer transfer; */
-	struct spi_message msg;
-	struct spi_device *spi = (struct spi_device *)data;
-
+	struct spi_message msg; struct spi_device *spi = (struct spi_device *)data; 
 	u32 len = 32;
 	int ret;
 	u16 i;
@@ -378,8 +357,6 @@ static ssize_t spi_store(struct device *dev,
 
 	spi = container_of(dev, struct spi_device, dev);
 
-	SPIDEV_LOG("SPIDEV name is:%s\n", spi->modalias);
-
 	chip_config = (struct mt_chip_conf *)spi->controller_data;
 
 	if (!chip_config) {
@@ -648,7 +625,6 @@ spi_msg_store(struct device *dev, struct device_attribute *attr, const char *buf
 			/* xfer = (struct spi_transfer *) kzalloc(SPI_STRESS_MAX
 					* sizeof(struct spi_transfer), GFP_KERNEL); */
 			/* will release in spi_recv_check() function */
-			SPIDEV_LOG("Message multi xfer stress start\n");
 			for (i = 0; i < SPI_STRESS_MAX; i++) {
 				ret = spi_setup_xfer(&spi->dev, &stress_xfer[i], 32, 0);
 				if (ret != 0)
@@ -665,7 +641,6 @@ spi_msg_store(struct device *dev, struct device_attribute *attr, const char *buf
 					ret = -ret;
 					SPIDEV_LOG("Message transfer err:%d\n", ret);
 				} else {
-					SPIDEV_LOG("Message multi xfer stress pass\n");
 				}
 			}
 		} else if (len == 1) {
@@ -678,7 +653,6 @@ spi_msg_store(struct device *dev, struct device_attribute *attr, const char *buf
 				/* xfer = ( struct spi_transfer *) kzalloc(SPI_STRESS_MAX *
 									    sizeof(struct spi_transfer),
 									    GFP_KERNEL); */
-				SPIDEV_LOG("Message multi msg stress start\n");
 				p = stress_msg;
 				for (i = 0; i < SPI_STRESS_MAX; i++) {
 					spi_message_init(p);
@@ -711,7 +685,6 @@ spi_msg_store(struct device *dev, struct device_attribute *attr, const char *buf
 				stress_err = 0;
 				SPIDEV_LOG("Message stress err:%d\n", ret);
 			} else {
-				SPIDEV_LOG("Message stress Pass\n");
 				ret = 0;
 			}
 		} else {
@@ -744,7 +717,6 @@ spi_msg_store(struct device *dev, struct device_attribute *attr, const char *buf
 		}
 
 		msleep(10000);
-		SPIDEV_LOG("stop kernelthread\n");
 
 		kthread_stop(spi_concur1);
 		kthread_stop(spi_concur2);
@@ -800,14 +772,12 @@ static void spi_remove_attribute(struct device *dev)
 
 static int spi_test_remove(struct spi_device *spi)
 {
-	SPIDEV_LOG("spi_test_remove.\n");
 	spi_remove_attribute(&spi->dev);
 	return 0;
 }
 
 static int spi_test_probe(struct spi_device *spi)
 {
-	SPIDEV_LOG("spi test probe  enter\n");
 	spi_test = spi;
 	spi->mode = SPI_MODE_3;
 	spi->bits_per_word = 32;
@@ -840,14 +810,12 @@ static struct spi_board_info spi_board_devs[] __initdata = {
 
 static int __init spi_dev_init(void)
 {
-	SPIDEV_LOG("SPI_DEV_INIT.\n");
 	spi_register_board_info(spi_board_devs, ARRAY_SIZE(spi_board_devs));
 	return spi_register_driver(&spi_test_driver);
 }
 
 static void __exit spi_test_exit(void)
 {
-	SPIDEV_LOG("SPI_DEV_EXIT.\n");
 	spi_unregister_driver(&spi_test_driver);
 
 	return;
diff --git a/drivers/misc/mediatek/spi/mt6580/spi.c b/drivers/misc/mediatek/spi/mt6580/spi.c
index 1b88594e9..6a71a60a5 100644
--- a/drivers/misc/mediatek/spi/mt6580/spi.c
+++ b/drivers/misc/mediatek/spi/mt6580/spi.c
@@ -1212,24 +1212,18 @@ static int mt_spi_probe(struct platform_device *pdev)
 	if (!pdev->dev.dma_mask)
 		pdev->dev.dma_mask = &pdev->dev.coherent_dma_mask;
 
-	pr_info("SPI reg: 0x%p  irq: %d id: %d\n", spi_base, irq, pdev->id);
-
 	if (pdev->dev.of_node) {
 		if (of_property_read_u32_index(pdev->dev.of_node, "spi-cs", 0, &pin[0]) ||
 		    of_property_read_u32_index(pdev->dev.of_node, "spi-clk", 0, &pin[1]) ||
 		    of_property_read_u32_index(pdev->dev.of_node, "spi-mo", 0, &pin[2]) ||
 		    of_property_read_u32_index(pdev->dev.of_node, "spi-mi", 0, &pin[3])) {
 			if_config = 0;
-			dev_err(&pdev->dev,
-				"SPI get DTS spi pin failed, using DCT tool setting as default config\n");
 		}
 
 		if (of_property_read_u32_index(pdev->dev.of_node, "spi-cs", 1, &pin_mode[0]) ||
 		    of_property_read_u32_index(pdev->dev.of_node, "spi-clk", 1, &pin_mode[1]) ||
 		    of_property_read_u32_index(pdev->dev.of_node, "spi-mo", 1, &pin_mode[2]) ||
 		    of_property_read_u32_index(pdev->dev.of_node, "spi-mi", 1, &pin_mode[3])) {
-			dev_err(&pdev->dev,
-				"SPI get DTS spi pin mode failed, using DCT tool setting as default config\n");
 		}
 
 		if (if_config == 1) {
diff --git a/drivers/misc/mediatek/spm/mt6580/mt_spm.c b/drivers/misc/mediatek/spm/mt6580/mt_spm.c
index f0411a527..f548ce615 100644
--- a/drivers/misc/mediatek/spm/mt6580/mt_spm.c
+++ b/drivers/misc/mediatek/spm/mt6580/mt_spm.c
@@ -351,9 +351,6 @@ static void spm_register_init(void)
     if (!spm_ddrphy_base)
         spm_err("[DDRPHY] base failed\n");
 
-    spm_err("spm_base = %p, spm_i2c0_base = %p, spm_i2c1_base = %p, spm_i2c2_base = %p\n", spm_base, spm_i2c0_base, spm_i2c1_base, spm_i2c2_base);
-    spm_err("spm_cksys_base = 0x%p, spm_mcucfg_base = 0x%p, spm_ddrphy_base = 0x%p\n", spm_cksys_base, spm_mcucfg_base, spm_ddrphy_base);  
-    spm_err("spm_irq_0 = %d, spm_irq_1 = %d, spm_irq_2 = %d, spm_irq_3 = %d\n", spm_irq_0, spm_irq_1, spm_irq_2, spm_irq_3);
     //spm_err("spm_irq_4 = %d, spm_irq_5 = %d, spm_irq_6 = %d, spm_irq_7 = %d\n", spm_irq_4, spm_irq_5, spm_irq_6, spm_irq_7);
 #endif
 
diff --git a/drivers/misc/mediatek/spm/mt6580/mt_spm_dpidle.c b/drivers/misc/mediatek/spm/mt6580/mt_spm_dpidle.c
index fdd9596e1..4470d7446 100644
--- a/drivers/misc/mediatek/spm/mt6580/mt_spm_dpidle.c
+++ b/drivers/misc/mediatek/spm/mt6580/mt_spm_dpidle.c
@@ -546,9 +546,6 @@ wake_reason_t spm_go_to_sleep_dpidle(u32 spm_flags, u32 spm_data)
     /* set PMIC WRAP table for deepidle power control */
     mt_cpufreq_set_pmic_phase(PMIC_WRAP_PHASE_DEEPIDLE);
 
-    spm_crit2("sleep_deepidle, sec = %u, wakesrc = 0x%x [%u]\n",
-              sec, pwrctrl->wake_src, is_cpu_pdn(pwrctrl->pcm_flags));
-
     __spm_reset_and_init_pcm(pcmdesc);
 
     __spm_kick_im_to_fetch(pcmdesc);
diff --git a/drivers/misc/mediatek/spm/mt6580/mt_spm_internal.c b/drivers/misc/mediatek/spm/mt6580/mt_spm_internal.c
index d860be046..434f72e7d 100644
--- a/drivers/misc/mediatek/spm/mt6580/mt_spm_internal.c
+++ b/drivers/misc/mediatek/spm/mt6580/mt_spm_internal.c
@@ -284,8 +284,6 @@ wake_reason_t __spm_output_wake_reason(const struct wake_status *wakesta,
 	wake_reason_t wr = WR_UNKNOWN;
 
 	if (wakesta->assert_pc != 0) {
-		spm_print(suspend, "PCM ASSERT AT %u (%s), r13 = 0x%x, debug_flag = 0x%x\n",
-			  wakesta->assert_pc, pcmdesc->version, wakesta->r13, wakesta->debug_flag);
 		return WR_PCM_ASSERT;
 	}
 
@@ -311,12 +309,6 @@ wake_reason_t __spm_output_wake_reason(const struct wake_status *wakesta,
 	}
 	//BUG_ON(strlen(buf) >= LOG_BUF_SIZE);
 
-	spm_print(suspend, "wake up by%s, timer_out = %u, r13 = 0x%x, debug_flag = 0x%x\n",
-		  buf, wakesta->timer_out, wakesta->r13, wakesta->debug_flag);
-
-	spm_print(suspend, "r12 = 0x%x, raw_sta = 0x%x, idle_sta = 0x%x, event_reg = 0x%x, isr = 0x%x\n",
-		  wakesta->r12, wakesta->raw_sta, wakesta->idle_sta, wakesta->event_reg, wakesta->isr);
-
 	return wr;
 }
 
diff --git a/drivers/misc/mediatek/spm/mt6580/mt_spm_sleep.c b/drivers/misc/mediatek/spm/mt6580/mt_spm_sleep.c
index e141e17bf..cfd663089 100644
--- a/drivers/misc/mediatek/spm/mt6580/mt_spm_sleep.c
+++ b/drivers/misc/mediatek/spm/mt6580/mt_spm_sleep.c
@@ -426,8 +426,6 @@ static void spm_set_sysclk_settle(void)
     /* SYSCLK settle = MD SYSCLK settle but set it again for MD PDN */
     spm_write(SPM_CLK_SETTLE, SPM_SYSCLK_SETTLE - md_settle);
     settle = spm_read(SPM_CLK_SETTLE);
-
-    spm_crit2("md_settle = %u, settle = %u\n", md_settle, settle);
 }
 
 static void spm_kick_pcm_to_run(struct pwr_ctrl *pwrctrl)
@@ -537,7 +535,6 @@ static wake_reason_t spm_output_wake_reason(struct wake_status *wakesta, struct
         log_wakesta_index = 0;
 #endif
 
-    spm_crit2("suspend dormant state = %d, md32_flag = 0x%x, md32_flag2 = %d\n", spm_dormant_sta, md32_flag, md32_flag2);
     if (0 != spm_ap_mdsrc_req_cnt)
         spm_crit2("warning: spm_ap_mdsrc_req_cnt = %d, r7[ap_mdsrc_req] = 0x%x\n", spm_ap_mdsrc_req_cnt, spm_read(SPM_POWER_ON_VAL1) & (1<<17));
 
@@ -918,15 +915,12 @@ void spm_ap_mdsrc_req(u8 set)
 
 void spm_output_sleep_option(void)
 {
-    spm_notice("PWAKE_EN:%d, PCMWDT_EN:%d, BYPASS_SYSPWREQ:%d, I2C_CHANNEL:%d\n",
-               SPM_PWAKE_EN, SPM_PCMWDT_EN, SPM_BYPASS_SYSPWREQ, I2C_CHANNEL);
 }
 
 uint32_t get_suspend_debug_flag(void)
 {
     uint32_t value = 0;
 	value = spm_read(SPM_PCM_WDT_LATCH);
-	spm_crit("PCM_WDT_LATCH=0x%x\n",spm_read(SPM_PCM_WDT_LATCH));
     return  value; 
 }
 EXPORT_SYMBOL(get_suspend_debug_flag);
diff --git a/drivers/misc/mediatek/systracker/systracker_interface.c b/drivers/misc/mediatek/systracker/systracker_interface.c
index 424533c67..5dc44dde6 100644
--- a/drivers/misc/mediatek/systracker/systracker_interface.c
+++ b/drivers/misc/mediatek/systracker/systracker_interface.c
@@ -16,8 +16,6 @@
 #include <mach/sync_write.h>
 #include "systracker.h"
 
-#define TRACKER_DEBUG 1
-
 void __iomem *BUS_DBG_BASE;
 int systracker_irq;
 struct systracker_config_t track_config;
@@ -63,20 +61,16 @@ static struct mt_systracker_driver mt_systracker_drv = {
 
 static int systracker_platform_probe_default(struct platform_device *pdev)
 {
-	pr_notice("systracker probe\n");
-
 	/* iomap register */
 	BUS_DBG_BASE = of_iomap(pdev->dev.of_node, 0);
 	if (!BUS_DBG_BASE) {
 		pr_err("can't of_iomap for systracker!!\n");
 		return -ENOMEM;
 	} else {
-		pr_err("of_iomap for systracker @ 0x%p\n", BUS_DBG_BASE);
 	}
 
 	/* get irq #  */
 	systracker_irq = irq_of_parse_and_map(pdev->dev.of_node, 0);
-	pr_notice("%s:%d: irq # %d\n", __func__, __LINE__, systracker_irq);
 
 #ifdef SYSTRACKER_TEST_SUIT
 	if (!is_systracker_irq_registered) {
@@ -222,8 +216,6 @@ irqreturn_t systracker_isr(void)
 #endif
 
 	save_entry();
-	pr_notice("Sys Tracker ISR\n");
-	pr_notice("in systracker_interface.c\n");
 	con = readl(IOMEM(BUS_DBG_CON));
 	writel(con | BUS_DBG_CON_IRQ_CLR, IOMEM(BUS_DBG_CON));
 	dsb();
@@ -266,7 +258,6 @@ static int systracker_watchpoint_enable_default(void)
 	writel(track_config.wp_phy_address, IOMEM(BUS_DBG_WP));
 	writel(0x0000000F, IOMEM(BUS_DBG_WP_MASK));
 	writel(readl(IOMEM(BUS_DBG_CON)) | BUS_DBG_CON_WP_EN, IOMEM(BUS_DBG_CON));
-	pr_notice("track_config.wp_phy_address = 0x%x\n", track_config.wp_phy_address);
 	dsb();
 
 	return 0;
@@ -583,7 +574,6 @@ static ssize_t set_wp_address_store(struct device_driver *driver, const char *bu
 	if (unlikely(sscanf(buf, "%x", &value) != 1))
 		return -EINVAL;
 
-	pr_notice("watch address:0x%x\n", value);
 	systracker_set_watchpoint_addr(value);
 
 	return count;
diff --git a/drivers/misc/mediatek/systracker/systracker_interface_v2.c b/drivers/misc/mediatek/systracker/systracker_interface_v2.c
index 4a5eece47..c529038b8 100644
--- a/drivers/misc/mediatek/systracker/systracker_interface_v2.c
+++ b/drivers/misc/mediatek/systracker/systracker_interface_v2.c
@@ -16,8 +16,6 @@
 #include <mach/sync_write.h>
 #include "systracker_v2.h"
 
-#define TRACKER_DEBUG 1
-
 void __iomem *BUS_DBG_BASE;
 int systracker_irq;
 struct systracker_config_t track_config;
@@ -63,20 +61,16 @@ static struct mt_systracker_driver mt_systracker_drv = {
 
 static int systracker_platform_probe_default(struct platform_device *pdev)
 {
-	pr_notice("systracker probe\n");
-
 	/* iomap register */
 	BUS_DBG_BASE = of_iomap(pdev->dev.of_node, 0);
 	if (!BUS_DBG_BASE) {
 		pr_err("can't of_iomap for systracker!!\n");
 		return -ENOMEM;
 	} else {
-		pr_notice("of_iomap for systracker @ 0x%p\n", BUS_DBG_BASE);
 	}
 
 	/* get irq #  */
 	systracker_irq = irq_of_parse_and_map(pdev->dev.of_node, 0);
-	pr_notice("%s:%d: irq # %d\n", __func__, __LINE__, systracker_irq);
 
 #ifdef SYSTRACKER_TEST_SUIT
 	if (!is_systracker_irq_registered) {
@@ -247,14 +241,10 @@ irqreturn_t systracker_isr(void)
 #endif
 
 	save_entry();
-	pr_notice("Sys Tracker ISR\n");
 	con = readl(IOMEM(BUS_DBG_CON));
 	writel(con | BUS_DBG_CON_IRQ_CLR, IOMEM(BUS_DBG_CON));
 	dsb();
 
-	if (con & BUS_DBG_CON_IRQ_WP_STA)
-		pr_notice("[TRACKER] Watch address: 0x%x was touched\n", track_config.wp_phy_address);
-
 	if (con & (BUS_DBG_CON_IRQ_AR_STA0|BUS_DBG_CON_IRQ_AR_STA1)) {
 		pr_notice("[TRAKER] Read time out trigger\n");
 		tracker_print();
@@ -509,7 +499,6 @@ int tracker_dump(char *buf)
 		 */
 
 #ifdef TRACKER_DEBUG
-		pr_notice("Sys Tracker Dump\n");
 #endif
 
 		ptr += sprintf(ptr, "[TRACKER] BUS_DBG_CON = (0x%x, 0x%x), T0= 0x%x, T1 = 0x%x\n",
@@ -679,7 +668,6 @@ static ssize_t set_wp_address_store(struct device_driver *driver, const char *bu
 	unsigned int value;
 
 	sscanf(buf, "0x%x", &value);
-	pr_notice("watch address:0x%x\n", value);
 	systracker_set_watchpoint_addr(value);
 
 	return count;
@@ -866,8 +854,6 @@ static int __init systracker_init(void)
 
 	systracker_hook_fault();
 
-	pr_notice("systracker init done\n");
-
 	return 0;
 }
 
diff --git a/drivers/misc/mediatek/thermal/mt6580/mtk_ts_6311buck.c b/drivers/misc/mediatek/thermal/mt6580/mtk_ts_6311buck.c
index 90f9e8ce8..c4e034eed 100644
--- a/drivers/misc/mediatek/thermal/mt6580/mtk_ts_6311buck.c
+++ b/drivers/misc/mediatek/thermal/mt6580/mtk_ts_6311buck.c
@@ -88,20 +88,16 @@ extern int is_ext_buck_exist(void);
 static int mtkts6311_get_temp(struct thermal_zone_device *thermal,
 				   unsigned long *t)
 {
-	mtkts6311_dprintk("[mtkts6311_get_temp]\n");
-
 	*t=50000;//default 50 degree
 
 
 	if(mt6311_get_pmu_thr_status()==0x0)//T<110
 	{
 		*t=60000;
-		mtkts6331_dprintk("mt6311_get_pmu_thr_status()==0x0\n");
 		if(mt6311_get_rg_thr_l_int_status()==1)//receive interrupt
         {
 
 			*t=80000;//60 degree
-			printk("[Thermal/PMIC_6331]mt6311_get_thr_l_int_status()==1,6311 T=80 deg\n");
 			mt6311_clr_thr_l_int_status();
 
 			mt6311_set_rg_strup_thr_110_clr(1);//Set 0x28 bit 0=1 ;CLR 110 INT
@@ -115,25 +111,19 @@ static int mtkts6311_get_temp(struct thermal_zone_device *thermal,
 	}
 	else if(mt6311_get_pmu_thr_status()==0x1)//110<T<125
 	{
-		mtkts6331_dprintk("mt6311_get_pmu_thr_status()==0x1\n");
 
 		*t=115000;//115 degree
-
-		printk("[Thermal/PMIC_6331]6311 pmic temp : 110<T<125 deg\n");
 	}
 	else if(mt6311_get_pmu_thr_status()==0x3)//125<T<150
 	{
 		*t=130000;//130 degree
 		//printk("[Thermal/PMIC_6331]mt6311_get_pmu_thr_status()==0x3\n");
-		printk("[Thermal/PMIC_6331]6311 pmic temp 125<T<150 deg\n");
 
 		if(mt6311_get_rg_thr_h_int_status()==1){//receive interrupt
 
             *t=135000;//135 degree
-			printk("[Thermal/PMIC_6331]6311 pmic temp =140 deg\n");
             //printk("[Thermal/PMIC_6331]mt6311_get_rg_thr_h_int_status()==1,6311 T=135 deg\n");
 
-            mtkts6331_dprintk("mt6311_get_thr_h_int_status()==1\n");
 			mt6311_clr_thr_h_int_status();
 
 			mt6311_set_rg_strup_thr_125_clr(1);//Set 0x28 bit 1=1 ;CLR 125 INT
@@ -145,7 +135,6 @@ static int mtkts6311_get_temp(struct thermal_zone_device *thermal,
 		}
 
 	}
-	mtkts6331_dprintk("6311 pmic temp =%d\n",*t);
 	return 0;
 }
 
@@ -203,7 +192,6 @@ static int mtkts6311_bind(struct thermal_zone_device *thermal,
 		mtkts6311_dprintk("[mtkts6311_bind] error binding cooling dev\n");
 		return -EINVAL;
 	} else {
-		mtkts6311_dprintk("[mtkts6311_bind] binding OK, %d\n", table_val);
 	}
 
 	return 0;
@@ -261,7 +249,6 @@ static int mtkts6311_unbind(struct thermal_zone_device *thermal,
 		mtkts6311_dprintk("[mtkts6311_unbind] error unbinding cooling dev\n");
 		return -EINVAL;
 	} else {
-		mtkts6311_dprintk("[mtkts6311_unbind] unbinding OK\n");
 	}
 
 	return 0;
@@ -355,28 +342,22 @@ static struct thermal_cooling_device_ops mtktscpu_cooler_cpu_ops = {
 static int ts6311_sysrst_get_max_state(struct thermal_cooling_device *cdev,
 				 unsigned long *state)
 {
-	mtkts6311_dprintk("ts6311_sysrst_get_max_state!!!\n");
 	*state = 1;
 	return 0;
 }
 static int ts6311_sysrst_get_cur_state(struct thermal_cooling_device *cdev,
 				 unsigned long *state)
 {
-	mtkts6311_dprintk("ts6311_sysrst_get_cur_state = %d \n",cl_dev_sysrst_state);
 	*state = cl_dev_sysrst_state;
 	return 0;
 }
 static int ts6311_sysrst_set_cur_state(struct thermal_cooling_device *cdev,
 				 unsigned long state)
 {
-	mtkts6311_dprintk("ts6311_sysrst_set_cur_state = %d \n",cl_dev_sysrst_state);
 	cl_dev_sysrst_state = state;
 	if(cl_dev_sysrst_state == 1)
 	{
 		printk("Power/6311_Thermal: reset, reset, reset!!!");
-		printk("@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@");
-		printk("*****************************************");
-		printk("@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@");
 
 #ifndef CONFIG_ARM64
         BUG();
@@ -457,7 +438,6 @@ static ssize_t mtkts6311_write(struct file *file, const char __user *buffer, siz
 												 &trip[8],&t_type[8],bind8, &trip[9],&t_type[9],bind9,
 												 &time_msec) == 32)
 	{
-		mtkts6311_dprintk("[mtkts6311_write] mtkts6311_unregister_thermal\n");
 		mtkts6311_unregister_thermal();
 
 		for(i=0; i<num_trip; i++)
@@ -479,14 +459,6 @@ static ssize_t mtkts6311_write(struct file *file, const char __user *buffer, siz
 			g_bind9[i]=bind9[i];
 		}
 
-		mtkts6311_dprintk("[mtkts6311_write] g_THERMAL_TRIP_0=%d,g_THERMAL_TRIP_1=%d,g_THERMAL_TRIP_2=%d,g_THERMAL_TRIP_3=%d,g_THERMAL_TRIP_4=%d,\
-g_THERMAL_TRIP_5=%d,g_THERMAL_TRIP_6=%d,g_THERMAL_TRIP_7=%d,g_THERMAL_TRIP_8=%d,g_THERMAL_TRIP_9=%d,\n",
-													g_THERMAL_TRIP[0],g_THERMAL_TRIP[1],g_THERMAL_TRIP[2],g_THERMAL_TRIP[3],g_THERMAL_TRIP[4],
-													g_THERMAL_TRIP[5],g_THERMAL_TRIP[6],g_THERMAL_TRIP[7],g_THERMAL_TRIP[8],g_THERMAL_TRIP[9]);
-		mtkts6311_dprintk("[mtkts6311_write] cooldev0=%s,cooldev1=%s,cooldev2=%s,cooldev3=%s,cooldev4=%s,\
-cooldev5=%s,cooldev6=%s,cooldev7=%s,cooldev8=%s,cooldev9=%s\n",
-													g_bind0,g_bind1,g_bind2,g_bind3,g_bind4,g_bind5,g_bind6,g_bind7,g_bind8,g_bind9);
-
 		for(i=0; i<num_trip; i++)
 		{
 			trip_temp[i]=trip[i];
@@ -494,12 +466,6 @@ cooldev5=%s,cooldev6=%s,cooldev7=%s,cooldev8=%s,cooldev9=%s\n",
 
 		interval=time_msec / 1000;
 
-		mtkts6311_dprintk("[mtkts6311_write] trip_0_temp=%d,trip_1_temp=%d,trip_2_temp=%d,trip_3_temp=%d,trip_4_temp=%d,\
-trip_5_temp=%d,trip_6_temp=%d,trip_7_temp=%d,trip_8_temp=%d,trip_9_temp=%d,time_ms=%d\n",
-						trip_temp[0],trip_temp[1],trip_temp[2],trip_temp[3],trip_temp[4],
-						trip_temp[5],trip_temp[6],trip_temp[7],trip_temp[8],trip_temp[9],interval*1000);
-
-		mtkts6311_dprintk("[mtkts6311_write] mtkts6311_register_thermal\n");
 		mtkts6311_register_thermal();
 
 		return count;
@@ -515,8 +481,6 @@ trip_5_temp=%d,trip_6_temp=%d,trip_7_temp=%d,trip_8_temp=%d,trip_9_temp=%d,time_
 
 int mtkts6311_register_thermal(void)
 {
-	mtkts6311_dprintk("[mtkts6311_register_thermal] \n");
-
 	/* trips : trip 0~2 */
 	thz_dev = mtk_thermal_zone_device_register("mtkts6311", num_trip, NULL,
 					  &mtkts6311_dev_ops, 0, 0, 0, interval*1000);
@@ -536,8 +500,6 @@ void mtkts6311_unregister_cooler(void)
 
 void mtkts6311_unregister_thermal(void)
 {
-	mtkts6311_dprintk("[mtkts6311_unregister_thermal] \n");
-
 	if (thz_dev) {
 		mtk_thermal_zone_device_unregister(thz_dev);
 		thz_dev = NULL;
@@ -598,8 +560,6 @@ static int mtkts63116333_thermal_zone_handler(void )
 static void mtktspmic6311_thermal_zone_init(void)
 {
 
-	mtkts6311_dprintk("[mtktspmic6311_thermal_zone_init] \n");
-
 	mt6311_set_rg_thrdet_sel(0);          //0x6C  bit0=0 ; thermal 110/125 EN
     mt6311_set_rg_strup_thr_125_irq_en(1);//0x28  bit3=1 ; >125 INT EN
     mt6311_set_rg_strup_thr_110_irq_en(0);//0x28  bit3=1 ; <110 INT DIS
@@ -630,8 +590,6 @@ static int __init mtkts6311_init(void)
 	struct proc_dir_entry *entry = NULL;
 	struct proc_dir_entry *mtkts6311_dir = NULL;
 
-	mtkts6311_dprintk("[mtkts6311_init] \n");
-
 	//return 1 means with 6311, else return 0
 	if(is_ext_buck_exist() == 0)
 	{
@@ -679,7 +637,6 @@ err_unreg:
 
 static void __exit mtkts6311_exit(void)
 {
-	mtkts6311_dprintk("[mtkts6311_exit] \n");
 	mtkts6311_unregister_thermal();
 
 	mtkts6311_unregister_cooler();
diff --git a/drivers/misc/mediatek/thermal/mt6580/mtk_ts_all_ts.c b/drivers/misc/mediatek/thermal/mt6580/mtk_ts_all_ts.c
index 61aa0eafb..f4f92a272 100644
--- a/drivers/misc/mediatek/thermal/mt6580/mtk_ts_all_ts.c
+++ b/drivers/misc/mediatek/thermal/mt6580/mtk_ts_all_ts.c
@@ -100,7 +100,6 @@ static int tsallts_get_ts1_temp(void)
 	int t_ret = 0;
 
 	t_ret = get_immediate_ts1_wrap();
-	tsallts_dprintk("[tsallts_get_ts1_temp] TS1 =%d\n", t_ret);
 	return t_ret;
 }
 static int tsallts_get_ts2_temp(void)
@@ -108,7 +107,6 @@ static int tsallts_get_ts2_temp(void)
 	int t_ret = 0;
 
 	t_ret = get_immediate_ts2_wrap();
-	tsallts_dprintk("[tsallts_get_ts2_temp] TS2 =%d\n", t_ret);
 	return t_ret;
 }
 static int tsallts_get_ts3_temp(void)
@@ -116,7 +114,6 @@ static int tsallts_get_ts3_temp(void)
 	int t_ret = 0;
 
 	t_ret = get_immediate_ts3_wrap();
-	tsallts_dprintk("[tsallts_get_ts3_temp] TS3(MCU1) =%d\n", t_ret);
 	return t_ret;
 }
 static int tsallts_get_temp1(struct thermal_zone_device *thermal,
@@ -129,17 +126,12 @@ static int tsallts_get_temp1(struct thermal_zone_device *thermal,
     static int last_abb_read_temp = 0;
 
 	curr_temp = tsallts_get_ts1_temp();
-    tsallts_dprintk("tsallts_get_temp1 CPU TS1(MCU4)=%d\n", curr_temp);
-
-    if ((curr_temp > (trip_temp[0] - 15000)) || (curr_temp < -30000) || (curr_temp > 85000)) // abnormal high temp
-        tsallts_printk("TS1(MCU4) =%d\n", curr_temp);
 
 	temp_temp = curr_temp;
 	if (curr_temp != 0) // not the first temp read after resume from suspension
 	{
 		if ((curr_temp > 150000) || (curr_temp < -20000)) // invalid range
 		{
-			tsallts_printk("TS1(MCU4) temp invalid=%d\n", curr_temp);
 			temp_temp = 50000;
 			ret = -1;
 		}
@@ -147,7 +139,6 @@ static int tsallts_get_temp1(struct thermal_zone_device *thermal,
 	    {
 	    	if ((curr_temp - last_abb_read_temp > 20000) ||(last_abb_read_temp - curr_temp > 20000)) //delta 20C, invalid change
 	    	{
-	      		tsallts_printk("TS1(MCU4) temp float hugely temp=%d, lasttemp=%d\n", curr_temp, last_abb_read_temp);
 				temp_temp = 50000;
 				ret = -1;
 	       	}
@@ -161,10 +152,6 @@ static int tsallts_get_temp1(struct thermal_zone_device *thermal,
 #else
 	int curr_temp;
 	curr_temp = tsallts_get_ts1_temp();
-    tsallts_dprintk("tsallts_get_temp TS1(MCU4)=%d\n", curr_temp);
-
-    if ((curr_temp > (trip_temp[0] - 15000)) || (curr_temp < -30000))
-        tsallts_printk("TS1(MCU4)=%d\n", curr_temp);
 
     *t  = curr_temp;
 
@@ -182,17 +169,12 @@ static int tsallts_get_temp2(struct thermal_zone_device *thermal,
     static int last_abb_read_temp = 0;
 
 	curr_temp = tsallts_get_ts2_temp();
-    tsallts_dprintk("tsallts_get_temp2 TS2(MCU3)=%d\n", curr_temp);
-
-    if ((curr_temp > (trip_temp[0] - 15000)) || (curr_temp < -30000) || (curr_temp > 85000)) // abnormal high temp
-        tsallts_printk("T2(MCU3)=%d\n", curr_temp);
 
 	temp_temp = curr_temp;
 	if (curr_temp != 0) // not the first temp read after resume from suspension
 	{
 		if ((curr_temp > 150000) || (curr_temp < -20000)) // invalid range
 		{
-			tsallts_printk("T2(MCU3) temp invalid=%d\n", curr_temp);
 			temp_temp = 50000;
 			ret = -1;
 		}
@@ -200,7 +182,6 @@ static int tsallts_get_temp2(struct thermal_zone_device *thermal,
 	    {
 	    	if ((curr_temp - last_abb_read_temp > 20000) ||(last_abb_read_temp - curr_temp > 20000)) //delta 20C, invalid change
 	    	{
-	      		tsallts_printk("T5(MCU3) temp float hugely temp=%d, lasttemp=%d\n", curr_temp, last_abb_read_temp);
 				temp_temp = 50000;
 				ret = -1;
 	       	}
@@ -214,10 +195,6 @@ static int tsallts_get_temp2(struct thermal_zone_device *thermal,
 #else
 	int curr_temp;
 	curr_temp = tsallts_get_ts2_temp();
-    tsallts_dprintk("tsallts_get_temp T2(MCU3)=%d\n", curr_temp);
-
-    if ((curr_temp > (trip_temp[0] - 15000)) || (curr_temp < -30000))
-        tsallts_printk("T2(MCU3)=%d\n", curr_temp);
 
     *t  = curr_temp;
 
@@ -235,17 +212,12 @@ static int tsallts_get_temp3(struct thermal_zone_device *thermal,
     static int last_abb_read_temp = 0;
 
 	curr_temp = tsallts_get_ts3_temp();
-    tsallts_dprintk("tsallts_get_temp3 TS3(MCU1)=%d\n", curr_temp);
-
-    if ((curr_temp > (trip_temp[0] - 15000)) || (curr_temp < -30000) || (curr_temp > 85000)) // abnormal high temp
-        tsallts_printk("TS3(MCU1)=%d\n", curr_temp);
 
 	temp_temp = curr_temp;
 	if (curr_temp != 0) // not the first temp read after resume from suspension
 	{
 		if ((curr_temp > 150000) || (curr_temp < -20000)) // invalid range
 		{
-			tsallts_printk("TS3(MCU1) temp invalid=%d\n", curr_temp);
 			temp_temp = 50000;
 			ret = -1;
 		}
@@ -253,7 +225,6 @@ static int tsallts_get_temp3(struct thermal_zone_device *thermal,
 	    {
 	    	if ((curr_temp - last_abb_read_temp > 20000) ||(last_abb_read_temp - curr_temp > 20000)) //delta 20C, invalid change
 	    	{
-	      		tsallts_printk("TS3(MCU1) temp float hugely temp=%d, lasttemp=%d\n", curr_temp, last_abb_read_temp);
 				temp_temp = 50000;
 				ret = -1;
 	       	}
@@ -267,10 +238,6 @@ static int tsallts_get_temp3(struct thermal_zone_device *thermal,
 #else
 	int curr_temp;
 	curr_temp = tsallts_get_ts3_temp();
-    tsallts_dprintk(" tsallts_get_temp TS3(MCU1)=%d\n", curr_temp);
-
-    if ((curr_temp > (trip_temp[0] - 15000)) || (curr_temp < -30000))
-        tsallts_printk("TS3(MCU1)=%d\n", curr_temp);
 
     *t  = curr_temp;
 
@@ -284,56 +251,45 @@ static int tsallts_bind(struct thermal_zone_device *thermal,
 			struct thermal_cooling_device *cdev)
 {
     int table_val=0;
-	tsallts_dprintk("[tsallts_bind] \n");
 	if(!strcmp(cdev->type, g_bind0))
 	{
 		table_val = 0;
-		tsallts_dprintk("[tsallts_bind] %s\n", cdev->type);
 	}
 	else if(!strcmp(cdev->type, g_bind1))
 	{
 		table_val = 1;
-		tsallts_dprintk("[tsallts_bind] %s\n", cdev->type);
 	}
 	else if(!strcmp(cdev->type, g_bind2))
 	{
 		table_val = 2;
-		tsallts_dprintk("[tsallts_bind] %s\n", cdev->type);
 	}
 	else if(!strcmp(cdev->type, g_bind3))
 	{
 		table_val = 3;
-		tsallts_dprintk("[tsallts_bind] %s\n", cdev->type);
 	}
 	else if(!strcmp(cdev->type, g_bind4))
 	{
 		table_val = 4;
-		tsallts_dprintk("[tsallts_bind] %s\n", cdev->type);
 	}
 	else if(!strcmp(cdev->type, g_bind5))
 	{
 		table_val = 5;
-		tsallts_dprintk("[tsallts_bind] %s\n", cdev->type);
 	}
 	else if(!strcmp(cdev->type, g_bind6))
 	{
 		table_val = 6;
-		tsallts_dprintk("[tsallts_bind] %s\n", cdev->type);
 	}
 	else if(!strcmp(cdev->type, g_bind7))
 	{
 		table_val = 7;
-		tsallts_dprintk("[tsallts_bind] %s\n", cdev->type);
 	}
 	else if(!strcmp(cdev->type, g_bind8))
 	{
 		table_val = 8;
-		tsallts_dprintk("[tsallts_bind] %s\n", cdev->type);
 	}
 	else if(!strcmp(cdev->type, g_bind9))
 	{
 		table_val = 9;
-		tsallts_dprintk("[tsallts_bind] %s\n", cdev->type);
 	}
 	else
 	{
@@ -344,7 +300,6 @@ static int tsallts_bind(struct thermal_zone_device *thermal,
 	    tsallts_dprintk("[tsallts_bind] error binding cooling dev\n");
 		return -EINVAL;
 	} else {
-	    tsallts_dprintk("[tsallts_bind] binding OK, %d\n", table_val);
     }
 
 	return 0;
@@ -354,56 +309,45 @@ static int tsallts_unbind(struct thermal_zone_device *thermal,
 			  struct thermal_cooling_device *cdev)
 {
 	int table_val=0;
-	tsallts_dprintk("[tsallts_unbind] \n");
 	if(!strcmp(cdev->type, g_bind0))
 	{
 		table_val = 0;
-		tsallts_dprintk("[tsallts_unbind] %s\n", cdev->type);
 	}
 	else if(!strcmp(cdev->type, g_bind1))
 	{
 		table_val = 1;
-		tsallts_dprintk("[tsallts_unbind] %s\n", cdev->type);
 	}
 	else if(!strcmp(cdev->type, g_bind2))
 	{
 		table_val = 2;
-		tsallts_dprintk("[tsallts_unbind] %s\n", cdev->type);
 	}
 	else if(!strcmp(cdev->type, g_bind3))
 	{
 		table_val = 3;
-		tsallts_dprintk("[tsallts_unbind] %s\n", cdev->type);
 	}
 	else if(!strcmp(cdev->type, g_bind4))
 	{
 		table_val = 4;
-		tsallts_dprintk("[tsallts_unbind] %s\n", cdev->type);
 	}
 	else if(!strcmp(cdev->type, g_bind5))
 	{
 		table_val = 5;
-		tsallts_dprintk("[tsallts_unbind] %s\n", cdev->type);
 	}
 	else if(!strcmp(cdev->type, g_bind6))
 	{
 		table_val = 6;
-		tsallts_dprintk("[tsallts_unbind] %s\n", cdev->type);
 	}
 	else if(!strcmp(cdev->type, g_bind7))
 	{
 		table_val = 7;
-		tsallts_dprintk("[tsallts_unbind] %s\n", cdev->type);
 	}
 	else if(!strcmp(cdev->type, g_bind8))
 	{
 		table_val = 8;
-		tsallts_dprintk("[tsallts_unbind] %s\n", cdev->type);
 	}
 	else if(!strcmp(cdev->type, g_bind9))
 	{
 		table_val = 9;
-		tsallts_dprintk("[tsallts_unbind] %s\n", cdev->type);
 	}
 	else
 		return 0;
@@ -412,7 +356,6 @@ static int tsallts_unbind(struct thermal_zone_device *thermal,
 		tsallts_dprintk("[tsallts_unbind] error unbinding cooling dev\n");
 		return -EINVAL;
 	} else {
-		tsallts_dprintk("[tsallts_unbind] unbinding OK\n");
 	}
 
 	return 0;
@@ -540,11 +483,6 @@ static struct thermal_cooling_device_ops tsallts_cooling_sysrst_ops3 = {
 */
 static int tsallts_read1(struct seq_file *m, void *v)
 {
-
-
-tsallts_dprintk( "tsallts_read1\n");
-
-
 	seq_printf(m, "[ tsallts_read1] trip_0_temp=%d,trip_1_temp=%d,trip_2_temp=%d,trip_3_temp=%d,trip_4_temp=%d,\n\
 		trip_5_temp=%d,trip_6_temp=%d,trip_7_temp=%d,trip_8_temp=%d,trip_9_temp=%d,\n\
 		g_THERMAL_TRIP_0=%d,g_THERMAL_TRIP_1=%d,g_THERMAL_TRIP_2=%d,g_THERMAL_TRIP_3=%d,g_THERMAL_TRIP_4=%d,\n\
@@ -565,10 +503,6 @@ tsallts_dprintk( "tsallts_read1\n");
 static int tsallts_read2(struct seq_file *m, void *v)
 {
 
-
-tsallts_dprintk( "tsallts_read2\n");
-
-
 	seq_printf(m, "[ tsallts_read2] trip_0_temp=%d,trip_1_temp=%d,trip_2_temp=%d,trip_3_temp=%d,trip_4_temp=%d,\n\
 		trip_5_temp=%d,trip_6_temp=%d,trip_7_temp=%d,trip_8_temp=%d,trip_9_temp=%d,\n\
 		g_THERMAL_TRIP_0=%d,g_THERMAL_TRIP_1=%d,g_THERMAL_TRIP_2=%d,g_THERMAL_TRIP_3=%d,g_THERMAL_TRIP_4=%d,\n\
@@ -588,11 +522,6 @@ tsallts_dprintk( "tsallts_read2\n");
 
 static int tsallts_read3(struct seq_file *m, void *v)
 {
-
-
-tsallts_dprintk( "tsallts_read3\n");
-
-
 	seq_printf(m, "[ tsallts_read3] trip_0_temp=%d,trip_1_temp=%d,trip_2_temp=%d,trip_3_temp=%d,trip_4_temp=%d,\n\
 		trip_5_temp=%d,trip_6_temp=%d,trip_7_temp=%d,trip_8_temp=%d,trip_9_temp=%d,\n\
 		g_THERMAL_TRIP_0=%d,g_THERMAL_TRIP_1=%d,g_THERMAL_TRIP_2=%d,g_THERMAL_TRIP_3=%d,g_THERMAL_TRIP_4=%d,\n\
@@ -625,9 +554,6 @@ static ssize_t tsallts_write1(struct file *file, const char __user *buffer, size
 	char bind5[20],bind6[20],bind7[20],bind8[20],bind9[20];
 	char desc[512];
 
-
-	tsallts_printk("[tsallts_write1] \n");
-
 	len = (count < (sizeof(desc) - 1)) ? count : (sizeof(desc) - 1);
 	if (copy_from_user(desc, buffer, len))
 	{
@@ -643,7 +569,6 @@ static ssize_t tsallts_write1(struct file *file, const char __user *buffer, size
 		&trip[8],&t_type[8],bind8, &trip[9],&t_type[9],bind9,
 		&time_msec) == 32)
 	{
-		tsallts_dprintk("[tsallts_write1] tsallts_unregister_thermal\n");
         if (thz_dev1) {
             mtk_thermal_zone_device_unregister(thz_dev1);
             thz_dev1 = NULL;
@@ -672,14 +597,6 @@ static ssize_t tsallts_write1(struct file *file, const char __user *buffer, size
 			g_bind9[i]=bind9[i];
 		}
 
-		tsallts_dprintk("[tsallts_write1] g_THERMAL_TRIP_0=%d,g_THERMAL_TRIP_1=%d,g_THERMAL_TRIP_2=%d,g_THERMAL_TRIP_3=%d,g_THERMAL_TRIP_4=%d,\
-		g_THERMAL_TRIP_5=%d,g_THERMAL_TRIP_6=%d,g_THERMAL_TRIP_7=%d,g_THERMAL_TRIP_8=%d,g_THERMAL_TRIP_9=%d,\n",
-			g_THERMAL_TRIP[0],g_THERMAL_TRIP[1],g_THERMAL_TRIP[2],g_THERMAL_TRIP[3],g_THERMAL_TRIP[4],
-			g_THERMAL_TRIP[5],g_THERMAL_TRIP[6],g_THERMAL_TRIP[7],g_THERMAL_TRIP[8],g_THERMAL_TRIP[9]);
-		tsallts_dprintk("[tsallts_write1] cooldev0=%s,cooldev1=%s,cooldev2=%s,cooldev3=%s,cooldev4=%s,\
-		cooldev5=%s,cooldev6=%s,cooldev7=%s,cooldev8=%s,cooldev9=%s\n",
-			g_bind0,g_bind1,g_bind2,g_bind3,g_bind4,g_bind5,g_bind6,g_bind7,g_bind8,g_bind9);
-
 		for(i=0; i<num_trip; i++)
 		{
 			trip_temp[i]=trip[i];
@@ -687,13 +604,6 @@ static ssize_t tsallts_write1(struct file *file, const char __user *buffer, size
 
 		interval=time_msec;
 
-		tsallts_dprintk("[tsallts_write] trip_0_temp=%d,trip_1_temp=%d,trip_2_temp=%d,trip_3_temp=%d,trip_4_temp=%d,\
-		trip_5_temp=%d,trip_6_temp=%d,trip_7_temp=%d,trip_8_temp=%d,trip_9_temp=%d,time_ms=%d\n",
-		trip_temp[0],trip_temp[1],trip_temp[2],trip_temp[3],trip_temp[4],
-		trip_temp[5],trip_temp[6],trip_temp[7],trip_temp[8],trip_temp[9],interval);
-
-		tsallts_dprintk("[tsallts_write1] tsallts_register_thermal\n");
-
         if (NULL == thz_dev1) {
             thz_dev1 = mtk_thermal_zone_device_register("mtkts1", num_trip, NULL,
                                                         &tsallts_dev_ops1, 0, 0, 0, interval);
@@ -720,9 +630,6 @@ static ssize_t tsallts_write2(struct file *file, const char __user *buffer, size
 	char bind5[20],bind6[20],bind7[20],bind8[20],bind9[20];
 	char desc[512];
 
-
-	tsallts_printk("[tsallts_write2] \n");
-
 	len = (count < (sizeof(desc) - 1)) ? count : (sizeof(desc) - 1);
 	if (copy_from_user(desc, buffer, len))
 	{
@@ -738,7 +645,6 @@ static ssize_t tsallts_write2(struct file *file, const char __user *buffer, size
 		&trip[8],&t_type[8],bind8, &trip[9],&t_type[9],bind9,
 		&time_msec) == 32)
 	{
-		tsallts_dprintk("[tsallts_write2] tsallts_unregister_thermal\n");
         if (thz_dev2) {
             mtk_thermal_zone_device_unregister(thz_dev2);
             thz_dev2 = NULL;
@@ -765,14 +671,6 @@ static ssize_t tsallts_write2(struct file *file, const char __user *buffer, size
 			g_bind9[i]=bind9[i];
 		}
 
-		tsallts_dprintk("[tsallts_write2] g_THERMAL_TRIP_0=%d,g_THERMAL_TRIP_1=%d,g_THERMAL_TRIP_2=%d,g_THERMAL_TRIP_3=%d,g_THERMAL_TRIP_4=%d,\
-		g_THERMAL_TRIP_5=%d,g_THERMAL_TRIP_6=%d,g_THERMAL_TRIP_7=%d,g_THERMAL_TRIP_8=%d,g_THERMAL_TRIP_9=%d,\n",
-			g_THERMAL_TRIP[0],g_THERMAL_TRIP[1],g_THERMAL_TRIP[2],g_THERMAL_TRIP[3],g_THERMAL_TRIP[4],
-			g_THERMAL_TRIP[5],g_THERMAL_TRIP[6],g_THERMAL_TRIP[7],g_THERMAL_TRIP[8],g_THERMAL_TRIP[9]);
-		tsallts_dprintk("[tsallts_write5] cooldev0=%s,cooldev1=%s,cooldev2=%s,cooldev3=%s,cooldev4=%s,\
-		cooldev5=%s,cooldev6=%s,cooldev7=%s,cooldev8=%s,cooldev9=%s\n",
-			g_bind0,g_bind1,g_bind2,g_bind3,g_bind4,g_bind5,g_bind6,g_bind7,g_bind8,g_bind9);
-
 		for(i=0; i<num_trip; i++)
 		{
 			trip_temp[i]=trip[i];
@@ -780,12 +678,6 @@ static ssize_t tsallts_write2(struct file *file, const char __user *buffer, size
 
 		interval=time_msec;
 
-		tsallts_dprintk("[tsallts_write2] trip_0_temp=%d,trip_1_temp=%d,trip_2_temp=%d,trip_3_temp=%d,trip_4_temp=%d,\
-		trip_5_temp=%d,trip_6_temp=%d,trip_7_temp=%d,trip_8_temp=%d,trip_9_temp=%d,time_ms=%d\n",
-		trip_temp[0],trip_temp[1],trip_temp[2],trip_temp[3],trip_temp[4],
-		trip_temp[5],trip_temp[6],trip_temp[7],trip_temp[8],trip_temp[9],interval);
-
-		tsallts_dprintk("[tsallts_write2] tsallts_register_thermal\n");
         if (NULL == thz_dev2) {
             thz_dev2 = mtk_thermal_zone_device_register("mtkts2", num_trip, NULL,
                                                         &tsallts_dev_ops2, 0, 0, 0, interval);
@@ -812,9 +704,6 @@ static ssize_t tsallts_write3(struct file *file, const char __user *buffer, size
 	char bind5[20],bind6[20],bind7[20],bind8[20],bind9[20];
 	char desc[512];
 
-
-	tsallts_printk("[tsallts_write3] \n");
-
 	len = (count < (sizeof(desc) - 1)) ? count : (sizeof(desc) - 1);
 	if (copy_from_user(desc, buffer, len))
 	{
@@ -830,7 +719,6 @@ static ssize_t tsallts_write3(struct file *file, const char __user *buffer, size
 		&trip[8],&t_type[8],bind8, &trip[9],&t_type[9],bind9,
 		&time_msec) == 32)
 	{
-		tsallts_dprintk("[tsallts_write3] tsallts_unregister_thermal\n");
         if (thz_dev3) {
             mtk_thermal_zone_device_unregister(thz_dev3);
             thz_dev3 = NULL;
@@ -857,14 +745,6 @@ static ssize_t tsallts_write3(struct file *file, const char __user *buffer, size
 			g_bind9[i]=bind9[i];
 		}
 
-		tsallts_dprintk("[tsallts_write3] g_THERMAL_TRIP_0=%d,g_THERMAL_TRIP_1=%d,g_THERMAL_TRIP_2=%d,g_THERMAL_TRIP_3=%d,g_THERMAL_TRIP_4=%d,\
-		g_THERMAL_TRIP_5=%d,g_THERMAL_TRIP_6=%d,g_THERMAL_TRIP_7=%d,g_THERMAL_TRIP_8=%d,g_THERMAL_TRIP_9=%d,\n",
-			g_THERMAL_TRIP[0],g_THERMAL_TRIP[1],g_THERMAL_TRIP[2],g_THERMAL_TRIP[3],g_THERMAL_TRIP[4],
-			g_THERMAL_TRIP[5],g_THERMAL_TRIP[6],g_THERMAL_TRIP[7],g_THERMAL_TRIP[8],g_THERMAL_TRIP[9]);
-		tsallts_dprintk("[tsallts_write] cooldev0=%s,cooldev1=%s,cooldev2=%s,cooldev3=%s,cooldev4=%s,\
-		cooldev5=%s,cooldev6=%s,cooldev7=%s,cooldev8=%s,cooldev9=%s\n",
-			g_bind0,g_bind1,g_bind2,g_bind3,g_bind4,g_bind5,g_bind6,g_bind7,g_bind8,g_bind9);
-
 		for(i=0; i<num_trip; i++)
 		{
 			trip_temp[i]=trip[i];
@@ -872,12 +752,6 @@ static ssize_t tsallts_write3(struct file *file, const char __user *buffer, size
 
 		interval=time_msec;
 
-		tsallts_dprintk("[tsallts_write3] trip_0_temp=%d,trip_1_temp=%d,trip_2_temp=%d,trip_3_temp=%d,trip_4_temp=%d,\
-		trip_5_temp=%d,trip_6_temp=%d,trip_7_temp=%d,trip_8_temp=%d,trip_9_temp=%d,time_ms=%d\n",
-		trip_temp[0],trip_temp[1],trip_temp[2],trip_temp[3],trip_temp[4],
-		trip_temp[5],trip_temp[6],trip_temp[7],trip_temp[8],trip_temp[9],interval);
-
-		tsallts_dprintk("[tsallts_write3] tsallts_register_thermal\n");
 		if (NULL == thz_dev3) {
             thz_dev3 = mtk_thermal_zone_device_register("mtkts3", num_trip, NULL,
                                                         &tsallts_dev_ops3, 0, 0, 0, interval);
@@ -975,8 +849,6 @@ void tsallts_unregister_cooler(void)
 #if 1 /* not in use */
 void tsallts_unregister_thermal(void)
 {
-	tsallts_dprintk("[tsallts_unregister_thermal] \n");
-
 	if (thz_dev1) {
 		mtk_thermal_zone_device_unregister(thz_dev1);
 		thz_dev1 = NULL;
@@ -1043,8 +915,6 @@ static int __init tsallts_init(void)
 	struct proc_dir_entry *entry = NULL;
 	struct proc_dir_entry *tsallts_dir = NULL;
 
-    tsallts_dprintk("[tsallts_init] \n");
-
     tsallts_dir = mtk_thermal_get_proc_drv_therm_dir_entry();
     if (!tsallts_dir)
     {
@@ -1086,7 +956,6 @@ static int __init tsallts_init(void)
 
 static void __exit tsallts_exit(void)
 {
-	tsallts_dprintk("[tsallts_exit] \n");
 	tsallts_unregister_thermal();
  }
 
diff --git a/drivers/misc/mediatek/thermal/mt6580/mtk_ts_battery.c b/drivers/misc/mediatek/thermal/mt6580/mtk_ts_battery.c
index 177f5866f..4ded40f39 100644
--- a/drivers/misc/mediatek/thermal/mt6580/mtk_ts_battery.c
+++ b/drivers/misc/mediatek/thermal/mt6580/mtk_ts_battery.c
@@ -139,7 +139,6 @@ static int mtktsbattery_get_hw_temp(void)
 	if(ts_battery_at_boot_time==0)
 	{
 		ts_battery_at_boot_time=1;
-		mtktsbattery_dprintk("[mtktsbattery_get_hw_temp] at boot time, return 25000 as default\n");
 		battery[counter]=25000;
 		counter++;
 		return 25000;
@@ -156,8 +155,6 @@ static int mtktsbattery_get_hw_temp(void)
 
 	if(t_ret)
 
-	mtktsbattery_dprintk("[mtktsbattery_get_hw_temp] counter=%d, first_time =%d\n", counter, first_time);
-	mtktsbattery_dprintk("[mtktsbattery_get_hw_temp] T_Battery, %d\n", t_ret);
 	return t_ret;
 }
 
@@ -184,52 +181,42 @@ static int mtktsbattery_bind(struct thermal_zone_device *thermal,
 	if(!strcmp(cdev->type, g_bind0))
 	{
 		table_val = 0;
-		mtktsbattery_dprintk("[mtktsbattery_bind] %s\n", cdev->type);
 	}
 	else if(!strcmp(cdev->type, g_bind1))
 	{
 		table_val = 1;
-		mtktsbattery_dprintk("[mtktsbattery_bind] %s\n", cdev->type);
 	}
 	else if(!strcmp(cdev->type, g_bind2))
 	{
 		table_val = 2;
-		mtktsbattery_dprintk("[mtktsbattery_bind] %s\n", cdev->type);
 	}
 	else if(!strcmp(cdev->type, g_bind3))
 	{
 		table_val = 3;
-		mtktsbattery_dprintk("[mtktsbattery_bind] %s\n", cdev->type);
 	}
 	else if(!strcmp(cdev->type, g_bind4))
 	{
 		table_val = 4;
-		mtktsbattery_dprintk("[mtktsbattery_bind] %s\n", cdev->type);
 	}
 	else if(!strcmp(cdev->type, g_bind5))
 	{
 		table_val = 5;
-		mtktsbattery_dprintk("[mtktsbattery_bind] %s\n", cdev->type);
 	}
 	else if(!strcmp(cdev->type, g_bind6))
 	{
 		table_val = 6;
-		mtktsbattery_dprintk("[mtktsbattery_bind] %s\n", cdev->type);
 	}
 	else if(!strcmp(cdev->type, g_bind7))
 	{
 		table_val = 7;
-		mtktsbattery_dprintk("[mtktsbattery_bind] %s\n", cdev->type);
 	}
 	else if(!strcmp(cdev->type, g_bind8))
 	{
 		table_val = 8;
-		mtktsbattery_dprintk("[mtktsbattery_bind] %s\n", cdev->type);
 	}
 	else if(!strcmp(cdev->type, g_bind9))
 	{
 		table_val = 9;
-		mtktsbattery_dprintk("[mtktsbattery_bind] %s\n", cdev->type);
 	}
 	else
 	{
@@ -240,7 +227,6 @@ static int mtktsbattery_bind(struct thermal_zone_device *thermal,
 		mtktsbattery_dprintk("[mtktsbattery_bind] error binding cooling dev\n");
 		return -EINVAL;
 	} else {
-		mtktsbattery_dprintk("[mtktsbattery_bind] binding OK, %d\n", table_val);
 	}
 
 	return 0;
@@ -254,52 +240,42 @@ static int mtktsbattery_unbind(struct thermal_zone_device *thermal,
 	if(!strcmp(cdev->type, g_bind0))
 	{
 		table_val = 0;
-		mtktsbattery_dprintk("[mtktsbattery_unbind] %s\n", cdev->type);
 	}
 	else if(!strcmp(cdev->type, g_bind1))
 	{
 		table_val = 1;
-		mtktsbattery_dprintk("[mtktsbattery_unbind] %s\n", cdev->type);
 	}
 	else if(!strcmp(cdev->type, g_bind2))
 	{
 		table_val = 2;
-		mtktsbattery_dprintk("[mtktsbattery_unbind] %s\n", cdev->type);
 	}
 	else if(!strcmp(cdev->type, g_bind3))
 	{
 		table_val = 3;
-		mtktsbattery_dprintk("[mtktsbattery_unbind] %s\n", cdev->type);
 	}
 	else if(!strcmp(cdev->type, g_bind4))
 	{
 		table_val = 4;
-		mtktsbattery_dprintk("[mtktsbattery_unbind] %s\n", cdev->type);
 	}
 	else if(!strcmp(cdev->type, g_bind5))
 	{
 		table_val = 5;
-		mtktsbattery_dprintk("[mtktsbattery_unbind] %s\n", cdev->type);
 	}
 	else if(!strcmp(cdev->type, g_bind6))
 	{
 		table_val = 6;
-		mtktsbattery_dprintk("[mtktsbattery_unbind] %s\n", cdev->type);
 	}
 	else if(!strcmp(cdev->type, g_bind7))
 	{
 		table_val = 7;
-		mtktsbattery_dprintk("[mtktsbattery_unbind] %s\n", cdev->type);
 	}
 	else if(!strcmp(cdev->type, g_bind8))
 	{
 		table_val = 8;
-		mtktsbattery_dprintk("[mtktsbattery_unbind] %s\n", cdev->type);
 	}
 	else if(!strcmp(cdev->type, g_bind9))
 	{
 		table_val = 9;
-		mtktsbattery_dprintk("[mtktsbattery_unbind] %s\n", cdev->type);
 	}
 	else
 		return 0;
@@ -308,7 +284,6 @@ static int mtktsbattery_unbind(struct thermal_zone_device *thermal,
 		mtktsbattery_dprintk("[mtktsbattery_unbind] error unbinding cooling dev\n");
 		return -EINVAL;
 	} else {
-		mtktsbattery_dprintk("[mtktsbattery_unbind] unbinding OK\n");
 	}
 
 	return 0;
@@ -405,9 +380,6 @@ static int tsbat_sysrst_set_cur_state(struct thermal_cooling_device *cdev,
 	if(cl_dev_sysrst_state == 1)
 	{
 		printk("Power/battery_Thermal: reset, reset, reset!!!");
-		printk("@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@");
-		printk("*****************************************");
-		printk("@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@");
 
 //		BUG();
 		//arch_reset(0,NULL);
@@ -481,7 +453,6 @@ static ssize_t mtktsbattery_write(struct file *file, const char __user *buffer,
 				&trip[8],&t_type[8],bind8, &trip[9],&t_type[9],bind9,
 				&time_msec) == 32)
 	{
-		mtktsbattery_dprintk("[mtktsbattery_write] mtktsbattery_unregister_thermal\n");
 		mtktsbattery_unregister_thermal();
 
 		for(i=0; i<num_trip; i++)
@@ -503,14 +474,6 @@ static ssize_t mtktsbattery_write(struct file *file, const char __user *buffer,
 			g_bind9[i]=bind9[i];
 		}
 
-		mtktsbattery_dprintk("[mtktsbattery_write] g_THERMAL_TRIP_0=%d,g_THERMAL_TRIP_1=%d,g_THERMAL_TRIP_2=%d,g_THERMAL_TRIP_3=%d,g_THERMAL_TRIP_4=%d,\
-g_THERMAL_TRIP_5=%d,g_THERMAL_TRIP_6=%d,g_THERMAL_TRIP_7=%d,g_THERMAL_TRIP_8=%d,g_THERMAL_TRIP_9=%d,\n",
-				g_THERMAL_TRIP[0],g_THERMAL_TRIP[1],g_THERMAL_TRIP[2],g_THERMAL_TRIP[3],g_THERMAL_TRIP[4],
-				g_THERMAL_TRIP[5],g_THERMAL_TRIP[6],g_THERMAL_TRIP[7],g_THERMAL_TRIP[8],g_THERMAL_TRIP[9]);
-	mtktsbattery_dprintk("[mtktsbattery_write] cooldev0=%s,cooldev1=%s,cooldev2=%s,cooldev3=%s,cooldev4=%s,\
-cooldev5=%s,cooldev6=%s,cooldev7=%s,cooldev8=%s,cooldev9=%s\n",
-				g_bind0,g_bind1,g_bind2,g_bind3,g_bind4,g_bind5,g_bind6,g_bind7,g_bind8,g_bind9);
-
 		for(i=0; i<num_trip; i++)
 		{
 			trip_temp[i]=trip[i];
@@ -518,12 +481,6 @@ cooldev5=%s,cooldev6=%s,cooldev7=%s,cooldev8=%s,cooldev9=%s\n",
 
 		interval=time_msec / 1000;
 
-		mtktsbattery_dprintk("[mtktsbattery_write] trip_0_temp=%d,trip_1_temp=%d,trip_2_temp=%d,trip_3_temp=%d,trip_4_temp=%d,\
-trip_5_temp=%d,trip_6_temp=%d,trip_7_temp=%d,trip_8_temp=%d,trip_9_temp=%d,time_ms=%d\n",
-				trip_temp[0],trip_temp[1],trip_temp[2],trip_temp[3],trip_temp[4],
-				trip_temp[5],trip_temp[6],trip_temp[7],trip_temp[8],trip_temp[9],interval*1000);
-
-		mtktsbattery_dprintk("[mtktsbattery_write] mtktsbattery_register_thermal\n");
 		mtktsbattery_register_thermal();
 
 		//battery_write_flag=1;
@@ -568,8 +525,6 @@ int  mtktsbattery_register_cooler(void)
 
 int mtktsbattery_register_thermal(void)
 {
-	mtktsbattery_dprintk("[mtktsbattery_register_thermal] \n");
-
 	/* trips : trip 0~1 */
 	thz_dev = mtk_thermal_zone_device_register("mtktsbattery", num_trip, NULL,
 		&mtktsbattery_dev_ops, 0, 0, 0, interval*1000);
@@ -586,8 +541,6 @@ void mtktsbattery_unregister_cooler(void)
 }
 void mtktsbattery_unregister_thermal(void)
 {
-	mtktsbattery_dprintk("[mtktsbattery_unregister_thermal] \n");
-
 	if (thz_dev) {
 		mtk_thermal_zone_device_unregister(thz_dev);
 		thz_dev = NULL;
@@ -613,8 +566,6 @@ static int __init mtktsbattery_init(void)
 	struct proc_dir_entry *entry = NULL;
 	struct proc_dir_entry *mtktsbattery_dir = NULL;
 
-	mtktsbattery_dprintk("[mtktsbattery_init] \n");
-
 	err = mtktsbattery_register_cooler();
 	if(err)
 		return err;
@@ -649,7 +600,6 @@ err_unreg:
 
 static void __exit mtktsbattery_exit(void)
 {
-	mtktsbattery_dprintk("[mtktsbattery_exit] \n");
 	mtktsbattery_unregister_thermal();
 	mtktsbattery_unregister_cooler();
 }
diff --git a/drivers/misc/mediatek/thermal/mt6580/mtk_ts_buck.c b/drivers/misc/mediatek/thermal/mt6580/mtk_ts_buck.c
index e5d7babd3..7d7d9ab26 100644
--- a/drivers/misc/mediatek/thermal/mt6580/mtk_ts_buck.c
+++ b/drivers/misc/mediatek/thermal/mt6580/mtk_ts_buck.c
@@ -92,8 +92,6 @@ void tsbuck_read_6332_efuse(void)
     int i=0,j=0;
 	U32 efusevalue[2];
 
-    printk("[tsbuck_read_6332_efuse] start\n");
-
     //1. enable efuse ctrl engine clock
     ret=pmic_config_interface(0x80B6, 0x0010, 0xFFFF, 0);
     ret=pmic_config_interface(0x80A4, 0x0004, 0xFFFF, 0);
@@ -127,15 +125,12 @@ void tsbuck_read_6332_efuse(void)
         while(reg_val == 1)
         {
             ret=pmic_read_interface(0x8C70, &reg_val, 0x1, 0);
-            printk("5. polling Reg[0x61A][0]=0x%x\n", reg_val);
         }
 
 		udelay(1000);//Need to delay at least 1ms for 0x8C70 and than can read 0x8C6E
-        printk("5. 6332 delay 1 ms\n");
 
         //6. read data
         efusevalue[j] = upmu_get_reg_value(0x8C6E);
-		printk("6332_efuse : efusevalue[%d]=0x%x\n",j, efusevalue[j]);
 /*
         tsbuck_dprintk("i=0x%x,Reg[0x%x]=0x%x,Reg[0x%x]=0x%x,Reg[0x%x]=0x%x\n",
             i,
@@ -163,18 +158,6 @@ void tsbuck_read_6332_efuse(void)
 	g_o_slope_sign= (efusevalue[1]>>4)&0x1;
     g_o_slope     = (efusevalue[1]>>5)&0x3F;
 	g_id          = (efusevalue[1]>>11)&0x1;
-
-	tsbuck_dprintk("tsbuck_read_6332_efuse: g_o_vts        = %x\n", g_o_vts);
-    tsbuck_dprintk("tsbuck_read_6332_efuse: g_degc_cali    = %x\n", g_degc_cali);
-    tsbuck_dprintk("tsbuck_read_6332_efuse: g_adc_cali_en  = %x\n", g_adc_cali_en);
-    tsbuck_dprintk("tsbuck_read_6332_efuse: g_o_slope      = %x\n", g_o_slope);
-    tsbuck_dprintk("tsbuck_read_6332_efuse: g_o_slope_sign = %x\n", g_o_slope_sign);
-    tsbuck_dprintk("tsbuck_read_6332_efuse: g_id           = %x\n", g_id);
-
-    tsbuck_dprintk("tsbuck_read_6332_efuse: ((efusevalue[0]>>7)&0x1FF) = 0x%x\n", ((efusevalue[0]>>7)&0x1FF));
-    tsbuck_dprintk("tsbuck_read_6332_efuse: (((efusevalue[1])&0xF)<<9) = 0x%x\n", (((efusevalue[1])&0xF)<<9));
-
-    tsbuck_dprintk("[tsbuck_read_6332_efuse] Done\n");
 }
 
 
@@ -199,12 +182,6 @@ static void tsbuck_cali_prepare(void)
 		g_o_slope = 0;
 		g_o_slope_sign = 0;
 	}
-	printk("Power/BUCK_Thermal: g_o_vts        = 0x%x\n", g_o_vts);
-    printk("Power/BUCK_Thermal: g_degc_cali    = 0x%x\n", g_degc_cali);
-    printk("Power/BUCK_Thermal: g_adc_cali_en  = 0x%x\n", g_adc_cali_en);
-    printk("Power/BUCK_Thermal: g_o_slope      = 0x%x\n", g_o_slope);
-    printk("Power/BUCK_Thermal: g_o_slope_sign = 0x%x\n", g_o_slope_sign);
-    printk("Power/BUCK_Thermal: g_id           = 0x%x\n", g_id);
 }
 
 
@@ -230,8 +207,6 @@ static void tsbuck_cali_prepare2(void)
 		g_intercept = (vbe_t * 100) / (-(171-g_o_slope));  //0.001 degree
 	}
 	g_intercept = g_intercept + (g_degc_cali*(1000/2)); // 1000 is for 0.1 degree
-	printk("[Power/PMIC_Thermal] [Thermal calibration] SLOPE1=%d SLOPE2=%d INTERCEPT=%d, Vbe = %d\n",
-		g_slope1, g_slope2, g_intercept,vbe_t);
 
 }
 
@@ -261,29 +236,18 @@ static int tsbuck_get_hw_temp(void)
     temp1 = pmic_raw_to_temp(temp);
     //temp2 = pmic_raw_to_temp(675);
 
-	tsbuck_dprintk("[tsbuck_get_hw_temp] Raw=%d, T=%d\n",temp, temp1);
-
-
-	if((temp1>100000) || (temp1<-30000))
-	{
-		printk("[Power/PMIC_Thermal] raw=%d, PMIC T=%d", temp, temp1);
-	}
-
 	if((temp1>150000) || (temp1<-50000))
 	{
-		printk("[Power/PMIC_Thermal] drop this data\n");
 		temp1 = pre_temp1;
 	}
 	else if( (PMIC_counter!=0) && (((pre_temp1-temp1)>30000) || ((temp1-pre_temp1)>30000)) )
 	{
-		printk("[Power/PMIC_Thermal] drop this data 2\n");
 		temp1 = pre_temp1;
 	}
 	else
 	{
 		//update previous temp
 		pre_temp1 = temp1;
-		tsbuck_dprintk("[Power/PMIC_Thermal] pre_temp1=%d\n", pre_temp1);
 
 		if(PMIC_counter==0)
 			PMIC_counter++;
@@ -319,52 +283,42 @@ static int tsbuck_bind(struct thermal_zone_device *thermal,
 	if(!strcmp(cdev->type, g_bind0))
 	{
 		table_val = 0;
-		tsbuck_dprintk("[tsbuck_bind] %s\n", cdev->type);
 	}
 	else if(!strcmp(cdev->type, g_bind1))
 	{
 		table_val = 1;
-		tsbuck_dprintk("[tsbuck_bind] %s\n", cdev->type);
 	}
 	else if(!strcmp(cdev->type, g_bind2))
 	{
 		table_val = 2;
-		tsbuck_dprintk("[tsbuck_bind] %s\n", cdev->type);
 	}
 	else if(!strcmp(cdev->type, g_bind3))
 	{
 		table_val = 3;
-		tsbuck_dprintk("[tsbuck_bind] %s\n", cdev->type);
 	}
 	else if(!strcmp(cdev->type, g_bind4))
 	{
 		table_val = 4;
-		tsbuck_dprintk("[tsbuck_bind] %s\n", cdev->type);
 	}
 	else if(!strcmp(cdev->type, g_bind5))
 	{
 		table_val = 5;
-		tsbuck_dprintk("[tsbuck_bind] %s\n", cdev->type);
 	}
 	else if(!strcmp(cdev->type, g_bind6))
 	{
 		table_val = 6;
-		tsbuck_dprintk("[tsbuck_bind] %s\n", cdev->type);
 	}
 	else if(!strcmp(cdev->type, g_bind7))
 	{
 		table_val = 7;
-		tsbuck_dprintk("[tsbuck_bind] %s\n", cdev->type);
 	}
 	else if(!strcmp(cdev->type, g_bind8))
 	{
 		table_val = 8;
-		tsbuck_dprintk("[tsbuck_bind] %s\n", cdev->type);
 	}
 	else if(!strcmp(cdev->type, g_bind9))
 	{
 		table_val = 9;
-		tsbuck_dprintk("[tsbuck_bind] %s\n", cdev->type);
 	}
 	else
 	{
@@ -375,7 +329,6 @@ static int tsbuck_bind(struct thermal_zone_device *thermal,
 		tsbuck_dprintk("[tsbuck_bind] error binding cooling dev\n");
 		return -EINVAL;
 	} else {
-		tsbuck_dprintk("[tsbuck_bind] binding OK, %d\n", table_val);
 	}
 
 	return 0;
@@ -389,52 +342,42 @@ static int tsbuck_unbind(struct thermal_zone_device *thermal,
 	if(!strcmp(cdev->type, g_bind0))
 	{
 		table_val = 0;
-		tsbuck_dprintk("[tsbuck_unbind] %s\n", cdev->type);
 	}
 	else if(!strcmp(cdev->type, g_bind1))
 	{
 		table_val = 1;
-		tsbuck_dprintk("[tsbuck_unbind] %s\n", cdev->type);
 	}
 	else if(!strcmp(cdev->type, g_bind2))
 	{
 		table_val = 2;
-		tsbuck_dprintk("[tsbuck_unbind] %s\n", cdev->type);
 	}
 	else if(!strcmp(cdev->type, g_bind3))
 	{
 		table_val = 3;
-		tsbuck_dprintk("[tsbuck_unbind] %s\n", cdev->type);
 	}
 	else if(!strcmp(cdev->type, g_bind4))
 	{
 		table_val = 4;
-		tsbuck_dprintk("[tsbuck_unbind] %s\n", cdev->type);
 	}
 	else if(!strcmp(cdev->type, g_bind5))
 	{
 		table_val = 5;
-		tsbuck_dprintk("[tsbuck_unbind] %s\n", cdev->type);
 	}
 	else if(!strcmp(cdev->type, g_bind6))
 	{
 		table_val = 6;
-		tsbuck_dprintk("[tsbuck_unbind] %s\n", cdev->type);
 	}
 	else if(!strcmp(cdev->type, g_bind7))
 	{
 		table_val = 7;
-		tsbuck_dprintk("[tsbuck_unbind] %s\n", cdev->type);
 	}
 	else if(!strcmp(cdev->type, g_bind8))
 	{
 		table_val = 8;
-		tsbuck_dprintk("[tsbuck_unbind] %s\n", cdev->type);
 	}
 	else if(!strcmp(cdev->type, g_bind9))
 	{
 		table_val = 9;
-		tsbuck_dprintk("[tsbuck_unbind] %s\n", cdev->type);
 	}
 	else
 		return 0;
@@ -443,7 +386,6 @@ static int tsbuck_unbind(struct thermal_zone_device *thermal,
 		tsbuck_dprintk("[tsbuck_unbind] error unbinding cooling dev\n");
 		return -EINVAL;
 	} else {
-		tsbuck_dprintk("[tsbuck_unbind] unbinding OK\n");
 	}
 
 	return 0;
@@ -516,9 +458,6 @@ static int tspmic_sysrst_set_cur_state(struct thermal_cooling_device *cdev,
 	if(cl_dev_sysrst_state == 1)
 	{
 		printk("Power/PMIC_Thermal: reset, reset, reset!!!");
-		printk("@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@");
-		printk("*****************************************");
-		printk("@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@");
 
 //		BUG();
 		//arch_reset(0,NULL);
@@ -581,7 +520,6 @@ static ssize_t tsbuck_write(struct file *file, const char __user *buffer, size_t
 												 &trip[8],&t_type[8],bind8, &trip[9],&t_type[9],bind9,
 												 &time_msec) == 32)
 	{
-		tsbuck_dprintk("[tsbuck_write] tsbuck_unregister_thermal\n");
 		tsbuck_unregister_thermal();
 
 		for(i=0; i<num_trip; i++)
@@ -603,14 +541,6 @@ static ssize_t tsbuck_write(struct file *file, const char __user *buffer, size_t
 			g_bind9[i]=bind9[i];
 		}
 
-		tsbuck_dprintk("[tsbuck_write] g_THERMAL_TRIP_0=%d,g_THERMAL_TRIP_1=%d,g_THERMAL_TRIP_2=%d,g_THERMAL_TRIP_3=%d,g_THERMAL_TRIP_4=%d,\
-g_THERMAL_TRIP_5=%d,g_THERMAL_TRIP_6=%d,g_THERMAL_TRIP_7=%d,g_THERMAL_TRIP_8=%d,g_THERMAL_TRIP_9=%d,\n",
-													g_THERMAL_TRIP[0],g_THERMAL_TRIP[1],g_THERMAL_TRIP[2],g_THERMAL_TRIP[3],g_THERMAL_TRIP[4],
-													g_THERMAL_TRIP[5],g_THERMAL_TRIP[6],g_THERMAL_TRIP[7],g_THERMAL_TRIP[8],g_THERMAL_TRIP[9]);
-		tsbuck_dprintk("[tsbuck_write] cooldev0=%s,cooldev1=%s,cooldev2=%s,cooldev3=%s,cooldev4=%s,\
-cooldev5=%s,cooldev6=%s,cooldev7=%s,cooldev8=%s,cooldev9=%s\n",
-													g_bind0,g_bind1,g_bind2,g_bind3,g_bind4,g_bind5,g_bind6,g_bind7,g_bind8,g_bind9);
-
 		for(i=0; i<num_trip; i++)
 		{
 			trip_temp[i]=trip[i];
@@ -618,12 +548,6 @@ cooldev5=%s,cooldev6=%s,cooldev7=%s,cooldev8=%s,cooldev9=%s\n",
 
 		interval=time_msec / 1000;
 
-		tsbuck_dprintk("[tsbuck_write] trip_0_temp=%d,trip_1_temp=%d,trip_2_temp=%d,trip_3_temp=%d,trip_4_temp=%d,\
-trip_5_temp=%d,trip_6_temp=%d,trip_7_temp=%d,trip_8_temp=%d,trip_9_temp=%d,time_ms=%d\n",
-						trip_temp[0],trip_temp[1],trip_temp[2],trip_temp[3],trip_temp[4],
-						trip_temp[5],trip_temp[6],trip_temp[7],trip_temp[8],trip_temp[9],interval*1000);
-
-		tsbuck_dprintk("[tsbuck_write] tsbuck_register_thermal\n");
 		tsbuck_register_thermal();
 
 		return count;
@@ -645,8 +569,6 @@ int tsbuck_register_cooler(void)
 
 int tsbuck_register_thermal(void)
 {
-	tsbuck_dprintk("[tsbuck_register_thermal] \n");
-
 	/* trips : trip 0~2 */
 	thz_dev = mtk_thermal_zone_device_register("mtktsbuck", num_trip, NULL,
 					  &tsbuck_dev_ops, 0, 0, 0, interval*1000);
@@ -664,8 +586,6 @@ void tsbuck_unregister_cooler(void)
 
 void tsbuck_unregister_thermal(void)
 {
-	tsbuck_dprintk("[tsbuck_unregister_thermal] \n");
-
 	if (thz_dev) {
 		mtk_thermal_zone_device_unregister(thz_dev);
 		thz_dev = NULL;
@@ -692,7 +612,6 @@ static int __init tsbuck_init(void)
 	struct proc_dir_entry *entry = NULL;
 	struct proc_dir_entry *tsbuck_dir = NULL;
 
-	tsbuck_dprintk("[tsbuck_init] \n");
 	tsbuck_cali_prepare();
 	tsbuck_cali_prepare2();
 
@@ -729,7 +648,6 @@ err_unreg:
 
 static void __exit tsbuck_exit(void)
 {
-	tsbuck_dprintk("[tsbuck_exit] \n");
 	tsbuck_unregister_thermal();
 	tsbuck_unregister_cooler();
 }
diff --git a/drivers/misc/mediatek/thermal/mt6580/mtk_ts_cpu.c b/drivers/misc/mediatek/thermal/mt6580/mtk_ts_cpu.c
index 363fd724f..cc252ea17 100644
--- a/drivers/misc/mediatek/thermal/mt6580/mtk_ts_cpu.c
+++ b/drivers/misc/mediatek/thermal/mt6580/mtk_ts_cpu.c
@@ -532,8 +532,6 @@ static int bank_ts_r[THERMAL_BANK_NUM][ENUM_MAX];
 static void thermal_tempADCPNP(int adc, int order)
 {
 
-     tscpu_dprintk("%s adc %x, order %d\n", __func__, adc, order);
-
      switch (order) {
           case 0 :
                THERMAL_WRAP_WR32(adc,TEMPADCPNP0);
@@ -655,7 +653,6 @@ static void _mt_thermal_aee_init(void)
 void set_taklking_flag(bool flag)
 {
 	talking_flag = flag;
-	tscpu_printk("talking_flag=%d\n", talking_flag);
 	return;
 }
 
@@ -671,8 +668,6 @@ static void set_adaptive_cpu_power_limit(unsigned int limit)
 
     if (prv_adp_cpu_pwr_lim != adaptive_cpu_power_limit)
     {
-        tscpu_printk("set_adaptive_cpu_power_limit %d, T=%d,%d,%d\n", (final_limit != 0x7FFFFFFF) ? final_limit : 0,
-                      bank_ts[THERMAL_BANK0][MCU1], bank_ts[THERMAL_BANK0][MCU2], bank_ts[THERMAL_BANK0][MCU3]);
 
         mt_cpufreq_thermal_protect((final_limit != 0x7FFFFFFF) ? final_limit : 0);
     }
@@ -687,9 +682,6 @@ static void set_static_cpu_power_limit(unsigned int limit)
 
     if (prv_stc_cpu_pwr_lim != static_cpu_power_limit)
     {
-        tscpu_printk("set_static_cpu_power_limit %d, T=%d,%d,%d\n", (final_limit != 0x7FFFFFFF) ? final_limit : 0,
-                      bank_ts[THERMAL_BANK0][MCU1], bank_ts[THERMAL_BANK0][MCU2], bank_ts[THERMAL_BANK0][MCU3]);
-
         mt_cpufreq_thermal_protect((final_limit != 0x7FFFFFFF) ? final_limit : 0);
     }
 }
@@ -704,7 +696,6 @@ static void set_adaptive_gpu_power_limit(unsigned int limit)
 
     adaptive_gpu_power_limit = (limit != 0) ? limit : 0x7FFFFFFF;
     final_limit = MIN(adaptive_gpu_power_limit, static_gpu_power_limit);
-    tscpu_printk("set_adaptive_gpu_power_limit %d\n", (final_limit != 0x7FFFFFFF) ? final_limit : 0);
     mt_gpufreq_thermal_protect((final_limit != 0x7FFFFFFF) ? final_limit : 0);
 }
 
@@ -714,7 +705,6 @@ static void set_static_gpu_power_limit(unsigned int limit)
 
     static_gpu_power_limit = (limit != 0) ? limit : 0x7FFFFFFF;
     final_limit = MIN(adaptive_gpu_power_limit, static_gpu_power_limit);
-    tscpu_printk("set_static_gpu_power_limit %d\n", (final_limit != 0x7FFFFFFF) ? final_limit : 0);
     mt_gpufreq_thermal_protect((final_limit != 0x7FFFFFFF) ? final_limit : 0);
 }
 
@@ -724,7 +714,6 @@ static void set_static_gpu_power_limit(unsigned int limit)
 int tscpu_thermal_clock_on(void)
 {
 	int ret=-1;
-	tscpu_printk("tscpu_thermal_clock_on\n");
 
     ret = enable_clock(MT_CG_THEM_SW_CG, "THERMAL");// [Rainier]Fix ME
 
@@ -734,7 +723,6 @@ int tscpu_thermal_clock_on(void)
 int tscpu_thermal_clock_off(void)
 {
 	int ret=-1;
-	tscpu_dprintk("tscpu_thermal_clock_off\n");
 
     ret = disable_clock(MT_CG_THEM_SW_CG, "THERMAL");// [Rainier]Fix ME
 
@@ -816,8 +804,6 @@ void get_thermal_slope_intercept(struct TS_PTPOD *ts_info,thermal_bank_name ts_b
 	struct TS_PTPOD ts_ptpod;
     S32 x_roomt;
 
-	tscpu_dprintk("get_thermal_slope_intercept\n");
-
 
 /*
 Bank0:	CPU			(TSMCU2)
@@ -869,7 +855,6 @@ Bank2:	LTE			(TSMCU3)
 
 	ts_info->ts_MTS = ts_ptpod.ts_MTS;
 	ts_info->ts_BTS = ts_ptpod.ts_BTS;
-	tscpu_printk("ts_MTS=%d, ts_BTS=%d\n",ts_ptpod.ts_MTS, ts_ptpod.ts_BTS);
 
 	return;
 }
@@ -917,7 +902,6 @@ static void thermal_interrupt_handler(int bank)
 
 	ret = DRV_Reg32(TEMPMONINTSTS);
 	//printk("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\n");
-	tscpu_printk("thermal_interrupt_handler,bank=0x%08x,ret=0x%08x\n",bank,ret);
 	//printk("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\n");
 
     //ret2 = DRV_Reg32(THERMINTST);
@@ -928,41 +912,15 @@ static void thermal_interrupt_handler(int bank)
 	//dump_spm_reg();
 
 	//tscpu_printk("thermal_isr: [Interrupt trigger]: status = 0x%x\n", ret);
-	if (ret & THERMAL_MON_CINTSTS0)
-	{
-		tscpu_printk("thermal_isr: thermal sensor point 0 - cold interrupt trigger\n");
-	}
-	if (ret & THERMAL_MON_HINTSTS0)
-	{
-		tscpu_printk("<<<thermal_isr>>>: thermal sensor point 0 - hot interrupt trigger\n");
-	}
-
-	if (ret & THERMAL_MON_HINTSTS1)
-	{
-		tscpu_printk("<<<thermal_isr>>>: thermal sensor point 1 - hot interrupt trigger\n");
-	}
-
-	if (ret & THERMAL_MON_HINTSTS2)
-	{
-		tscpu_printk("<<<thermal_isr>>>: thermal sensor point 2 - hot interrupt trigger\n");
-	}
 
-
-	if(ret & THERMAL_tri_SPM_State0)
-		tscpu_printk("thermal_isr: Thermal state0 to trigger SPM state0\n");
 	if(ret & THERMAL_tri_SPM_State1){
         //tscpu_printk("thermal_isr: Thermal state1 to trigger SPM state1\n");
 #if MTK_TS_CPU_RT
 
 
-    tscpu_printk("THERMAL_tri_SPM_State1, T=%d,%d,%d\n", CPU_TS_MCU2_T, GPU_TS_MCU1_T, LTE_TS_MCU3_T);
-
-
         wake_up_process(ktp_thread_handle);
 #endif
     }
-	if(ret & THERMAL_tri_SPM_State2)
-		tscpu_printk("thermal_isr: Thermal state2 to trigger SPM state2\n");
 
 	mt_ptp_unlock(&flags);
 
@@ -977,7 +935,6 @@ static irqreturn_t thermal_all_bank_interrupt_handler(int irq, void *dev_id)
 
     ret = DRV_Reg32(THERMINTST);
     ret = ret & 0xF;
-    printk("thermal_interrupt_handler : THERMINTST = 0x%x\n", ret);
 
 	if((ret & 0x1) == 0)//check bit0
 		thermal_interrupt_handler(THERMAL_BANK0);
@@ -1198,7 +1155,6 @@ static int thermal_config_Bank(void){
        thermal_reset_and_initial();
 
          for (j=0; j<g_bank[i].ts_number; j++) {
-            tscpu_dprintk("%s i %d, j %d\n", __func__, i, j);
             thermal_tempADCPNP(thermal_ADCValueOfMcu(g_bank[i].ts[j].type),j);
          }
 
@@ -1227,7 +1183,6 @@ static void set_tc_trigger_hw_protect(int temperature, int temperature2)
 
 
 	//temperature2=80000;  test only
-	tscpu_dprintk( "set_tc_trigger_hw_protect t1=%d t2=%d\n", temperature, temperature2);
 
 
 	//temperature to trigger SPM state2
@@ -1346,7 +1301,6 @@ static int init_cooler(void)
 int mtk_gpufreq_register(struct mtk_gpu_power_info *freqs, int num)
 {
 	int i = 0;
-	tscpu_dprintk("mtk_gpufreq_register\n");
 	mtk_gpu_power = kzalloc((num) * sizeof(struct mtk_gpu_power_info), GFP_KERNEL);
 	if (mtk_gpu_power == NULL)
 		return -ENOMEM;
@@ -1355,9 +1309,6 @@ int mtk_gpufreq_register(struct mtk_gpu_power_info *freqs, int num)
 	{
 		mtk_gpu_power[i].gpufreq_khz = freqs[i].gpufreq_khz;
 		mtk_gpu_power[i].gpufreq_power = freqs[i].gpufreq_power;
-
-		tscpu_dprintk("[%d].gpufreq_khz=%u, .gpufreq_power=%u\n",
-                        i, freqs[i].gpufreq_khz, freqs[i].gpufreq_power);
 	}
 
 	Num_of_GPU_OPP = num; // GPU OPP count
@@ -1391,8 +1342,6 @@ static void thermal_cal_prepare(void)
 	temp2 = get_devinfo_with_index(ADDRESS_INDEX_2);
 
 
-	printk("[calibration] temp0=0x%x, temp1=0x%x, temp2=0x%x\n", temp0, temp1,temp2);
-
     g_o_slope      = (temp0 & 0xFC000000)>>26;  //O_SLOPE      (6b) *(0x10206180)[31:26]
 	g_o_vtsmcu1    = (temp0 & 0x03FE0000)>>17;  //O_VTSMCU1    (9b) *(0x10206180)[25:17]
 	g_o_vtsmcu2    = (temp0 & 0x0001FF00)>>8;   //O_VTSMCU2    (9b) *(0x10206180)[16:8]
@@ -1423,7 +1372,6 @@ static void thermal_cal_prepare(void)
 	}
 	else
 	{
-		tscpu_printk("This sample is not Thermal calibrated\n");
 		g_adc_ge_t     = 512;
 		g_adc_oe_t     = 512;
 		g_degc_cali    = 40;
@@ -1434,8 +1382,6 @@ static void thermal_cal_prepare(void)
 		g_o_vtsmcu3    = 260;
 
 	}
-
-	mtkts_dump_cali_info();
 }
 
 static void thermal_cal_prepare_2(U32 ret)
@@ -1587,7 +1533,6 @@ int get_immediate_cpu_wrap(void)
 	int curr_temp;
 
 	curr_temp = bank_ts[THERMAL_BANK0][MCU1];
-    tscpu_dprintk("get_immediate_cpu_wrap curr_temp=%d\n", curr_temp);
 
     return curr_temp;
 }
@@ -1596,7 +1541,6 @@ int get_immediate_gpu_wrap(void)
 	int curr_temp;
 
 	curr_temp = bank_ts[THERMAL_BANK0][MCU2];
-    tscpu_dprintk("get_immediate_gpu_wrap curr_temp=%d\n", curr_temp);
 
     return curr_temp;
 }
@@ -1605,7 +1549,6 @@ int get_immediate_soc_wrap(void)
 	int curr_temp;
 
 	curr_temp = bank_ts[THERMAL_BANK0][MCU3];
-    tscpu_dprintk("get_immediate_soc_wrap curr_temp=%d\n", curr_temp);
 
     return curr_temp;
 }
@@ -1622,7 +1565,6 @@ int get_immediate_ts1_wrap(void)
 
 	//curr_temp = GPU_TS_MCU1_T;
 	curr_temp = bank_ts[THERMAL_BANK0][MCU1];
-    tscpu_dprintk("get_immediate_ts1_wrap curr_temp=%d\n", curr_temp);
 
     return curr_temp;
 }
@@ -1633,7 +1575,6 @@ int get_immediate_ts2_wrap(void)
 
 	//curr_temp = CPU_TS_MCU2_T;
 	curr_temp = bank_ts[THERMAL_BANK0][MCU2];
-    tscpu_dprintk("get_immediate_ts2_wrap curr_temp=%d\n", curr_temp);
 
     return curr_temp;
 }
@@ -1643,7 +1584,6 @@ int get_immediate_ts3_wrap(void)
 
 	//curr_temp = LTE_TS_MCU3_T;
 	curr_temp = bank_ts[THERMAL_BANK0][MCU3];
-    tscpu_dprintk("get_immediate_ts3_wrap curr_temp=%d\n", curr_temp);
 
     return curr_temp;
 }
@@ -1653,13 +1593,11 @@ static int read_tc_raw_and_temp(volatile u32 * tempmsr_name,thermal_sensor_name
 	int temp=0,raw=0;
 	u32 name = (u32) tempmsr_name;
 
-    tscpu_dprintk("read_tc_raw_temp,tempmsr_name=0x%x,ts_num=%d\n", name,ts_name);
 
     raw = (tempmsr_name != 0) ? (DRV_Reg32((tempmsr_name))& 0x0fff) : 0;
 	temp = (tempmsr_name != 0) ? raw_to_temperature_roomt(raw,ts_name) : 0;
 
     *ts_raw = raw;
-    tscpu_dprintk("read_tc_raw_temp,ts_raw=%d,temp=%d\n",*ts_raw,temp*100);
 
 	return (temp*100);
 }
@@ -1668,28 +1606,22 @@ static int read_tc_raw_and_temp(volatile u32 * tempmsr_name,thermal_sensor_name
 static void thermal_read_bank_temp(thermal_bank_name bank, ts_e type, int order)
 {
 
-     tscpu_dprintk("%s bank %d type %d order %d\n", __func__, bank, type, order);
 
      switch (order) {
           case 0 :
                bank_ts[bank][type] = read_tc_raw_and_temp((volatile u32 *)TEMPMSR0,type,&bank_ts_r[bank][type]);
-               tscpu_dprintk("%s order %d bank %d type %d bank_ts %d bank_ts_r %d\n", __func__, order, bank, type, bank_ts[bank][type], bank_ts_r[bank][type]);
                break;
           case 1 :
                bank_ts[bank][type] = read_tc_raw_and_temp((volatile u32 *)TEMPMSR1,type,&bank_ts_r[bank][type]);
-               tscpu_dprintk("%s order %d bank %d type %d bank_ts %d bank_ts_r %d\n", __func__, order, bank, type, bank_ts[bank][type], bank_ts_r[bank][type]);
 	        break;
           case 2 :
                bank_ts[bank][type] = read_tc_raw_and_temp((volatile u32 *)TEMPMSR2,type,&bank_ts_r[bank][type]);
-               tscpu_dprintk("%s order %d bank %d type %d bank_ts %d bank_ts_r %d\n", __func__, order, bank, type, bank_ts[bank][type], bank_ts_r[bank][type]);
 	        break;
           case 3 :
                bank_ts[bank][type] = read_tc_raw_and_temp((volatile u32 *)TEMPMSR3,type,&bank_ts_r[bank][type]);
-               tscpu_dprintk("%s order %d bank %d type %d bank_ts %d bank_ts_r %d\n", __func__, order, bank, type, bank_ts[bank][type], bank_ts_r[bank][type]);
 	        break;
 		default:
                bank_ts[bank][type] = read_tc_raw_and_temp((volatile u32 *)TEMPMSR0,type,&bank_ts_r[bank][type]);
-               tscpu_dprintk("%s order %d bank %d type %d bank_ts %d bank_ts_r %d\n", __func__, order, bank, type, bank_ts[bank][type], bank_ts_r[bank][type]);
 			break;
     }
 }
@@ -1724,7 +1656,6 @@ static int max_temperature_in_bank(thermal_bank_name bank)
 
     for (j=0; j<g_bank[bank].ts_number; j++) {
         if (bank_ts[bank][g_bank[bank].ts[j].type] > max_in_bank) max_in_bank = bank_ts[bank][g_bank[bank].ts[j].type];
-	tscpu_dprintk("tscpu_get_temp CPU bank%d T%d=%d\n", bank, j, bank_ts[bank][g_bank[bank].ts[j].type]);
     }
 
     return max_in_bank;
@@ -1737,7 +1668,6 @@ static int max_temperature(void)
     int max = 0;
     int max_in_bank = 0;
 
-    tscpu_dprintk("tscpu_get_temp %s, %d\n",__func__, __LINE__);
     for (i=0; i<TS_LEN_ARRAY(g_bank); i++) {
 
         max_in_bank = max_temperature_in_bank(i);
@@ -1763,7 +1693,6 @@ static int tscpu_get_temp(struct thermal_zone_device *thermal,
 	//tscpu_printk("tscpu_get_temp CPU TS3=%d\n",get_immediate_ts3_wrap());
 
     curr_temp = MAX(bank_ts[THERMAL_BANK0][MCU1], bank_ts[THERMAL_BANK0][MCU2]);
-	tscpu_dprintk("tscpu_get_temp CPU Max T=%d\n",curr_temp);
 
 #if (CONFIG_THERMAL_AEE_RR_REC== 1)
     //tscpu_printk("CONFIG_THERMAL_AEE_RR_REC, T=%d,%d,%d\n", (GPU_TS_MCU1_T/1000), (CPU_TS_MCU2_T/1000), (CPU_TS_MCU3_T/1000), (LTE_TS4_T/1000), (TS_ABB_T/1000));
@@ -1777,7 +1706,6 @@ static int tscpu_get_temp(struct thermal_zone_device *thermal,
 
 	if((curr_temp > (trip_temp[0] - 15000)) || (curr_temp < -30000) || (curr_temp > 85000))
 	{
-		tscpu_printk("CPU T=%d\n",curr_temp);
     }
 
     temp_temp = curr_temp;
@@ -1785,7 +1713,6 @@ static int tscpu_get_temp(struct thermal_zone_device *thermal,
     {
         if ((curr_temp > 150000) || (curr_temp < -20000)) // invalid range
         {
-            tscpu_printk("CPU temp invalid=%d\n", curr_temp);
             temp_temp = 50000;
             ret = -1;
         }
@@ -1793,7 +1720,6 @@ static int tscpu_get_temp(struct thermal_zone_device *thermal,
         {
             if ((curr_temp - last_cpu_real_temp > 40000) || (last_cpu_real_temp - curr_temp > 40000)) //delta 40C, invalid change
             {
-                tscpu_printk("CPU temp float hugely temp=%d, lasttemp=%d\n", curr_temp, last_cpu_real_temp);
                // tscpu_printk("RAW_TS2 = %d,RAW_TS3 = %d,RAW_TS4 = %d\n",RAW_TS2,RAW_TS3,RAW_TS4);
                 temp_temp = 50000;
                 ret = -1;
@@ -1810,10 +1736,6 @@ static int tscpu_get_temp(struct thermal_zone_device *thermal,
 
 	curr_temp = get_immediate_temp1();
 
-	tscpu_dprintk("tscpu_get_temp CPU T1=%d\n",curr_temp);
-
-	if((curr_temp > (trip_temp[0] - 15000)) || (curr_temp<-30000))
-		printk("[Power/CPU_Thermal] CPU T=%d\n",curr_temp);
 #endif
 
 	read_curr_temp = curr_temp;
@@ -1868,7 +1790,6 @@ int tscpu_get_temp_by_bank(thermal_bank_name ts_bank)
 {
 	int bank_T = 0;
 
-	tscpu_dprintk("tscpu_get_temp %s, %d\n",__func__, __LINE__);
 	if(ts_bank < TS_LEN_ARRAY(g_bank))
 		bank_T = max_temperature_in_bank(ts_bank);
 	else
@@ -1951,7 +1872,6 @@ static int tscpu_bind(struct thermal_zone_device *thermal,
 		tscpu_printk("tscpu_bind error binding cooling dev\n");
 		return -EINVAL;
 	} else {
-		tscpu_printk("tscpu_bind binding OK, %d\n", table_val);
 	}
 
 	return 0;
@@ -2021,7 +1941,6 @@ static int tscpu_unbind(struct thermal_zone_device *thermal,
 		tscpu_printk("tscpu_unbind error unbinding cooling dev\n");
 	return -EINVAL;
 	} else {
-		tscpu_printk("tscpu_unbind unbinding OK\n");
 	}
 
 	return 0;
@@ -2095,8 +2014,6 @@ static int tscpu_set_power_consumption_state(void)
 	int i=0;
 	int power=0;
 
-	tscpu_dprintk("tscpu_set_power_consumption_state Num_of_OPP=%d\n",Num_of_OPP);
-
 	//in 92, Num_of_OPP=34
 	for(i=0; i<Num_of_OPP; i++)
 	{
@@ -2104,7 +2021,6 @@ static int tscpu_set_power_consumption_state(void)
 		{
 			if(i!=previous_step)
 			{
-				tscpu_printk("previous_opp=%d, now_opp=%d\n", previous_step, i);
 				previous_step=i;
 				mtktscpu_limited_dmips = tscpu_cpu_dmips[previous_step];
 				if(Num_of_GPU_OPP==3)
@@ -2112,14 +2028,12 @@ static int tscpu_set_power_consumption_state(void)
 					power = (i*100+700) - mtk_gpu_power[Num_of_GPU_OPP-1].gpufreq_power;
 					set_static_cpu_power_limit(power);
 					set_static_gpu_power_limit(mtk_gpu_power[Num_of_GPU_OPP-1].gpufreq_power);
-                    tscpu_dprintk("Num_of_GPU_OPP=%d, gpufreq_power=%d, power=%d\n", Num_of_GPU_OPP, mtk_gpu_power[Num_of_GPU_OPP-1].gpufreq_power, power);
 				}
 				else if(Num_of_GPU_OPP==2)
 				{
 					power = (i*100+700) - mtk_gpu_power[1].gpufreq_power;
 					set_static_cpu_power_limit(power);
 					set_static_gpu_power_limit(mtk_gpu_power[1].gpufreq_power);
-                    tscpu_dprintk("Num_of_GPU_OPP=%d, gpufreq_power=%d, power=%d\n", Num_of_GPU_OPP, mtk_gpu_power[1].gpufreq_power, power);
 				}
 				else if(Num_of_GPU_OPP==1)
 				{
@@ -2131,13 +2045,11 @@ static int tscpu_set_power_consumption_state(void)
                     power = (i*100+700) - mtk_gpu_power[0].gpufreq_power;
                     #endif
 					set_static_cpu_power_limit(power);
-                    tscpu_dprintk("Num_of_GPU_OPP=%d, gpufreq_power=%d, power=%d\n", Num_of_GPU_OPP, mtk_gpu_power[0].gpufreq_power,power);
 				}
 				else // TODO: fix this, temp solution, this project has over 5 GPU OPP...
 				{
 				    power = (i*100+700);
 				    set_static_cpu_power_limit(power);
-				    tscpu_dprintk("Num_of_GPU_OPP=%d, gpufreq_power=%d, power=%d\n", Num_of_GPU_OPP, mtk_gpu_power[0].gpufreq_power, power);
 				}
 			}
 			break;
@@ -2151,7 +2063,6 @@ static int tscpu_set_power_consumption_state(void)
 		{
 			previous_step = -1;
 			mtktscpu_limited_dmips = tscpu_cpu_dmips[CPU_COOLER_NUM-1]; // highest dmips
-			tscpu_printk("Free all static thermal limit, previous_opp=%d\n", previous_step);
 			set_static_cpu_power_limit(0);
 			set_static_gpu_power_limit(0);
 		}
@@ -2302,8 +2213,6 @@ static int P_adaptive(int total_power, unsigned int gpu_loading)
         set_adaptive_gpu_power_limit(gpu_power);
     }
 
-    tscpu_dprintk("%s cpu %d, gpu %d\n", __func__, cpu_power, gpu_power);
-
     return 0;
 }
 
@@ -2314,8 +2223,6 @@ static int _adaptive_power(long prev_temp, long curr_temp, unsigned int gpu_load
 
 	if (cl_dev_adp_cpu_state_active == 1)
 	{
-        tscpu_dprintk("%s %d %d %d %d %d %d %d %d\n", __func__, FIRST_STEP_TOTAL_POWER_BUDGET, PACKAGE_THETA_JA_RISE, PACKAGE_THETA_JA_FALL, MINIMUM_BUDGET_CHANGE, MINIMUM_CPU_POWER, MAXIMUM_CPU_POWER, MINIMUM_GPU_POWER, MAXIMUM_GPU_POWER);
-
 		/* Check if it is triggered */
 		if (!triggered)
 		{
@@ -2337,7 +2244,6 @@ static int _adaptive_power(long prev_temp, long curr_temp, unsigned int gpu_load
                 default: /* ATM v1 */
 			        total_power = FIRST_STEP_TOTAL_POWER_BUDGET;
                 }
-				tscpu_dprintk("%s Tp %ld, Tc %ld, Pt %d\n", __func__, prev_temp, curr_temp, total_power);
 				return P_adaptive(total_power, gpu_loading);
 			}
 		}
@@ -2418,18 +2324,15 @@ static int _adaptive_power(long prev_temp, long curr_temp, unsigned int gpu_load
             break;
         }
 
-        tscpu_dprintk("%s Tp %ld, Tc %ld, Pt %d\n", __func__, prev_temp, curr_temp, total_power);
 		return P_adaptive(total_power, gpu_loading);
 	}
 #if CONTINUOUS_TM
     else if ((cl_dev_adp_cpu_state_active == 1) && (ctm_on ==1) && (curr_temp < current_ETJ))
     {
-        tscpu_printk("CTM exit curr_temp %d cetj %d\n", TARGET_TJ, current_ETJ);
         // even cooler not exit, when CTM is on and current Tj < current_ETJ, leave ATM
         if (triggered)
 		{
 			triggered = 0;
-			tscpu_dprintk("%s Tp %ld, Tc %ld, Pt %d\n", __func__, prev_temp, curr_temp, total_power);
 			return P_adaptive(0, 0);
 		}
 #if THERMAL_HEADROOM
@@ -2448,7 +2351,6 @@ static int _adaptive_power(long prev_temp, long curr_temp, unsigned int gpu_load
 		if (triggered)
 		{
 			triggered = 0;
-			tscpu_dprintk("%s Tp %ld, Tc %ld, Pt %d\n", __func__, prev_temp, curr_temp, total_power);
 			return P_adaptive(0, 0);
 		}
 #if THERMAL_HEADROOM
@@ -2512,7 +2414,6 @@ static int decide_ttj(void)
 {
         MAXIMUM_GPU_POWER =(int) mt_gpufreq_get_max_power();
         MINIMUM_GPU_POWER =(int) mt_gpufreq_get_min_power();
-	    printk("decide_ttj: MAXIMUM_GPU_POWER=%d,MINIMUM_GPU_POWER=%d\n",MAXIMUM_GPU_POWER,MINIMUM_GPU_POWER);
 }
 #else
         MINIMUM_GPU_POWER = MINIMUM_GPU_POWERS[active_cooler_id];
@@ -2617,11 +2518,6 @@ static int sysrst_cpu_set_cur_state(struct thermal_cooling_device *cdev,
 
 	if(cl_dev_sysrst_state == 1)
 	{
-	    mtkts_dump_cali_info();
-		tscpu_printk("sysrst_cpu_set_cur_state = 1\n");
-		tscpu_printk("@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\n");
-		tscpu_printk("*****************************************\n");
-		tscpu_printk("@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\n");
 
 #ifndef CONFIG_ARM64
         BUG();
@@ -2735,12 +2631,10 @@ static ssize_t tscpu_write_Tj_out(struct file *file, const char __user *buffer,
 			THERMAL_WRAP_WR32(DRV_Reg32(TS_CON0_TM) & 0xfffeffff, TS_CON0_TM);
         }
 
-		tscpu_dprintk("tscpu_write_Tj_out lv_Tj_out_flag=%d\n", lv_Tj_out_flag);
 		return count;
 	}
 	else
 	{
-		tscpu_dprintk("tscpu_write_Tj_out bad argument\n");
 	}
 	return -EINVAL;
 }
@@ -2758,14 +2652,11 @@ static int g_GPIO_already_set = 0;
 void tscpu_set_GPIO_toggle_for_monitor(void)
 {
 	int lv_GPIO118_MODE,lv_GPIO118_DIR, lv_GPIO118_DOUT;
-	tscpu_dprintk("tscpu_set_GPIO_toggle_for_monitor,g_GPIO_out_enable=%d\n",g_GPIO_out_enable);
 
 	if(g_GPIO_out_enable == 1)
 	{
 	    if(g_max_temp > g_trigger_temp){
 
-			tscpu_printk("g_max_temp %d > g_trigger_temp %d \n",g_max_temp ,g_trigger_temp);
-
 			g_GPIO_out_enable =0;//only can enter once
 			g_GPIO_already_set=1;
 
@@ -2773,10 +2664,6 @@ void tscpu_set_GPIO_toggle_for_monitor(void)
 		    lv_GPIO118_DIR  = thermal_readl(GPIO118_DIR);
 		    lv_GPIO118_DOUT = thermal_readl(GPIO118_DOUT);
 
-            tscpu_printk("tscpu_set_GPIO_toggle_for_monitor:lv_GPIO118_MODE=0x%x,lv_GPIO118_DIR=0x%x,lv_GPIO118_DOUT=0x%x,\n",
-                lv_GPIO118_MODE,lv_GPIO118_DIR,lv_GPIO118_DOUT);
-
-
 			//thermal_clrl(GPIO118_MODE,0x00000E00);//clear GPIO118_MODE[11:9]
 			//thermal_setl(GPIO118_DIR, 0x00000040);//set GPIO118_DIR[6]=1
 			thermal_clrl(GPIO118_DOUT,0x00000040);//set GPIO118_DOUT[6]=0 Low
@@ -2848,7 +2735,6 @@ static ssize_t tscpu_write_GPIO_out(struct file *file, const char __user *buffer
 
         if (!strcmp(TEMP, "TEMP")) {
             g_trigger_temp = valTEMP;
-            tscpu_printk("g_trigger_temp=%d\n",valTEMP);
         }else{
 			tscpu_printk("tscpu_write_GPIO_out TEMP bad argument\n");
             return -EINVAL;
@@ -2856,7 +2742,6 @@ static ssize_t tscpu_write_GPIO_out(struct file *file, const char __user *buffer
 
         if (!strcmp(ENABLE, "ENABLE")) {
             g_GPIO_out_enable = valENABLE;
-            tscpu_printk("g_GPIO_out_enable=%d,g_GPIO_already_set=%d\n",valENABLE,g_GPIO_already_set);
         }else{
 			tscpu_printk("tscpu_write_GPIO_out ENABLE bad argument\n");
             return -EINVAL;
@@ -2962,7 +2847,6 @@ static ssize_t tscpu_talking_flag_write(struct file *file, const char __user *bu
 	if (sscanf(desc, "%d", &lv_talking_flag) == 1)
 	{
 		talking_flag = lv_talking_flag;
-		tscpu_dprintk("tscpu_talking_flag_write talking_flag=%d\n", talking_flag);
 		return count;
 	}
 	else
@@ -2995,15 +2879,11 @@ static ssize_t tscpu_set_temperature_write(struct file *file, const char __user
 	}
 	desc[len] = '\0';
 
-	tscpu_dprintk("tscpu_set_temperature_write\n");
-
 	if (sscanf(desc, "%d", &lv_tempe_switch) == 1)
 	{
 		temperature_switch = lv_tempe_switch;
 
 		tscpu_config_all_tc_hw_protect(temperature_switch, tc_mid_trip);
-
-		tscpu_dprintk("tscpu_set_temperature_write temperature_switch=%d\n", temperature_switch);
 		return count;
 	}
 	else
@@ -3202,8 +3082,6 @@ static ssize_t tscpu_write_dtm_setting(struct file *file, const char __user *buf
 
 	if (9 <= sscanf(desc, "%d %d %d %d %d %d %d %d %d", &i_id, &i_first_step, &i_theta_r, &i_theta_f, &i_budget_change, &i_min_cpu_pwr, &i_max_cpu_pwr, &i_min_gpu_pwr, &i_max_gpu_pwr))
 	{
-        tscpu_printk("tscpu_write_dtm_setting input %d %d %d %d %d %d %d %d %d\n", i_id, i_first_step, i_theta_r, i_theta_f, i_budget_change, i_min_cpu_pwr, i_max_cpu_pwr, i_min_gpu_pwr, i_max_gpu_pwr);
-
         if (i_id >= 0 && i_id < MAX_CPT_ADAPTIVE_COOLERS)
         {
             if (i_first_step>0) FIRST_STEP_TOTAL_POWER_BUDGETS[i_id] = i_first_step;
@@ -3217,7 +3095,6 @@ static ssize_t tscpu_write_dtm_setting(struct file *file, const char __user *buf
 
             active_adp_cooler = i_id;
 
-            tscpu_printk("tscpu_write_dtm_setting applied %d %d %d %d %d %d %d %d %d\n", i_id, FIRST_STEP_TOTAL_POWER_BUDGETS[i_id], PACKAGE_THETA_JA_RISES[i_id], PACKAGE_THETA_JA_FALLS[i_id], MINIMUM_BUDGET_CHANGES[i_id], MINIMUM_CPU_POWERS[i_id], MAXIMUM_CPU_POWERS[i_id], MINIMUM_GPU_POWERS[i_id], MAXIMUM_GPU_POWERS[i_id]);
         }
         else
         {
@@ -3265,14 +3142,10 @@ static ssize_t tscpu_write_gpu_threshold(struct file *file, const char __user *b
 
 	if (2 <= sscanf(desc, "%d %d", &gpu_h, &gpu_l))
 	{
-        tscpu_printk("tscpu_write_gpu_threshold input %d %d\n", gpu_h, gpu_l);
-
         if ((gpu_h > 0) && (gpu_l > 0) && (gpu_h > gpu_l))
         {
             GPU_L_H_TRIP = gpu_h;
             GPU_L_L_TRIP = gpu_l;
-
-            tscpu_printk("tscpu_write_gpu_threshold applied %d %d\n", GPU_L_H_TRIP, GPU_L_L_TRIP);
         }
         else
         {
@@ -3315,8 +3188,6 @@ static ssize_t tscpu_write_thp(struct file *file, const char __user *buffer, siz
 
 	if (4 <= sscanf(desc, "%d %d %d %d", &tpcb_coef, &tpcb_trip, &thp_coef, &thp_threshold))
 	{
-        tscpu_printk("%s input %d %d\n", __func__, tpcb_coef, tpcb_trip, thp_coef, thp_threshold);
-
         p_Tpcb_correlation = tpcb_coef;
         Tpcb_trip_point = tpcb_trip;
         thp_p_tj_correlation = thp_coef;
@@ -3326,7 +3197,6 @@ static ssize_t tscpu_write_thp(struct file *file, const char __user *buffer, siz
 	}
 	else
 	{
-		tscpu_dprintk("%s bad argument\n", __func__);
 	}
 	return -EINVAL;
 }
@@ -3368,10 +3238,6 @@ static ssize_t tscpu_write_ctm(struct file *file, const char __user *buffer, siz
 	                , &t_MAX_TARGET_TJ, &t_STEADY_TARGET_TJ, &t_TRIP_TPCB, &t_STEADY_TARGET_TPCB
 	                , &t_MAX_EXIT_TJ, &t_STEADY_EXIT_TJ, &t_COEF_AE, &t_COEF_BE, &t_COEF_AX, &t_COEF_BX))
 	{
-        tscpu_printk("%s input %d %d %d %d %d %d %d %d %d %d %d\n", __func__, t_ctm_on,
-                    t_MAX_TARGET_TJ, t_STEADY_TARGET_TJ, t_TRIP_TPCB, t_STEADY_TARGET_TPCB,
-                    t_MAX_EXIT_TJ, t_STEADY_EXIT_TJ, t_COEF_AE, t_COEF_BE, t_COEF_AX, t_COEF_BX);
-
         // no parameter checking here
         ctm_on = t_ctm_on; // 1: on, 0: off
 
@@ -3422,25 +3288,19 @@ static ssize_t tscpu_write_fastpoll(struct file *file, const char __user *buffer
 
 	if (2 <= sscanf(desc, "%d %d", &trip, &factor))
 	{
-        tscpu_printk("tscpu_write_fastpoll input %d %d\n", trip, factor);
-
         if ((trip >= 0) && (factor > 0))
         {
             fast_polling_trip_temp = trip;
             fast_polling_factor = factor;
-
-            tscpu_printk("tscpu_write_fastpoll applied %d %d\n", fast_polling_trip_temp, fast_polling_factor);
         }
         else
         {
-            tscpu_dprintk("tscpu_write_fastpoll out of range\n");
         }
 
 		return count;
 	}
 	else
 	{
-		tscpu_dprintk("tscpu_write_fastpoll bad argument\n");
 	}
 	return -EINVAL;
 }
@@ -3475,8 +3335,6 @@ static ssize_t tscpu_write(struct file *file, const char __user *buffer, size_t
 				&time_msec, &MA_len_temp) == 33)
 	{
 
-		tscpu_dprintk("tscpu_write tscpu_unregister_thermal MA_len_temp=%d\n",MA_len_temp);
-
 		/*	modify for PTPOD, if disable Thermal,
 			PTPOD still need to use this function for getting temperature
 		*/
@@ -3560,17 +3418,8 @@ static ssize_t tscpu_write(struct file *file, const char __user *buffer, size_t
 			TARGET_TJS[(bind9[13] - '0')] = trip[9];
 		}
 
-		tscpu_dprintk("tscpu_write TTJ0=%d, TTJ1=%d, TTJ2=%d\n", TARGET_TJS[0], TARGET_TJS[1], TARGET_TJS[2]);
 #endif
 
-		tscpu_dprintk("tscpu_write g_THERMAL_TRIP_0=%d,g_THERMAL_TRIP_1=%d,g_THERMAL_TRIP_2=%d,g_THERMAL_TRIP_3=%d,g_THERMAL_TRIP_4=%d,\
-				g_THERMAL_TRIP_5=%d,g_THERMAL_TRIP_6=%d,g_THERMAL_TRIP_7=%d,g_THERMAL_TRIP_8=%d,g_THERMAL_TRIP_9=%d,\n",
-				g_THERMAL_TRIP[0],g_THERMAL_TRIP[1],g_THERMAL_TRIP[2],g_THERMAL_TRIP[3],g_THERMAL_TRIP[4],
-				g_THERMAL_TRIP[5],g_THERMAL_TRIP[6],g_THERMAL_TRIP[7],g_THERMAL_TRIP[8],g_THERMAL_TRIP[9]);
-		tscpu_dprintk("tscpu_write cooldev0=%s,cooldev1=%s,cooldev2=%s,cooldev3=%s,cooldev4=%s,\
-				cooldev5=%s,cooldev6=%s,cooldev7=%s,cooldev8=%s,cooldev9=%s\n",
-				g_bind0,g_bind1,g_bind2,g_bind3,g_bind4,g_bind5,g_bind6,g_bind7,g_bind8,g_bind9);
-
 		for(i=0; i<num_trip; i++)
 		{
 			trip_temp[i]=trip[i];
@@ -3578,12 +3427,6 @@ static ssize_t tscpu_write(struct file *file, const char __user *buffer, size_t
 
 		interval=time_msec;
 
-		tscpu_dprintk("tscpu_write trip_0_temp=%d,trip_1_temp=%d,trip_2_temp=%d,trip_3_temp=%d,trip_4_temp=%d,\
-				trip_5_temp=%d,trip_6_temp=%d,trip_7_temp=%d,trip_8_temp=%d,trip_9_temp=%d,time_ms=%d, num_trip=%d\n",
-				trip_temp[0],trip_temp[1],trip_temp[2],trip_temp[3],trip_temp[4],
-				trip_temp[5],trip_temp[6],trip_temp[7],trip_temp[8],trip_temp[9],interval, num_trip);
-
-
 		//get temp, set high low threshold
 /*
         curr_temp = get_immediate_temp();
@@ -3601,7 +3444,6 @@ static ssize_t tscpu_write(struct file *file, const char __user *buffer, size_t
 		else
 			set_high_low_threshold(trip_temp[i-1], trip_temp[i]);
 */
-		tscpu_dprintk("tscpu_write tscpu_register_thermal\n");
 		tscpu_register_thermal();
 
 		proc_write_flag=1;
@@ -3623,7 +3465,6 @@ int tscpu_register_DVFS_hotplug_cooler(void)
 
 	int i;
 
-	tscpu_dprintk("tscpu_register_DVFS_hotplug_cooler\n");
 	for(i=0; i<Num_of_OPP; i++)
 	{
 		cl_dev[i] = mtk_thermal_cooling_device_register(&cooler_name[i*20], NULL,
@@ -3649,8 +3490,6 @@ int tscpu_register_DVFS_hotplug_cooler(void)
 int tscpu_register_thermal(void)
 {
 
-	tscpu_dprintk("tscpu_register_thermal\n");
-
 	/* trips : trip 0~3 */
 	thz_dev = mtk_thermal_zone_device_register("mtktscpu", num_trip, NULL,
 				&mtktscpu_dev_ops, 0, 0, 0, interval);
@@ -3698,7 +3537,6 @@ void tscpu_unregister_DVFS_hotplug_cooler(void)
 void tscpu_unregister_thermal(void)
 {
 
-	tscpu_dprintk("tscpu_unregister_thermal\n");
 	if(thz_dev) {
 		mtk_thermal_zone_device_unregister(thz_dev);
 		thz_dev = NULL;
@@ -3795,7 +3633,6 @@ static int tscpu_thermal_suspend(struct platform_device *dev, pm_message_t state
     int cnt=0;
     int temp=0;
 
-	tscpu_printk("tscpu_thermal_suspend\n");
 #if THERMAL_PERFORMANCE_PROFILE
 	struct timeval begin, end;
 	unsigned long val;
@@ -3807,8 +3644,6 @@ static int tscpu_thermal_suspend(struct platform_device *dev, pm_message_t state
 
     if(talking_flag==false)
     {
-    	tscpu_dprintk("tscpu_thermal_suspend no talking\n");
-
 		#if (CONFIG_THERMAL_AEE_RR_REC== 1)
 		aee_rr_rec_thermal_status(TSCPU_SUSPEND);
         #endif
@@ -3816,8 +3651,6 @@ static int tscpu_thermal_suspend(struct platform_device *dev, pm_message_t state
         while(cnt < 50)
 		{
 			temp = (DRV_Reg32(THAHBST0) >> 16);
-			if(cnt>10)
-	            printk(KERN_CRIT "THAHBST0 = 0x%x,cnt=%d, %d\n", temp,cnt,__LINE__);
             if(temp == 0x0){
                 // pause all periodoc temperature sensing point 0~2
 				thermal_pause_all_periodoc_temp_sensing();//TEMPMSRCTL1
@@ -3842,7 +3675,6 @@ static int tscpu_thermal_suspend(struct platform_device *dev, pm_message_t state
 do_gettimeofday(&end);
 
 // Get milliseconds
-printk("suspend time spent, sec : %lu , usec : %lu \n", (end.tv_sec - begin.tv_sec), (end.tv_usec - begin.tv_usec));
 #endif
 	return 0;
 }
@@ -3852,7 +3684,6 @@ static int tscpu_thermal_resume(struct platform_device *dev)
 {
 	int temp=0;
 	int cnt=0;
-	tscpu_printk("tscpu_thermal_resume\n");
 
 	g_tc_resume = 1;//set "1", don't read temp during start resume
 
@@ -3877,8 +3708,6 @@ static int tscpu_thermal_resume(struct platform_device *dev)
         while(cnt < 50)
 		{
 			temp = (DRV_Reg32(THAHBST0) >> 16);
-			if(cnt>10)
-	            printk(KERN_CRIT "THAHBST0 = 0x%x,cnt=%d, %d\n", temp,cnt,__LINE__);
             if(temp == 0x0){
                 // pause all periodoc temperature sensing point 0~2
 				thermal_pause_all_periodoc_temp_sensing();//TEMPMSRCTL1
@@ -3966,8 +3795,6 @@ static int ktp_thread(void *arg)
     sched_setscheduler(current, SCHED_FIFO, &param);
     set_current_state(TASK_INTERRUPTIBLE);
 
-    tscpu_printk("ktp_thread 1st run\n");
-
 
     schedule();
 
@@ -3976,7 +3803,6 @@ static int ktp_thread(void *arg)
         int temp_tc_mid_trip = tc_mid_trip;
         int temp_ktp_limited = ktp_limited;
 
-	    tscpu_printk("ktp_thread awake,tc_mid_trip=%d\n",tc_mid_trip);
 	    if (kthread_should_stop()) break;
 
 
@@ -3984,12 +3810,10 @@ static int ktp_thread(void *arg)
         bank0_T = max_temperature();
 	    max_temp   = bank0_T;
 
-	    tscpu_printk("ktp_thread temp=%d\n", max_temp);
 
 	    if ((temp_tc_mid_trip > -275000) && (max_temp >= (temp_tc_mid_trip-5000))) // trip_temp[1] should be shutdown point...
         {
             // Do what ever we want
-            tscpu_printk("ktp_thread overheat %d\n", max_temp);
 
             // freq/volt down or cpu down or backlight down or charging down...
             mt_cpufreq_thermal_protect(600);//D1 max~1600mW,min~600
@@ -4003,12 +3827,10 @@ static int ktp_thread(void *arg)
         {
             unsigned int final_limit;
             final_limit = MIN(static_cpu_power_limit, adaptive_cpu_power_limit);
-            tscpu_printk("ktp_thread unlimit cpu=%d\n", final_limit);
             mt_cpufreq_thermal_protect((final_limit != 0x7FFFFFFF) ? final_limit : 0);
 
 
             final_limit = MIN(static_gpu_power_limit, adaptive_gpu_power_limit);
-            tscpu_printk("ktp_thread unlimit gpu=%d\n", final_limit);
             mt_gpufreq_thermal_protect((final_limit != 0x7FFFFFFF) ? final_limit : 0);
 
             ktp_limited = -275000;
@@ -4018,13 +3840,11 @@ static int ktp_thread(void *arg)
         }
         else
         {
-            tscpu_printk("ktp_thread else temp=%d, trip=%d, ltd=%d\n", max_temp, temp_tc_mid_trip, temp_ktp_limited);
             set_current_state(TASK_INTERRUPTIBLE);
             schedule();
         }
 	}
 
-	tscpu_printk("ktp_thread stopped\n");
 
     return 0;
 }
@@ -4295,8 +4115,6 @@ static void tscpu_config_all_tc_hw_protect( int temperature, int temperature2)
 	unsigned long flags;
 	struct wd_api *wd_api;
 
-    tscpu_dprintk( "tscpu_config_all_tc_hw_protect,temperature=%d,temperature2=%d,\n",temperature,temperature2);
-
 #if THERMAL_PERFORMANCE_PROFILE
 	struct timeval begin, end;
 	unsigned long val;
@@ -4311,7 +4129,6 @@ static void tscpu_config_all_tc_hw_protect( int temperature, int temperature2)
     if(wd_api_ret >=0 ){
 		wd_api->wd_thermal_direct_mode_config(WD_REQ_DIS, WD_REQ_RST_MODE);//reset mode
 	}else{
-		tscpu_printk("%d FAILED TO GET WD API\n",__LINE__);
         BUG();
     }
 
@@ -4319,7 +4136,6 @@ static void tscpu_config_all_tc_hw_protect( int temperature, int temperature2)
 do_gettimeofday(&end);
 
 // Get milliseconds
-printk("resume time spent, sec : %lu , usec : %lu \n", (end.tv_sec - begin.tv_sec), (end.tv_usec - begin.tv_usec));
 #endif
 
 	mt_ptp_lock(&flags);
@@ -4441,7 +4257,6 @@ static enum hrtimer_restart tscpu_update_tempinfo(struct hrtimer *timer)
 	//a_tscpu_all_temp[1]=GPU_TS_MCU1_T; //Bank1:	SOC + GPU	(TSMCU1)
 	//a_tscpu_all_temp[2]=LTE_TS_MCU3_T; //Bank2:	LTE			(TSMCU3)
 
-    tscpu_dprintk("tscpu_get_temp %s, %d\n",__func__, __LINE__);
     for (i=0;i<TS_LEN_ARRAY(g_bank);i++) {
         a_tscpu_all_temp[i] = max_temperature_in_bank(i);
     }
@@ -4478,9 +4293,6 @@ static void tscpu_update_temperature_timer_init(void)
 {
 	ktime_t ktime;
 
-
-	tscpu_printk("tscpu_update_temperature_timer_init \n");
-
 	ktime = ktime_set(0, g_hr_timer_polling_delay);
 
 	hrtimer_init(&ts_tempinfo_hrtimer, CLOCK_MONOTONIC, HRTIMER_MODE_REL);
@@ -4511,8 +4323,6 @@ void tscpu_pause_tc(void)
 	    while(cnt < 50)
 		{
 			temp = (DRV_Reg32(THAHBST0) >> 16);
-			if(cnt>10)
-	            printk(KERN_CRIT "THAHBST0 = 0x%x,cnt=%d, %d\n", temp,cnt,__LINE__);
 	        if(temp == 0x0){
 	            // pause all periodoc temperature sensing point 0~2
 				thermal_pause_all_periodoc_temp_sensing();//TEMPMSRCTL1
@@ -4520,7 +4330,6 @@ void tscpu_pause_tc(void)
 	        }
             else
             {
-				printk(KERN_CRIT "1 THAHBST0 = 0x%x, %d\n", temp,__LINE__);
 			}
 	        udelay(2);
 	        cnt++;
@@ -4559,8 +4368,6 @@ void tscpu_release_tc(void)
         while(cnt < 50)
 		{
 			temp = (DRV_Reg32(THAHBST0) >> 16);
-			if(cnt>10)
-	            printk(KERN_CRIT "THAHBST0 = 0x%x,cnt=%d, %d\n", temp,cnt,__LINE__);
             if(temp == 0x0){
                 // pause all periodoc temperature sensing point 0~2
 				thermal_pause_all_periodoc_temp_sensing();//TEMPMSRCTL1
@@ -4826,7 +4633,6 @@ static int get_io_reg_base(void)
 
 	/*get thermal irq num*/
     thermal_irq_number = irq_of_parse_and_map(node, 0);
-    printk("[THERM_CTRL] thermal_irq_number=%d\n",thermal_irq_number);
 	if (!thermal_irq_number) {
 		printk("[THERM_CTRL] get irqnr failed=%d\n",thermal_irq_number);
 		return 0;
@@ -4888,7 +4694,6 @@ const long tscpu_dev_alloc_module_base_by_name(const char* name)
         return 0;
     }
     VA = (unsigned long)of_iomap(node, 0);
-    printk("DEV: VA(%s): 0x%lx\n", name, VA);
 
     return VA;
 }
@@ -4944,8 +4749,6 @@ static void init_thermal(void)
     while(cnt < 50)
 	{
 		temp = (DRV_Reg32(THAHBST0) >> 16);
-		if(cnt>10)
-            printk(KERN_CRIT "THAHBST0 = 0x%x,cnt=%d, %d\n", temp,cnt,__LINE__);
         if(temp == 0x0){
             // pause all periodoc temperature sensing point 0~2
 			thermal_pause_all_periodoc_temp_sensing();//TEMPMSRCTL1
@@ -5096,9 +4899,6 @@ static int __init tscpu_init(void)
 {
 	int err = 0;
 
-	tscpu_printk("tscpu_init\n");
-
-
 	tscpu_thermal_clock_on();
 	if(get_io_reg_base() == 0) {
         return 0;
@@ -5108,11 +4908,9 @@ static int __init tscpu_init(void)
 
 #if MTK_TS_CPU_RT
     {
-    	tscpu_printk("mtktscpu_register_thermal creates kthermp\n");
         ktp_thread_handle = kthread_create(ktp_thread, (void *) NULL, "kthermp");
         if (IS_ERR(ktp_thread_handle)) {
 			ktp_thread_handle = NULL;
-			tscpu_printk("mtktscpu_register_thermal kthermp creation fails\n");
 		    goto err_unreg;
 		}
 		wake_up_process(ktp_thread_handle);
@@ -5121,12 +4919,8 @@ static int __init tscpu_init(void)
 
 #ifdef CONFIG_OF
     err = request_irq(thermal_irq_number, thermal_all_bank_interrupt_handler, IRQF_TRIGGER_LOW, THERMAL_NAME, NULL);
-	if(err)
-		tscpu_printk("tscpu_init IRQ register fail\n");
 #else
     err = request_irq(THERM_CTRL_IRQ_BIT_ID, thermal_all_bank_interrupt_handler, IRQF_TRIGGER_LOW, THERMAL_NAME, NULL);
-	if(err)
-		tscpu_printk("tscpu_init IRQ register fail\n");
 #endif
 
 	tscpu_config_all_tc_hw_protect(trip_temp[0], tc_mid_trip);
@@ -5165,8 +4959,6 @@ static int __init tscpu_init(void)
 static void __exit tscpu_exit(void)
 {
 
-	tscpu_dprintk("tscpu_exit\n");
-
 #if MTK_TS_CPU_RT
 	if (ktp_thread_handle)
     	kthread_stop(ktp_thread_handle);
diff --git a/drivers/misc/mediatek/thermal/mt6580/mtk_ts_pa.c b/drivers/misc/mediatek/thermal/mt6580/mtk_ts_pa.c
index ca54d050f..0368f4e0a 100644
--- a/drivers/misc/mediatek/thermal/mt6580/mtk_ts_pa.c
+++ b/drivers/misc/mediatek/thermal/mt6580/mtk_ts_pa.c
@@ -89,16 +89,13 @@ static int mtktspa_get_hw_temp(void)
 	mtk_mdm_get_md_info(&p_info, &size);
 	for(i=0; i<size; i++)
 	{
-		mtktspa_dprintk("PA temperature: name:%s, vaule:%d, invalid_value=%d \n",p_info[i].attribute, p_info[i].value, p_info[i].invalid_value);
 		if(!strcmp(p_info[i].attribute, "RFTEMP_2G_MD1"))
 		{
-			mtktspa_dprintk("PA temperature: RFTEMP_2G_MD1\n");
 			if(p_info[i].value != p_info[i].invalid_value)
 				break;
 		}
 		else if(!strcmp(p_info[i].attribute, "RFTEMP_3G_MD1"))
 		{
-			mtktspa_dprintk("PA temperature: RFTEMP_3G_MD1\n");
 			if(p_info[i].value != p_info[i].invalid_value)
 				break;
 		}
@@ -106,16 +103,11 @@ static int mtktspa_get_hw_temp(void)
 
 	if(i==size)
 	{
-		mtktspa_dprintk("PA temperature: not ready\n");
 		mutex_unlock(&TSPA_lock);
 		return -127000;
 	}
 	else
 	{
-		mtktspa_dprintk("PA temperature: %d\n",p_info[i].value);
-
-		if((p_info[i].value>100000) || (p_info[i].value<-30000))
-			printk("[Power/PA_Thermal] PA T=%d\n",p_info[i].value);
 		mutex_unlock(&TSPA_lock);
 		return (p_info[i].value);
 	}
@@ -145,52 +137,42 @@ static int mtktspa_bind(struct thermal_zone_device *thermal,
 	if(!strcmp(cdev->type, g_bind0))
 	{
 		table_val = 0;
-		mtktspa_dprintk("[mtktspa_bind] %s\n", cdev->type);
 	}
 	else if(!strcmp(cdev->type, g_bind1))
 	{
 		table_val = 1;
-		mtktspa_dprintk("[mtktspa_bind] %s\n", cdev->type);
 	}
 	else if(!strcmp(cdev->type, g_bind2))
 	{
 		table_val = 2;
-		mtktspa_dprintk("[mtktspa_bind] %s\n", cdev->type);
 	}
 	else if(!strcmp(cdev->type, g_bind3))
 	{
 		table_val = 3;
-		mtktspa_dprintk("[mtktspa_bind] %s\n", cdev->type);
 	}
 	else if(!strcmp(cdev->type, g_bind4))
 	{
 		table_val = 4;
-		mtktspa_dprintk("[mtktspa_bind] %s\n", cdev->type);
 	}
 	else if(!strcmp(cdev->type, g_bind5))
 	{
 		table_val = 5;
-		mtktspa_dprintk("[mtktspa_bind] %s\n", cdev->type);
 	}
 	else if(!strcmp(cdev->type, g_bind6))
 	{
 		table_val = 6;
-		mtktspa_dprintk("[mtktspa_bind] %s\n", cdev->type);
 	}
 	else if(!strcmp(cdev->type, g_bind7))
 	{
 		table_val = 7;
-		mtktspa_dprintk("[mtktspa_bind] %s\n", cdev->type);
 	}
 	else if(!strcmp(cdev->type, g_bind8))
 	{
 		table_val = 8;
-		mtktspa_dprintk("[mtktspa_bind] %s\n", cdev->type);
 	}
 	else if(!strcmp(cdev->type, g_bind9))
 	{
 		table_val = 9;
-		mtktspa_dprintk("[mtktspa_bind] %s\n", cdev->type);
 	}
 	else
 		return 0;
@@ -203,7 +185,6 @@ static int mtktspa_bind(struct thermal_zone_device *thermal,
 	}
 	else
 	{
-		mtktspa_dprintk("[mtktspa_bind] binding OK\n");
 	}
 
 	return 0;
@@ -217,52 +198,42 @@ static int mtktspa_unbind(struct thermal_zone_device *thermal,
 	if(!strcmp(cdev->type, g_bind0))
 	{
 		table_val = 0;
-		mtktspa_dprintk("[mtktspa_unbind] %s\n", cdev->type);
 	}
 	else if(!strcmp(cdev->type, g_bind1))
 	{
 		table_val = 1;
-		mtktspa_dprintk("[mtktspa_unbind] %s\n", cdev->type);
 	}
 	else if(!strcmp(cdev->type, g_bind2))
 	{
 		table_val = 2;
-		mtktspa_dprintk("[mtktspa_unbind] %s\n", cdev->type);
 	}
 	else if(!strcmp(cdev->type, g_bind3))
 	{
 		table_val = 3;
-		mtktspa_dprintk("[mtktspa_unbind] %s\n", cdev->type);
 	}
 	else if(!strcmp(cdev->type, g_bind4))
 	{
 		table_val = 4;
-		mtktspa_dprintk("[mtktspa_unbind] %s\n", cdev->type);
 	}
 	else if(!strcmp(cdev->type, g_bind5))
 	{
 		table_val = 5;
-		mtktspa_dprintk("[mtktspa_unbind] %s\n", cdev->type);
 	}
 	else if(!strcmp(cdev->type, g_bind6))
 	{
 		table_val = 6;
-		mtktspa_dprintk("[mtktspa_unbind] %s\n", cdev->type);
 	}
 	else if(!strcmp(cdev->type, g_bind7))
 	{
 		table_val = 7;
-		mtktspa_dprintk("[mtktspa_unbind] %s\n", cdev->type);
 	}
 	else if(!strcmp(cdev->type, g_bind8))
 	{
 		table_val = 8;
-		mtktspa_dprintk("[mtktspa_unbind] %s\n", cdev->type);
 	}
 	else if(!strcmp(cdev->type, g_bind9))
 	{
 		table_val = 9;
-		mtktspa_dprintk("[mtktspa_unbind] %s\n", cdev->type);
 	}
 	else
 		return 0;
@@ -274,7 +245,6 @@ static int mtktspa_unbind(struct thermal_zone_device *thermal,
 	}
 	else
 	{
-		mtktspa_dprintk("[mtktspa_unbind] unbinding OK\n");
 	}
 
 	return 0;
@@ -352,9 +322,6 @@ static int tspa_sysrst_set_cur_state(struct thermal_cooling_device *cdev,
 	if(cl_dev_sysrst_state == 1)
 	{
 		printk("Power/PA_Thermal: reset, reset, reset!!!");
-		printk("@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@");
-		printk("*****************************************");
-		printk("@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@");
 
 //		BUG();
 		*(unsigned int*) 0x0 = 0xdead; // To trigger data abort to reset the system for thermal protection.
@@ -417,7 +384,6 @@ static ssize_t mtktspa_write(struct file *file, const char __user *buffer, size_
 				&trip[8],&t_type[8],bind8, &trip[9],&t_type[9],bind9,
 				&time_msec) == 32)
 	{
-		mtktspa_dprintk("[mtktspa_write] mtktspa_unregister_thermal\n");
 		mtktspa_unregister_thermal();
 
 		for(i=0; i<num_trip; i++)
@@ -439,14 +405,6 @@ static ssize_t mtktspa_write(struct file *file, const char __user *buffer, size_
 			g_bind9[i]=bind9[i];
 		}
 
-		mtktspa_dprintk("[mtktspa_write] g_THERMAL_TRIP_0=%d,g_THERMAL_TRIP_1=%d,g_THERMAL_TRIP_2=%d,g_THERMAL_TRIP_3=%d,g_THERMAL_TRIP_4=%d,\
-g_THERMAL_TRIP_5=%d,g_THERMAL_TRIP_6=%d,g_THERMAL_TRIP_7=%d,g_THERMAL_TRIP_8=%d,g_THERMAL_TRIP_9=%d,\n",
-				g_THERMAL_TRIP[0],g_THERMAL_TRIP[1],g_THERMAL_TRIP[2],g_THERMAL_TRIP[3],g_THERMAL_TRIP[4],
-				g_THERMAL_TRIP[5],g_THERMAL_TRIP[6],g_THERMAL_TRIP[7],g_THERMAL_TRIP[8],g_THERMAL_TRIP[9]);
-	mtktspa_dprintk("[mtktspa_write] cooldev0=%s,cooldev1=%s,cooldev2=%s,cooldev3=%s,cooldev4=%s,\
-cooldev5=%s,cooldev6=%s,cooldev7=%s,cooldev8=%s,cooldev9=%s\n",
-				g_bind0,g_bind1,g_bind2,g_bind3,g_bind4,g_bind5,g_bind6,g_bind7,g_bind8,g_bind9);
-
 		for(i=0; i<num_trip; i++)
 		{
 			trip_temp[i]=trip[i];
@@ -454,12 +412,6 @@ cooldev5=%s,cooldev6=%s,cooldev7=%s,cooldev8=%s,cooldev9=%s\n",
 
 		interval=time_msec / 1000;
 
-		mtktspa_dprintk("[mtktspa_write] trip_0_temp=%d,trip_1_temp=%d,trip_2_temp=%d,trip_3_temp=%d,trip_4_temp=%d,\
-trip_5_temp=%d,trip_6_temp=%d,trip_7_temp=%d,trip_8_temp=%d,trip_9_temp=%d,time_ms=%d\n",
-				trip_temp[0],trip_temp[1],trip_temp[2],trip_temp[3],trip_temp[4],
-				trip_temp[5],trip_temp[6],trip_temp[7],trip_temp[8],trip_temp[9],interval*1000);
-
-		mtktspa_dprintk("[mtktspa_write] mtktspa_register_thermal\n");
 		mtktspa_register_thermal();
 
 		return count;
@@ -520,8 +472,6 @@ int mtktspa_register_cooler(void)
 
 int mtktspa_register_thermal(void)
 {
-	mtktspa_dprintk("[mtktspa_register_thermal] \n");
-
     /* trips */
 	thz_dev = mtk_thermal_zone_device_register("mtktspa", num_trip, NULL,
 		&mtktspa_dev_ops, 0, 0, 0, interval*1000);
@@ -542,8 +492,6 @@ void mtktspa_unregister_cooler(void)
 
 void mtktspa_unregister_thermal(void)
 {
-	mtktspa_dprintk("[mtktspa_unregister_thermal] \n");
-
 	if (thz_dev)
 	{
 		mtk_thermal_zone_device_unregister(thz_dev);
@@ -557,8 +505,6 @@ static int __init mtktspa_init(void)
 	struct proc_dir_entry *entry = NULL;
 	struct proc_dir_entry *mtktspa_dir = NULL;
 
-    mtktspa_dprintk("[%s]\n", __func__);
-
 	err = mtktspa_register_cooler();
 	if(err)
 		return err;
@@ -593,7 +539,6 @@ err_unreg:
 
 static void __exit mtktspa_exit(void)
 {
-	mtktspa_dprintk("[mtktspa_exit] \n");
 	mtktspa_unregister_thermal();
 	mtktspa_unregister_cooler();
 }
diff --git a/drivers/misc/mediatek/thermal/mt6580/mtk_ts_pmic.c b/drivers/misc/mediatek/thermal/mt6580/mtk_ts_pmic.c
index afac1937c..8dd956270 100644
--- a/drivers/misc/mediatek/thermal/mt6580/mtk_ts_pmic.c
+++ b/drivers/misc/mediatek/thermal/mt6580/mtk_ts_pmic.c
@@ -92,11 +92,8 @@ void mtktspmic_read_efuse(void)
 
 	U32 efuse_val0, efuse_val1;
 
-	mtktspmic_info("[mtktspmic_read_efuse] start\n");
-
 	//1. enable RD trig bit
 	pmic_config_interface(0x0608, 0x1, 0x1, 0);
-	mtktspmic_info("PMIC_Debug %d\n",__LINE__);
 
 	//2. read thermal efuse
 	//0x063A    160  175
@@ -104,7 +101,6 @@ void mtktspmic_read_efuse(void)
 	//Thermal data from 161 to 184
 	pmic_read_interface(0x063A, &efuse_val0, 0xFFFF, 0);
 	pmic_read_interface(0x063C, &efuse_val1, 0xFFFF, 0);
-	mtktspmic_info("PMIC_Debug %d\n",__LINE__);
 
 	//3. polling RD busy bit
 /*	do {
@@ -113,7 +109,6 @@ void mtktspmic_read_efuse(void)
 	} while(reg_val == 1);
 	mtktspmic_info("PMIC_Debug %d\n",__LINE__);
 */
-	mtktspmic_info("[mtktspmic_read_efuse] Reg(0x63a) = 0x%x, Reg(0x63c) = 0x%x\n", efuse_val0, efuse_val1);
 
 	//4. parse thermal parameters
 	g_adc_cali_en = (efuse_val0 >> 1) & 0x0001;
@@ -123,14 +118,12 @@ void mtktspmic_read_efuse(void)
 	g_o_slope = (((efuse_val1 >> 11) & 0x0007) << 3) + ((efuse_val1 >> 6) & 0x007);
 	g_id = (efuse_val1 >> 14) & 0x0001;
 
-	mtktspmic_info("[mtktspmic_read_efuse] done\n");
 }
 
 static void pmic_cali_prepare(void)
 {
     mtktspmic_read_efuse();
 
-	mtktspmic_info("PMIC_Debug %d\n",__LINE__);
     if(g_id==0)
         g_o_slope=0;
 
@@ -140,13 +133,6 @@ static void pmic_cali_prepare(void)
         g_o_slope = 0;
         g_o_slope_sign = 0;
     }
-
-    mtktspmic_info("g_adc_cali_en = 0x%x\n", g_adc_cali_en);
-    mtktspmic_info("g_degc_cali = 0x%x\n", g_degc_cali);
-    mtktspmic_info("g_o_vts = 0x%x\n", g_o_vts);
-    mtktspmic_info("g_o_slope_sign = 0x%x\n", g_o_slope_sign);
-    mtktspmic_info("g_o_slope = 0x%x\n", g_o_slope);
-    mtktspmic_info("g_id = 0x%x\n", g_id);
 }
 
 static void pmic_cali_prepare2(void)
@@ -168,9 +154,6 @@ static void pmic_cali_prepare2(void)
         g_intercept = (vbe_t * 100) / (-(171-g_o_slope));  //0.001 degree
 
     g_intercept = g_intercept + (g_degc_cali*(1000/2)); // 1000 is for 0.1 degree
-
-    mtktspmic_info("[Thermal calibration] SLOPE1=%d SLOPE2=%d INTERCEPT=%d, Vbe = %d\n",
-		g_slope1, g_slope2, g_intercept,vbe_t);
 }
 
 static kal_int32 pmic_raw_to_temp(kal_uint32 ret)
@@ -179,7 +162,6 @@ static kal_int32 pmic_raw_to_temp(kal_uint32 ret)
 
     kal_int32 t_current;
     t_current = g_intercept + ((g_slope1 * y_curr) / (g_slope2));
-    mtktspmic_dbg("[pmic_raw_to_temp] t_current=%d\n",t_current);
 
     return t_current;
 }
@@ -197,11 +179,6 @@ static int mtktspmic_get_hw_temp(void)
     temp = PMIC_IMM_GetOneChannelValue(3 , y_pmic_repeat_times , 2);
     temp1 = pmic_raw_to_temp(temp);
 
-    mtktspmic_dbg("[mtktspmic_get_hw_temp] Raw=%d, T=%d\n",temp, temp1);
-
-    if((temp1 > 100000) || (temp1 < -30000))
-        mtktspmic_info("[mtktspmic_get_hw_temp] raw=%d, PMIC T=%d", temp, temp1);
-
     if((temp1 > 150000) || (temp1 < -50000)) {
         mtktspmic_err("[mtktspmic_get_hw_temp] temp(%d) too high, drop this data!\n", temp1);
         temp1 = pre_temp1;
@@ -213,7 +190,6 @@ static int mtktspmic_get_hw_temp(void)
     else {
         //update previous temp
         pre_temp1 = temp1;
-        mtktspmic_dbg("[mtktspmic_get_hw_temp] pre_temp1=%d\n", pre_temp1);
 
         if(PMIC_counter==0)
             PMIC_counter++;
@@ -247,52 +223,42 @@ static int mtktspmic_bind(struct thermal_zone_device *thermal,
 	if(!strcmp(cdev->type, g_bind0))
 	{
 		table_val = 0;
-		mtktspmic_dbg("[mtktspmic_bind] %s\n", cdev->type);
 	}
 	else if(!strcmp(cdev->type, g_bind1))
 	{
 		table_val = 1;
-		mtktspmic_dbg("[mtktspmic_bind] %s\n", cdev->type);
 	}
 	else if(!strcmp(cdev->type, g_bind2))
 	{
 		table_val = 2;
-		mtktspmic_dbg("[mtktspmic_bind] %s\n", cdev->type);
 	}
 	else if(!strcmp(cdev->type, g_bind3))
 	{
 		table_val = 3;
-		mtktspmic_dbg("[mtktspmic_bind] %s\n", cdev->type);
 	}
 	else if(!strcmp(cdev->type, g_bind4))
 	{
 		table_val = 4;
-		mtktspmic_dbg("[mtktspmic_bind] %s\n", cdev->type);
 	}
 	else if(!strcmp(cdev->type, g_bind5))
 	{
 		table_val = 5;
-		mtktspmic_dbg("[mtktspmic_bind] %s\n", cdev->type);
 	}
 	else if(!strcmp(cdev->type, g_bind6))
 	{
 		table_val = 6;
-		mtktspmic_dbg("[mtktspmic_bind] %s\n", cdev->type);
 	}
 	else if(!strcmp(cdev->type, g_bind7))
 	{
 		table_val = 7;
-		mtktspmic_dbg("[mtktspmic_bind] %s\n", cdev->type);
 	}
 	else if(!strcmp(cdev->type, g_bind8))
 	{
 		table_val = 8;
-		mtktspmic_dbg("[mtktspmic_bind] %s\n", cdev->type);
 	}
 	else if(!strcmp(cdev->type, g_bind9))
 	{
 		table_val = 9;
-		mtktspmic_dbg("[mtktspmic_bind] %s\n", cdev->type);
 	}
 	else
 	{
@@ -303,7 +269,6 @@ static int mtktspmic_bind(struct thermal_zone_device *thermal,
 		mtktspmic_err("[mtktspmic_bind] error binding cooling dev\n");
 		return -EINVAL;
 	} else {
-		mtktspmic_dbg("[mtktspmic_bind] binding OK, %d\n", table_val);
 	}
 
 	return 0;
@@ -317,52 +282,42 @@ static int mtktspmic_unbind(struct thermal_zone_device *thermal,
 	if(!strcmp(cdev->type, g_bind0))
 	{
 		table_val = 0;
-		mtktspmic_dbg("[mtktspmic_unbind] %s\n", cdev->type);
 	}
 	else if(!strcmp(cdev->type, g_bind1))
 	{
 		table_val = 1;
-		mtktspmic_dbg("[mtktspmic_unbind] %s\n", cdev->type);
 	}
 	else if(!strcmp(cdev->type, g_bind2))
 	{
 		table_val = 2;
-		mtktspmic_dbg("[mtktspmic_unbind] %s\n", cdev->type);
 	}
 	else if(!strcmp(cdev->type, g_bind3))
 	{
 		table_val = 3;
-		mtktspmic_dbg("[mtktspmic_unbind] %s\n", cdev->type);
 	}
 	else if(!strcmp(cdev->type, g_bind4))
 	{
 		table_val = 4;
-		mtktspmic_dbg("[mtktspmic_unbind] %s\n", cdev->type);
 	}
 	else if(!strcmp(cdev->type, g_bind5))
 	{
 		table_val = 5;
-		mtktspmic_dbg("[mtktspmic_unbind] %s\n", cdev->type);
 	}
 	else if(!strcmp(cdev->type, g_bind6))
 	{
 		table_val = 6;
-		mtktspmic_dbg("[mtktspmic_unbind] %s\n", cdev->type);
 	}
 	else if(!strcmp(cdev->type, g_bind7))
 	{
 		table_val = 7;
-		mtktspmic_dbg("[mtktspmic_unbind] %s\n", cdev->type);
 	}
 	else if(!strcmp(cdev->type, g_bind8))
 	{
 		table_val = 8;
-		mtktspmic_dbg("[mtktspmic_unbind] %s\n", cdev->type);
 	}
 	else if(!strcmp(cdev->type, g_bind9))
 	{
 		table_val = 9;
-		mtktspmic_dbg("[mtktspmic_unbind] %s\n", cdev->type);
 	}
 	else
 		return 0;
@@ -371,7 +326,6 @@ static int mtktspmic_unbind(struct thermal_zone_device *thermal,
 		mtktspmic_err("[mtktspmic_unbind] error unbinding cooling dev\n");
 		return -EINVAL;
 	} else {
-		mtktspmic_dbg("[mtktspmic_unbind] unbinding OK\n");
 	}
 
 	return 0;
@@ -444,9 +398,6 @@ static int tspmic_sysrst_set_cur_state(struct thermal_cooling_device *cdev,
 	if(cl_dev_sysrst_state == 1)
 	{
 		mtktspmic_err("Power/PMIC_Thermal: reset, reset, reset!!!");
-		mtktspmic_err("@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@");
-		mtktspmic_err("*****************************************");
-		mtktspmic_err("@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@");
 
 //		BUG();
 		*(unsigned int*) 0x0 = 0xdead; // To trigger data abort to reset the system for thermal protection.
@@ -521,7 +472,6 @@ static ssize_t mtktspmic_write(struct file *file, const char __user *buffer, siz
 												 &trip[8],&t_type[8],bind8, &trip[9],&t_type[9],bind9,
 												 &time_msec) == 32)
 	{
-		mtktspmic_dbg("[mtktspmic_write] mtktspmic_unregister_thermal\n");
 		mtktspmic_unregister_thermal();
 
 		for(i=0; i<num_trip; i++)
@@ -543,14 +493,6 @@ static ssize_t mtktspmic_write(struct file *file, const char __user *buffer, siz
 			g_bind9[i]=bind9[i];
 		}
 
-		mtktspmic_dbg("[mtktspmic_write] g_THERMAL_TRIP_0=%d,g_THERMAL_TRIP_1=%d,g_THERMAL_TRIP_2=%d,g_THERMAL_TRIP_3=%d,g_THERMAL_TRIP_4=%d,\
-g_THERMAL_TRIP_5=%d,g_THERMAL_TRIP_6=%d,g_THERMAL_TRIP_7=%d,g_THERMAL_TRIP_8=%d,g_THERMAL_TRIP_9=%d,\n",
-													g_THERMAL_TRIP[0],g_THERMAL_TRIP[1],g_THERMAL_TRIP[2],g_THERMAL_TRIP[3],g_THERMAL_TRIP[4],
-													g_THERMAL_TRIP[5],g_THERMAL_TRIP[6],g_THERMAL_TRIP[7],g_THERMAL_TRIP[8],g_THERMAL_TRIP[9]);
-		mtktspmic_dbg("[mtktspmic_write] cooldev0=%s,cooldev1=%s,cooldev2=%s,cooldev3=%s,cooldev4=%s,\
-cooldev5=%s,cooldev6=%s,cooldev7=%s,cooldev8=%s,cooldev9=%s\n",
-													g_bind0,g_bind1,g_bind2,g_bind3,g_bind4,g_bind5,g_bind6,g_bind7,g_bind8,g_bind9);
-
 		for(i=0; i<num_trip; i++)
 		{
 			trip_temp[i]=trip[i];
@@ -558,12 +500,6 @@ cooldev5=%s,cooldev6=%s,cooldev7=%s,cooldev8=%s,cooldev9=%s\n",
 
 		interval=time_msec / 1000;
 
-		mtktspmic_dbg("[mtktspmic_write] trip_0_temp=%d,trip_1_temp=%d,trip_2_temp=%d,trip_3_temp=%d,trip_4_temp=%d,\
-trip_5_temp=%d,trip_6_temp=%d,trip_7_temp=%d,trip_8_temp=%d,trip_9_temp=%d,time_ms=%d\n",
-						trip_temp[0],trip_temp[1],trip_temp[2],trip_temp[3],trip_temp[4],
-						trip_temp[5],trip_temp[6],trip_temp[7],trip_temp[8],trip_temp[9],interval*1000);
-
-		mtktspmic_dbg("[mtktspmic_write] mtktspmic_register_thermal\n");
 		mtktspmic_register_thermal();
 
 		return count;
@@ -605,8 +541,6 @@ int mtktspmic_register_cooler(void)
 
 int mtktspmic_register_thermal(void)
 {
-	mtktspmic_dbg("[mtktspmic_register_thermal] \n");
-
 	/* trips : trip 0~2 */
 	thz_dev = mtk_thermal_zone_device_register("mtktspmic", num_trip, NULL,
 					  &mtktspmic_dev_ops, 0, 0, 0, interval*1000);
@@ -624,8 +558,6 @@ void mtktspmic_unregister_cooler(void)
 
 void mtktspmic_unregister_thermal(void)
 {
-	mtktspmic_dbg("[mtktspmic_unregister_thermal] \n");
-
 	if (thz_dev) {
 		mtk_thermal_zone_device_unregister(thz_dev);
 		thz_dev = NULL;
@@ -705,8 +637,6 @@ static int __init mtktspmic_init(void)
 	struct proc_dir_entry *entry = NULL;
 	struct proc_dir_entry *mtktspmic_dir = NULL;
 
-	mtktspmic_info("[mtktspmic_init] \n");
-
 /*
 	bit4	RG_VBUF_EN	1: turn on Vbuf.
 						0: turn off Vbuf.
@@ -719,11 +649,8 @@ static int __init mtktspmic_init(void)
     if((pmic_data>>4&0x1)!=1 || (pmic_data>>2&0x1)!=0)
         mtktspmic_err("[mtktspmic_init]: Warrning !!! Need to checking this !!!!!\n");
 */
-	mtktspmic_info("PMIC_Debug %d\n",__LINE__);
 	pmic_cali_prepare();
-	mtktspmic_info("PMIC_Debug %d\n",__LINE__);
 	pmic_cali_prepare2();
-	mtktspmic_info("PMIC_Debug %d\n",__LINE__);
 
 	err = mtktspmic_register_cooler();
 	if(err)
@@ -732,7 +659,6 @@ static int __init mtktspmic_init(void)
 	if (err)
 		goto err_unreg;
 
-	mtktspmic_info("PMIC_Debug %d\n",__LINE__);
 	mtktspmic_dir = mtk_thermal_get_proc_drv_therm_dir_entry();
 	if (!mtktspmic_dir)
 	{
@@ -752,7 +678,6 @@ static int __init mtktspmic_init(void)
 		entry = proc_create("tzpmic_log", S_IRUGO | S_IWUSR, mtktspmic_dir, &mtktspmic_log_fops);
 	}
 
-	mtktspmic_info("PMIC_Debug %d\n",__LINE__);
 	return 0;
 
 err_unreg:
@@ -762,7 +687,6 @@ err_unreg:
 
 static void __exit mtktspmic_exit(void)
 {
-	mtktspmic_info("[mtktspmic_exit] \n");
 	mtktspmic_unregister_thermal();
 	mtktspmic_unregister_cooler();
 }
diff --git a/drivers/misc/mediatek/thermal/mt6580/mtk_ts_wmt.c b/drivers/misc/mediatek/thermal/mt6580/mtk_ts_wmt.c
index 3577e3477..c9a5de4a4 100755
--- a/drivers/misc/mediatek/thermal/mt6580/mtk_ts_wmt.c
+++ b/drivers/misc/mediatek/thermal/mt6580/mtk_ts_wmt.c
@@ -454,7 +454,6 @@ static int wmt_cal_stats(unsigned long data)
 	} else {
 		/* Overflow possible ??*/
 		tx_throughput = 0;
-		wmt_tm_printk("[%s] cur_time(%lu) < pre_time\n", __func__, cur_time.tv_sec);
 	}
 
 	pre_time = cur_time.tv_sec;
@@ -709,7 +708,6 @@ static int wmt_cl_set_cur_state(struct thermal_cooling_device *cool_dev,
     cl_dev_state = v;
 
     if (cl_dev_state == 1) {
-        wmt_tm_printk("wmt_cl_set_cur_state = 1\n");
         //the temperature is over than the critical, system reboot.
 //        BUG();
 	      *(unsigned int*) 0x0 = 0xdead; // To trigger data abort to reset the system for thermal protection.
@@ -732,8 +730,6 @@ static int wmt_send_signal(int level)
 		ret = -1;
 	}
 
-	wmt_tm_printk("[%s] pid is %d, %d, %d\n", __func__, tm_pid, tm_input_pid, thro);
-
 	if (ret == 0 && tm_input_pid != tm_pid) {
 		tm_pid = tm_input_pid;
 		pg_task = get_pid_task(find_vpid(tm_pid), PIDTYPE_PID);
@@ -811,7 +807,6 @@ static int wmt_judge_throttling(int index, int is_on, int interval)
 					below_low_time = 0;
 					over_up_time = 0;
 					throttling_pre_stat = WFD_STAT;
-					wmt_tm_printk("WFD is on, reset everything!");
 				}
 			break;
 
@@ -822,8 +817,6 @@ static int wmt_judge_throttling(int index, int is_on, int interval)
 					else /*At this moment, current throughput is none. Use the previous constraint.*/
 						thro_constraint = thro(thro_constraint, up_numerator, up_denominator);
 
-					wmt_tm_printk("LOW/MID-->HIGH:%lu <- (%d / %d) %lu", thro_constraint, up_numerator, up_denominator, cur_thro);
-
 					//wmt_send_signal( thro_constraint / 1000);
 					wmt_send_signal(thro_constraint);   //[star] unit : Kbytes
 					throttling_pre_stat = HIGH_STAT;
@@ -836,8 +829,6 @@ static int wmt_judge_throttling(int index, int is_on, int interval)
 						else /* current throughput is large than constraint. WHAT!!!*/
 							thro_constraint = thro(thro_constraint, up_numerator, up_denominator);
 
-						wmt_tm_printk("HIGH-->HIGH:%lu <- (%d / %d) %lu", thro_constraint, up_numerator, up_denominator, cur_thro);
-
 						//wmt_send_signal( thro_constraint / 1000);
                         wmt_send_signal( thro_constraint);  //[star] unit : Kbytes
 						over_up_time = 0;
@@ -845,18 +836,15 @@ static int wmt_judge_throttling(int index, int is_on, int interval)
 				} else {
 					wmt_tm_info("[%s] Error state1=%d!!\n", __func__, throttling_pre_stat);
 				}
-				wmt_tm_printk("case2 time=%d\n", over_up_time);
 			break;
 
 			case MID_STAT:
 				if (throttling_pre_stat == LOW_STAT) {
 					below_low_time = 0;
 					throttling_pre_stat = MID_STAT;
-					wmt_tm_printk("[%s] Go up!!\n", __func__);
 				} else if (throttling_pre_stat == HIGH_STAT) {
 					over_up_time = 0;
 					throttling_pre_stat = MID_STAT;
-					wmt_tm_printk("[%s] Go down!!\n", __func__);
 				} else {
 					throttling_pre_stat = MID_STAT;
 					wmt_tm_dprintk("[%s] pre_stat=%d!!\n", __func__, throttling_pre_stat);
@@ -876,7 +864,6 @@ static int wmt_judge_throttling(int index, int is_on, int interval)
 						thro_constraint = thro(thro_constraint, low_numerator, low_denominator);
 					}
 
-					wmt_tm_printk("MID/HIGH-->LOW:%lu <- (%d / %d) %lu", thro_constraint, low_numerator, low_denominator, cur_thro);
 					//wmt_send_signal( thro_constraint / 1000);
                     wmt_send_signal( thro_constraint);  //[star] unit : Kbytes
 					throttling_pre_stat = LOW_STAT;
@@ -887,7 +874,6 @@ static int wmt_judge_throttling(int index, int is_on, int interval)
 					below_low_time++;
 					if ( (below_low_time*interval) >= low_duration) {
 						if (low_rst_time >= low_rst_max && !is_reset) {
-							wmt_tm_printk("over rst time=%d", low_rst_time);
 
 							wmt_send_signal(-1); //reset
 							low_rst_time = low_rst_max;
@@ -903,7 +889,6 @@ static int wmt_judge_throttling(int index, int is_on, int interval)
 								low_rst_time++;
 							}
 
-							wmt_tm_printk("LOW-->LOW:%lu <-(%d / %d) %lu", thro_constraint, low_numerator, low_denominator, cur_thro);
 
 							//wmt_send_signal( thro_constraint / 1000);
                             wmt_send_signal( thro_constraint);  //[star] unit : Kbytes
@@ -1176,9 +1161,6 @@ ssize_t wmt_wifi_algo_write(struct file *filp, const char __user *buf, size_t le
 		below_low_time = 0;
 		low_rst_time = 0;
 
-		wmt_tm_printk("[%s] %s [up]%d %d/%d, [low]%d %d/%d, rst=%d\n", __func__, desc, up_duration, \
-			up_numerator, up_denominator, low_duration, low_numerator, low_denominator, low_rst_max);
-
 		return len;
 	} else if (sscanf(desc, "log=%d", &tmp_log) == 1) {
 		if (tmp_log == 1)
@@ -1204,9 +1186,6 @@ int wmt_wifi_algo_read(struct seq_file *m, void *v)
 
     //memcpy(buf, tmp, ret*sizeof(char));
 
-    wmt_tm_printk("[%s] [up]%d %d/%d, [low]%d %d/%d, rst=%d\n", __func__, up_duration, \
-                  up_numerator, up_denominator, low_duration, low_numerator, low_denominator, low_rst_max);
-
     return 0;
 }
 
@@ -1233,8 +1212,6 @@ ssize_t wmt_tm_wfd_write(struct file *filp, const char __user *buf, size_t len,
 
 	ret = sscanf(tmp, "%d", &tm_wfd_stat);
 
-	wmt_tm_printk("[%s] %s = %d, len=%d, ret=%d\n", __func__, tmp, tm_wfd_stat, len, ret);
-
 	return len;
 }
 
@@ -1249,8 +1226,6 @@ int wmt_tm_wfd_read(struct seq_file *m, void *v)
 
 	//memcpy(buf, tmp, ret*sizeof(char));
 
-	wmt_tm_printk("[%s] %d\n", __func__, tm_wfd_stat);
-
 	return 0;
 }
 
@@ -1291,21 +1266,6 @@ ssize_t wmt_wifi_in_soc_write(struct file *filp, const char __user *buf, size_t
                                                                &tp_wifi_rise,
                                                                &tp_wifi_fall);
 
-	wmt_tm_printk("qqq %s ret :%d %d %d %d %d %d %d %d %d %d %d %d %d %d %d", __func__, ret,
-														        wifi_throttle_version,
-														        sensor_select,
-														        resource_allocator_policy,
-														        cpu_wifi_target_tj_offset,
-														        wmt_wifi_target_tj,
-														        wmt_wifi_target_offset,
-														        tj_stable_range,
-														        min_wifi_tput_ratio,
-														        max_wifi_tput_ratio,
-														        min_wifi_tput,
-														        tt_wifi_high,
-														        tt_wifi_low,
-														        tp_wifi_rise,
-														        tp_wifi_fall);
 	if(sensor_select < 0 || sensor_select >= NR_TS_SENSORS){
 		aee_kernel_warning_api(__FILE__, __LINE__, DB_OPT_DEFAULT, "wmt_wifi_in_soc_write ","sensor_select: %d\n", sensor_select);
 		sensor_select = 0;
@@ -1363,8 +1323,6 @@ ssize_t wmt_tm_pid_write(struct file *filp, const char __user *buf, size_t len,
 	if (ret)
 		WARN_ON(1);
 
-	wmt_tm_printk("[%s] %s = %d\n", __func__, tmp, tm_input_pid);
-
 	return len;
 }
 
@@ -1378,8 +1336,6 @@ int wmt_tm_pid_read(struct seq_file *m, void *v)
 
     //memcpy(buf, tmp, ret*sizeof(char));
 
-    wmt_tm_printk("[%s] %d\n", __func__, tm_input_pid);
-
     return 0;
 }
 
@@ -1400,8 +1356,6 @@ static int wmt_tm_read(struct seq_file *m, void *v)
     //char *p = buf;
     struct linux_thermal_ctrl_if *p_linux_if = 0;
 
-    wmt_tm_printk("[%s]\n", __func__);
-
     //sanity
     if(pg_wmt_tm) {
        p_linux_if = &pg_wmt_tm->linux_if;
@@ -1455,8 +1409,6 @@ static ssize_t wmt_tm_write(struct file *filp, const char __user *buf, size_t co
 
     struct linux_thermal_ctrl_if *p_linux_if = 0;
 
-    wmt_tm_printk("[%s]\n", __func__);
-
     //sanity
     if(pg_wmt_tm) {
        p_linux_if = &pg_wmt_tm->linux_if;
@@ -1872,8 +1824,6 @@ static int __init wmt_tm_init(void)
 {
     int err = 0;
 
-    wmt_tm_printk("[wmt_tm_init] start -->\n");
-
 #if 0
     err = wmt_tm_ops_register(ops);
     if(err)
@@ -1899,7 +1849,6 @@ static int __init wmt_tm_init(void)
     if(err)
         return err;
 #endif
-    wmt_tm_printk("[wmt_tm_init] end <--\n");
 
     return 0;
 }
diff --git a/drivers/misc/mediatek/uart/mt6580/platform_uart.c b/drivers/misc/mediatek/uart/mt6580/platform_uart.c
index 7751ea199..47183fa5c 100644
--- a/drivers/misc/mediatek/uart/mt6580/platform_uart.c
+++ b/drivers/misc/mediatek/uart/mt6580/platform_uart.c
@@ -164,7 +164,6 @@ void set_uart_default_settings(int idx)
 	printk("[UART%d] get irq flags from DTS fail!!\n", idx);
     }
     mtk_uart_default_settings[idx].irq_flags = (unsigned long)irq_info[2];
-    printk("[UART%d] phys_regs=0x%lx, regs=0x%lx, irq=%d, irq_flags=0x%lx \n", idx, mtk_uart_default_settings[idx].uart_phys_base, mtk_uart_default_settings[idx].uart_base, mtk_uart_default_settings[idx].irq_num, mtk_uart_default_settings[idx].irq_flags);
 }
 /*---------------------------------------------------------------------------*/
 void* get_apdma_uart0_base(void)
@@ -190,7 +189,6 @@ void* get_apdma_uart0_base(void)
 
     apdma_uart0_offset = apdma_uart0_reg - apdma_reg;
     base += apdma_uart0_offset;
-    printk("[UART] apdma uart0 base=0x%p\n", base);
 
     return base;
 }
@@ -229,7 +227,6 @@ unsigned int get_uart_vfifo_irq_id(int idx)
   	break;
     }
     irq_id = irq_of_parse_and_map(node, 0);
-    printk("[UART_DMA%d] irq=%d\n", idx, irq_id);
 
     return irq_id;
 }
@@ -373,9 +370,7 @@ void dump_uart_reg(void)
 	{
 	    lsr = UART_READ32(UART_LSR);
 	    escape_en = UART_READ32(UART_ESCAPE_EN);
-	    printk("[UART%d] LSR=0x%x   ESCAPE_EN=0x%x\n", uart->nport, lsr, escape_en);
-  	}else
-	    printk("[UART%d] clock is off\n", uart->nport);	
+  	}else {}
     }
     
 }
@@ -600,7 +595,6 @@ static void mtk_uart_dma_vfifo_tx_tasklet_byte(unsigned long arg)
 	    end = ktime_get();
 	    b = ktime_to_timespec(end);
 	    if ((b.tv_sec - a.tv_sec) > 1 || ((b.tv_sec - a.tv_sec) == 1 && b.tv_nsec > a.tv_nsec)){
-		printk("[UART%d] Polling flush timeout\n",port->line);
 		return;
 	    }
 	}
@@ -636,7 +630,6 @@ static void mtk_uart_dma_vfifo_tx_tasklet_byte(unsigned long arg)
 #if defined(ENABLE_VFIFO_DEBUG)
     if (UART_DEBUG_EVT(DBG_EVT_DAT) && UART_DEBUG_EVT(DBG_EVT_BUF)) {
         int i;
-        printk("[UART%d_TX] %4d bytes:", uart->nport, vfifo->cur->idx);
         for (i = 0; i < vfifo->cur->idx; i++) {
             if (i % 16 == 0)
                 printk("\n");
@@ -1114,7 +1107,6 @@ void mtk_uart_stop_dma(struct mtk_uart_dma *dma)
 	{
 	    polling_cnt++;
 	    if (polling_cnt > 10000){
-		printk("mtk_uart_stop_dma: polling VFF_FLUSH fail VFF_DEBUG_STATUS=0x%x\n", UART_READ32(VFF_DEBUG_STATUS(base)));
 		break;
 	    }
 	}
@@ -1126,7 +1118,6 @@ void mtk_uart_stop_dma(struct mtk_uart_dma *dma)
 	{
 	    polling_cnt++;
 	    if (polling_cnt > 10000){
-		printk("mtk_uart_stop_dma: polling VFF_EN fail VFF_DEBUG_STATUS=0x%x\n", UART_READ32(VFF_DEBUG_STATUS(base)));
 		break;
 	    }
 	}
@@ -1878,7 +1869,6 @@ void mtk_uart_enable_sleep(struct mtk_uart *uart)
 {
     unsigned long base = uart->base;
     reg_sync_writel(0x1, UART_SLEEP_EN);
-    printk("SLEEP_EN = 0x%x\n",UART_READ32(UART_SLEEP_EN));
 }
 /*---------------------------------------------------------------------------*/
 #ifdef ENABLE_RAW_DATA_DUMP
@@ -2108,7 +2098,6 @@ void mtk_uart_switch_tx_to_gpio(struct mtk_uart *uart)
 	    mt_set_gpio_out(GPIO_UART_UTXD0_PIN, GPIO_OUT_ONE);
 	    mt_set_gpio_mode(GPIO_UART_UTXD0_PIN, GPIO_UART_UTXD0_PIN_M_GPIO);
 	    #else
-	    printk(KERN_ERR "GPIO_UART_UTXD0_PIN is not properly set\n");
 	    #endif
 	    break;
 	case 1:
@@ -2116,7 +2105,6 @@ void mtk_uart_switch_tx_to_gpio(struct mtk_uart *uart)
 	    mt_set_gpio_out(GPIO_UART_UTXD1_PIN, GPIO_OUT_ONE);
 	    mt_set_gpio_mode(GPIO_UART_UTXD1_PIN, GPIO_UART_UTXD1_PIN_M_GPIO);
 	    #else
-	    printk(KERN_ERR "GPIO_UART_UTXD1_PIN is not properly set\n");
 	    #endif
 	    break;
 	case 2:
@@ -2124,7 +2112,6 @@ void mtk_uart_switch_tx_to_gpio(struct mtk_uart *uart)
 	    mt_set_gpio_out(GPIO_UART_UTXD2_PIN, GPIO_OUT_ONE);
 	    mt_set_gpio_mode(GPIO_UART_UTXD2_PIN, GPIO_UART_UTXD2_PIN_M_GPIO);
 	    #else
-	    printk(KERN_ERR "GPIO_UART_UTXD2_PIN is not properly set\n");
 	    #endif
 	    break;
 	default:
@@ -2142,21 +2129,18 @@ void mtk_uart_switch_to_tx(struct mtk_uart *uart)
 	    #ifdef GPIO_UART_UTXD0_PIN
 	    mt_set_gpio_mode(GPIO_UART_UTXD0_PIN, GPIO_UART_UTXD0_PIN_M_UTXD);
 	    #else
-	    printk(KERN_ERR "GPIO_UART_UTXD0_PIN is not properly set p2\n");
 	    #endif
 	    break;
 	case 1:
 	    #ifdef GPIO_UART_UTXD1_PIN
 	    mt_set_gpio_mode(GPIO_UART_UTXD1_PIN, GPIO_UART_UTXD1_PIN_M_UTXD);
 	    #else
-	    printk(KERN_ERR "GPIO_UART_UTXD1_PIN is not properly set p2\n");
 	    #endif
 	    break;
 	case 2:
 	    #ifdef GPIO_UART_UTXD2_PIN
 	    mt_set_gpio_mode(GPIO_UART_UTXD2_PIN, GPIO_UART_UTXD2_PIN_M_UTXD);
 	    #else
-	    printk(KERN_ERR "GPIO_UART_UTXD2_PIN is not properly set p2\n");
 	    #endif
 	    break;
 	default:
@@ -2174,28 +2158,24 @@ void mtk_uart_switch_rx_to_gpio(struct mtk_uart *uart)
 	    #ifdef GPIO_UART_URXD0_PIN
 	    mt_set_gpio_mode(GPIO_UART_URXD0_PIN, GPIO_UART_URXD0_PIN_M_GPIO);
 	    #else
-	    printk(KERN_ERR "GPIO_UART_URXD0_PIN is not properly set\n");
 	    #endif
 	    break;
 	case 1:
 	    #ifdef GPIO_UART_URXD1_PIN
 	    mt_set_gpio_mode(GPIO_UART_URXD1_PIN, GPIO_UART_URXD1_PIN_M_GPIO);
 	    #else
-	    printk(KERN_ERR "GPIO_UART_URXD1_PIN is not properly set\n");
 	    #endif
 	    break;
 	case 2:
 	    #ifdef GPIO_UART_URXD2_PIN
 	    mt_set_gpio_mode(GPIO_UART_URXD2_PIN, GPIO_UART_URXD2_PIN_M_GPIO);
 	    #else
-	    printk(KERN_ERR "GPIO_UART_URXD2_PIN is not properly set\n");
 	    #endif
 	    break;
 	case 3:
 	    #ifdef GPIO_UART_URXD3_PIN
 	    mt_set_gpio_mode(GPIO_UART_URXD3_PIN, GPIO_UART_URXD3_PIN_M_GPIO);
 	    #else
-	    printk(KERN_ERR "GPIO_UART_URXD3_PIN is not properly set\n");
 	    #endif
 	    break;
 	default:
@@ -2213,28 +2193,24 @@ void mtk_uart_switch_to_rx(struct mtk_uart *uart)
 	    #ifdef GPIO_UART_URXD0_PIN
 	    mt_set_gpio_mode(GPIO_UART_URXD0_PIN, GPIO_UART_URXD0_PIN_M_URXD);
 	    #else
-	    printk(KERN_ERR "GPIO_UART_URXD0_PIN is not properly set p2\n");
 	    #endif
 	    break;
 	case 1:
 	    #ifdef GPIO_UART_URXD1_PIN
 	    mt_set_gpio_mode(GPIO_UART_URXD1_PIN, GPIO_UART_URXD1_PIN_M_URXD);
 	    #else
-	    printk(KERN_ERR "GPIO_UART_URXD1_PIN is not properly set p2\n");
 	    #endif
 	    break;
 	case 2:
 	    #ifdef GPIO_UART_URXD2_PIN
 	    mt_set_gpio_mode(GPIO_UART_URXD2_PIN, GPIO_UART_URXD2_PIN_M_URXD);
 	    #else
-	    printk(KERN_ERR "GPIO_UART_URXD2_PIN is not properly set p2\n");
 	    #endif
 	    break;
 	case 3:
 	    #ifdef GPIO_UART_URXD3_PIN
 	    mt_set_gpio_mode(GPIO_UART_URXD3_PIN, GPIO_UART_URXD3_PIN_M_URXD);
 	    #else
-	    printk(KERN_ERR "GPIO_UART_URXD3_PIN is not properly set p2\n");
 	    #endif
 	    break;
 	default:
diff --git a/drivers/misc/mediatek/uart/uart.c b/drivers/misc/mediatek/uart/uart.c
index 72c900786..13c0032a3 100644
--- a/drivers/misc/mediatek/uart/uart.c
+++ b/drivers/misc/mediatek/uart/uart.c
@@ -685,7 +685,6 @@ ssize_t mtk_uart_history_show(struct kobject *kobj, char *buffer)
 						rx_history.index, rx_history.offset);
     ptr += len;
     remain -= len;
-	mtk_uart_dump_history();
     return (PAGE_SIZE-remain);
 }
 /*---------------------------------------------------------------------------*/
@@ -973,9 +972,6 @@ static int __init mtk_uart_console_setup(struct console *co, char *options)
     int flow    = 'n';
     int ret;
 
-    printk(KERN_ALERT DBG_TAG "mtk console setup : co->index %d options:%s\n",
-        co->index, options);
-
     if (co->index >= UART_NR)
         co->index = 0;
 
@@ -990,14 +986,6 @@ static int __init mtk_uart_console_setup(struct console *co, char *options)
         uart_parse_options(options, &baud, &parity, &bits, &flow);
 
     ret = uart_set_options(port, co, baud, parity, bits, flow);
-    printk(KERN_ALERT DBG_TAG "mtk console setup : uart_set_option port(%d) "
-          "baud(%d) parity(%c) bits(%d) flow(%c) - ret(%d)\n",
-           co->index, baud, parity, bits, flow, ret);
-    
-    printk(KERN_ALERT DBG_TAG "mtk setting: (%d, %d, %d, %lu, %lu)\n", 
-           uart->tx_mode, uart->rx_mode,
-           uart->dma_mode,uart->tx_trig,
-           uart->rx_trig);
     //mtk_uart_power_up(uart);
     return ret;
 }
@@ -1090,11 +1078,8 @@ static int mtk_uart_vfifo_create(struct mtk_uart *uart)
         return err;
     }
 
-    MSG_RAW("[UART%2d] create\n", uart->nport);
-
     for (idx = uart->nport*2; idx < uart->nport*2 + 2; idx++) {
         vfifo = &mtk_uart_vfifo_port[idx];
-        MSG_RAW("[UART%2d] idx=%2d\n", uart->nport, idx);
         if (vfifo->size){
             vfifo->addr = dma_alloc_coherent(uart->port.dev, vfifo->size, &vfifo->dmahd, GFP_DMA);
 	    //MSG_RAW("Address: virt = 0x%p, phys = 0x%llx\n", vfifo->addr, vfifo->dmahd);
@@ -1107,9 +1092,7 @@ static int mtk_uart_vfifo_create(struct mtk_uart *uart)
         } else if ((err = mtk_uart_vfifo_new_dbgbuf(vfifo))) {
             break;
         }
-        MSG_RAW("[%2d] %p (%04d) ;\n", idx, vfifo->addr, vfifo->size);        
     }
-    MSG_RAW("\n");
     return err;
 }
 /*---------------------------------------------------------------------------*/
@@ -1125,16 +1108,13 @@ static int mtk_uart_vfifo_delete(struct mtk_uart *uart)
         return 0;
     }
     
-    MSG_RAW("[UART%2d] delete", uart->nport);
     for (idx = uart->nport*2; idx < uart->nport*2 + 2; idx++) {
         vfifo = &mtk_uart_vfifo_port[idx];
         if (vfifo->addr)
             dma_free_coherent(NULL, vfifo->size, vfifo->addr, vfifo->dmahd);
         mtk_uart_vfifo_del_dbgbuf(vfifo);
-        MSG_RAW("[%2d] %p (%04d) ;", idx, vfifo->addr, vfifo->size);        
         vfifo->addr = NULL;
     }
-    MSG_RAW("\n");
     return 0;
 }
 /*---------------------------------------------------------------------------*/
@@ -1160,14 +1140,12 @@ int mtk_uart_vfifo_prepare(struct mtk_uart *uart)
     if ((atomic_read(&obj->vffLen[tx]) == tport->size) &&
         (atomic_read(&obj->vffLen[rx]) == rport->size))
         return 0;
-    MSG_RAW("re-alloc +\n");
     mtk_uart_vfifo_delete(uart);
     tport->size = atomic_read(&obj->vffLen[tx]);
     tport->trig = VFF_TX_THRE(tport->size);
     rport->size = atomic_read(&obj->vffLen[rx]);
     rport->trig = VFF_RX_THRE(rport->size);
     mtk_uart_vfifo_create(uart);
-    MSG_RAW("re-alloc -\n");
     return 0;
 }
 /*---------------------------------------------------------------------------*/
@@ -1763,8 +1741,6 @@ static void mtk_uart_start_tx(struct uart_port *port)
 
 #if defined(ENABLE_VFIFO)
     if (uart->tx_mode == UART_TX_VFIFO_DMA) {
-	if (UART_DEBUG_EVT(DBG_EVT_BUF))
-    	    printk("[UART%d] mtk_uart_start_tx\n", uart->nport);
         if (!uart->write_allow(uart))
             mtk_uart_vfifo_enable_tx_intr(uart);
         else 
@@ -2068,18 +2044,13 @@ static void mtk_uart_set_termios(struct uart_port *port,
     mtk_uart_fifo_set_trig(uart, uart->tx_trig, uart->rx_trig);
 
     /* setup hw flow control: only port 0 ~1 support hw rts/cts */
-    MSG(CFG, "c_lflag:%X, c_iflag:%X, c_oflag:%X, c_cflag:%X\n", termios->c_lflag, termios->c_iflag, termios->c_oflag, termios->c_cflag);
     if (HW_FLOW_CTRL_PORT(uart) && (termios->c_cflag & CRTSCTS) && (!(termios->c_iflag&0x80000000))) {
-        printk(KERN_NOTICE "Hardware Flow Control\n");
         mode = UART_FC_HW;
     } else if (termios->c_iflag & 0x80000000) {
-        printk(KERN_NOTICE "MTK Software Flow Control\n");
         mode = UART_FC_SW;
     } else if (termios->c_iflag & (IXON | IXOFF | IXANY)) {
-        printk(KERN_NOTICE "Linux default SW Flow Control\n");
         mode = UART_FC_NONE;    
     } else {
-        printk(KERN_NOTICE "No Flow Control\n");
         mode = UART_FC_NONE;
     }
     mtk_uart_set_flow_ctrl(uart, mode);
@@ -2305,7 +2276,6 @@ static int mtk_uart_probe(struct platform_device *pdev)
                 , PTR_ERR(uart_setting->clk_uart_main));
         return PTR_ERR(uart_setting->clk_uart_main);
     }
-    pr_notice("[UART%d][CCF]clk_uart%d_main:%p\n", idx, idx, uart_setting->clk_uart_main);
 
     if (idx == 0) {
         struct clk* clk_uart0_dma = devm_clk_get(&pdev->dev, "uart-apdma");
@@ -2314,10 +2284,7 @@ static int mtk_uart_probe(struct platform_device *pdev)
             return PTR_ERR(clk_uart0_dma);
         }
         set_uart_dma_clk(idx, clk_uart0_dma);
-        pr_notice("[UART][CCF]clk_uart0_dma:%p\n", clk_uart0_dma);
     }
-#else /* !defined(CONFIG_MTK_LEGACY) */
-        pr_notice("[UART][CCF]mtk_platform_uart_probe CONFIG_MTK_LEGACY is not defined!\n");
 #endif /* !defined(CONFIG_MTK_LEGACY) */
 
 /* For GPIO setting */
@@ -2329,10 +2296,7 @@ static int mtk_uart_probe(struct platform_device *pdev)
         return err;
     }
     set_uart_pinctrl(idx, ppinctrl);
-    pr_notice("[UART%d][PinC]set idx:%d, ppinctrl:%p\n", idx, idx, ppinctrl);
 
-#else /* !defined(CONFIG_MTK_LEGACY) */
-    pr_notice("[UART][PinC]mtk_platform_uart_probe CONFIG_MTK_LEGACY is not defined!\n");
 #endif /* !defined(CONFIG_MTK_LEGACY) */
 
 
@@ -2386,7 +2350,6 @@ static int mtk_uart_syscore_suspend(void)
 	//tx pin:  idle->high   power down->low
 	mtk_uart_switch_tx_to_gpio(uart);
 	spin_unlock_irqrestore(&mtk_uart_bt_lock, flags);
-	printk(KERN_NOTICE "[UART%d] Suspend(%d)!\n", uart->nport, ret);
     }
     return ret;
 }
@@ -2403,7 +2366,6 @@ static void mtk_uart_syscore_resume(void)
 	ret = uart_resume_port(&mtk_uart_drv, &uart->port);
 	spin_unlock_irqrestore(&mtk_uart_bt_lock, flags);
 	disable_irq(uart->port.irq);
-	printk(KERN_NOTICE "[UART%d] Resume(%d)!\n", uart->nport, ret);
     }
 }
 /*---------------------------------------------------------------------------*/
@@ -2415,7 +2377,6 @@ static int mtk_uart_suspend(struct platform_device *pdev, pm_message_t state)
     	mtk_uart_save(uart);
     if(uart && (uart->nport < UART_NR) && (uart != bt_port)){
         ret = uart_suspend_port(&mtk_uart_drv, &uart->port);
-        printk(KERN_NOTICE "[UART%d] Suspend(%d)!\n", uart->nport, ret);
 	mtk_uart_switch_rx_to_gpio(uart);
     }
     return ret;
@@ -2428,7 +2389,6 @@ static int mtk_uart_resume(struct platform_device *pdev)
     if (uart && (uart->nport < UART_NR) && (uart != bt_port)) {
 	mtk_uart_switch_to_rx(uart);
         ret = uart_resume_port(&mtk_uart_drv, &uart->port);
-        printk(KERN_NOTICE "[UART%d] Resume(%d)!\n", uart->nport, ret);
     }
     return ret;
 }
diff --git a/drivers/misc/mediatek/usb11/mt6580/musbfsh_core.c b/drivers/misc/mediatek/usb11/mt6580/musbfsh_core.c
index 90f10213d..1a3f162f2 100644
--- a/drivers/misc/mediatek/usb11/mt6580/musbfsh_core.c
+++ b/drivers/misc/mediatek/usb11/mt6580/musbfsh_core.c
@@ -183,7 +183,6 @@ int is_musbfsh_rh(struct usb_device *udev)
 	struct usb_hcd	*hcd;
 
 	if(!mtk_musbfsh){
-		MYDBG("mtk_musbfsh is NULL!\n");
 		return 0;
 	}
 
@@ -200,8 +199,6 @@ void mt65xx_usb11_suspend_resume_test(void)
 	u8	power;
 	u32 frame_number;	
 
-	MYDBG("begin\n");
-
 	power = musbfsh_readb((unsigned char __iomem*)mtk_musbfsh->mregs, MUSBFSH_POWER);
 	//		power &= ~MUSBFSH_POWER_RESUME;
 	power |= MUSBFSH_POWER_ENSUSPEND;
@@ -209,18 +206,13 @@ void mt65xx_usb11_suspend_resume_test(void)
 	musbfsh_writeb((unsigned char __iomem*)mtk_musbfsh->mregs, MUSBFSH_POWER, power);
 
 	frame_number = musbfsh_readw((unsigned char __iomem*)mtk_musbfsh->mregs,MUSBFSH_FRAME); 
-	MYDBG("frame_number : %d\n", frame_number);
 
 	mdelay(12);
-	MYDBG("suspend done\n");
 	frame_number = musbfsh_readw((unsigned char __iomem*)mtk_musbfsh->mregs,MUSBFSH_FRAME); 
-	MYDBG("frame_number : %d\n", frame_number);
 
 	mdelay(1000);
-	MYDBG("start resuming\n");
 
 #ifdef MTK_DT_USB_SUPPORT
-	MYDBG("request md wake up\n");
 	request_wakeup_md_timeout(0, 0);		
 #endif
 
@@ -228,24 +220,19 @@ void mt65xx_usb11_suspend_resume_test(void)
 	power &= ~MUSBFSH_POWER_SUSPENDM;
 	power |= MUSBFSH_POWER_RESUME;
 	musbfsh_writeb((unsigned char __iomem*)mtk_musbfsh->mregs, MUSBFSH_POWER, power);
-	MYDBG("");
 
 	mdelay(12);
-	MYDBG("stop resuming\n");
 
 	power = musbfsh_readb((unsigned char __iomem*)mtk_musbfsh->mregs, MUSBFSH_POWER);
 	power &= ~MUSBFSH_POWER_RESUME;
 	musbfsh_writeb((unsigned char __iomem*)mtk_musbfsh->mregs, MUSBFSH_POWER, power);
 	
 	frame_number = musbfsh_readw((unsigned char __iomem*)mtk_musbfsh->mregs,MUSBFSH_FRAME); 
-	MYDBG("frame_number : %d\n", frame_number);
 
 	mdelay(3);
 	
 	frame_number = musbfsh_readw((unsigned char __iomem*)mtk_musbfsh->mregs,MUSBFSH_FRAME); 
-	MYDBG("frame_number : %d\n", frame_number);
 
-	MYDBG("end\n");
 
 }
 
@@ -269,7 +256,6 @@ void create_dsda_tmp_entry(void);
 
 void release_usb11_wakelock(void)
 {
-	MYDBG("\n");
 	if(musbfsh_wake_lock_hold){
 		wake_unlock(&musbfsh_suspend_lock);	
 	}	
@@ -278,7 +264,6 @@ void release_usb11_wakelock(void)
 irqreturn_t remote_wakeup_irq(unsigned irq, struct irq_desc *desc)
 {
 	musbfsh_eint_cnt++;
-	MYDBG("cpuid:%d\n", smp_processor_id());	
 #if 0
 	u8		power, devctl;
 	unsigned long flags;
@@ -370,7 +355,6 @@ void mt65xx_usb20_suspend_resume_test(void)
 	u8	power;
 	u32 frame_number;	
 
-	MYDBG("begin\n");
 
 	power = musbfsh_readb((unsigned char __iomem*)g_musbfsh->mregs, MUSBFSH_POWER);
 	//		power &= ~MUSBFSH_POWER_RESUME;
@@ -379,38 +363,29 @@ void mt65xx_usb20_suspend_resume_test(void)
 	musbfsh_writeb((unsigned char __iomem*)g_musbfsh->mregs, MUSBFSH_POWER, power);
 
 	frame_number = musbfsh_readw((unsigned char __iomem*)g_musbfsh->mregs,MUSBFSH_FRAME); 
-	MYDBG("frame_number : %d\n", frame_number);
 
 	mdelay(12);
-	MYDBG("suspend done\n");
 	frame_number = musbfsh_readw((unsigned char __iomem*)g_musbfsh->mregs,MUSBFSH_FRAME); 
-	MYDBG("frame_number : %d\n", frame_number);
 
 	mdelay(1000);
-	MYDBG("start resuming\n");
 
 	power = musbfsh_readb((unsigned char __iomem*)g_musbfsh->mregs, MUSBFSH_POWER);
 	power &= ~MUSBFSH_POWER_SUSPENDM;
 	power |= MUSBFSH_POWER_RESUME;
 	musbfsh_writeb((unsigned char __iomem*)g_musbfsh->mregs, MUSBFSH_POWER, power);
-	MYDBG("");
 
 	mdelay(12);
-	MYDBG("stop resuming\n");
 
 	power = musbfsh_readb((unsigned char __iomem*)g_musbfsh->mregs, MUSBFSH_POWER);
 	power &= ~MUSBFSH_POWER_RESUME;
 	musbfsh_writeb((unsigned char __iomem*)g_musbfsh->mregs, MUSBFSH_POWER, power);
 	
 	frame_number = musbfsh_readw((unsigned char __iomem*)g_musbfsh->mregs,MUSBFSH_FRAME); 
-	MYDBG("frame_number : %d\n", frame_number);
 
 	mdelay(3);
 	
 	frame_number = musbfsh_readw((unsigned char __iomem*)g_musbfsh->mregs,MUSBFSH_FRAME); 
-	MYDBG("frame_number : %d\n", frame_number);
 
-	MYDBG("end\n");
 
 }
 
@@ -487,7 +462,6 @@ void mt65xx_usb20_suspend_resume_test(void)
 	u8	power;
 	u32 frame_number;	
 
-	MYDBG("begin\n");
 
 	power = musbfsh_readb((unsigned char __iomem*)g_musbfsh->mregs, MUSBFSH_POWER);
 	//		power &= ~MUSBFSH_POWER_RESUME;
@@ -496,45 +470,35 @@ void mt65xx_usb20_suspend_resume_test(void)
 	musbfsh_writeb((unsigned char __iomem*)g_musbfsh->mregs, MUSBFSH_POWER, power);
 
 	frame_number = musbfsh_readw((unsigned char __iomem*)g_musbfsh->mregs,MUSBFSH_FRAME); 
-	MYDBG("frame_number : %d\n", frame_number);
 
 	mdelay(12);
-	MYDBG("suspend done\n");
 	frame_number = musbfsh_readw((unsigned char __iomem*)g_musbfsh->mregs,MUSBFSH_FRAME); 
-	MYDBG("frame_number : %d\n", frame_number);
 
 	mdelay(1000);
-	MYDBG("start resuming\n");
 
 	power = musbfsh_readb((unsigned char __iomem*)g_musbfsh->mregs, MUSBFSH_POWER);
 	power &= ~MUSBFSH_POWER_SUSPENDM;
 	power |= MUSBFSH_POWER_RESUME;
 	musbfsh_writeb((unsigned char __iomem*)g_musbfsh->mregs, MUSBFSH_POWER, power);
-	MYDBG("");
 
 	mdelay(12);
-	MYDBG("stop resuming\n");
 
 	power = musbfsh_readb((unsigned char __iomem*)g_musbfsh->mregs, MUSBFSH_POWER);
 	power &= ~MUSBFSH_POWER_RESUME;
 	musbfsh_writeb((unsigned char __iomem*)g_musbfsh->mregs, MUSBFSH_POWER, power);
 	
 	frame_number = musbfsh_readw((unsigned char __iomem*)g_musbfsh->mregs,MUSBFSH_FRAME); 
-	MYDBG("frame_number : %d\n", frame_number);
 
 	mdelay(3);
 	
 	frame_number = musbfsh_readw((unsigned char __iomem*)g_musbfsh->mregs,MUSBFSH_FRAME); 
-	MYDBG("frame_number : %d\n", frame_number);
 
-	MYDBG("end\n");
 
 }
 
 
 void musbfsh_root_disc_procedure(void)
 {
-	MYDBG("");
 	usb_hcd_resume_root_hub(musbfsh_to_hcd(g_musbfsh));
 	musbfsh_root_disconnect(g_musbfsh);
 }
@@ -554,7 +518,6 @@ void musbfsh_open_vsim_power(int on)
 		hwPowerOn(MT6325_POWER_LDO_VSIM1, VOL_3100, "USB11-SIM");
 	else
 		hwPowerDown(MT6325_POWER_LDO_VSIM1, "USB11-SIM");	 	
-	MYDBG("musbfsh_open_vsim_power = %d\n",on);	
 }
 void musbfsh_open_vsim_power1(int on)
 {
@@ -562,23 +525,19 @@ void musbfsh_open_vsim_power1(int on)
 		hwPowerOn(MT6325_POWER_LDO_VSIM1, VOL_3000, "USB11-SIM");
 	else
 		hwPowerDown(MT6325_POWER_LDO_VSIM1, "USB11-SIM");	 	
-	MYDBG("musbfsh_open_vsim_power = %d\n",on);	
 }
 
 void musbfsh_start_session_pure(void )
 {
 	u8 devctl;
-	MYDBG("");
 
 	devctl = musbfsh_readb((unsigned char __iomem*)g_musbfsh->mregs, MUSBFSH_DEVCTL);
 	devctl |= MUSBFSH_DEVCTL_SESSION;
 	musbfsh_writeb((unsigned char __iomem*)g_musbfsh->mregs, MUSBFSH_DEVCTL, devctl);
 
-	MYDBG("[IC-USB]start session PURE\n");
 }
 void musbfsh_init_phy_by_voltage(enum PHY_VOLTAGE_TYPE phy_volt)
 {
-	MYDBG("");
 	if(!usb11_enabled)
 	{
 		usb11_enabled = 1;
@@ -609,9 +568,7 @@ void musbfsh_start_session(void )
 	USB11PHY_SET8(0x6d, 0x3e);
 
 #ifdef MTK_ICUSB_TAKE_WAKE_LOCK
-	MYDBG("[IC-USB]start session, wake_lock taken feature enalbed\n");
 #else
-	MYDBG("[IC-USB]start session, wake_lock taken feature disalbed\n");
 #endif
 }
 
@@ -619,12 +576,10 @@ void musbfsh_start_session(void )
 void musbfsh_stop_session(void )
 {
 	u8 devctl;
-	MYDBG("");
 	devctl = musbfsh_readb((unsigned char __iomem*)g_musbfsh->mregs, MUSBFSH_DEVCTL);
 	devctl &= ~(MUSBFSH_DEVCTL_SESSION);
 	musbfsh_writeb((unsigned char __iomem*)g_musbfsh->mregs, MUSBFSH_DEVCTL, devctl);
 	
-	MYDBG("[IC_USB] stop session\n");
 }
 
 #if defined(MTK_ICUSB_BABBLE_RECOVER) || defined(MTK_SMARTBOOK_SUPPORT)
@@ -667,8 +622,6 @@ void musbfsh_mac_init(void)
 	struct timeval tv_begin, tv_end;
 	do_gettimeofday(&tv_begin);
 
-	MYDBG("");
-
 	musbfsh_generic_disable(g_musbfsh);
 
 	musbfsh_writeb(g_musbfsh->mregs,MUSBFSH_HSDMA_DMA_INTR_UNMASK_SET,0xff);
@@ -678,7 +631,6 @@ void musbfsh_mac_init(void)
 	musbfsh_start(g_musbfsh);
 	
 	do_gettimeofday(&tv_end);
-	MYDBG("time spent, sec : %d, usec : %d\n", (unsigned int)(tv_end.tv_sec - tv_begin.tv_sec), (unsigned int)(tv_end.tv_usec - tv_begin.tv_usec));
 
 }
 
@@ -942,7 +894,6 @@ static irqreturn_t musbfsh_stage0_irq(struct musbfsh *musbfsh, u8 int_usb,
 #ifdef CONFIG_MTK_ICUSB_SUPPORT
 		if(skip_session_req_attr.value)
 		{
-			MYDBG("SESSION_REQUEST SKIPPED FOR IC USB\n");
 		}
 		else
 		{
@@ -1068,7 +1019,6 @@ static irqreturn_t musbfsh_stage0_irq(struct musbfsh *musbfsh, u8 int_usb,
 		}
 		else
 		{
-			MYDBG("");
 		}
 #if 0
 		WARNING("CONNECT ! devctl 0x%02x, g_usb_clk_reg_before : %x, g_usb_clk_reg_after : %x, 0xF000014C : %x, g_FS_EOF1_before : %x, g_FS_EOF1_after :%x\n", 
@@ -1146,7 +1096,6 @@ static irqreturn_t musbfsh_stage0_irq(struct musbfsh *musbfsh, u8 int_usb,
 		}
 		else
 		{
-			MYDBG("");
 		}
 #endif
 #if defined(MTK_ICUSB_BABBLE_RECOVER) || defined(MTK_SMARTBOOK_SUPPORT)
@@ -1242,7 +1191,6 @@ void musbfsh_start(struct musbfsh *musbfsh)
 #ifdef CONFIG_MTK_ICUSB_SUPPORT
 	if(skip_enable_session_attr.value)
 	{
-		MYDBG("SESSION ENABLE SKIPPED FOR IC USB\n");
 	}
 	else
 	{
@@ -2091,7 +2039,6 @@ musbfsh_init_controller(struct device *dev, int nIrq, void __iomem *ctrl,void __
 #ifdef CONFIG_MTK_ICUSB_SUPPORT
 	if(skip_mac_init_attr.value)
 	{
-		MYDBG("skip musbfsh_generic_disable() and musbfsh_core_init()\n");
 	}
 	else
 	{
@@ -2174,10 +2121,8 @@ musbfsh_init_controller(struct device *dev, int nIrq, void __iomem *ctrl,void __
 #ifdef MTK_ICUSB_TAKE_WAKE_LOCK
 	wake_lock(&musbfsh_suspend_lock);			
 #else
-	MYDBG("skip wake_lock(&musbfsh_suspend_lock)\n");
 #endif
 
-	MYDBG("end of %s(), build time : %s\n", __func__, __TIME__);
 
 #endif
 #ifdef MTK_DT_USB_SUPPORT
@@ -2186,7 +2131,6 @@ musbfsh_init_controller(struct device *dev, int nIrq, void __iomem *ctrl,void __
 	/* temporialy for DSDA bring up */
 	if(musbfsh_wake_lock_hold){
 		wake_lock(&musbfsh_suspend_lock);		
-		MYDBG("force wake_lock(&musbfsh_suspend_lock)\n");
 	}
 	create_dsda_tmp_entry();
 #endif	
@@ -2420,13 +2364,11 @@ static int musbfsh_suspend(struct device *dev)
 	struct platform_device *pdev = to_platform_device(dev);
 	//unsigned long	flags;
 	struct musbfsh	*musbfsh = dev_to_musbfsh(&pdev->dev);
-	MYDBG("");		
 	//MYDBG("cpuid:%d\n", smp_processor_id());	
 
 #ifdef CONFIG_MTK_ICUSB_SUPPORT
 	if(!usb11_enabled)
 	{
-		MYDBG("usb11 is not enabled");
 		return 0;
 	}
 #endif
@@ -2460,13 +2402,10 @@ static int musbfsh_resume(struct device *dev)
 	struct platform_device *pdev = to_platform_device(dev);
 	//unsigned long	flags;
 	struct musbfsh	*musbfsh = dev_to_musbfsh(&pdev->dev);
-	MYDBG("");		
 
 #ifdef CONFIG_MTK_ICUSB_SUPPORT
-	MYDBG("suspend_cnt : %d, resume_cnt :%d\n", suspend_cnt, resume_cnt);															
 	if(!usb11_enabled)
 	{
-		MYDBG("usb11 is not enabled");
 		return 0;
 	}
 #endif
diff --git a/drivers/misc/mediatek/usb11/mt6580/musbfsh_debugfs.c b/drivers/misc/mediatek/usb11/mt6580/musbfsh_debugfs.c
index 7f7499ed0..8f9045bc8 100644
--- a/drivers/misc/mediatek/usb11/mt6580/musbfsh_debugfs.c
+++ b/drivers/misc/mediatek/usb11/mt6580/musbfsh_debugfs.c
@@ -336,13 +336,11 @@ void create_musbfsh_cmd_proc_entry(void)
 {
 	struct proc_dir_entry *prEntry;
 
-	MYDBG("");
 
 
 	prEntry = proc_create("MUSBFSH_CMD_ENTRY", 0660, 0, &musbfsh_ic_usb_cmd_proc_fops);
 	if (prEntry)
 	{
-		MYDBG("add /proc/MUSBFSH_CMD_ENTRY ok\n");
 	}
 	else
 	{
diff --git a/drivers/misc/mediatek/usb11/mt6580/musbfsh_mt65xx.c b/drivers/misc/mediatek/usb11/mt6580/musbfsh_mt65xx.c
index 0a04c3bea..1a70a0945 100644
--- a/drivers/misc/mediatek/usb11/mt6580/musbfsh_mt65xx.c
+++ b/drivers/misc/mediatek/usb11/mt6580/musbfsh_mt65xx.c
@@ -140,13 +140,10 @@ void mt65xx_usb11_mac_reset_and_phy_stress_set(void)
 	struct timeval tv_begin, tv_end;
 	do_gettimeofday(&tv_begin);
 
-	MYDBG("");
 
 #if 0
 	musbfsh_root_disc_procedure();
 	mdelay(2000);					// wait disc procedure done
-#else
-	MYDBG("skip musbfsh_root_disc_procedure()\n");
 #endif
 
 	reset_usb11_phy_power_negotiation_status();
@@ -172,7 +169,6 @@ void mt65xx_usb11_mac_reset_and_phy_stress_set(void)
 	//mt65xx_usb11_mac_phy_dump();
 
 	do_gettimeofday(&tv_end);
-	MYDBG("time spent, sec : %d, usec : %d\n", (unsigned int)(tv_end.tv_sec - tv_begin.tv_sec), (unsigned int)(tv_end.tv_usec - tv_begin.tv_usec));
 }
 
 void mt65xx_usb11_mac_phy_babble_clear(struct musbfsh *musbfsh)
@@ -214,41 +210,34 @@ void usb11_phy_set_test(void)
 {
 	char result;
 
-	MYDBG("");
 
 	result = USB11PHY_READ8(0x12);
-	MYDBG("result : %x\n", result);
 
 	//RG_USB20_ICUSB_EN, b0
 	USB11PHY_CLR8(0x12, 0x01);
 
 	result = USB11PHY_READ8(0x12);
-	MYDBG("result : %x\n", result);
 
 	//RG_USB20_ICUSB_EN, b1
 	USB11PHY_SET8(0x12, 0x01);
 
 	result = USB11PHY_READ8(0x12);
-	MYDBG("result : %x\n", result);
 
 }
 
 enum PHY_VOLTAGE_TYPE get_usb11_phy_voltage(void)
 {
-	MYDBG("");
 	dump_stack();
 	return g_phy_voltage;
 }
 
 void set_usb_phy_voltage(enum PHY_VOLTAGE_TYPE phy_volt)
 {
-	MYDBG("");
 	g_phy_voltage = phy_volt;
 }
 
 void mt65xx_usb11_disable_clk_pll_pw(void)
 {
-	MYDBG("");
 #if 0
 	MYDBG("skip---\n");
 #else
@@ -260,7 +249,6 @@ void mt65xx_usb11_disable_clk_pll_pw(void)
 }
 void mt65xx_usb11_enable_clk_pll_pw(void)
 {
-	MYDBG("");
 #if 0
 	MYDBG("skip---\n");
 #else
@@ -276,7 +264,6 @@ void mt65xx_usb11_enable_clk_pll_pw(void)
 void usb11_hs_slew_rate_cal(void);
 void mt65xx_usb11_phy_poweron_common(int icusb, int bias_off)
 {
-	MYDBG("icusb : %d, bias_off : %d\n", icusb, bias_off);
 
 
 	/* special for 95 phy */
@@ -337,19 +324,16 @@ void mt65xx_usb11_phy_poweron_common(int icusb, int bias_off)
 
 	if(icusb)
 	{
-		MYDBG("");
 		//RG_USB20_ICUSB_EN, b1
 		USB11PHY_SET8(0x12, 0x01);
 
 		if(bias_off)
 		{
-			MYDBG("");
 			//set 3.3V bias off ==> 1.8V
 			USB11PHY_SET8(0x15, 0x04);
 		}
 		else
 		{
-			MYDBG("");
 			//clear 3.3V bias off ==> 3.3V
 			USB11PHY_CLR8(0x15, 0x04);
 		}
@@ -367,7 +351,6 @@ void mt65xx_usb11_phy_poweron_common(int icusb, int bias_off)
 	udelay(800);
 	if(!icusb)
 	{
-		MYDBG("");
 		usb11_hs_slew_rate_cal();
 	}
 
@@ -380,12 +363,10 @@ void mt65xx_usb11_phy_poweron_common(int icusb, int bias_off)
 
 	if(skip_mac_init_attr.value)
 	{
-		MYDBG("perform musbfsh_mac_init()\n");
 		musbfsh_mac_init();
 	}
 	else
 	{
-		MYDBG("not perform musbfsh_mac_init()\n");
 	}
 
 	//	mt65xx_usb11_mac_phy_dump();
@@ -394,7 +375,6 @@ void mt65xx_usb11_phy_poweron_common(int icusb, int bias_off)
 
 void mt65xx_usb11_phy_savecurrent_common(int icusb, int bias_off)
 {
-	MYDBG("icusb : %d, bias_off : %d\n", icusb, bias_off);
 	if(icusb)
 	{
 		//switch to USB function. (system register, force ip into usb mode.
@@ -431,8 +411,6 @@ void mt65xx_usb11_phy_savecurrent_common(int icusb, int bias_off)
 	}
 	else	// from mt65xx_usb11_phy_savecurrent()
 	{
-		MYDBG("");
-
 		//4 1. swtich to USB function. (system register, force ip into usb mode.
 		USB11PHY_CLR8(0x6b, 0x04);
 		USB11PHY_CLR8(0x6e, 0x01);
@@ -484,7 +462,6 @@ void mt65xx_usb11_phy_savecurrent_common(int icusb, int bias_off)
 
 void mt65xx_usb11_phy_recover_common(int icusb, int bias_off)
 {
-	MYDBG("icusb : %d, bias_off : %d\n", icusb, bias_off);
 	if(icusb)
 	{
 		//switch to USB function. (system register, force ip into usb mode.
@@ -519,7 +496,6 @@ void mt65xx_usb11_phy_recover_common(int icusb, int bias_off)
 	}
 	else			// from mt65xx_usb11_phy_recover()
 	{
-		MYDBG("");
 		//4 1. swtich to USB function. (system register, force ip into usb mode.
 		//force_uart_en = 1'b0
 		USB11PHY_CLR8(0x6b, 0x04);
@@ -574,51 +550,42 @@ void mt65xx_usb11_phy_recover_common(int icusb, int bias_off)
 
 void mt65xx_usb11_phy_poweron_volt_30(void)
 {
-	MYDBG("");
 	mt65xx_usb11_phy_poweron_common(1, 0);
 }
 
 void mt65xx_usb11_phy_savecurrent_volt_30(void)
 {
-	MYDBG("");
 	mt65xx_usb11_phy_savecurrent_common(1, 0);
 }
 void mt65xx_usb11_phy_recover_volt_30(void)
 {
-	MYDBG("");
 	mt65xx_usb11_phy_recover_common(1, 0);
 }
 
 void mt65xx_usb11_phy_poweron_volt_18(void)
 {
-	MYDBG("");
 	mt65xx_usb11_phy_poweron_common(1, 1);
 }
 void mt65xx_usb11_phy_savecurrent_volt_18(void)
 {
-	MYDBG("");
 	mt65xx_usb11_phy_savecurrent_common(1, 1);
 }
 void mt65xx_usb11_phy_recover_volt_18(void)
 {
-	MYDBG("");
 	mt65xx_usb11_phy_recover_common(1, 1);
 }
 
 void mt65xx_usb11_phy_poweron_volt_50(void)
 {
-	MYDBG("");
 	mt65xx_usb11_phy_poweron_common(0,0);
 }
 void mt65xx_usb11_phy_recover_volt_50(void)
 {
-	MYDBG("");
 	mt65xx_usb11_phy_recover_common(0, 0);
 }
 
 void mt65xx_usb11_phy_savecurrent_volt_50(void)
 {
-	MYDBG("");
 	mt65xx_usb11_phy_savecurrent_common(0, 0);
 }
 #endif
@@ -633,7 +600,6 @@ void usb11_hs_slew_rate_cal(void){
 
 	/* marked becoz FS device, FIXME to check this function correctness*/
 #ifdef MTK_DT_USB_SUPPORT
-	MYDBG("\n");	
 	return;
 #endif
 	//4 s1:enable usb ring oscillator.
@@ -709,11 +675,9 @@ void mt65xx_usb11_phy_poweron(void)
 	}
 	else
 	{
-		MYDBG("");
 	}
 
 	do_gettimeofday(&tv_end);
-	MYDBG("time spent, sec : %d, usec : %d\n", (unsigned int)(tv_end.tv_sec - tv_begin.tv_sec), (unsigned int)(tv_end.tv_usec - tv_begin.tv_usec));
 #else
 	//move pll to func calling mt65xx_usb11_phy_poweron()
 #if 0
@@ -854,7 +818,6 @@ void mt65xx_usb11_phy_savecurrent(void)
 	}
 	else
 	{
-		MYDBG("");
 	}
 #else
 
@@ -927,7 +890,6 @@ void mt65xx_usb11_phy_recover(void)
 	}
 	else
 	{
-		MYDBG("");
 	}
 #else
 
@@ -1029,16 +991,13 @@ void mt65xx_usb11_clock_enable(bool enable)
 {
 	//WARNING("mt65xx_usb11_clock_enable++\r\n");
 	//dump_stack();
-	MYDBG("enable_cnt : %d, disable_cnt : %d\n", enable_cnt, disable_cnt);
 	if(enable){
 		enable_cnt++;
 		if(clock_enabled)//already enable
 		{
-			MYDBG("");
 			return;
 		}
 		else{
-			MYDBG("");			
 			//enable_clock (MT_CG_INFRA_USB, "USB11");			
 			//enable_clock (MT_CG_INFRA_ICUSB, "USB11");
 			//enable_clock (MT_CG_INFRA_USB_MCU, "USB11");
@@ -1050,11 +1009,9 @@ void mt65xx_usb11_clock_enable(bool enable)
 		disable_cnt++;
 		if(!clock_enabled)//already disabled.
 		{
-			MYDBG("");
 			return;
 		}
 		else{
-			MYDBG("");
 			//disable_clock (MT_CG_INFRA_USB_MCU, "USB11");			
 			//disable_clock (MT_CG_INFRA_ICUSB, "USB11");
 			//disable_clock (MT_CG_INFRA_USB, "USB11");	
@@ -1100,7 +1057,6 @@ int mt65xx_usb11_poweron(int on){
 			}
 #endif
 			}
-			MYDBG("");
 //			dump_stack();
 
 			musbfsh_power = true;
@@ -1124,7 +1080,6 @@ int mt65xx_usb11_poweron(int on){
 			}
 #endif
 
-			MYDBG("");
 //			dump_stack();
 
 			musbfsh_power = false;
@@ -1170,8 +1125,6 @@ int musbfsh_platform_init(struct musbfsh *musbfsh)
 	   VSIM1 give PHY power and SIM vcc */
 	//hwPowerOn(MT6331_POWER_LDO_VSIM1, VOL_3000, "USB11");
 
-	MYDBG("");
-
 	WARNING("musbfsh_platform_init++\n");
 	if(!musbfsh){
 		ERR("musbfsh_platform_init,error,musbfsh is NULL");
diff --git a/drivers/misc/mediatek/usb11/musbfsh_icusb.c b/drivers/misc/mediatek/usb11/musbfsh_icusb.c
index adce36623..28ecfef8f 100644
--- a/drivers/misc/mediatek/usb11/musbfsh_icusb.c
+++ b/drivers/misc/mediatek/usb11/musbfsh_icusb.c
@@ -98,7 +98,6 @@ static void icusb_resume_time_negotiation(struct usb_device *dev)
 	char resume_time_negotiation_data[IC_USB_LEN_RESUME_TIME_NEGOTIATION];
 	while(retries-- > 0)
 	{
-		MYDBG("");
 		ret = usb_control_msg(dev, usb_rcvctrlpipe(dev, 0),
 				IC_USB_REQ_GET_INTERFACE_RESUME_TIME,
 				IC_USB_REQ_TYPE_GET_INTERFACE_RESUME_TIME,
@@ -108,12 +107,10 @@ static void icusb_resume_time_negotiation(struct usb_device *dev)
 				IC_USB_LEN_RESUME_TIME_NEGOTIATION,
 				USB_CTRL_GET_TIMEOUT);
 		if (ret < 0) {
-			MYDBG("ret : %d\n", ret);
 			continue;
 		}
 		else
 		{
-			MYDBG("");
 			icusb_dump_data(resume_time_negotiation_data, IC_USB_LEN_RESUME_TIME_NEGOTIATION);
 			break;
 		}
@@ -131,7 +128,6 @@ void icusb_power_negotiation(struct usb_device *dev)
 
 	while(retries-- > 0)
 	{
-		MYDBG("");
 		power_negotiation_done = 0 ;
 		ret = usb_control_msg(dev, usb_rcvctrlpipe(dev, 0),
 				IC_USB_REQ_GET_INTERFACE_POWER,
@@ -142,12 +138,10 @@ void icusb_power_negotiation(struct usb_device *dev)
 				IC_USB_LEN_POWER_NEGOTIATION,
 				USB_CTRL_GET_TIMEOUT);
 		if (ret < 0) {
-			MYDBG("ret : %d\n", ret);
 			continue;
 		}
 		else
 		{
-			MYDBG("");
 			icusb_dump_data(get_power_negotiation_data, IC_USB_LEN_POWER_NEGOTIATION);
 
 			/* copy the prefer bit from get interface power */
@@ -165,19 +159,15 @@ void icusb_power_negotiation(struct usb_device *dev)
 			}
 			else
 			{
-				MYDBG("");
 			}
 
 			/* set current */
 			if(set_power_negotiation_data[1] > IC_USB_CURRENT)
 			{
-				MYDBG("");
 				set_power_negotiation_data[1] = IC_USB_CURRENT;
 			}else{
-				MYDBG("");
 				set_power_negotiation_data[1] = get_power_negotiation_data[1];
 			}
-			MYDBG("power_negotiation_data[0] : 0x%x , power_negotiation_data[1] : 0x%x, IC_USB_CURRENT :%d",set_power_negotiation_data[0], set_power_negotiation_data[1], IC_USB_CURRENT);
 
 			ret = usb_control_msg(dev, usb_sndctrlpipe(dev, 0),
 					IC_USB_REQ_SET_INTERFACE_POWER,
@@ -189,11 +179,9 @@ void icusb_power_negotiation(struct usb_device *dev)
 					USB_CTRL_SET_TIMEOUT);
 
 			if (ret < 0) {
-				MYDBG("ret : %d\n", ret);
 			}
 			else
 			{
-				MYDBG("");
 				power_negotiation_done = 1 ;
 				break;
 			}
@@ -201,7 +189,6 @@ void icusb_power_negotiation(struct usb_device *dev)
 		}
 	}
 
-	MYDBG("retries : %d\n", retries);
 	if(!power_negotiation_done){
 		set_icusb_phy_power_negotiation_fail();
 	}else{
@@ -217,19 +204,15 @@ void usb11_wait_disconnect_done(int value)
 		while(1)
 		{
 			unsigned int ic_usb_status = g_ic_usb_status;
-			MYDBG("ic_usb_status : %x\n", ic_usb_status);
 			ic_usb_status &= (USB_PORT1_STS_MSK << USB_PORT1_STS_SHIFT);
-			MYDBG("ic_usb_status : %x\n", ic_usb_status);
 
 			if(ic_usb_status == (USB_PORT1_DISCONNECT_DONE << USB_PORT1_STS_SHIFT))
 			{
-				MYDBG("USB_PORT1_DISCONNECT_DONE\n");
 				break;
 			}
 
 			if(ic_usb_status == (USB_PORT1_DISCONNECTING << USB_PORT1_STS_SHIFT))
 			{
-				MYDBG("USB_PORT1_DISCONNECTING\n");
 			}
 
 			msleep(10);
@@ -237,7 +220,6 @@ void usb11_wait_disconnect_done(int value)
 	}
 	else
 	{
-		MYDBG("usb11 is not enabled, skip usb11_wait_disconnect_done()\n");
 	}
 
 }
@@ -245,13 +227,10 @@ void usb11_wait_disconnect_done(int value)
 int check_usb11_sts_disconnect_done(void)
 {
 	unsigned int ic_usb_status = g_ic_usb_status;
-	MYDBG("ic_usb_status : %x\n", ic_usb_status);
 	ic_usb_status &= (USB_PORT1_STS_MSK << USB_PORT1_STS_SHIFT);
-	MYDBG("ic_usb_status : %x\n", ic_usb_status);
 
 	if(ic_usb_status == (USB_PORT1_DISCONNECT_DONE << USB_PORT1_STS_SHIFT))
 	{
-		MYDBG("USB_PORT1_DISCONNECT_DONE got\n");
 		return 1;
 	}
 	else
@@ -262,34 +241,29 @@ int check_usb11_sts_disconnect_done(void)
 }
 void set_usb11_sts_connect(void)
 {
-	MYDBG("...................");
 	g_ic_usb_status &= ~(USB_PORT1_STS_MSK << USB_PORT1_STS_SHIFT);
 	g_ic_usb_status |= ((USB_PORT1_CONNECT) << USB_PORT1_STS_SHIFT);
 }
 
 void set_usb11_sts_disconnecting(void)
 {
-	MYDBG("...................");
 	g_ic_usb_status &= ~(USB_PORT1_STS_MSK << USB_PORT1_STS_SHIFT);
 	g_ic_usb_status |= ((USB_PORT1_DISCONNECTING) << USB_PORT1_STS_SHIFT);
 }
 
 void set_icusb_sts_disconnect_done(void)
 {
-	MYDBG("...................");
 	g_ic_usb_status &= ~(USB_PORT1_STS_MSK << USB_PORT1_STS_SHIFT);
 	g_ic_usb_status |= ((USB_PORT1_DISCONNECT_DONE) << USB_PORT1_STS_SHIFT);
 }
 
 void set_icusb_data_of_interface_power_request(short data)
 {
-	MYDBG("...................");
 	g_ic_usb_status |= ((data) << PREFER_VOL_CLASS_SHIFT);
 }
 
 void reset_usb11_phy_power_negotiation_status(void)
 {
-	MYDBG("...................");
 
 	g_ic_usb_status &= ~(PREFER_VOL_STS_MSK << PREFER_VOL_STS_SHIFT);
 	g_ic_usb_status |= ((PREFER_VOL_NOT_INITED) << PREFER_VOL_STS_SHIFT);
@@ -298,7 +272,6 @@ void reset_usb11_phy_power_negotiation_status(void)
 
 void set_icusb_phy_power_negotiation_fail(void)
 {
-	MYDBG("...................");
 
 	g_ic_usb_status &= ~(PREFER_VOL_STS_MSK << PREFER_VOL_STS_SHIFT);
 	g_ic_usb_status |= ((PREFER_VOL_PWR_NEG_FAIL) << PREFER_VOL_STS_SHIFT);
@@ -307,7 +280,6 @@ void set_icusb_phy_power_negotiation_fail(void)
 
 void set_icusb_phy_power_negotiation_ok(void)
 {
-	MYDBG("...................");
 
 	g_ic_usb_status &= ~(PREFER_VOL_STS_MSK << PREFER_VOL_STS_SHIFT);
 	g_ic_usb_status |= ((PREFER_VOL_PWR_NEG_OK) << PREFER_VOL_STS_SHIFT);
@@ -318,9 +290,7 @@ void set_icusb_phy_power_negotiation_ok(void)
 void usb11_phy_prefer_3v_status_check(void)
 {
 	unsigned int ic_usb_status = g_ic_usb_status;
-	MYDBG("ic_usb_status : %x\n", ic_usb_status);
 	ic_usb_status &= (PREFER_VOL_STS_MSK << PREFER_VOL_STS_SHIFT);
-	MYDBG("ic_usb_status : %x\n", ic_usb_status);
 }
 
 
@@ -354,7 +324,6 @@ int usb11_session_control(enum SESSION_CONTROL_ACTION action)
 		}
 		else
 		{
-			MYDBG("usb11 has been enabled, skip mt65xx_usb11_mac_reset_and_phy_stress_set()\n");
 		}
 	}
 	else
@@ -406,7 +375,6 @@ static void udp_receive(struct sk_buff *skb)
 	struct nlmsghdr *nlh;
 	char reply_data[16];
 
-	MYDBG("");
 	nlh = (struct nlmsghdr *)skb->data;
 
 	/* global here */
@@ -414,8 +382,6 @@ static void udp_receive(struct sk_buff *skb)
 	uid = NETLINK_CREDS(skb)->uid;
 	seq = nlh->nlmsg_seq;
 	data = NLMSG_DATA(nlh);
-	MYDBG("recv skb from user space uid:%d pid:%d seq:%d\n",uid,g_pid,seq);
-	MYDBG("data is :%s\n",(char *)data);
 
 
 	sprintf(reply_data, "%d", g_pid);
@@ -458,11 +424,9 @@ void create_icusb_sysfs_attr(void)
 	int err = -1;
 	mykobj = kzalloc(sizeof(*mykobj), GFP_KERNEL);
 	if (mykobj) {
-		MYDBG("");
 		kobject_init(mykobj, &mytype);
 		if (kobject_add(mykobj, NULL, "%s", "icusb_attr")) {
 			err = -1;
-			MYDBG("Sysfs creation failed\n");
 			kobject_put(mykobj);
 			mykobj = NULL;
 		}
@@ -484,11 +448,9 @@ static ssize_t musbfsh_ic_tmp_proc_entry(struct file *file_ptr, const char __use
 
 	if(cmd[0] == '4')
 	{
-		MYDBG("");
 		udp_reply(g_pid, 0, "HELLO, SS7_IC_USB!!!");
 	}
 
-	MYDBG("");
 
 	return count;
 }
@@ -510,7 +472,6 @@ void create_ic_tmp_entry(void)
 	prEntry = proc_create("IC_TMP_ENTRY", 0660, proc_drv_icusb_dir_entry, &musbfsh_ic_tmp_proc_fops);
 	if (prEntry)
 	{
-		MYDBG("add /proc/IC_TMP_ENTRY ok\n");
 	}
 	else
 	{
@@ -521,7 +482,6 @@ void create_ic_tmp_entry(void)
 static ssize_t musbfsh_ic_usb_cmd_proc_status_read(struct file *file_ptr, char __user *user_buffer, size_t count, loff_t *position)
 {
 	int len;
-	MYDBG("");
 
 	if( copy_to_user(user_buffer, &g_ic_usb_status, sizeof(g_ic_usb_status)) != 0 )
 	{
@@ -544,29 +504,23 @@ ssize_t musbfsh_ic_usb_cmd_proc_entry(struct file *file_ptr, const char __user *
 	{
 		return -EFAULT;
 	}
-	MYDBG("type : %x, length : %x, data[0] : %x\n", ic_cmd.type, ic_cmd.length, ic_cmd.data[0]);
 	
 	switch(ic_cmd.type)
 	{
 		case USB11_SESSION_CONTROL:
-			MYDBG("");
 			usb11_session_control(ic_cmd.data[0]);
 			break;
 		case USB11_INIT_PHY_BY_VOLTAGE:
-			MYDBG("");
 			usb11_init_phy_by_voltage(ic_cmd.data[0]);
 			break;
 		case USB11_WAIT_DISCONNECT_DONE:
-			MYDBG("");
 			usb11_wait_disconnect_done(ic_cmd.data[0]);
 			break;
 		/*--- special purpose ---*/
 		case 's':
-			MYDBG("create sysfs\n");
 			create_icusb_sysfs_attr();
 			break;			
 		case 't':
-			MYDBG("create tmp proc\n");
 			create_ic_tmp_entry();
 			break;			
 	}
@@ -582,7 +536,6 @@ void create_ic_usb_cmd_proc_entry(void)
 {
 	struct proc_dir_entry *prEntry;
 
-	MYDBG("");
 	proc_drv_icusb_dir_entry = proc_mkdir("driver/icusb", NULL);
 	
 	if (NULL == proc_drv_icusb_dir_entry)
@@ -594,7 +547,6 @@ void create_ic_usb_cmd_proc_entry(void)
 	prEntry = proc_create("IC_USB_CMD_ENTRY", 0660, proc_drv_icusb_dir_entry, &musbfsh_ic_usb_cmd_proc_fops);
 	if (prEntry)
 	{
-		MYDBG("add IC_USB_CMD_ENTRY ok\n");
 		netlink_sock = netlink_kernel_create(&init_net, NETLINK_USERSOCK, &nl_cfg);		
 	}
 	else
diff --git a/drivers/misc/mediatek/usb11/musbfsh_virthub.c b/drivers/misc/mediatek/usb11/musbfsh_virthub.c
index 68b0dad1a..74c8f338a 100644
--- a/drivers/misc/mediatek/usb11/musbfsh_virthub.c
+++ b/drivers/misc/mediatek/usb11/musbfsh_virthub.c
@@ -107,7 +107,6 @@ static void musbfsh_port_suspend(struct musbfsh *musbfsh, bool do_suspend)
 
 #ifdef CONFIG_MTK_DT_USB_SUPPORT
 		if(musbfsh_skip_port_suspend){
-			MYDBG("\n");	
 			musbfsh->port1_status |= USB_PORT_STAT_SUSPEND;
 			return ;
 		}
@@ -128,7 +127,6 @@ static void musbfsh_port_suspend(struct musbfsh *musbfsh, bool do_suspend)
 		while (!(intrusb & MUSBFSH_INTR_SOF)) {
 			intrusb = musbfsh_readb(mbase, MUSBFSH_INTRUSB);
 			if (retries-- < 1){
-				MYDBG("\n");
 				break;
 			}
 		}
@@ -159,7 +157,6 @@ static void musbfsh_port_suspend(struct musbfsh *musbfsh, bool do_suspend)
 #ifdef CONFIG_MTK_ICUSB_SUPPORT
 		if(skip_port_pm_attr.value)
 		{
-			MYDBG("skip hw operation for port suspend\n");
 		}
 		else
 		{
@@ -185,7 +182,6 @@ static void musbfsh_port_suspend(struct musbfsh *musbfsh, bool do_suspend)
 		while (power & MUSBFSH_POWER_SUSPENDM) {
 			power = musbfsh_readb(mbase, MUSBFSH_POWER);
 			if (retries-- < 1){
-				MYDBG("\n");		
 				break;
 			}
 		}
@@ -203,7 +199,6 @@ static void musbfsh_port_suspend(struct musbfsh *musbfsh, bool do_suspend)
 
 #ifdef CONFIG_MTK_DT_USB_SUPPORT
 		if(musbfsh_skip_port_resume){
-			MYDBG("\n");
 			request_wakeup_md_timeout(0, 0);		
 			musbfsh->port1_status |= MUSBFSH_PORT_STAT_RESUME;
 			musbfsh->rh_timer = jiffies + msecs_to_jiffies(20);
@@ -234,7 +229,6 @@ static void musbfsh_port_suspend(struct musbfsh *musbfsh, bool do_suspend)
 #ifdef CONFIG_MTK_ICUSB_SUPPORT
 		if(skip_port_pm_attr.value)
 		{
-			MYDBG("skip hw operation for port resume\n");
 		}
 		else
 		{
@@ -334,12 +328,9 @@ static void musbfsh_port_reset(struct musbfsh *musbfsh, bool do_reset)
 			/* RG */
 			USB11PHY_CLR8(0x68, 0x80 | 0x40);  // disconnect host port's pull down resistors on D+ and D-
 			//USB11PHY_SET8(U1PHTCR2, force_usb11_dp_rpu | RG_USB11_DP_RPU); // tell MAC there still is a device attached, ohterwise we will get disconnect interrupt
-
-			MYDBG("USB1.1 PHY special config for IC-USB\n");
 		}
 		else
 		{
-			MYDBG("");
 		}
 #endif
 		musbfsh_writeb(mbase, MUSBFSH_POWER,
@@ -353,7 +344,6 @@ static void musbfsh_port_reset(struct musbfsh *musbfsh, bool do_reset)
 		}
 		else
 		{
-			MYDBG("");
 		}
 #endif
 		mb();
@@ -522,7 +512,6 @@ int musbfsh_hub_control(
 #endif
 			}
 			else{
-				MYDBG("\n");
 			}
 #else
 
@@ -575,7 +564,6 @@ int musbfsh_hub_control(
 #ifdef CONFIG_MTK_ICUSB_SUPPORT
 			if(skip_mac_init_attr.value)
 			{
-				MYDBG("");
 			}
 			else
 			{
diff --git a/drivers/misc/mediatek/usb20/mt6580/usb20.c b/drivers/misc/mediatek/usb20/mt6580/usb20.c
index 5f5af2451..d806079e0 100755
--- a/drivers/misc/mediatek/usb20/mt6580/usb20.c
+++ b/drivers/misc/mediatek/usb20/mt6580/usb20.c
@@ -140,8 +140,6 @@ static void musb_do_idle(unsigned long _musb)
 	u8	devctl;
 
 	if (musb->is_active) {
-		DBG(0, "%s active, igonre do_idle\n",
-			otg_state_string(musb->xceiv->state));
 		return;
 	}
 
@@ -169,8 +167,6 @@ static void musb_do_idle(unsigned long _musb)
 		break;
 	}
 	spin_unlock_irqrestore(&musb->lock, flags);
-
-    DBG(0, "otg_state %s \n", otg_state_string(musb->xceiv->state));
 }
 
 static void mt_usb_try_idle(struct musb *musb, unsigned long timeout)
@@ -211,8 +207,6 @@ static void mt_usb_enable(struct musb *musb)
 {
     unsigned long   flags;
 
-    DBG(0, "%d, %d\n", mtk_usb_power, musb->power);
-
     if (musb->power == true)
         return;
 
@@ -233,7 +227,6 @@ static void mt_usb_enable(struct musb *musb)
 
 #ifndef FPGA_PLATFORM
         //enable_pll(UNIVPLL, "USB_PLL");
-        DBG(0,"enable UPLL before connect\n");
 #endif
         mdelay(10);
 
@@ -250,8 +243,6 @@ static void mt_usb_enable(struct musb *musb)
 
 static void mt_usb_disable(struct musb *musb)
 {
-    printk("%s, %d, %d\n", __func__, mtk_usb_power, musb->power);
-
     if (musb->power == false)
         return;
 
@@ -272,7 +263,6 @@ static void mt_usb_disable(struct musb *musb)
 
 #ifndef FPGA_PLATFORM
         //disable_pll(UNIVPLL,"USB_PLL");
-        DBG(0, "disable UPLL before disconnect\n");
 #endif
 
         up(&power_clock_lock);
@@ -289,7 +279,6 @@ bool mt_usb_is_device(void)
 	DBG(4,"called\n");
 
 	if(!mtk_musb){
-		DBG(0,"mtk_musb is NULL\n");
 		return false; // don't do charger detection when usb is not ready
 	} else {
 		DBG(4,"is_host=%d\n",mtk_musb->is_host);
@@ -308,7 +297,6 @@ bool mt_usb_is_device(void)
 
 void mt_usb_connect(void)
 {
-	  printk("[MUSB] USB is ready for connect \n");
     DBG(3, "is ready %d is_host %d power %d\n",mtk_musb->is_ready,mtk_musb->is_host , mtk_musb->power);
     #ifdef CONFIG_MTK_UART_USB_SWITCH
     if (!mtk_musb || !mtk_musb->is_ready || mtk_musb->is_host || mtk_musb->power || (usb_port_mode_temp == 1))
@@ -318,18 +306,14 @@ void mt_usb_connect(void)
         return;
     #endif
 
-    DBG(0,"cable_mode=%d\n",cable_mode);
-
 #ifdef MTK_CDP_ENABLE
 
 	if (cable_mode != CABLE_MODE_NORMAL) {
 #ifndef FPGA_PLATFORM
 		int charger_type;
 		charger_type = mt_get_charger_type();
-		DBG(0, "cable mode change, type(%d), skip(%d)\n", charger_type, musb_skip_charge_detect);
 		if (!musb_skip_charge_detect && charger_type == STANDARD_HOST) {
 #endif
-			DBG(0, "musb_sync_with_bat, USB_CONFIGURED\n");
 			musb_sync_with_bat(mtk_musb, USB_CONFIGURED);
 			mtk_musb->power = true;
 			//spin_unlock(&musb_connect_lock);
@@ -341,7 +325,6 @@ void mt_usb_connect(void)
 #else
 	if(cable_mode != CABLE_MODE_NORMAL)
 	{
-        DBG(0,"musb_sync_with_bat, USB_CONFIGURED\n");
         musb_sync_with_bat(mtk_musb,USB_CONFIGURED);
         mtk_musb->power = true;
         return;
@@ -354,13 +337,10 @@ void mt_usb_connect(void)
 #ifdef MTK_CDP_ENABLE
 	first_connect = 1;
 #endif
-	printk("[MUSB] USB connect\n");
 }
 
 void mt_usb_disconnect(void)
 {
-	printk("[MUSB] USB is ready for disconnect\n");
-
 	if (!mtk_musb || !mtk_musb->is_ready || mtk_musb->is_host || !mtk_musb->power)
 		return;
 
@@ -370,21 +350,15 @@ void mt_usb_disconnect(void)
 	if (wake_lock_active(&mtk_musb->usb_lock))
 		wake_unlock(&mtk_musb->usb_lock);
 
-    DBG(0,"cable_mode=%d\n",cable_mode);
-
 	if (cable_mode != CABLE_MODE_NORMAL) {
-        DBG(0,"musb_sync_with_bat, USB_SUSPEND\n");
 		musb_sync_with_bat(mtk_musb,USB_SUSPEND);
 		mtk_musb->power = false;
 	}
-
-	printk("[MUSB] USB disconnect\n");
 }
 
 #ifdef MTK_CDP_ENABLE
 #ifndef FPGA_PLATFORM
 void set_usb_rdy(void){
-	DBG(0, "set usb_rdy, wake up bat\n");
 	usb_rdy = 1;
 	wake_up_bat();
 }
@@ -440,17 +414,13 @@ bool usb_cable_connected(void)
 #define FIRST_TYPE_CHECK_CNT 25
 #define FIRST_CONN_DELAY_CNT 40
 
-			DBG(0, "intval:%d, cnt:<%d,%d>\n", FIRST_CONN_DELAY_INTVAL, FIRST_TYPE_CHECK_CNT,
-					FIRST_CONN_DELAY_CNT);
 			while (cnt++ < FIRST_TYPE_CHECK_CNT) {
 
 				charger_type = mt_get_charger_type();
-				DBG(0, "type(%d)\n", charger_type);
 				if (charger_type == STANDARD_HOST || charger_type == CHARGING_HOST)
 					break;
 				msleep(FIRST_CONN_DELAY_INTVAL);
 			}
-			DBG(0, "type check delay %d %d ms done\n", cnt, FIRST_CONN_DELAY_INTVAL);
 			if (cnt < FIRST_TYPE_CHECK_CNT) { /* got type case, should have mt_usb_connect */
 				while (cnt++ < FIRST_CONN_DELAY_CNT) {
 					if (first_connect)
@@ -458,7 +428,6 @@ bool usb_cable_connected(void)
 					msleep(FIRST_CONN_DELAY_INTVAL);
 				}
 			}
-			DBG(0, "delay %d %d ms done\n", cnt, FIRST_CONN_DELAY_INTVAL);
 		}
 #endif
 		return false;
@@ -502,7 +471,6 @@ void pmic_chrdet_int_en(int is_on)
 void musb_sync_with_bat(struct musb *musb,int usb_state)
 {
 #ifndef FPGA_PLATFORM
-	DBG(0,"BATTERY_SetUSBState, state=%d\n",usb_state);
 	BATTERY_SetUSBState(usb_state);
 	wake_up_bat();
 #endif
@@ -543,7 +511,6 @@ static irqreturn_t mt_usb_interrupt(int irq, void *dev_id)
 	u32 usb_l1_ints;
 
 	usb_l1_ints= musb_readl(musb->mregs,USB_L1INTS)&musb_readl(mtk_musb->mregs,USB_L1INTM); //gang  REVISIT
-	DBG(1,"usb interrupt assert %x %x  %x %x %x\n",usb_l1_ints,musb_readl(mtk_musb->mregs,USB_L1INTM),musb_readb(musb->mregs, MUSB_INTRUSBE),musb_readw(musb->mregs,MUSB_INTRTX),musb_readw(musb->mregs,MUSB_INTRTXE));
 
 	if ((usb_l1_ints & TX_INT_STATUS) || (usb_l1_ints & RX_INT_STATUS) || (usb_l1_ints & USBCOM_INT_STATUS)) {
 		if((tmp_status = generic_interrupt(irq, musb)) != IRQ_NONE)
@@ -585,7 +552,6 @@ static ssize_t mt_usb_store_cmode(struct device* dev, struct device_attribute *a
 		DBG(0,"dev is null!!\n");
 		return count;
 	} else if (1 == sscanf(buf, "%d", &cmode)) {
-		DBG(0, "cmode=%d, cable_mode=%d\n", cmode, cable_mode);
 		if (cmode >= CABLE_MODE_MAX)
 			cmode = CABLE_MODE_NORMAL;
 
@@ -659,7 +625,6 @@ static ssize_t mt_usb_store_saving_mode(struct device* dev, struct device_attrib
 		DBG(0,"dev is null!!\n");
 		return count;
 	} else if (1 == sscanf(buf, "%d", &saving)) {
-		DBG(0, "old=%d new=%d\n", saving, saving_mode);
 		if (saving_mode == (!saving))
 			saving_mode = !saving_mode;
 			return count;
@@ -668,7 +633,6 @@ static ssize_t mt_usb_store_saving_mode(struct device* dev, struct device_attrib
 
 bool is_saving_mode()
 {
-	DBG(0,"%d\n", saving_mode);
 	return saving_mode;
 }
 
@@ -709,11 +673,6 @@ static ssize_t mt_usb_show_portmode(struct device* dev, struct device_attribute
 	else
 		port_mode = PORT_MODE_USB;
 
-	if (port_mode == PORT_MODE_USB) {
-		printk("\nUSB Port mode -> USB\n");
-	} else if (port_mode == PORT_MODE_UART) {
-		printk("\nUSB Port mode -> UART\n");
-	}
 	uart_usb_switch_dump_register();
 
 	return scnprintf(buf, PAGE_SIZE, "%d\n", port_mode);
@@ -728,16 +687,13 @@ static ssize_t mt_usb_store_portmode(struct device* dev, struct device_attribute
 		printk("dev is null!!\n");
 		return count;
 	} else if (1 == sscanf(buf, "%d", &portmode)) {
-		printk("\nUSB Port mode: current => %d (port_mode), change to => %d (portmode)\n", port_mode, portmode);
 		if (portmode >= PORT_MODE_MAX)
 			portmode = PORT_MODE_USB;
 
 		if (port_mode != portmode) {
 			if(portmode == PORT_MODE_USB) { // Changing to USB Mode
-				printk("USB Port mode -> USB\n");
 				usb_phy_switch_to_usb();
 			} else if(portmode == PORT_MODE_UART) { // Changing to UART Mode
-				printk("USB Port mode -> UART\n");
 				usb_phy_switch_to_uart();
 			}
 			uart_usb_switch_dump_register();
@@ -766,7 +722,6 @@ static ssize_t mt_usb_show_tx(struct device* dev, struct device_attribute *attr,
 	var = USBPHY_READ8(0x6E);
 #endif
 	var2 = (var >> 3) & ~0xFE;
-	printk("[MUSB]addr: 0x6E (TX), value: %x - %x\n", var, var2);
 
 	sw_tx = var;
 
@@ -784,7 +739,6 @@ static ssize_t mt_usb_store_tx(struct device* dev, struct device_attribute *attr
 		printk("dev is null!!\n");
 		return count;
 	} else if (1 == sscanf(buf, "%d", &val)) {
-		printk("\n Write TX : %d\n", val);
 
 #ifdef FPGA_PLATFORM
 		var = USB_PHY_Read_Register8(0x6E);
@@ -808,7 +762,6 @@ static ssize_t mt_usb_store_tx(struct device* dev, struct device_attribute *attr
 
 		var2 = (var >> 3) & ~0xFE;
 
-		printk("[MUSB]addr: 0x6E TX [AFTER WRITE], value after: %x - %x\n", var, var2);
 		sw_tx = var;
 	}
 	return count;
@@ -831,7 +784,6 @@ static ssize_t mt_usb_show_rx(struct device* dev, struct device_attribute *attr,
 	var = USBPHY_READ8(0x77);
 #endif
 	var2 = (var >> 7) & ~0xFE;
-	printk("[MUSB]addr: 0x77 (RX), value: %x - %x\n", var, var2);
 	sw_rx = var;
 
 	return scnprintf(buf, PAGE_SIZE, "%x\n", var2);
@@ -868,7 +820,6 @@ static struct i2c_board_info __initdata usb_i2c_dev = { I2C_BOARD_INFO("mtk-usb"
 static int usb_i2c_probe(struct i2c_client *client, const struct i2c_device_id *id)
 {
 	usb_i2c_client = client;
-	printk("[MUSB]usb_i2c_probe, end\n");
     return 0;
 
 }
@@ -899,7 +850,6 @@ static int add_usb_i2c_driver(void)
 		printk("[MUSB]usb_i2c_driver initialization failed!!\n");
 		return -1;
 	} else {
-		printk("[MUSB]usb_i2c_driver initialization succeed!!\n");
 	}
 	return 0;
 }
@@ -907,7 +857,6 @@ static int add_usb_i2c_driver(void)
 
 static int mt_usb_init(struct musb *musb)
 {
-    DBG(0,"mt_usb_init \n");
     int ret;
     usb_nop_xceiv_register();
     musb->xceiv = usb_get_phy(USB_PHY_TYPE_USB2);
@@ -942,7 +891,6 @@ static int mt_usb_init(struct musb *musb)
 			regulator_put(reg);
 		}
 		else {
-		    printk("%s, enable USB regulator \n", __func__);
 		}
 	}
 	else {
@@ -954,7 +902,6 @@ static int mt_usb_init(struct musb *musb)
 
     musb->isr = mt_usb_interrupt;
     musb_writel(musb->mregs,MUSB_HSDMA_INTR,0xff | (0xff << DMA_INTR_UNMASK_SET_OFFSET));
-    DBG(0,"musb platform init %x\n",musb_readl(musb->mregs,MUSB_HSDMA_INTR));
     musb_writel(musb->mregs,USB_L1INTM,TX_INT_STATUS | RX_INT_STATUS | USBCOM_INT_STATUS | DMA_INT_STATUS);//gang
 
     setup_timer(&musb_idle_timer, musb_do_idle, (unsigned long) musb);
@@ -1082,7 +1029,6 @@ static int mt_usb_probe(struct platform_device *pdev)
 #if defined(CONFIG_USB_MTK_ACM_TEMP)
 
         retval = platform_device_register(&usbacm_temp_device);
-        printk("register usbacm temp device\n");
 
         if (retval != 0)
         {
@@ -1091,7 +1037,6 @@ static int mt_usb_probe(struct platform_device *pdev)
         }
         else
         {
-            printk("platform_device_usbacm_register done!\n");
         }
 
 #endif
@@ -1117,7 +1062,6 @@ static int mt_usb_probe(struct platform_device *pdev)
 
     #ifdef CONFIG_OF
     //pr_info("usb probe irq: 0x%d usb phy address: 0x%lx usb mac : 0x%1x\n", usb_irq_number1, usb_phy_base, usb_mac);
-    pr_info("USB probe done!\n");
     #endif
 
 	return 0;
@@ -1198,8 +1142,6 @@ static struct platform_driver mt_usb_dts_driver = {
 
 static int __init usb20_init(void)
 {
-	DBG(0,"usb20 init\n");
-
 #ifdef FPGA_PLATFORM
     add_usb_i2c_driver();
 #endif
diff --git a/drivers/misc/mediatek/usb20/mt6580/usb20_phy.c b/drivers/misc/mediatek/usb20/mt6580/usb20_phy.c
index 4435ce0e8..477300026 100755
--- a/drivers/misc/mediatek/usb20/mt6580/usb20_phy.c
+++ b/drivers/misc/mediatek/usb20/mt6580/usb20_phy.c
@@ -64,17 +64,6 @@ void usb_phy_recover(void)
 	USB_PHY_Write_Register8(0x55, 0x11);
 	USB_PHY_Write_Register8(0x68, 0x1a);
 	USBPHY_CLR8(0x6a, 0xff);
-
-	printk("[MUSB]addr: 0xFF, value: %x\n", USB_PHY_Read_Register8(0xFF));
-	printk("[MUSB]addr: 0x61, value: %x\n", USB_PHY_Read_Register8(0x61));
-	printk("[MUSB]addr: 0x68, value: %x\n", USB_PHY_Read_Register8(0x68));
-	printk("[MUSB]addr: 0x6a, value: %x\n", USB_PHY_Read_Register8(0x6a));
-	printk("[MUSB]addr: 0x00, value: %x\n", USB_PHY_Read_Register8(0x00));
-	printk("[MUSB]addr: 0x1b, value: %x\n", USB_PHY_Read_Register8(0x1b));
-	printk("[MUSB]addr: 0x08, value: %x\n", USB_PHY_Read_Register8(0x08));
-	printk("[MUSB]addr: 0x11, value: %x\n", USB_PHY_Read_Register8(0x11));
-	printk("[MUSB]addr: 0x1a, value: %x\n", USB_PHY_Read_Register8(0x1a));
-	printk("[MUSB]usb_phy_recover \n");
 }
 
 // BC1.2
@@ -118,7 +107,6 @@ void usb_phy_switch_to_uart(void)
 		return;
 	}
 	//ALPS00775710
-	printk("%s, line %d: force to uart mode!!\n", __func__, __LINE__);
 	//ALPS00775710
 
     usb_enable_clock(true);
@@ -204,7 +192,6 @@ bool usb_enable_clock(bool enable)
 
 	spin_unlock_irqrestore(&musb_reg_clock_lock, flags);
 
-	printk(KERN_DEBUG "enable(%d), count(%d) res=%d\n", enable, count, res);
 	return 1;
 }
 
@@ -240,7 +227,6 @@ static void hs_slew_rate_cal(void){
 
   //4 s7: read result.
   if(timeout_flag){
-    printk("[USBPHY] Slew Rate Calibration: Timeout\n");
     value = 0x4;
     }
   else{
@@ -249,7 +235,6 @@ static void hs_slew_rate_cal(void){
       value = (unsigned char)(x/1000);
       if((x-value*1000)/100>=5)
         value += 1;
-        printk("[USBPHY]slew calibration:FM_OUT =%lu,x=%lu,value=%d\n",data,x,value);
     }
 
   //4 s8: disable Frequency and run clock.
@@ -318,8 +303,6 @@ void usb_phy_switch_to_uart(void)
 	DRV_WriteReg32(GPIO_BASE_1 + 0x118, 0x02);	//set
 
 	usb_port_mode_temp = 1;
-
-	printk("usb port value in uart function:%d\n", usb_port_mode_temp);
 }
 
 
@@ -339,8 +322,6 @@ void usb_phy_switch_to_usb(void)
 	usb_enable_clock(false);
 
 	usb_port_mode_temp = 0;
-
-	printk("usb port value in usb function:%d\n", usb_port_mode_temp);
 }
 #endif
 
@@ -385,8 +366,6 @@ void usb_phy_poweron(void){
     USBPHY_CLR8(0x6c, 0x10);
     USBPHY_SET8(0x6c, 0x2F);
     USBPHY_SET8(0x6d, 0x3F);
-
-    printk("usb power on success\n");
 }
 
 #ifdef CONFIG_MTK_UART_USB_SWITCH
@@ -476,7 +455,6 @@ void usb_phy_savecurrent(void){
     usb_phy_savecurrent_internal();
     //4 14. turn off internal 48Mhz PLL.
     usb_enable_clock(false);
-    printk("usb save current success\n");
 }
 
 void usb_phy_recover(void){
@@ -565,8 +543,6 @@ void usb_phy_recover(void){
     USBPHY_SET8(0x05, 0x50);
     #endif
     hs_slew_rate_cal();
-
-    printk("usb recovery success\n");
     return;
 }
 
@@ -579,7 +555,6 @@ void Charger_Detect_Init(void)
     udelay(50);
     /* RG_USB20_BC11_SW_EN = 1'b1 */
     USBPHY_SET8(0x1a, 0x80);
-    printk("Charger_Detect_Init\n");
 }
 
 void Charger_Detect_Release(void)
@@ -589,7 +564,6 @@ void Charger_Detect_Release(void)
     udelay(1);
     //4 14. turn off internal 48Mhz PLL.
     usb_enable_clock(false);
-    printk("Charger_Detect_Release\n");
 }
 
 void usb_phy_context_save(void)
diff --git a/drivers/misc/mediatek/usb20/musb_core.c b/drivers/misc/mediatek/usb20/musb_core.c
index a660820ed..26d4d6a9b 100755
--- a/drivers/misc/mediatek/usb20/musb_core.c
+++ b/drivers/misc/mediatek/usb20/musb_core.c
@@ -241,7 +241,6 @@ int musb_otg_send_event(struct usb_otg *otg,
 
 	snprintf(module_name, 16, "MODULE=%s", DRIVER_NAME);
 	snprintf(udev_event, 128, "EVENT=%s", event_string(event));
-	DBG(0, "musb_otg_send_event - sending %s event - %s in %s\n", event_string(event), module_name, kobject_get_path(&otg->phy->dev->kobj, GFP_KERNEL));
 	ret = kobject_uevent_env(&otg->phy->dev->kobj, KOBJ_CHANGE, envp);
 	if (ret < 0)
 		pr_info("uevent sending failed with ret = %d\n", ret);
@@ -805,9 +804,6 @@ static irqreturn_t musb_stage0_irq(struct musb *musb, u8 int_usb,
 			return IRQ_HANDLED;
 		}
 
-		DBG(0, "SESSION_REQUEST (%s)\n",
-			otg_state_string(musb->xceiv->state));
-
 		/* IRQ arrives from ID pin sense or (later, if VBUS power
 		 * is removed) SRP.  responses are time critical:
 		 *  - turn on VBUS (with silicon-specific mechanism)
@@ -831,9 +827,6 @@ static irqreturn_t musb_stage0_irq(struct musb *musb, u8 int_usb,
 	if (int_usb & MUSB_INTR_VBUSERROR) {
 		int	ignore = 0;
 
-		DBG(0, "MUSB_INTR_VBUSERROR (%s)\n",
-			otg_state_string(musb->xceiv->state));
-
 		/* During connection as an A-Device, we may see a short
 		 * current spikes causing voltage drop, because of cable
 		 * and peripheral capacitance combined with vbus draw.
@@ -916,8 +909,6 @@ static irqreturn_t musb_stage0_irq(struct musb *musb, u8 int_usb,
 	}
 
 	if (int_usb & MUSB_INTR_SUSPEND) {
-		DBG(0, "SUSPEND (%s) devctl %02x\n",
-			otg_state_string(musb->xceiv->state), devctl);
 		handled = IRQ_HANDLED;
 
 		switch (musb->xceiv->state) {
@@ -951,7 +942,6 @@ static irqreturn_t musb_stage0_irq(struct musb *musb, u8 int_usb,
 			}
 #if defined(CONFIG_USBIF_COMPLIANCE)
 			if (musb->g.otg_srp_reqd) {
-				DBG(0, "HNP: otg_srp_reqd\n");
 				polling_vbus = true;
 				USBPHY_WRITE8 (0x6c, 0x13);
 				USBPHY_WRITE8 (0x6d, 0x3f);
@@ -978,16 +968,11 @@ static irqreturn_t musb_stage0_irq(struct musb *musb, u8 int_usb,
 		}
 	}
 #if defined(CONFIG_USBIF_COMPLIANCE)
-	DBG(0, "After SUSPEND Before CONNECT: int_usb: 0x%x, (%s)\n",
-		int_usb, otg_state_string(musb->xceiv->state));
 #endif
 
 	if (int_usb & MUSB_INTR_CONNECT) {
 		struct usb_hcd *hcd = musb_to_hcd(musb);
 
-		DBG(0, "MUSB_INTR_CONNECT (%s)\n",
-			otg_state_string(musb->xceiv->state));
-
 		handled = IRQ_HANDLED;
 		musb->is_active = 1;
 
@@ -1060,15 +1045,9 @@ b_host:
 			usb_hcd_poll_rh_status(hcd);
 		else
 			usb_hcd_resume_root_hub(hcd);
-
-		DBG(0, "CONNECT (%s) devctl %02x\n",
-				otg_state_string(musb->xceiv->state), devctl);
 	}
 
 	if ((int_usb & MUSB_INTR_DISCONNECT) && !musb->ignore_disconnect) {
-		DBG(0, "DISCONNECT (%s) as %s, devctl %02x\n",
-				otg_state_string(musb->xceiv->state),
-				MUSB_MODE(musb), devctl);
 		handled = IRQ_HANDLED;
 		musb->is_active = 0;
 #ifdef MUSB_QMU_SUPPORT
@@ -1119,9 +1098,6 @@ b_host:
 	if (int_usb & MUSB_INTR_RESET) {
 		handled = IRQ_HANDLED;
 
-		DBG(0, "MUSB_INTR_RESET (%s)\n",
-			otg_state_string(musb->xceiv->state));
-
 		if ((devctl & MUSB_DEVCTL_HM) != 0) {
 			/*
 			 * Looks like non-HS BABBLE can be ignored, but
@@ -1130,7 +1106,6 @@ b_host:
 			 * caused BABBLE. When HS BABBLE happens we can only
 			 * stop the session.
 			 */
-			DBG(0, "Babble \n");
 			if (devctl & (MUSB_DEVCTL_FSDEV | MUSB_DEVCTL_LSDEV))
 				DBG(2, "BABBLE devctl: %02x\n", devctl);
 			else {
@@ -1245,8 +1220,6 @@ void musb_start(struct musb *musb)
 	int vbusdet_retry = 5;
 
 	u8  intrusbe;
-	DBG(0, "start, is_host=%d is_active=%d\n", musb->is_host, musb->is_active);
-
 	if(musb->is_active) {
 		if(musb->is_host) {
 			/* remove babble: NOISE_STILL_SOF:1, BABBLE_CLR_EN:0 */
@@ -1254,9 +1227,6 @@ void musb_start(struct musb *musb)
 			intrusbe = intrusbe | 0x80;
 			intrusbe = intrusbe & 0xbf;
 			musb_writeb(regs, MUSB_ULPI_REG_DATA, intrusbe);
-			DBG(0, "set ignore babble MUSB_ULPI_REG_DATA=%x\n", musb_readb(regs, MUSB_ULPI_REG_DATA));
-
-			DBG(0, "we are host now, add more interrupt devctl=%x\n", musb_readb(mtk_musb->mregs,MUSB_DEVCTL));
 			musb->intrtxe = 0xffff;
 			musb_writew(regs, MUSB_INTRTXE, musb->intrtxe);
 			musb->intrrxe = 0xfffe;
@@ -1363,7 +1333,6 @@ void musb_stop(struct musb *musb)
 	gadget_stop(musb);
 	musb_platform_disable(musb);
 	musb->is_active = 0;
-	DBG(0, "HDRC disabled\n");
 
 	/* FIXME
 	 *  - mark host and/or peripheral drivers unusable/inactive
@@ -1379,7 +1348,6 @@ static void musb_shutdown(struct platform_device *pdev)
 {
 	struct musb	*musb = dev_to_musb(&pdev->dev);
 	unsigned long	flags;
-	DBG(0, "shut down\n");
 
 	pm_runtime_get_sync(musb->controller);
 
@@ -1394,7 +1362,6 @@ static void musb_shutdown(struct platform_device *pdev)
 
 #ifdef CONFIG_USB_MTK_HDRC_HCD
     if (musb->is_host) {
-        printk(KERN_ERR"%s, line %d. \n", __func__, __LINE__);
         musb_platform_set_vbus(mtk_musb, 0);
 	usb_remove_hcd(musb_to_hcd(musb));
     }
@@ -1438,7 +1405,6 @@ static int fifo_setup(struct musb *musb, struct musb_hw_ep  *hw_ep,
 
 	switch (cfg->style) {
 	case MUSB_FIFO_TX:
-		DBG(0,"Tx ep %d fifo size is %d fifo address is %x\n",hw_ep->epnum,maxpacket,c_off);
 //		musb_write_txfifosz(mbase, c_size);
 //		musb_write_txfifoadd(mbase, c_off);
 		hw_ep->tx_double_buffered = !!(c_size & MUSB_FIFOSZ_DPB);
@@ -1447,7 +1413,6 @@ static int fifo_setup(struct musb *musb, struct musb_hw_ep  *hw_ep,
 		hw_ep->ep_in.fifo_mode= cfg->mode;
 		break;
 	case MUSB_FIFO_RX:
-		DBG(0,"Rx ep %d fifo size is %d fifo address is %x\n",hw_ep->epnum,maxpacket,c_off);
 //		musb_write_rxfifosz(mbase, c_size);
 //		musb_write_rxfifoadd(mbase, c_off);
 		hw_ep->rx_double_buffered = !!(c_size & MUSB_FIFOSZ_DPB);
@@ -1515,14 +1480,10 @@ static int ep_config_from_table(struct musb *musb)
 		u8	epn = cfg->hw_ep_num;
 
 		if (epn >= MUSB_C_NUM_EPS) {
-			DBG(0, "%s: invalid ep %d\n",
-					musb_driver_name, epn);
 			return -EINVAL;
 		}
 		offset = fifo_setup(musb, hw_ep + epn, cfg++, offset);
 		if (offset < 0) {
-			DBG(0, "%s: mem overrun, ep %d\n",
-					musb_driver_name, epn);
 			return offset;
 		}
 
@@ -1736,9 +1697,6 @@ static int musb_core_init(u16 musb_type, struct musb *musb)
 	if (reg & MUSB_CONFIGDATA_SOFTCONE)
 		strcat(aInfo, ", SoftConn");
 
-	DBG(0,"%s: ConfigData=0x%02x (%s)\n",
-			musb_driver_name, reg, aInfo);
-
 	aDate[0] = 0;
 	if (MUSB_CONTROLLER_MHDRC == musb_type) {
 		musb->is_multipoint = 1;
@@ -1758,8 +1716,6 @@ static int musb_core_init(u16 musb_type, struct musb *musb)
 	snprintf(aRevision, 32, "%d.%d%s", MUSB_HWVERS_MAJOR(musb->hwvers),
 		MUSB_HWVERS_MINOR(musb->hwvers),
 		(musb->hwvers & MUSB_HWVERS_RC) ? "RC" : "");
-	printk(KERN_DEBUG "%s: %sHDRC RTL version %s %s\n",
-			musb_driver_name, type, aRevision, aDate);
 
 	/* configure ep0 */
 	musb_configure_ep0(musb);
@@ -1771,10 +1727,8 @@ static int musb_core_init(u16 musb_type, struct musb *musb)
 
 	if (musb->dyn_fifo) {
 		status = ep_config_from_table(musb);
-		DBG(0, "ep_config_from_table %d\n",status);
 	} else {
 		status = ep_config_from_hw(musb);
-		DBG(0, "ep_config_from_hw %d\n",status);
 	}
 
 
@@ -1792,27 +1746,12 @@ static int musb_core_init(u16 musb_type, struct musb *musb)
 		hw_ep->tx_reinit = 1;
 #endif
 		if (hw_ep->max_packet_sz_tx) {
-			DBG(0,
-				"%s: hw_ep %d%s, %smax %d\n",
-				musb_driver_name, i,
-				hw_ep->is_shared_fifo ? "shared" : "tx",
-				hw_ep->tx_double_buffered
-					? "doublebuffer, " : "",
-				hw_ep->max_packet_sz_tx);
 		}
 		if (hw_ep->max_packet_sz_rx && !hw_ep->is_shared_fifo) {
-			DBG(0,
-				"%s: hw_ep %d%s, %smax %d\n",
-				musb_driver_name, i,
-				"rx",
-				hw_ep->rx_double_buffered
-					? "doublebuffer, " : "",
-				hw_ep->max_packet_sz_rx);
 		}
 		if (!(hw_ep->max_packet_sz_tx || hw_ep->max_packet_sz_rx))
 			DBG(0, "hw_ep %d not configured\n", i);
 	}
-	DBG(0,"musb_core_init end\n");
 	return 0;
 }
 
@@ -2432,7 +2371,6 @@ static int musb_probe(struct platform_device *pdev)
     unsigned long usb_mac_base;
     unsigned long usb_phy_base;
 
-     pr_info("musb probe\n");
      pdev->dev.of_node = of_find_compatible_node(NULL,NULL,"mediatek,USB0");
      if(pdev->dev.of_node == NULL){
           pr_info("USB get node failed\n");
@@ -2444,7 +2382,6 @@ static int musb_probe(struct platform_device *pdev)
     usb_mac_base = (unsigned long)base;
     usb_phy_base = (unsigned long)pbase;
     irq = usb_irq_number;
-    pr_info("musb probe reg: 0x%lx ,0x%lx , irq: 0x%d \n", usb_mac_base, usb_phy_base, usb_irq_number);
 #endif
 #ifdef CONFIG_OF
 status = musb_init_controller(dev, irq, base, pbase);
@@ -2461,7 +2398,6 @@ status = musb_init_controller(dev, irq, base);
 
     #ifdef CONFIG_OF
     usb_mac_base = (unsigned long)mtk_musb->xceiv->io_priv;
-    pr_info("musb core probe done base 0x%lx\n", usb_mac_base);
     #endif
 	return status;
 }
@@ -2675,8 +2611,6 @@ static int __init musb_init(void)
 	if (usb_disabled())
 		return 0;
 
-	pr_info("%s: version " MUSB_VERSION ", ?dma?, otg (peripheral+host)\n",
-		musb_driver_name);
 	return platform_driver_register(&musb_driver);
 }
 module_init(musb_init);
diff --git a/drivers/misc/mediatek/usb20/musb_gadget.c b/drivers/misc/mediatek/usb20/musb_gadget.c
index ce1e25ffb..6a98a3d7b 100644
--- a/drivers/misc/mediatek/usb20/musb_gadget.c
+++ b/drivers/misc/mediatek/usb20/musb_gadget.c
@@ -613,7 +613,6 @@ static void nuke(struct musb_ep *ep, const int status)
 		}
 
 		value = c->channel_abort(ep->dma);
-		DBG(0, "%s: %s: abort DMA --> %d\n", __func__, ep->name, value);
 		c->channel_release(ep->dma);
 		ep->dma = NULL;
 	}
@@ -621,7 +620,6 @@ static void nuke(struct musb_ep *ep, const int status)
 	while (!list_empty(&ep->req_list)) {
 		req = list_first_entry(&ep->req_list, struct musb_request, list);
 		musb_g_giveback(ep, &req->request, status);
-		DBG(0,"call musb_g_giveback on function %s ep is %s\n", __func__,ep->end_point.name);
 	}
 }
 
@@ -693,14 +691,11 @@ static void txstate(struct musb *musb, struct musb_request *req)
 
 	/* Check if EP is disabled */
 	if (!musb_ep->desc) {
-		DBG(0, "ep:%s disabled - ignore request\n",
-			musb_ep->end_point.name);
 		return;
 	}
 
 	/* we shouldn't get here while DMA is active ... but we do ... */
 	if (dma_channel_status(musb_ep->dma) == MUSB_DMA_STATUS_BUSY) {
-		DBG(0, "dma pending...\n");
 		return;
 	}
 
@@ -718,8 +713,6 @@ static void txstate(struct musb *musb, struct musb_request *req)
 	}
 
 	if (csr & MUSB_TXCSR_P_SENDSTALL) {
-		DBG(0, "%s stalling, txcsr %03x\n",
-				musb_ep->end_point.name, csr);
 		return;
 	}
 
@@ -1028,20 +1021,15 @@ static void rxstate(struct musb *musb, struct musb_request *req)
 
 	/* Check if EP is disabled */
 	if (!musb_ep->desc) {
-		DBG(0, "ep:%s disabled - ignore request\n",
-			musb_ep->end_point.name);
 		return;
 	}
 
 	/* We shouldn't get here while DMA is active, but we do... */
 	if (dma_channel_status(musb_ep->dma) == MUSB_DMA_STATUS_BUSY) {
-		DBG(0, "DMA pending...\n");
 		return;
 	}
 
 	if (csr & MUSB_RXCSR_P_SENDSTALL) {
-		DBG(0, "%s stalling, RXCSR %04x\n",
-		    musb_ep->end_point.name, csr);
 		return;
 	}
 
@@ -1309,7 +1297,6 @@ void musb_g_rx(struct musb *musb, u8 epnum)
 	if (csr & MUSB_RXCSR_P_SENTSTALL) {
 		csr |= MUSB_RXCSR_P_WZC_BITS;
 		csr &= ~MUSB_RXCSR_P_SENTSTALL;
-		DBG(0,"%s sendstall on %p\n",musb_ep->name,request);
 		musb_writew(epio, MUSB_RXCSR, csr);
 		return;
 	}
@@ -1319,7 +1306,6 @@ void musb_g_rx(struct musb *musb, u8 epnum)
 		csr &= ~MUSB_RXCSR_P_OVERRUN;
 		musb_writew(epio, MUSB_RXCSR, csr);
 
-		DBG(0, "%s iso overrun on %p\n", musb_ep->name, request);
 		if (request->status == -EINPROGRESS)
 			request->status = -EOVERFLOW;
 	}
@@ -1494,8 +1480,6 @@ static int is_db_ok(struct musb *musb, struct musb_ep *musb_ep)
 		if (!f)
 			break;
 
-		DBG(0, "Ifc name=%s\n", f->name);
-
 		switch (gadget->speed) {
 		case USB_SPEED_SUPER:
 			descriptors = f->ss_descriptors;
@@ -1531,20 +1515,12 @@ static int is_db_ok(struct musb *musb, struct musb_ep *musb_ep)
 			/* ep must be matched */
 			if (ep->bEndpointAddress == (musb_ep->end_point).address) {
 
-				DBG(0, "%s %s desc-addr=%x, addr=%x\n", f->name, is_in?"IN":"OUT",
-					ep->bEndpointAddress, (musb_ep->end_point).address);
-
 				if(!strcmp(f->name, "acm") && !is_in) {
 					ret = 0;
 				} else if (!strcmp(f->name, "adb")) {
 					ret = 0;
 				}
 
-				if (ret == 0)
-					DBG(0, "[%s] EP%d-%s as signle buffer\n", f->name, epnum, (is_in?"IN":"OUT"));
-				else
-					DBG(0, "[%s] EP%d-%s as double buffer\n", f->name, epnum, (is_in?"IN":"OUT"));
-
 				goto end;
 			}
 		}
@@ -1665,10 +1641,6 @@ static void fifo_setup(struct musb *musb, struct musb_ep *musb_ep)
 	size = ffs(max(maxpacket, (u16) 8)) - 1;
 	maxpacket = 1 << size;
 
-	DBG(0,"musb type=%s\n", (musb_ep->type==USB_ENDPOINT_XFER_BULK?"BULK": \
-		(musb_ep->type==USB_ENDPOINT_XFER_INT?"INT": \
-		(musb_ep->type==USB_ENDPOINT_XFER_ISOC?"ISO":"CONTROL"))));
-
 	c_size = size - 3;
 
 	/* Set double buffer, if the transfer type is bulk or isoc.*/
@@ -1685,30 +1657,22 @@ static void fifo_setup(struct musb *musb, struct musb_ep *musb_ep)
 
 	if (dbuffer_needed){
 		if ((musb->fifo_addr + (maxpacket << 1)) >(musb->fifo_size)) {
-			DBG(0,"MUSB_BUF_DOUBLE USB FIFO is not enough!!! (%d>%d), fifo_addr=%d\n",
-				(musb->fifo_addr + (maxpacket << 1)), (musb->fifo_size), musb->fifo_addr);
 			return ;
 		}
 
 		if(is_saving_mode()) {
 			if(is_db_ok(musb, musb_ep)) {
-				DBG(0,"Saving mode, but EP%d supports DBBUF\n", musb_ep->current_epnum);
 				c_size |= MUSB_FIFOSZ_DPB;
 			}
 		} else {
-		DBG(0,"EP%d supports DBBUF\n", musb_ep->current_epnum);
 		c_size |= MUSB_FIFOSZ_DPB;
 		}
 	} else if ((musb->fifo_addr + maxpacket) > (musb->fifo_size)) {
-		DBG(0,"MUSB_BUF_SINGLE USB FIFO is not enough!!! (%d>%d)\n",
-			(musb->fifo_addr + maxpacket), (musb->fifo_size));
 		return ;
 	}
 
 	/* configure the FIFO */
 	// musb_writeb(mbase, MUSB_INDEX, musb_ep->hw_ep->epnum);
-	DBG(0,"fifo size is %d after %d, fifo address is %d, epnum %d,hwepnum %d\n",
-		c_size,maxpacket, musb->fifo_addr, musb_ep->current_epnum, musb_ep->hw_ep->epnum);
 
 	if(musb_ep->is_in) {
 		musb_write_txfifosz(mbase, c_size);
@@ -1800,7 +1764,6 @@ static int musb_gadget_enable(struct usb_ep *ep,
 			goto fail;
 
 		if (tmp > hw_ep->max_packet_sz_tx) {
-			DBG(0, "packet size beyond hardware FIFO size\n");
 			goto fail;
 		}
 #ifndef MUSB_QMU_SUPPORT
@@ -1840,7 +1803,6 @@ static int musb_gadget_enable(struct usb_ep *ep,
 			goto fail;
 
 		if (tmp > hw_ep->max_packet_sz_rx) {
-			DBG(0, "packet size beyond hardware FIFO size\n");
 			goto fail;
 		}
 
@@ -1906,17 +1868,6 @@ static int musb_gadget_enable(struct usb_ep *ep,
 	mtk_qmu_enable(musb, epnum, !(musb_ep->is_in));
 #endif
 
-	DBG(0,"%s periph: enabled %s for %s %s, %smaxpacket %d\n",
-			musb_driver_name, musb_ep->end_point.name,
-			({ char *s; switch (musb_ep->type) {
-			case USB_ENDPOINT_XFER_BULK:	s = "bulk"; break;
-			case USB_ENDPOINT_XFER_INT:	s = "int"; break;
-			default:			s = "iso"; break;
-			}; s; }),
-			musb_ep->is_in ? "IN" : "OUT",
-			musb_ep->dma ? "dma, " : "",
-			musb_ep->packet_sz);
-
 	schedule_work(&musb->irq_work);
 
 fail:
@@ -2262,8 +2213,6 @@ static int musb_gadget_set_halt(struct usb_ep *ep, int value)
 	request = next_request(musb_ep);
 	if (value) {
 		if (request) {
-			DBG(0, "request in progress, cannot halt %s\n",
-			    ep->name);
 			status = -EAGAIN;
 			goto done;
 		}
@@ -2271,7 +2220,6 @@ static int musb_gadget_set_halt(struct usb_ep *ep, int value)
 		if (musb_ep->is_in) {
 			csr = musb_readw(epio, MUSB_TXCSR);
 			if (csr & MUSB_TXCSR_FIFONOTEMPTY) {
-				DBG(0, "FIFO busy, cannot halt %s\n", ep->name);
 				status = -EAGAIN;
 				goto done;
 			}
@@ -2535,21 +2483,14 @@ static void musb_pullup(struct musb *musb, int is_on, bool usb_in)
 		is_on ? "on" : "off");
 	musb_writeb(musb->mregs, MUSB_POWER, power);
 #else
-	DBG(0,"MUSB: gadget pull up %d start\n", is_on);
-
 	if (!usb_in && is_on) {
-		DBG(0, "no USB cable, don't need to turn on USB\n");
 	} else if (musb->is_host) {
-		DBG(0, "USB is host, don't need to control USB\n");
 	} else if (musb->in_ipo_off) {
-		DBG(0, "USB is charging mdoe, don't need to control USB\n");
 	} else if (is_on) {
 		musb_start(musb);
 	} else {
         musb_stop(musb);
 	}
-
-	DBG(0,"MUSB: gadget pull up %d end\n", is_on);
 #endif
 }
 
@@ -2582,8 +2523,6 @@ static int musb_gadget_pullup(struct usb_gadget *gadget, int is_on)
 	/* unsigned long	flags; */
     bool usb_in;
 
-	DBG(0,"is_on=%d, softconnect=%d ++\n", is_on, musb->softconnect);
-
 	is_on = !!is_on;
 
 	/* only set once when user space function is ready */
@@ -2664,7 +2603,6 @@ init_peripheral_ep(struct musb *musb, struct musb_ep *ep, u8 epnum, int is_in)
 				is_in ? "in" : "out"));
 
 
-	DBG(0,"EP %d name is %s\n",epnum,ep->name);
 	ep->end_point.name = ep->name;
 	INIT_LIST_HEAD(&ep->end_point.ep_list);
 	if (!epnum) {
@@ -2792,7 +2730,6 @@ static int musb_gadget_start(struct usb_gadget *g,
 	struct usb_hcd		*hcd = musb_to_hcd(musb);
 	unsigned long		flags;
 	int			retval = 0;
-	DBG(0, "musb_gadget_start\n");
 
 	if (driver->max_speed < USB_SPEED_HIGH) {
 		retval = -EINVAL;
@@ -2955,7 +2892,6 @@ void musb_g_suspend(struct musb *musb)
 	u8	devctl;
 
 	devctl = musb_readb(musb->mregs, MUSB_DEVCTL);
-	DBG(0, "devctl %02x\n", devctl);
 
 	switch (musb->xceiv->state) {
 	case OTG_STATE_B_IDLE:
@@ -3019,8 +2955,6 @@ int polling_vbus_value(void* data)
 #else
 		vbus_value = battery_meter_get_charger_voltage();
 #endif
-		DBG(0, "musb::Vbus (%d)\n", vbus_value);
-		DBG(0, "OTG_State: (%s)\n", otg_state_string(mtk_musb->xceiv->state));
 
 		switch (mtk_musb->xceiv->state) {
 		case OTG_STATE_B_IDLE:
@@ -3028,7 +2962,6 @@ int polling_vbus_value(void* data)
 			vbus_polling_timeout = jiffies + 5 * HZ;
 
 			while (vbus_value < 3800) {
-				DBG(0, "%s: not above B-device operating voltage! (%d)\n", __func__, vbus_value);
 				if (time_after(jiffies, vbus_polling_timeout)) {
 					timeout_flag = true;
 					break;
@@ -3041,10 +2974,8 @@ int polling_vbus_value(void* data)
 				vbus_value = battery_meter_get_charger_voltage();
 #endif
 			}
-			DBG(0, "%s: Vbus (%d)\n", __func__, vbus_value);
 
 			if (!timeout_flag) {
-				DBG(0,"CONNECT USB (B-device Operating Voltage! (%d)\n", vbus_value);
 				mt_usb_connect();
 			}
 			break;
@@ -3063,7 +2994,6 @@ int polling_vbus_value(void* data)
 				vbus_value = battery_meter_get_charger_voltage();
 #endif
 			}
-			DBG(0, "%s: Vbus (%d)\n", __func__, vbus_value);
 
 			USBPHY_WRITE8 (0x6c, 0x13);
 			USBPHY_WRITE8 (0x6d, 0x3f);
@@ -3073,20 +3003,15 @@ int polling_vbus_value(void* data)
 
 			mdelay(1800);
 			devctl = musb_readb(mtk_musb->mregs, MUSB_DEVCTL);
-			DBG(0, "Sending SRP: devctl: %02x\n", devctl);
 			devctl |= MUSB_DEVCTL_SESSION;
 			musb_writeb(mtk_musb->mregs, MUSB_DEVCTL, devctl);
 			devctl = musb_readb(mtk_musb->mregs, MUSB_DEVCTL);
-			DBG(0, "Sending SRP Done: devctl: %02x\n", devctl);
 
-			DBG(0, "polling_vbus_value - before OTG_STATE_B_IDLE\n");
 			mtk_musb->xceiv->state = OTG_STATE_B_IDLE;
-			DBG(0, "polling_vbus_value - after OTG_STATE_B_IDLE\n");
 
 			vbus_polling_timeout = jiffies + 5 * HZ;
 
 			while (vbus_value < 4000) {
-				DBG(0, "musb::not above Session-Valid! (%d)\n", vbus_value);
 				if (time_after(jiffies, vbus_polling_timeout)) {
 					timeout_flag = true;
 					break;
@@ -3099,26 +3024,21 @@ int polling_vbus_value(void* data)
 				vbus_value = battery_meter_get_charger_voltage();
 #endif
 			}
-			DBG(0, "musb::Vbus (%d)\n", vbus_value);
 
 			if (!timeout_flag) {
 				USBPHY_WRITE8 (0x6c, 0x2f);
 
 				power = musb_readb(mtk_musb->mregs, MUSB_POWER);
-				DBG(0, "Setting SOFT CONNECT: power: %02x\n", power);
 				power |= MUSB_POWER_SOFTCONN;
 				musb_writeb(mtk_musb->mregs, MUSB_POWER, power);
 				power = musb_readb(mtk_musb->mregs, MUSB_POWER);
-				DBG(0, "Setting SOFT CONNECT Done: power: %02x\n", power);
 			} else {
 				devctl = musb_readb(mtk_musb->mregs, MUSB_DEVCTL);
 				opstate = musb_readb(mtk_musb->mregs, MUSB_OPSTATE);
-				DBG(0, "SRP: Polling VBUS TimeOut, DEVCTL: 0x%x, OPSTATE: 0x%x\n", devctl, opstate);
 				send_otg_event(OTG_EVENT_NO_RESP_FOR_SRP);
 				polling_vbus = false;
 				mt_usb_disconnect();
 			}
-			DBG(0, "polling_vbus_value - Done - %s\n", otg_state_string(mtk_musb->xceiv->state));
 
 			break;
 #if 0
@@ -3136,14 +3056,11 @@ int polling_vbus_value(void* data)
 #endif
 		}
 
-		DBG(0, "musb::enable mt_usb_disconnect!\n");
 		polling_vbus = false;
-		DBG(0, "Re-Schedule vbus_polling_tsk (TASK_INTERRRUPTIBLE)!\n");
 		set_current_state(TASK_INTERRUPTIBLE);
 		schedule();
 	} 
   
-	DBG(0, "SET Current State - vbus_polling_tsk (TASK_RUNNING)!\n");
 	__set_current_state(TASK_RUNNING);
 	return 1; 
 }
diff --git a/drivers/misc/mediatek/usb20/musb_host.c b/drivers/misc/mediatek/usb20/musb_host.c
index 903507541..934f07df6 100644
--- a/drivers/misc/mediatek/usb20/musb_host.c
+++ b/drivers/misc/mediatek/usb20/musb_host.c
@@ -1717,16 +1717,12 @@ void musb_host_rx(struct musb *musb, u8 epnum)
 		status = -EPIPE;
 
 	} else if (rx_csr & MUSB_RXCSR_H_ERROR) {
-		DBG(0, "end %d RX proto error,rxtoggle=0x%x\n", epnum,musb_readl(mbase,MUSB_RXTOG));
-
 		status = -EPROTO;
 		musb_writeb(epio, MUSB_RXINTERVAL, 0);
 
 	} else if (rx_csr & MUSB_RXCSR_DATAERROR) {
 
 		if (USB_ENDPOINT_XFER_ISOC != qh->type) {
-			DBG(0, "RX end %d NAK timeout,rxtoggle=0x%x\n", epnum,musb_readl(mbase,MUSB_RXTOG));
-
 			/* NOTE: NAKing is *NOT* an error, so we want to
 			 * continue.  Except ... if there's a request for
 			 * another QH, use that instead of starving it.
@@ -2369,7 +2365,6 @@ static int musb_urb_enqueue(
 		/* some concurrent activity submitted another urb to hep...
 		 * odd, rare, error prone, but legal.
 		 */
-		DBG(0,"run here??\n");
 		kfree(qh);
 		qh = NULL;
 		ret = 0;
@@ -2590,7 +2585,6 @@ void musb_h_pre_disable(struct musb *musb)
 	struct musb_hw_ep *hw_ep = NULL;
 	struct usb_hcd *hcd = musb_to_hcd(musb);
 
-	DBG(0, "disable all endpoints\n");
 	if(hcd == NULL)
 		return;
 	for(i=0; i<musb->nr_endpoints; i++) {
@@ -2624,7 +2618,6 @@ static int musb_h_start(struct usb_hcd *hcd)
 
 static void musb_h_stop(struct usb_hcd *hcd)
 {
-    DBG(0,"musb_stop is called\n");
 	musb_stop(hcd_to_musb(hcd));
 	hcd->state = HC_STATE_HALT;
 }
diff --git a/drivers/misc/mediatek/usb20/musb_virthub.c b/drivers/misc/mediatek/usb20/musb_virthub.c
index 2468c27f4..88f078869 100644
--- a/drivers/misc/mediatek/usb20/musb_virthub.c
+++ b/drivers/misc/mediatek/usb20/musb_virthub.c
@@ -197,8 +197,6 @@ void musb_root_disconnect(struct musb *musb)
 	musb_h_pre_disable(musb);
 	spin_lock(&musb->lock);
 	
-	DBG(0, "host disconnect (%s)\n",
-			otg_state_string(musb->xceiv->state));
 
 	switch (musb->xceiv->state) {
 	case OTG_STATE_A_SUSPEND:
@@ -215,9 +213,6 @@ void musb_root_disconnect(struct musb *musb)
 	case OTG_STATE_A_WAIT_VFALL:
 		musb->xceiv->state = OTG_STATE_B_IDLE;
 		break;
-	default:
-		DBG(0, "host disconnect (%s)\n",
-			otg_state_string(musb->xceiv->state));
 	}
 }
 
@@ -361,7 +356,6 @@ int musb_hub_control(
 				(__le32 *) buf);
 
 		/* port change status is more interesting */
-		DBG(0,"port status %08x,devctl=0x%x\n",musb->port1_status,musb_readb(musb->mregs, MUSB_DEVCTL));
 		break;
 	case SetPortFeature:
 		if ((wIndex & 0xff) != 1)
@@ -379,7 +373,6 @@ int musb_hub_control(
 			 * initialization logic, e.g. for OTG, or change any
 			 * logic relating to VBUS power-up.
 			 */
-			DBG(0, "try to call musb_start in virthub\n");
 			//if (!hcd->self.is_b_host)
 				//musb_start(musb);
 			break;
diff --git a/drivers/misc/mediatek/vibrator/mt6580/vibrator.c b/drivers/misc/mediatek/vibrator/mt6580/vibrator.c
index 21850640e..445dbf7cf 100644
--- a/drivers/misc/mediatek/vibrator/mt6580/vibrator.c
+++ b/drivers/misc/mediatek/vibrator/mt6580/vibrator.c
@@ -51,7 +51,6 @@ void vibr_power_set(void)
 {
 #ifdef CUST_VIBR_VOL
 	struct vibrator_hw* hw = get_cust_vibrator_hw();	
-	printk("[vibrator]vibr_init: vibrator set voltage = %d\n", hw->vib_vol);
 	pmic_set_register_value(PMIC_RG_VIBR_VOSEL,hw->vib_vol);
 #endif
 }
diff --git a/drivers/misc/mediatek/vibrator/vibrator_drv.c b/drivers/misc/mediatek/vibrator/vibrator_drv.c
index 312f43be4..689df73ab 100755
--- a/drivers/misc/mediatek/vibrator/vibrator_drv.c
+++ b/drivers/misc/mediatek/vibrator/vibrator_drv.c
@@ -112,8 +112,6 @@ static int vibr_kernel_thread_handler(void *unused)
 {
     struct sched_param param = { .sched_priority = RTPM_PRIO_TPD };
 
-	printk("tpd_event_handler\n");
-
     sched_setscheduler(current, SCHED_RR, &param);
 	
 	do
@@ -181,36 +179,25 @@ int ret;
 #if 1
 	struct vibrator_hw *hw = mt_get_cust_vibrator_hw();
 #endif
-	printk("[vibrator]vibrator_enable: vibrator first in value = %d\n", value);
-
 	spin_lock_irqsave(&vibe_lock, flags);
 
 
 	if (value == 0 || shutdown_flag == 1) {
-		printk("[vibrator]vibrator_enable: shutdown_flag = %d\n", shutdown_flag);
 		vibr_time_remine = 0;
 	} else {
-#if 1
-		printk("[vibrator]vibrator_enable: vibrator cust timer: %d\n", hw->vib_timer);
 #ifdef CUST_VIBR_LIMIT
 		if (value > hw->vib_limit && value < hw->vib_timer)
 #else
 		if (value >= 10 && value < hw->vib_timer)
 #endif
 			value = hw->vib_timer;
-#endif
 		value =  ((value < hw->vib_timer) ? hw->vib_timer : value ); 
 		value = (value > 15000 ? 15000 : value);
 		vibr_time_remine = vibe_time = value;
-		printk("[vibrator]vibrator_enable: vibrator start: %d\n", value);
 		wake_up_interruptible(&vib_waiter);vib_flag = 1;
-		printk("[vibrator] vibrator_enable queue_work = %d\n",ret);
 	}
 
 	spin_unlock_irqrestore(&vibe_lock, flags);
-	
-	
-	
 }
 
 
@@ -234,11 +221,9 @@ static int vib_remove(struct platform_device *pdev)
 static void vib_shutdown(struct platform_device *pdev)
 {
 	unsigned long flags;
-	printk("[vibrator]vib_shutdown: enter!\n");
 	spin_lock_irqsave(&vibe_lock, flags);
 	shutdown_flag = 1;
 	if (vibe_state) {
-		printk("[vibrator]vib_shutdown: vibrator will disable\n");
 		vibe_state = 0;
 		spin_unlock_irqrestore(&vibe_lock, flags);
 		vibr_Disable();
@@ -278,7 +263,7 @@ static ssize_t store_vibr_on(struct device *dev, struct device_attribute *attr,
 	return size;
 }
 
-static DEVICE_ATTR(vibr_on, 0777, NULL, store_vibr_on);
+static DEVICE_ATTR(vibr_on, 0333, NULL, store_vibr_on);
 
 /******************************************************************************
  * vib_mod_init
@@ -302,7 +287,6 @@ static int vib_mod_init(void)
 	s32 ret;
 	s32 err;
 
-	printk("MediaTek MTK vibrator driver register, version %s\n", VERSION);
 	vibr_power_set();	/* set vibr voltage if needs.  Before MT6320 vibr default voltage=2.8v but in MT6323 vibr default voltage=1.2v */
 	ret = platform_device_register(&vibrator_device);
 	if (ret != 0) {
@@ -336,8 +320,6 @@ static int vib_mod_init(void)
         printk("[vibrator] failed to create kernel thread: %d\n", err);
     }
 	
-	printk("[vibrator]vib_mod_init Done\n");
-
 	return RSUCCESS;
 }
 
@@ -361,8 +343,6 @@ static int vib_mod_init(void)
 static void vib_mod_exit(void)
 {
 	printk("MediaTek MTK vibrator driver unregister, version %s\n", VERSION);
-
-	printk("[vibrator]vib_mod_exit Done\n");
 }
 module_init(vib_mod_init);
 module_exit(vib_mod_exit);
diff --git a/drivers/misc/mediatek/videocodec/mt6580/videocodec_kernel_driver.c b/drivers/misc/mediatek/videocodec/mt6580/videocodec_kernel_driver.c
index 35cab0513..6858bedbf 100755
--- a/drivers/misc/mediatek/videocodec/mt6580/videocodec_kernel_driver.c
+++ b/drivers/misc/mediatek/videocodec/mt6580/videocodec_kernel_driver.c
@@ -116,7 +116,6 @@ void VdecDvfsBegin(void)
     gHWLockInterval = 0;
     gFirstDvfsLock = VAL_TRUE;
     gHWLockMaxDuration = 0;
-    MFV_LOGE("[VCODEC][MMDVFS_VDEC] @@ VdecDvfsBegin");
     //eVideoGetTimeOfDay(&gMMDFVFSMonitorStartTime, sizeof(VAL_TIME_T));
 }
 
@@ -128,8 +127,6 @@ VAL_UINT32_T VdecDvfsGetMonitorDuration(void)
 
 void VdecDvfsEnd(int level)
 {
-    MFV_LOGE("[VCODEC][MMDVFS_VDEC] @@ VdecDVFS monitor %dms, decoded %d frames, total time %d, max duration %d, target lv %d",
-             MONITOR_DURATION_MS, gMMDFVFSMonitorCounts, gHWLockInterval, gHWLockMaxDuration, level);
     gMMDFVFSMonitorStarts = VAL_FALSE;
     gMMDFVFSMonitorCounts = 0;
     gHWLockInterval = 0;
@@ -329,7 +326,6 @@ void vdec_power_on(void)
     ++gu4HybPWRCounter;
 
     // Central power on
-    MFV_LOGE("[VCODEC] vdec_power_on + (%d) (%d) (%d)\n", gu4VdecPWRCounter, gu4HybPWRCounter, gu4VDecIRQCount);
     enable_clock(MT_CG_DISP0_SMI_COMMON, "VDEC");
     enable_clock(MT_CG_VCODEC_CKPDN, "VDEC");
     enable_clock(MT_CG_LARB1_SMI_CKPDN , "VDEC");
@@ -351,7 +347,6 @@ void vdec_power_off(void)
         gu4VdecPWRCounter--;
         --gu4HybPWRCounter;
         // Central power off
-        MFV_LOGE("[VCODEC] vdec_power_off + (%d) (%d) (%d)\n", gu4VdecPWRCounter, gu4HybPWRCounter, gu4VDecIRQCount);
         disable_clock(MT_CG_LARB1_SMI_CKPDN, "VDEC");
         disable_clock(MT_CG_VCODEC_CKPDN, "VDEC");
         disable_clock(MT_CG_DISP0_SMI_COMMON, "VDEC");
@@ -371,7 +366,6 @@ void venc_power_on(void)
     spin_unlock_irqrestore(&VencPWRLock, ulFlagsVencPWRLock);
     ++gu4HybPWRCounter;
 
-    MFV_LOGE("[VCODEC] venc_power_on + (%d) (%d) (%d)\n", gu4VencPWRCounter, gu4HybPWRCounter, gu4VEncIRQCount);
     enable_clock(MT_CG_DISP0_SMI_COMMON, "VENC");
     enable_clock(MT_CG_VCODEC_CKPDN, "VENC");
     enable_clock(MT_CG_LARB1_SMI_CKPDN , "VENC");
@@ -396,7 +390,6 @@ void venc_power_off(void)
     {
         gu4VencPWRCounter--;
         --gu4HybPWRCounter;
-        MFV_LOGE("[VCODEC] venc_power_off + (%d) (%d) (%d)\n", gu4VencPWRCounter, gu4HybPWRCounter, gu4VEncIRQCount);
         disable_clock(MT_CG_LARB1_SMI_CKPDN, "VENC");
         disable_clock(MT_CG_VCODEC_CKPDN, "VENC");
         disable_clock(MT_CG_DISP0_SMI_COMMON, "VENC");
@@ -684,7 +677,6 @@ void enc_isr(void)
     }
     else if (grVcodecHWLock.eDriverType == VAL_DRIVER_TYPE_HEVC_ENC) // hardwire
     {
-        MFV_LOGE("[VCODEC][ISR] VAL_DRIVER_TYPE_HEVC_ENC!!\n");
     }
     else if (grVcodecHWLock.eDriverType == VAL_DRIVER_TYPE_MP4_ENC)
     {
@@ -892,8 +884,6 @@ static long vcodec_unlocked_ioctl(struct file *file, unsigned int cmd, unsigned
         {
             VAL_INT32_T i4I;
             VAL_INT32_T i4Index = -1;
-            MFV_LOGE("VCODEC_ALLOC_NON_CACHE_BUFFER + tid = %d\n", current->pid);
-
             user_data_addr = (VAL_UINT8_T *)arg;
             ret = copy_from_user(&rTempMem, user_data_addr, sizeof(VAL_MEMORY_T));
             if (ret)
@@ -938,15 +928,11 @@ static long vcodec_unlocked_ioctl(struct file *file, unsigned int cmd, unsigned
                 MFV_LOGE("[ERROR] VCODEC_ALLOC_NON_CACHE_BUFFER, copy_to_user failed: %lu\n", ret);
                 return -EFAULT;
             }
-
-            MFV_LOGE("VCODEC_ALLOC_NON_CACHE_BUFFER - tid = %d\n", current->pid);
         }
         break;
 
         case VCODEC_FREE_NON_CACHE_BUFFER:
         {
-            MFV_LOGE("VCODEC_FREE_NON_CACHE_BUFFER + tid = %d\n", current->pid);
-
             user_data_addr = (VAL_UINT8_T *)arg;
             ret = copy_from_user(&rTempMem, user_data_addr, sizeof(VAL_MEMORY_T));
             if (ret)
@@ -970,8 +956,6 @@ static long vcodec_unlocked_ioctl(struct file *file, unsigned int cmd, unsigned
                 MFV_LOGE("[ERROR] VCODEC_FREE_NON_CACHE_BUFFER, copy_to_user failed: %lu\n", ret);
                 return -EFAULT;
             }
-
-            MFV_LOGE("VCODEC_FREE_NON_CACHE_BUFFER - tid = %d\n", current->pid);
         }
         break;
 
@@ -982,7 +966,6 @@ static long vcodec_unlocked_ioctl(struct file *file, unsigned int cmd, unsigned
 
             mutex_lock(&DecEMILock);
             gu4DecEMICounter++;
-            MFV_LOGE("[VCODEC] DEC_EMI_USER = %d\n", gu4DecEMICounter);
             user_data_addr = (VAL_UINT8_T *)arg;
             ret = copy_to_user(user_data_addr, &gu4DecEMICounter, sizeof(VAL_UINT32_T));
             if (ret)
@@ -1011,7 +994,6 @@ static long vcodec_unlocked_ioctl(struct file *file, unsigned int cmd, unsigned
 
             mutex_lock(&DecEMILock);
             gu4DecEMICounter--;
-            MFV_LOGE("[VCODEC] DEC_EMI_USER = %d\n", gu4DecEMICounter);
             user_data_addr = (VAL_UINT8_T *)arg;
             ret = copy_to_user(user_data_addr, &gu4DecEMICounter, sizeof(VAL_UINT32_T));
             if (ret)
@@ -1032,7 +1014,6 @@ static long vcodec_unlocked_ioctl(struct file *file, unsigned int cmd, unsigned
 
             mutex_lock(&EncEMILock);
             gu4EncEMICounter++;
-            MFV_LOGE("[VCODEC] ENC_EMI_USER = %d\n", gu4EncEMICounter);
             user_data_addr = (VAL_UINT8_T *)arg;
             ret = copy_to_user(user_data_addr, &gu4EncEMICounter, sizeof(VAL_UINT32_T));
             if (ret)
@@ -1053,7 +1034,6 @@ static long vcodec_unlocked_ioctl(struct file *file, unsigned int cmd, unsigned
 
             mutex_lock(&EncEMILock);
             gu4EncEMICounter--;
-            MFV_LOGE("[VCODEC] ENC_EMI_USER = %d\n", gu4EncEMICounter);
             user_data_addr = (VAL_UINT8_T *)arg;
             ret = copy_to_user(user_data_addr, &gu4EncEMICounter, sizeof(VAL_UINT32_T));
             if (ret)
@@ -1094,7 +1074,6 @@ static long vcodec_unlocked_ioctl(struct file *file, unsigned int cmd, unsigned
                     mutex_lock(&HWLockEventTimeoutLock);
                     if (HWLockEvent.u4TimeoutMs == 1)
                     {
-                        MFV_LOGE("VCODEC_LOCKHW, First Use Dec HW!!\n");
                         FirstUseDecHW = 1;
                     }
                     else
@@ -1248,7 +1227,6 @@ static long vcodec_unlocked_ioctl(struct file *file, unsigned int cmd, unsigned
                                     if (VAL_TRUE == gFirstDvfsLock)
                                     {
                                         gFirstDvfsLock = VAL_FALSE;
-                                        MFV_LOGE("[VCODEC][MMDVFS_VDEC] @@ LOCK 1 start monitor");
                                         eVideoGetTimeOfDay(&gMMDFVFSMonitorStartTime, sizeof(VAL_TIME_T));
                                     }
                                     eVideoGetTimeOfDay(&gMMDFVFSLastLockTime, sizeof(VAL_TIME_T));
@@ -1260,7 +1238,6 @@ static long vcodec_unlocked_ioctl(struct file *file, unsigned int cmd, unsigned
                     }
                     else // Another one holding dec hw now
                     {
-                        MFV_LOGE("VCODEC_LOCKHW E\n");
                         eVideoGetTimeOfDay(&rCurTime, sizeof(VAL_TIME_T));
                         u4TimeInterval = (((((rCurTime.u4Sec - grVcodecHWLock.rLockedTime.u4Sec) * 1000000) + rCurTime.u4uSec)
                                            - grVcodecHWLock.rLockedTime.u4uSec) / 1000);
@@ -1269,12 +1246,6 @@ static long vcodec_unlocked_ioctl(struct file *file, unsigned int cmd, unsigned
                         MFV_LOGD("VCODEC_LOCKHW, Instance = 0x%lx CurrentTID = %d, TimeInterval(ms) = %d, TimeOutValue(ms)) = %d\n",
                                  (VAL_ULONG_T)grVcodecHWLock.pvHandle, current->pid, u4TimeInterval, rHWLock.u4TimeoutMs);
 
-                        MFV_LOGE("VCODEC_LOCKHW Lock Instance = 0x%lx, Lock TID = %d, CurrentTID = %d, rLockedTime(%d s, %d us), rCurTime(%d s, %d us)\n",
-                                 (VAL_ULONG_T)grVcodecHWLock.pvHandle, gu4VdecLockThreadId, current->pid,
-                                 grVcodecHWLock.rLockedTime.u4Sec, grVcodecHWLock.rLockedTime.u4uSec,
-                                 rCurTime.u4Sec, rCurTime.u4uSec
-                                );
-
                         // 2012/12/16. Cheng-Jung Never steal hardware lock
                         if (0)
                             //if (u4TimeInterval >= rHWLock.u4TimeoutMs)
@@ -1314,7 +1285,6 @@ static long vcodec_unlocked_ioctl(struct file *file, unsigned int cmd, unsigned
                     mutex_lock(&HWLockEventTimeoutLock);
                     if (HWLockEvent.u4TimeoutMs == 1)
                     {
-                        MFV_LOGE("VCODEC_LOCKHW, First Use Enc HW %d!!\n", rHWLock.eDriverType);
                         FirstUseEncHW = 1;
                     }
                     else
@@ -1503,8 +1473,6 @@ static long vcodec_unlocked_ioctl(struct file *file, unsigned int cmd, unsigned
                         {
                             if (rHWLock.eDriverType == VAL_DRIVER_TYPE_MP4_ENC)
                             {
-                                MFV_LOGE("VCODEC_LOCKHW, Locked process(A) timeout, so release HW and let currnet process(B) to use HW\n");
-
                                 // Set timeout status for previous lock owner.
                                 spin_lock_irqsave(&OalHWContextLock, ulFlags);
                                 ret = search_HWLockSlot_ByHandle(0, (VAL_HANDLE_T)grVcodecHWLock.pvHandle);
@@ -1580,7 +1548,6 @@ static long vcodec_unlocked_ioctl(struct file *file, unsigned int cmd, unsigned
 
                     if (VAL_TRUE == bLockedHW)
                     {
-                        MFV_LOGE("VCODEC_LOCKHW, Lock ok grVcodecHWLock.pvHandle = 0x%lx, va:%lx, type:%d", (VAL_ULONG_T)grVcodecHWLock.pvHandle, (VAL_ULONG_T)rHWLock.pvHandle, rHWLock.eDriverType);
                         gLockTimeOutCount = 0;
                     }
                     spin_unlock_irqrestore(&HWLock, ulFlagsHWLock);
@@ -1705,7 +1672,6 @@ static long vcodec_unlocked_ioctl(struct file *file, unsigned int cmd, unsigned
                 if (rHWLock.eDriverType == VAL_DRIVER_TYPE_MP4_ENC)
                 {
                     // Debug
-                    MFV_LOGE("Hybrid VCODEC_UNLOCKHW \n");
                 }
                 else if (rHWLock.eDriverType == VAL_DRIVER_TYPE_H264_ENC ||
                          rHWLock.eDriverType == VAL_DRIVER_TYPE_HEVC_ENC)
@@ -1769,7 +1735,6 @@ static long vcodec_unlocked_ioctl(struct file *file, unsigned int cmd, unsigned
                     }
                     else
                     {
-                        MFV_LOGE("[VCODEC] Switch L2C size to 512K successful\n");
                     }
                 }
             }
@@ -1809,7 +1774,6 @@ static long vcodec_unlocked_ioctl(struct file *file, unsigned int cmd, unsigned
                     }
                     else
                     {
-                        MFV_LOGE("[VCODEC] Switch L2C size to 0K successful\n");
                     }
                 }
             }
@@ -2187,14 +2151,11 @@ static long vcodec_unlocked_ioctl(struct file *file, unsigned int cmd, unsigned
             for (i = 0; i < hwoal_reg.u4NumOfRegister ; i++)
             {
                 VAL_ULONG_T kva;
-                MFV_LOGE("[VCODEC][REG_INFO_1] [%d] 0x%lx 0x%x \n", i ,
-                         oal_mem_status[i].u4ReadAddr, oal_mem_status[i].u4ReadData);
 
                 addr_pa = pmem_user_v2p_video((unsigned long)oal_mem_status[i].u4ReadAddr);
                 spin_unlock_irqrestore(&OalHWContextLock, ulFlags);
                 kva = (VAL_ULONG_T)ioremap(addr_pa, 8); // need to remap addr + data addr
                 spin_lock_irqsave(&OalHWContextLock, ulFlags);
-                MFV_LOGE("[VCODEC][REG_INFO_2] [%d] pa = 0x%lx  kva = 0x%lx \n", i , addr_pa, kva);
                 context->oalmem_status[i].u4ReadAddr = kva; //oal_mem_status[i].u4ReadAddr;
             }
             spin_unlock_irqrestore(&OalHWContextLock, ulFlags);
@@ -2296,7 +2257,6 @@ static long vcodec_unlocked_ioctl(struct file *file, unsigned int cmd, unsigned
 
         case VCODEC_SET_CPU_OPP_LIMIT:
         {
-            MFV_LOGE("VCODEC_SET_CPU_OPP_LIMIT [EMPTY] + - tid = %d\n", current->pid);
             user_data_addr = (VAL_UINT8_T *)arg;
             ret = copy_from_user(&rCpuOppLimit, user_data_addr, sizeof(VAL_VCODEC_CPU_OPP_LIMIT_T));
             if (ret)
@@ -2304,7 +2264,6 @@ static long vcodec_unlocked_ioctl(struct file *file, unsigned int cmd, unsigned
                 MFV_LOGE("[ERROR] VCODEC_SET_CPU_OPP_LIMIT, copy_from_user failed: %lu\n", ret);
                 return -EFAULT;
             }
-            MFV_LOGE("+VCODEC_SET_CPU_OPP_LIMIT (%d, %d, %d), tid = %d\n", rCpuOppLimit.limited_freq, rCpuOppLimit.limited_cpu, rCpuOppLimit.enable, current->pid);
             // TODO: Check if cpu_opp_limit is available
             //ret = cpu_opp_limit(EVENT_VIDEO, rCpuOppLimit.limited_freq, rCpuOppLimit.limited_cpu, rCpuOppLimit.enable); // 0: PASS, other: FAIL
             if (ret)
@@ -2312,8 +2271,6 @@ static long vcodec_unlocked_ioctl(struct file *file, unsigned int cmd, unsigned
                 MFV_LOGE("[VCODEC][ERROR] cpu_opp_limit failed: %lu\n", ret);
                 return -EFAULT;
             }
-            MFV_LOGE("-VCODEC_SET_CPU_OPP_LIMIT tid = %d, ret = %lu\n", current->pid, ret);
-            MFV_LOGE("VCODEC_SET_CPU_OPP_LIMIT [EMPTY] - - tid = %d\n", current->pid);
         }
         break;
 
@@ -2757,7 +2714,6 @@ static int compat_copy_struct(
 static long vcodec_unlocked_compat_ioctl(struct file *file, unsigned int cmd, unsigned long arg)
 {
     long ret = 0;
-    MFV_LOGE("vcodec_unlocked_compat_ioctl: 0x%x\n", cmd);
     switch (cmd)
     {
         case VCODEC_ALLOC_NON_CACHE_BUFFER:
@@ -2962,7 +2918,6 @@ static int vcodec_open(struct inode *inode, struct file *file)
     mutex_lock(&DriverOpenCountLock);
     Driver_Open_Count++;
 
-    MFV_LOGE("vcodec_open pid = %d, Driver_Open_Count %d\n", current->pid, Driver_Open_Count);
     mutex_unlock(&DriverOpenCountLock);
 
 
@@ -2974,7 +2929,6 @@ static int vcodec_open(struct inode *inode, struct file *file)
 static int vcodec_flush(struct file *file, fl_owner_t id)
 {
     MFV_LOGD("vcodec_flush, curr_tid =%d\n", current->pid);
-    MFV_LOGE("vcodec_flush pid = %d, Driver_Open_Count %d\n", current->pid, Driver_Open_Count);
 
     return 0;
 }
@@ -2987,7 +2941,6 @@ static int vcodec_release(struct inode *inode, struct file *file)
     //dump_stack();
     MFV_LOGD("vcodec_release, curr_tid =%d\n", current->pid);
     mutex_lock(&DriverOpenCountLock);
-    MFV_LOGE("vcodec_release pid = %d, Driver_Open_Count %d\n", current->pid, Driver_Open_Count);
     Driver_Open_Count--;
 
     //mutex_lock(&NonCacheMemoryListLock);
@@ -3066,7 +3019,6 @@ static int vcodec_release(struct inode *inode, struct file *file)
         mutex_lock(&L2CLock);
         if (gu4L2CCounter != 0)
         {
-            MFV_LOGE("vcodec_flush pid = %d, L2 user = %d, force restore L2 settings\n", current->pid, gu4L2CCounter);
             if (config_L2(1))
             {
                 MFV_LOGE("[VCODEC][ERROR] restore L2 settings failed\n");
@@ -3178,8 +3130,6 @@ static int vcodec_mmap(struct file *file, struct vm_area_struct *vma)
     }
 #endif
     vma->vm_page_prot = pgprot_noncached(vma->vm_page_prot);
-    MFV_LOGE("[VCODEC][mmap] vma->start 0x%lx, vma->end 0x%lx, vma->pgoff 0x%lx, pfn: 0x%lx\n",
-             (VAL_ULONG_T)vma->vm_start, (VAL_ULONG_T)vma->vm_end, (VAL_ULONG_T)vma->vm_pgoff, pfn);
     if (remap_pfn_range(vma, vma->vm_start, vma->vm_pgoff,
                         vma->vm_end - vma->vm_start, vma->vm_page_prot))
     {
@@ -3196,7 +3146,6 @@ static int vcodec_mmap(struct file *file, struct vm_area_struct *vma)
 static void vcodec_early_suspend(struct early_suspend *h)
 {
     mutex_lock(&PWRLock);
-    MFV_LOGE("vcodec_early_suspend, tid = %d, PWR_USER = %d\n", current->pid, gu4PWRCounter);
     mutex_unlock(&PWRLock);
     /*
         if (gu4PWRCounter != 0)
@@ -3208,13 +3157,11 @@ static void vcodec_early_suspend(struct early_suspend *h)
             disable_clock(MT65XX_PDN_MM_GDC_SHARE_MACRO, "VideoEnc");
         }
     */
-    MFV_LOGD("vcodec_early_suspend - tid = %d\n", current->pid);
 }
 
 static void vcodec_late_resume(struct early_suspend *h)
 {
     mutex_lock(&PWRLock);
-    MFV_LOGE("vcodec_late_resume, tid = %d, PWR_USER = %d\n", current->pid, gu4PWRCounter);
     mutex_unlock(&PWRLock);
     /*
         if (gu4PWRCounter != 0)
@@ -3419,7 +3366,6 @@ static int __init vcodec_driver_init(void)
         //node = of_find_compatible_node(NULL, NULL, "mediatek,VDEC_GCON");
         //KVA_VDEC_GCON_BASE = (VAL_ULONG_T)of_iomap(node, 0);
 
-        MFV_LOGE("[VCODEC][DeviceTree] KVA_VENC_BASE(0x%lx), KVA_VDEC_BASE(0x%lx), KVA_VDEC_GCON_BASE(0x%lx)", KVA_VENC_BASE, KVA_VDEC_BASE, KVA_VDEC_GCON_BASE);
         MFV_LOGD("[VCODEC][DeviceTree] VDEC_IRQ_ID(%d), VENC_IRQ_ID(%d)", VDEC_IRQ_ID, VENC_IRQ_ID);
     }
 #else
diff --git a/drivers/misc/mediatek/videox/mt6580/disp_assert_layer.c b/drivers/misc/mediatek/videox/mt6580/disp_assert_layer.c
index 224f7583d..7a96d80fb 100644
--- a/drivers/misc/mediatek/videox/mt6580/disp_assert_layer.c
+++ b/drivers/misc/mediatek/videox/mt6580/disp_assert_layer.c
@@ -155,8 +155,6 @@ DAL_STATUS DAL_SetScreenColor(DAL_COLOR color)
 }
 DAL_STATUS DAL_Init(unsigned long layerVA, unsigned long layerPA)
 {
-    printk("%s, layerVA=0x%lx, layerPA=0x%lx\n", __func__, layerVA, layerPA);
-
     dal_fb_addr = (void *)layerVA;
     dal_fb_pa = layerPA;
     DAL_CHECK_MFC_RET(MFC_Open(&mfc_handle, dal_fb_addr,
@@ -234,7 +232,6 @@ DAL_STATUS DAL_Clean(void)
 
     static int dal_clean_cnt = 0;
     MFC_CONTEXT *ctxt = (MFC_CONTEXT *)mfc_handle;
-    printk("[MTKFB_DAL] DAL_Clean\n");
     if (NULL == mfc_handle) 
         return DAL_STATUS_NOT_READY;
 
@@ -293,7 +290,6 @@ DAL_STATUS DAL_Clean(void)
 		ret = primary_display_config_input_multiple(&primary_input);
 
         // DAL disable, switch UI layer to default layer 3
-        printk("[DDP]* isAEEEnabled from 1 to 0, %d \n", dal_clean_cnt++);
         isAEEEnabled = 0;
         DAL_Dynamic_Change_FB_Layer(isAEEEnabled);  // restore UI layer to DEFAULT_UI_LAYER
     }
@@ -325,7 +321,6 @@ DAL_STATUS DAL_Printf(const char *fmt, ...)
     va_list args;
     uint i;
     DAL_STATUS ret = DAL_STATUS_OK;
-    printk("%s", __func__);
     //printk("[MTKFB_DAL] DAL_Printf mfc_handle=0x%08X, fmt=0x%08X\n", mfc_handle, fmt);
     if (NULL == mfc_handle) 
         return DAL_STATUS_NOT_READY;
@@ -337,9 +332,6 @@ DAL_STATUS DAL_Printf(const char *fmt, ...)
     DAL_LOCK();
      if(isAEEEnabled==0)
     {
-        printk("[DDP] isAEEEnabled from 0 to 1, ASSERT_LAYER=%d, dal_fb_pa %lx\n", 
-            ASSERT_LAYER, dal_fb_pa);
-            
         isAEEEnabled = 1;
         DAL_Dynamic_Change_FB_Layer(isAEEEnabled); // default_ui_ layer coniig to changed_ui_layer
         
@@ -488,13 +480,11 @@ DAL_STATUS DAL_SetColor(unsigned int fgColor, unsigned int bgColor)
 }
 DAL_STATUS DAL_Clean(void)
 {
-    printk("[MTKFB_DAL] DAL_Clean is not implemented\n");
     return DAL_STATUS_OK;
 }
 DAL_STATUS DAL_Printf(const char *fmt, ...)
 {
     NOT_REFERENCED(fmt);
-    printk("[MTKFB_DAL] DAL_Printf is not implemented\n");
     return DAL_STATUS_OK;
 }
 DAL_STATUS DAL_OnDispPowerOn(void)
diff --git a/drivers/misc/mediatek/videox/mt6580/disp_drv_log.h b/drivers/misc/mediatek/videox/mt6580/disp_drv_log.h
index bc81f3704..65a8f9757 100644
--- a/drivers/misc/mediatek/videox/mt6580/disp_drv_log.h
+++ b/drivers/misc/mediatek/videox/mt6580/disp_drv_log.h
@@ -35,7 +35,7 @@ extern unsigned int dprec_error_log_buflen;
 	}while(0)
 #endif
 
-#define DISPFUNC() printk("[DISP]func|%s\n", __func__)  //default on, err msg
+#define DISPFUNC() ;
 #define DISPDBGFUNC() DISPDBG("[DISP]func|%s\n", __func__)  //default on, err msg
 
 #define DISPCHECK(string, args...) printk("[DISPCHECK]"string, ##args) 
diff --git a/drivers/misc/mediatek/videox/mt6580/disp_helper.c b/drivers/misc/mediatek/videox/mt6580/disp_helper.c
index 2ce0d8882..a2e5088fb 100644
--- a/drivers/misc/mediatek/videox/mt6580/disp_helper.c
+++ b/drivers/misc/mediatek/videox/mt6580/disp_helper.c
@@ -110,9 +110,7 @@ int disp_helper_set_option(DISP_HELPER_OPTION option, int value)
 {
 	if(option < DISP_HELPER_OPTION_NUM)
 	{
-		DISPCHECK("Set Option %d(%s) from (%d) to (%d)\n", option, disp_helper_option_spy(option), disp_helper_get_option(option), value);
 		_disp_helper_option_value[option] = value;
-		DISPCHECK("After set (%s) is (%d)\n", disp_helper_option_spy(option), disp_helper_get_option(option));
 	}
 	else
 	{
diff --git a/drivers/misc/mediatek/videox/mt6580/disp_lcm.c b/drivers/misc/mediatek/videox/mt6580/disp_lcm.c
index 13f57a4e6..cdf41c4d6 100755
--- a/drivers/misc/mediatek/videox/mt6580/disp_lcm.c
+++ b/drivers/misc/mediatek/videox/mt6580/disp_lcm.c
@@ -175,7 +175,6 @@ disp_lcm_handle* disp_lcm_probe(char* plcm_name, LCM_INTERFACE_ID lcm_id)
 	LCM_DRIVER *lcm_drv = NULL;
 	LCM_PARAMS *lcm_param = NULL;
 	disp_lcm_handle *plcm = NULL;
-	DISPCHECK("plcm_name=%s\n", plcm_name);
 	if(_lcm_count() == 0)
 	{
 		DISPERR("no lcm driver defined in linux kernel driver\n");
@@ -266,7 +265,6 @@ disp_lcm_handle* disp_lcm_probe(char* plcm_name, LCM_INTERFACE_ID lcm_id)
 		{
 			plcm->lcm_original_width = plcm->params->width;
 			plcm->lcm_original_height = plcm->params->height;
-			_dump_lcm_info(plcm);
 			return plcm;
 		}
 		else
diff --git a/drivers/misc/mediatek/videox/mt6580/disp_utils.c b/drivers/misc/mediatek/videox/mt6580/disp_utils.c
index e826be1f9..a86c4e25f 100644
--- a/drivers/misc/mediatek/videox/mt6580/disp_utils.c
+++ b/drivers/misc/mediatek/videox/mt6580/disp_utils.c
@@ -65,7 +65,6 @@ unsigned int disp_allocate_mva(unsigned int pa, unsigned int size,  M4U_PORT_ID
 	{
 		DISPMSG("m4u_alloc_mva returns fail: %d\n", ret);
 	}
-	DISPMSG("[DISPHAL] FB MVA is 0x%08X PA is 0x%08X\n", mva, pa);
 
 	return mva;
 }
diff --git a/drivers/misc/mediatek/videox/mt6580/mtk_disp_mgr.c b/drivers/misc/mediatek/videox/mt6580/mtk_disp_mgr.c
index f3cfb7d61..9421b28fb 100644
--- a/drivers/misc/mediatek/videox/mt6580/mtk_disp_mgr.c
+++ b/drivers/misc/mediatek/videox/mt6580/mtk_disp_mgr.c
@@ -2019,8 +2019,6 @@ static int mtk_disp_mgr_probe(struct platform_device *pdev)
 	struct class_device;
 	struct class_device *class_dev = NULL;
 
-    printk("mtk_disp_mgr_probe called! \n");
-	
 	if (alloc_chrdev_region(&mtk_disp_mgr_devno, 0, 1, DISP_SESSION_DEVICE))
 	{
 	    	return -EFAULT;
diff --git a/drivers/misc/mediatek/videox/mt6580/mtkfb.c b/drivers/misc/mediatek/videox/mt6580/mtkfb.c
index 0b6eba1e9..fbae50498 100755
--- a/drivers/misc/mediatek/videox/mt6580/mtkfb.c
+++ b/drivers/misc/mediatek/videox/mt6580/mtkfb.c
@@ -1790,8 +1790,6 @@ static int mtkfb_compat_ioctl(struct fb_info *info, unsigned int cmd, unsigned l
 
 	DISPFUNC();
 	MMProfileLogEx(MTKFB_MMP_Events.IOCtrl, MMProfileFlagPulse, _IOC_NR(cmd), arg);
-	printk("mtkfb_compat_ioctl, info=%p, cmd nr=0x%08x, cmd size=0x%08x,arg=0x%lx\n", info, 
-		   (unsigned int)_IOC_NR(cmd), (unsigned int)_IOC_SIZE(cmd),arg);
 
     switch(cmd)
     {
@@ -1904,7 +1902,6 @@ static int mtkfb_fbinfo_init(struct fb_info *info)
     var.yres         = MTK_FB_YRES;
     var.xres_virtual = MTK_FB_XRESV;
     var.yres_virtual = MTK_FB_YRESV;
-    printk("mtkfb_fbinfo_init var.xres=%d,var.yres=%d,var.xres_virtual=%d,var.yres_virtual=%d\n",var.xres,var.yres,var.xres_virtual,var.yres_virtual);
 	  //use 32 bit framebuffer as default
     var.bits_per_pixel = 32;
 	
@@ -2091,8 +2088,6 @@ char* mtkfb_find_lcm_driver(void)
 		return NULL;
 	}
 
-	printk("%s, %s\n", __func__, p);
-	q = p;
 	while(*q != ' ' && *q != '\0')
 		q++;
 
@@ -2294,15 +2289,12 @@ int _parse_tag_videolfb(void)
 	void* prop = NULL;
 	struct tag_videolfb *videolfb_tag = NULL;
 
-	printk("[DT][videolfb]isvideofb_parse_done = %d\n",is_videofb_parse_done);
-
 	if(is_videofb_parse_done) return;
 	if(of_scan_flat_dt(fb_early_init_dt_get_chosen, NULL) > 0)
 	{
 		videolfb_tag = (struct tag_videolfb*)of_get_flat_dt_prop(video_node, "atag,videolfb", NULL);
 		if(videolfb_tag)
 		{
-		    printk("[DT][videolfb] find video info from lk\n");
 			memset((void*)mtkfb_lcm_name, 0, sizeof(mtkfb_lcm_name));
 			strcpy((char *)mtkfb_lcm_name,videolfb_tag->lcmname);
 			mtkfb_lcm_name[strlen(videolfb_tag->lcmname)] = '\0';
@@ -2314,19 +2306,12 @@ int _parse_tag_videolfb(void)
 			vramsize = videolfb_tag->vram;
 			fb_base  = videolfb_tag->fb_base;
 			is_videofb_parse_done = 1;
-			printk("[DT][videolfb] islcmfound = %d\n", islcmconnected);
-			printk("[DT][videolfb] fps        = %d\n", lcd_fps);
-			printk("[DT][videolfb] fb_base    = 0x%x\n", fb_base);
-			printk("[DT][videolfb] vram       = %d\n", vramsize);
-			printk("[DT][videolfb] lcmname    = %s\n", mtkfb_lcm_name);
 			return 0;
 		}
 		else
 		{
-		    printk("[DT][videolfb] find video info from dts\n");
 	        prop = of_get_flat_dt_prop(video_node, "atag,videolfb-fb_base", NULL);
             if(!prop){
-                printk("[DT][videolfb] fail to parse fb_base\n");
                 return -1;
             }
             fb_base = of_read_number(prop, 1);
@@ -2369,17 +2354,11 @@ int _parse_tag_videolfb(void)
       
             is_videofb_parse_done = 1;
       
-            printk("[DT][videolfb] fb_base    = %p\n", (void *)fb_base);
-            printk("[DT][videolfb] islcmfound = %d\n", islcmconnected);
-            printk("[DT][videolfb] fps        = %d\n", lcd_fps);
-            printk("[DT][videolfb] vram       = %d\n", vramsize);
-            printk("[DT][videolfb] lcmname    = %s\n", mtkfb_lcm_name);
             return 0;
 		}
 	}
 	else
 	{
-		printk("[DT][videolfb] of_chosen not found\n");
 		return 1;
 	}
 }
@@ -2417,7 +2396,6 @@ EXPORT_SYMBOL(mtkfb_get_fb_size);
         if (kthread_should_stop())
             break;
         msleep(1000);       //2s
-		printk("update test thread work,offset = %d\n",i);
 
 		mtkfb_fbi->var.yoffset =  0;
               disp_get_fb_address(&fb_va, &fb_pa);
@@ -2444,7 +2422,6 @@ static int mtkfb_probe(struct device *dev)
 	int                    init_state;
 	int                    r = 0;
 	char *p = NULL;
-	printk("mtkfb_probe\n");
 
 	_parse_tag_videolfb();
 
@@ -2555,7 +2532,6 @@ static int mtkfb_probe(struct device *dev)
 cleanup:
     mtkfb_free_resources(fbdev, init_state);
 
-    printk("mtkfb_probe end\n");
     return r;
 }
 
@@ -2597,7 +2573,6 @@ int mtkfb_ipoh_restore(struct notifier_block *nb,unsigned long val,void *ign)
 	switch(val){
 		case PM_RESTORE_PREPARE:
 			primary_display_ipoh_restore();
-			printk("[FB Driver] mtkfb_ipoh_restore PM_RESTORE_PREPARE\n"); 
 			return NOTIFY_DONE;
 	}
 	return NOTIFY_OK;
@@ -2672,7 +2647,6 @@ static void mtkfb_early_suspend(struct early_suspend *h)
 	if(disp_helper_get_stage() != DISP_HELPER_STAGE_NORMAL)
 		return;
 	
-	printk("[FB Driver] enter early_suspend\n");
 	mt65xx_leds_brightness_set(MT65XX_LED_TYPE_LCD, LED_OFF);
 	msleep(30);
 
@@ -2684,8 +2658,6 @@ static void mtkfb_early_suspend(struct early_suspend *h)
 		return;
 	}
 	
-	printk("[FB Driver] leave early_suspend\n");
-	
 	return;
 }
 #endif
@@ -2708,8 +2680,6 @@ static void mtkfb_late_resume(struct early_suspend *h)
 	if(disp_helper_get_stage() != DISP_HELPER_STAGE_NORMAL)
 		return;
 
-	printk("[FB Driver] enter late_resume\n");   
-	
 	ret = primary_display_resume();
 
 	if (ret) 
@@ -2718,8 +2688,6 @@ static void mtkfb_late_resume(struct early_suspend *h)
 		return;
 	}
 	
-	printk("[FB Driver] leave late_resume\n");   
-
 	return;
 }
 #endif
diff --git a/drivers/misc/mediatek/videox/mt6580/mtkfb_dummy.c b/drivers/misc/mediatek/videox/mt6580/mtkfb_dummy.c
index 3f6e4a147..c8d5e539c 100644
--- a/drivers/misc/mediatek/videox/mt6580/mtkfb_dummy.c
+++ b/drivers/misc/mediatek/videox/mt6580/mtkfb_dummy.c
@@ -232,7 +232,6 @@ static int mtkfb_set_par(struct fb_info *fbi)
 static int mtkfb_pan_display_impl(struct fb_var_screeninfo *var, struct fb_info *info)
 {
 
-	printk("xoffset=%u, yoffset=%u, xres=%u, yres=%u, xresv=%u, yresv=%u\n",var->xoffset, var->yoffset,info->var.xres, info->var.yres,info->var.xres_virtual,info->var.yres_virtual);
 	info->var.yoffset = var->yoffset;
     return 0;
 }
@@ -251,11 +250,6 @@ static int mtkfb_check_var(struct fb_var_screeninfo *var, struct fb_info *fbi)
 
     //DISPFUNC();
 
-    printk("mtkfb_check_var, xres=%u, yres=%u, xres_virtual=%u, yres_virtual=%u, "
-              "xoffset=%u, yoffset=%u, bits_per_pixel=%u)\n",
-        var->xres, var->yres, var->xres_virtual, var->yres_virtual,
-        var->xoffset, var->yoffset, var->bits_per_pixel);
-
     bpp = var->bits_per_pixel;
 
     if (bpp != 16 && bpp != 24 && bpp != 32) {
@@ -284,7 +278,6 @@ static int mtkfb_check_var(struct fb_var_screeninfo *var, struct fb_info *fbi)
         var->yres_virtual = var->yres;
 
     max_frame_size = fbdev->fb_size_in_byte;
-	printk("fbdev->fb_size_in_byte=0x%08lx\n", fbdev->fb_size_in_byte);
     line_size = var->xres_virtual * bpp / 8;
 
     if (line_size * var->yres_virtual > max_frame_size) {
@@ -298,20 +291,11 @@ static int mtkfb_check_var(struct fb_var_screeninfo *var, struct fb_info *fbi)
             var->yres_virtual = max_frame_size / line_size;
         }
     }
-	    printk("mtkfb_check_var, xres=%u, yres=%u, xres_virtual=%u, yres_virtual=%u, "
-              "xoffset=%u, yoffset=%u, bits_per_pixel=%u)\n",
-        var->xres, var->yres, var->xres_virtual, var->yres_virtual,
-        var->xoffset, var->yoffset, var->bits_per_pixel);
     if (var->xres + var->xoffset > var->xres_virtual)
         var->xoffset = var->xres_virtual - var->xres;
     if (var->yres + var->yoffset > var->yres_virtual)
         var->yoffset = var->yres_virtual - var->yres;
 	
-    printk("mtkfb_check_var, xres=%u, yres=%u, xres_virtual=%u, yres_virtual=%u, "
-              "xoffset=%u, yoffset=%u, bits_per_pixel=%u)\n",
-        var->xres, var->yres, var->xres_virtual, var->yres_virtual,
-        var->xoffset, var->yoffset, var->bits_per_pixel);
-
     if (16 == bpp) {
         var->red.offset    = 11;  var->red.length    = 5;
         var->green.offset  =  5;  var->green.length  = 6;
@@ -418,9 +402,6 @@ static void *mtkfb_dma_buf_kmap(struct dma_buf *buf, unsigned long off) {
 static int mtkfb_dma_buf_mmap(struct dma_buf *buf, struct vm_area_struct *vma) {                                             
         struct fb_info *info = (struct fb_info*)buf->priv;                                                                  
                                                                                                                             
-        printk(KERN_INFO "mtkfb: mmap dma-buf: %p, start: %lu, offset: %lu, size: %lu\n",                                    
-               buf, vma->vm_start, vma->vm_pgoff, vma->vm_end - vma->vm_start);                                             
-                                                                                                                            
         return io_remap_pfn_range(vma,                                                                                      
                         vma->vm_start + vma->vm_pgoff, (info->fix.smem_start + vma->vm_pgoff) >> PAGE_SHIFT,                
                         vma->vm_end - vma->vm_start,                                                                        
@@ -439,7 +420,6 @@ static struct dma_buf_ops mtkfb_dma_buf_ops = {
 static struct dma_buf *mtkfb_dmabuf_export(struct fb_info *info) {                                                          
         struct dma_buf *buf;                                                                                                
                                                                                                                             
-        printk(KERN_INFO "mtkfb: Exporting dma-buf\n");                                                                      
                                                                                                                             
         buf = dma_buf_export(info, &mtkfb_dma_buf_ops, info->fix.smem_len, O_RDWR);                                          
                                                                                                                             
@@ -639,15 +619,12 @@ int _parse_tag_videolfb(void)
 	void* prop = NULL;
 	struct tag_videolfb *videolfb_tag = NULL;
 
-	printk("[DT][videolfb]isvideofb_parse_done = %d\n",is_videofb_parse_done);
-
 	if(is_videofb_parse_done) return;
 	if(of_scan_flat_dt(fb_early_init_dt_get_chosen, NULL) > 0)
 	{
 		videolfb_tag = (struct tag_videolfb*)of_get_flat_dt_prop(video_node, "atag,videolfb", NULL);
 		if(videolfb_tag)
 		{
-		    printk("[DT][videolfb] find video info from lk\n");
 			memset((void*)mtkfb_lcm_name, 0, sizeof(mtkfb_lcm_name));
 			strcpy((char *)mtkfb_lcm_name,videolfb_tag->lcmname);
 			mtkfb_lcm_name[strlen(videolfb_tag->lcmname)] = '\0';
@@ -659,16 +636,10 @@ int _parse_tag_videolfb(void)
 			vramsize = videolfb_tag->vram;
 			fb_base  = videolfb_tag->fb_base;
 			is_videofb_parse_done = 1;
-			printk("[DT][videolfb] islcmfound = %d\n", islcmconnected);
-			printk("[DT][videolfb] fps        = %d\n", lcd_fps);
-			printk("[DT][videolfb] fb_base    = 0x%x\n", fb_base);
-			printk("[DT][videolfb] vram       = %d\n", vramsize);
-			printk("[DT][videolfb] lcmname    = %s\n", mtkfb_lcm_name);
 			return 0;
 		}
 		else
 		{
-		    printk("[DT][videolfb] find video info from dts\n");
 	        prop = of_get_flat_dt_prop(video_node, "atag,videolfb-fb_base", NULL);
             if(!prop){
                 printk("[DT][videolfb] fail to parse fb_base\n");
@@ -713,18 +684,11 @@ int _parse_tag_videolfb(void)
             mtkfb_lcm_name[size] = '\0';
       
             is_videofb_parse_done = 1;
-      
-            printk("[DT][videolfb] fb_base    = %p\n", (void *)fb_base);
-            printk("[DT][videolfb] islcmfound = %d\n", islcmconnected);
-            printk("[DT][videolfb] fps        = %d\n", lcd_fps);
-            printk("[DT][videolfb] vram       = %d\n", vramsize);
-            printk("[DT][videolfb] lcmname    = %s\n", mtkfb_lcm_name);
             return 0;
 		}
 	}
 	else
 	{
-		printk("[DT][videolfb] of_chosen not found\n");
 		return 1;
 	}
 }
@@ -741,7 +705,6 @@ int mtkfb_allocate_framebuffer(phys_addr_t pa_start, phys_addr_t pa_end, unsigne
 {
 	int ret = 0;
 	*va = (unsigned int) ioremap_nocache(pa_start, pa_end - pa_start + 1);
-	printk("disphal_allocate_fb, pa=%pa, va=0x%08x\n", &pa_start, *va);
 	{
 		*mva = pa_start & 0xffffffffULL;
 	}
@@ -756,17 +719,14 @@ static int mtkfb_probe(struct device *dev)
 	int                    init_state;
 	int                    r = 0;
 	char *p = NULL;
-    printk("mtkfb_probe begin\n");
 
 #ifdef CONFIG_OF
 	_parse_tag_videolfb();
 #else
-	printk("%s, %s\n", __func__, saved_command_line);
 	p = strstr(saved_command_line, "fps=");
 	if(p == NULL)
 	{
 		lcd_fps = 6000;
-		printk("[FB driver]can not get fps from uboot\n");
 	}
 	else
 	{
@@ -795,9 +755,7 @@ static int mtkfb_probe(struct device *dev)
 	{
 
 #ifdef CONFIG_OF
-        printk("mtkfb_probe:get FB MEM REG\n");
 	    _parse_tag_videolfb();
-		printk("mtkfb_probe: fb_pa = 0x%x\n", fb_base);
 
 	    mtkfb_allocate_framebuffer(fb_base, (fb_base + vramsize - 1), (unsigned int*)&fbdev->fb_va_base, &fb_pa);
 	    fbdev->fb_pa_base = fb_base;
@@ -816,11 +774,9 @@ static int mtkfb_probe(struct device *dev)
 
 	MTK_FB_BPP   = 32;
 	MTK_FB_PAGES = 3;
-	printk("MTK_FB_XRES=%d, MTKFB_YRES=%d, MTKFB_BPP=%d, MTK_FB_PAGES=%d, MTKFB_LINE=%d, MTKFB_SIZEV=%d\n", MTK_FB_XRES, MTK_FB_YRES, MTK_FB_BPP, MTK_FB_PAGES, MTK_FB_LINE, MTK_FB_SIZEV);
 	    fbdev->fb_size_in_byte = MTK_FB_SIZEV;
 
 	/* Allocate and initialize video frame buffer */
-    printk("[FB Driver] fbdev->fb_pa_base = %x, fbdev->fb_va_base = %lx\n", fbdev->fb_pa_base, (unsigned long)(fbdev->fb_va_base));
 
     if (!fbdev->fb_va_base) 
     {
@@ -848,13 +804,11 @@ static int mtkfb_probe(struct device *dev)
         goto cleanup;
     }
     fbdev->state = MTKFB_ACTIVE;
-    printk("mtkfb_probe end\n");
     return 0;
 
 cleanup:
     mtkfb_free_resources(fbdev, init_state);
 
-    printk("mtkfb_probe end\n");
     return r;
 }
 
@@ -911,7 +865,6 @@ int __init mtkfb_init(void)
 {
 	int r = 0;
 
-	printk("mtkfb_init init");
 
 	if (platform_driver_register(&mtkfb_driver)) 
 	{
diff --git a/drivers/misc/mediatek/videox/mt6580/primary_display.c b/drivers/misc/mediatek/videox/mt6580/primary_display.c
index 8f0d5ab1c..3c2d3a6a3 100755
--- a/drivers/misc/mediatek/videox/mt6580/primary_display.c
+++ b/drivers/misc/mediatek/videox/mt6580/primary_display.c
@@ -1107,7 +1107,6 @@ static void _cmdq_build_trigger_loop(void)
 	}
 
 	// dump trigger loop instructions to check whether dpmgr_path_build_cmdq works correctly
-	DISPCHECK("primary display BUILD cmdq trigger loop finished\n");
 
 	return;
 #endif
@@ -1153,7 +1152,6 @@ void _cmdq_start_trigger_loop(void)
 		#endif
 	}
 
-	DISPCHECK("primary display START cmdq trigger loop finished\n");
 #endif
 }
 
@@ -1164,8 +1162,6 @@ void _cmdq_stop_trigger_loop(void)
 
 	// this should be called only once because trigger loop will nevet stop
 	ret = cmdqRecStopLoop(pgc->cmdq_handle_trigger);
-
-	DISPCHECK("primary display STOP cmdq trigger loop finished\n");
 #endif
 }
 
@@ -1576,7 +1572,6 @@ static int _DL_switch_to_DC_fast(void)
 #endif
 	if(pgc->ovl2mem_path_handle)
 	{
-		DISPCHECK("dpmgr create ovl memout path SUCCESS(%p)\n", pgc->ovl2mem_path_handle);
 	}
 	else
 	{
@@ -1855,7 +1850,6 @@ static int config_display_m4u_port(void)
     ret = m4u_config_port(&sPort);
     if(ret == 0)
     {
-        DISPCHECK("config M4U Port %s to %s SUCCESS\n",ddp_get_module_name(DISP_MODULE_OVL0), primary_display_use_m4u?"virtual":"physical");
     }
     else
     {
@@ -1991,7 +1985,6 @@ static int _build_path_direct_link(void)
 	pgc->dpmgr_handle = dpmgr_create_path(DDP_SCENARIO_PRIMARY_DISP, pgc->cmdq_handle_config);
 	if(pgc->dpmgr_handle)
 	{
-		DISPCHECK("dpmgr create path SUCCESS(0x%p)\n", pgc->dpmgr_handle);
 	}
 	else
 	{
@@ -2284,8 +2277,6 @@ int _esd_check_config_handle_cmd(void)
 	ret = cmdqRecFlush(pgc->cmdq_handle_config_esd);
 	dprec_logger_done(DPREC_LOGGER_ESD_CMDQ, 0, 0);
 
-	DISPCHECK("[ESD]_esd_check_config_handle_cmd ret=%d\n",ret);
-
     if(ret) ret=1;
 	return ret;
 }
@@ -2326,8 +2317,6 @@ int _esd_check_config_handle_vdo(void)
 	ret = cmdqRecFlush(pgc->cmdq_handle_config_esd);
 	dprec_logger_done(DPREC_LOGGER_ESD_CMDQ, 0, 0);
 
-	DISPCHECK("[ESD]_esd_check_config_handle_vdo ret=%d\n",ret);
-
 	if(ret) ret=1;
 	return ret;
 }
@@ -2342,13 +2331,11 @@ int primary_display_esd_check(void)
 	_primary_path_esd_check_lock();
 	dprec_logger_start(DPREC_LOGGER_ESD_CHECK, 0, 0);
 	MMProfileLogEx(ddp_mmp_get_events()->esd_check_t, MMProfileFlagStart, 0, 0);
-	DISPCHECK("[ESD]ESD check begin\n");
 
 	_primary_path_lock(__func__);
 	if(pgc->state == DISP_SLEEPED)
 	{
 		MMProfileLogEx(ddp_mmp_get_events()->esd_check_t, MMProfileFlagPulse, 1, 0);
-		DISPCHECK("[ESD]primary display path is sleeped?? -- skip esd check\n");
 		_primary_path_unlock(__func__);
 		//_primary_path_esd_check_unlock();
 		goto done;
@@ -2446,7 +2433,6 @@ int primary_display_esd_check(void)
 		cmdqRecCreate(CMDQ_SCENARIO_DISP_ESD_CHECK,&(pgc->cmdq_handle_config_esd));	
 		dpmgr_path_build_cmdq(pgc->dpmgr_handle, pgc->cmdq_handle_config_esd,CMDQ_ESD_ALLC_SLOT, 0);
 		MMProfileLogEx(ddp_mmp_get_events()->esd_rdlcm, MMProfileFlagPulse, 0, 2);
-		DISPCHECK("[ESD]ESD config thread=%p\n",pgc->cmdq_handle_config_esd);
 		_primary_path_unlock(__func__);
 
 		// 1.use cmdq to read from lcm
@@ -2471,8 +2457,6 @@ int primary_display_esd_check(void)
 			goto destory_cmdq;
 		}
 		
-		DISPCHECK("[ESD]ESD config thread done~\n");
-
 		// 2.check data(*cpu check now)
 		ret = dpmgr_path_build_cmdq(pgc->dpmgr_handle, pgc->cmdq_handle_config_esd,CMDQ_ESD_CHECK_CMP, 0);
 		MMProfileLogEx(ddp_mmp_get_events()->esd_rdlcm, MMProfileFlagPulse, 0, 4);
@@ -2499,31 +2483,21 @@ destory_cmdq:
 		_primary_path_lock(__func__);
 
         /// 1: stop path
-        DISPCHECK("[ESD]display cmdq trigger loop stop[begin]\n");
         _cmdq_stop_trigger_loop();
-        DISPCHECK("[ESD]display cmdq trigger loop stop[end]\n");
 
         if(dpmgr_path_is_busy(pgc->dpmgr_handle))
         {
-	        DISPCHECK("[ESD]primary display path is busy\n");
 	        ret = dpmgr_wait_event_timeout(pgc->dpmgr_handle, DISP_PATH_EVENT_FRAME_DONE, HZ*1);
-	        DISPCHECK("[ESD]wait frame done ret:%d\n", ret);
         }
 
-        DISPCHECK("[ESD]stop dpmgr path[begin]\n");
         dpmgr_path_stop(pgc->dpmgr_handle, CMDQ_DISABLE);
-        DISPCHECK("[ESD]stop dpmgr path[end]\n");
 
         if(dpmgr_path_is_busy(pgc->dpmgr_handle))
         {
-	        DISPCHECK("[ESD]primary display path is busy after stop\n");
 	        dpmgr_wait_event_timeout(pgc->dpmgr_handle, DISP_PATH_EVENT_FRAME_DONE, HZ*1);
-	        DISPCHECK("[ESD]wait frame done ret:%d\n", ret);
         }
 
-        DISPCHECK("[ESD]reset display path[begin]\n");
         dpmgr_path_reset(pgc->dpmgr_handle, CMDQ_DISABLE);
-        DISPCHECK("[ESD]reset display path[end]\n");
 
         /// 2: do esd check (!!!)
         MMProfileLogEx(ddp_mmp_get_events()->esd_rdlcm, MMProfileFlagPulse, 0, 2);
@@ -2541,20 +2515,15 @@ destory_cmdq:
         /// 3: start path
         MMProfileLogEx(ddp_mmp_get_events()->esd_rdlcm, MMProfileFlagPulse, primary_display_is_video_mode(), 3);
 
-        DISPCHECK("[ESD]start dpmgr path[begin]\n");
         dpmgr_path_start(pgc->dpmgr_handle, CMDQ_DISABLE);
-        DISPCHECK("[ESD]start dpmgr path[end]\n");
 
-        DISPCHECK("[ESD]start cmdq trigger loop[begin]\n");
         _cmdq_start_trigger_loop();
-        DISPCHECK("[ESD]start cmdq trigger loop[end]\n");
 
         _primary_path_unlock(__func__);
     }
 	MMProfileLogEx(ddp_mmp_get_events()->esd_rdlcm, MMProfileFlagEnd, 0, ret);
 
 done:
-	DISPCHECK("[ESD]ESD check end\n");
 	MMProfileLogEx(ddp_mmp_get_events()->esd_check_t, MMProfileFlagEnd, 0, ret);	
 	dprec_logger_done(DPREC_LOGGER_ESD_CHECK, 0, 0);
 	_primary_path_esd_check_unlock();
@@ -2599,7 +2568,6 @@ static int primary_display_esd_check_worker_kthread(void *data)
 		ret = wait_event_interruptible(esd_check_task_wq,atomic_read(&esd_check_task_wakeup));
 		if(ret < 0)
 		{
-			DISPCHECK("[ESD]esd check thread waked up accidently\n");
 			continue;
 		}
 #ifdef DISP_SWITCH_DST_MODE
@@ -2619,24 +2587,19 @@ static int primary_display_esd_check_worker_kthread(void *data)
 		ret = primary_display_esd_check();
 		if(ret == 1)
 		{
-			DISPCHECK("[ESD]esd check fail, will do esd recovery\n");
 			i = esd_try_cnt;
 			while(i--)
 			{
-				DISPCHECK("[ESD]esd recovery try:%d\n", i);
 				primary_display_esd_recovery();
 				ret = primary_display_esd_check();
 				if(ret == 0)
 				{
-					DISPCHECK("[ESD]esd recovery success\n");
 					break;
 				}
 				else
 				{
-					DISPCHECK("[ESD]after esd recovery, esd check still fail\n");
 					if(i==0)
 					{
-						DISPCHECK("[ESD]after esd recovery %d times, esd check still fail, disable esd check\n",esd_try_cnt);
 						primary_display_esd_check_enable(0);
 					}
 				}
@@ -2661,7 +2624,6 @@ int primary_display_esd_recovery(void)
 	DISPFUNC();
 	dprec_logger_start(DPREC_LOGGER_ESD_RECOVERY, 0, 0);
 	MMProfileLogEx(ddp_mmp_get_events()->esd_recovery_t, MMProfileFlagStart, 0, 0);
-	DISPCHECK("[ESD]ESD recovery begin\n");
 	_primary_path_lock(__func__);
 	MMProfileLogEx(ddp_mmp_get_events()->esd_recovery_t, MMProfileFlagPulse, primary_display_is_video_mode(), 1);
 
@@ -2670,7 +2632,6 @@ int primary_display_esd_recovery(void)
 	lcm_param = disp_lcm_get_params(pgc->plcm);
 	if(pgc->state == DISP_SLEEPED)
 	{
-		DISPCHECK("[ESD]esd recovery but primary display path is sleeped??\n");
 		goto done;
 	}
 	MMProfileLogEx(ddp_mmp_get_events()->esd_recovery_t, MMProfileFlagPulse, 0, 2);
@@ -2681,46 +2642,30 @@ int primary_display_esd_recovery(void)
 
 	if(dpmgr_path_is_busy(pgc->dpmgr_handle))
 	{
-		DISPCHECK("[ESD]primary display path is busy\n");
 		ret = dpmgr_wait_event_timeout(pgc->dpmgr_handle, DISP_PATH_EVENT_FRAME_DONE, HZ*1);
-		DISPCHECK("[ESD]wait frame done ret:%d\n", ret);
 	}
 	MMProfileLogEx(ddp_mmp_get_events()->esd_recovery_t, MMProfileFlagPulse, 0, 3);
 
-	DISPCHECK("[ESD]stop dpmgr path[begin]\n");
 	dpmgr_path_stop(pgc->dpmgr_handle, CMDQ_DISABLE);
-	DISPCHECK("[ESD]stop dpmgr path[end]\n");
 	MMProfileLogEx(ddp_mmp_get_events()->esd_recovery_t, MMProfileFlagPulse, 0, 4);
 
 	if(dpmgr_path_is_busy(pgc->dpmgr_handle))
 	{
-		DISPCHECK("[ESD]primary display path is busy after stop\n");
 		dpmgr_wait_event_timeout(pgc->dpmgr_handle, DISP_PATH_EVENT_FRAME_DONE, HZ*1);
-		DISPCHECK("[ESD]wait frame done ret:%d\n", ret);
 	}
 	MMProfileLogEx(ddp_mmp_get_events()->esd_recovery_t, MMProfileFlagPulse, 0, 5);
 
-	DISPCHECK("[ESD]display cmdq trigger loop stop[begin]\n");
 	_cmdq_stop_trigger_loop();
-	DISPCHECK("[ESD]display cmdq trigger loop stop[end]\n");
 
 	MMProfileLogEx(ddp_mmp_get_events()->esd_recovery_t, MMProfileFlagPulse, 0, 6);
 
-	DISPCHECK("[ESD]reset display path[begin]\n");
 	dpmgr_path_reset(pgc->dpmgr_handle, CMDQ_DISABLE);
-	DISPCHECK("[ESD]reset display path[end]\n");
 
-	DISPCHECK("[POWER]lcm suspend[begin]\n");
 	disp_lcm_suspend(pgc->plcm);
-	DISPCHECK("[POWER]lcm suspend[end]\n");
-	DISPCHECK("[ESD]lcm force init[begin]\n");
 	disp_lcm_init(pgc->plcm, 1);
-	DISPCHECK("[ESD]lcm force init[end]\n");
 	MMProfileLogEx(ddp_mmp_get_events()->esd_recovery_t, MMProfileFlagPulse, 0, 8);
 
-	DISPCHECK("[ESD]start dpmgr path[begin]\n");
 	dpmgr_path_start(pgc->dpmgr_handle, CMDQ_DISABLE);
-	DISPCHECK("[ESD]start dpmgr path[end]\n");
 	if(dpmgr_path_is_busy(pgc->dpmgr_handle))
 	{
 		DISPERR("[ESD]Fatal error, we didn't trigger display path but it's already busy\n");
@@ -2729,9 +2674,7 @@ int primary_display_esd_recovery(void)
 	}
 
 	MMProfileLogEx(ddp_mmp_get_events()->esd_recovery_t, MMProfileFlagPulse, 0, 9);
-	DISPCHECK("[ESD]start cmdq trigger loop[begin]\n");
 	_cmdq_start_trigger_loop();
-	DISPCHECK("[ESD]start cmdq trigger loop[end]\n");
 	MMProfileLogEx(ddp_mmp_get_events()->esd_recovery_t, MMProfileFlagPulse, 0, 10);	
 	if(primary_display_is_video_mode())
 	{
@@ -2746,7 +2689,6 @@ int primary_display_esd_recovery(void)
 
 done:
 	_primary_path_unlock(__func__);
-	DISPCHECK("[ESD]ESD recovery end\n");
 	MMProfileLogEx(ddp_mmp_get_events()->esd_recovery_t, MMProfileFlagEnd, 0, 0);
 	dprec_logger_done(DPREC_LOGGER_ESD_RECOVERY, 0, 0);
 	return ret;
@@ -2758,19 +2700,16 @@ void primary_display_esd_check_enable(int enable)
     {
     	if(_need_register_eint() && eint_flag != 2)
     	{
-    		DISPCHECK("[ESD]Please check DCT setting about GPIO107/EINT107 \n");
     	        return;
     	}
 
     	if(enable)
     	{
-    		DISPCHECK("[ESD]esd check thread wakeup\n");
     	        atomic_set(&esd_check_task_wakeup, 1);
     	        wake_up_interruptible(&esd_check_task_wq);
     	}
     	else
     	{
-    		DISPCHECK("[ESD]esd check thread stop\n");
     	        atomic_set(&esd_check_task_wakeup, 0);
     	}
     }
@@ -2838,7 +2777,6 @@ static atomic_t primary_recovery_task_wakeup = ATOMIC_INIT(0);
 
 int primary_display_signal_recovery(void)
 {
-    DISPCHECK("[Primary Recovery] signal\n");
     atomic_set(&primary_recovery_task_wakeup, 1);
     wake_up_interruptible(&primary_recovery_task_wq);
     return 0;
@@ -2850,14 +2788,11 @@ int primary_display_recovery_thread(void)
 
 	struct sched_param param = { .sched_priority = RTPM_PRIO_FB_THREAD };
 	sched_setscheduler(current, SCHED_RR, &param);
-	DISPCHECK("[primary_display_recovery_thread]\n");
 	while(1) {
 		msleep(1000);
 		ret = wait_event_interruptible(primary_recovery_task_wq, atomic_read(&primary_recovery_task_wakeup));
 		atomic_set(&primary_recovery_task_wakeup, 0);
-		DISPCHECK("[Primary Recovery] begin ret %d\n", ret);
 
-		DISPCHECK("[Primary Recovery]stop ESD check firstly\n");
 		primary_display_esd_check_enable(0);
 
 		recovery_wait = 1;
@@ -2865,16 +2800,12 @@ int primary_display_recovery_thread(void)
 
 		if(pgc->state != DISP_SLEEPED) {
 			if(ret == 0) {
-				DISPCHECK("[Primary Recovery]stop cmdq trigger loop\n");
 				_cmdq_stop_trigger_loop();
 
-				DISPCHECK("[Primary Recovery]stop path\n");
 				dpmgr_path_stop(pgc->dpmgr_handle, CMDQ_DISABLE);
 
-				DISPCHECK("[Primary Recovery] path reset\n");
 				dpmgr_path_reset(pgc->dpmgr_handle, CMDQ_DISABLE);
 
-				DISPCHECK("[Primary Recovery] path start\n");
 				dpmgr_path_start(pgc->dpmgr_handle, CMDQ_DISABLE);
 
 				if(primary_display_is_video_mode()) {
@@ -2883,18 +2814,13 @@ int primary_display_recovery_thread(void)
 					dpmgr_path_trigger(pgc->dpmgr_handle, NULL, CMDQ_DISABLE);
 				}
 
-				DISPCHECK("[Primary Recovery]start cmdq trigger loop\n");
 				_cmdq_start_trigger_loop();
 			}
-		} else {
-			DISPCHECK("[Primary Recovery] can not recovery path in suspend\n");
 		}
 		msleep(20);
 
 		_primary_path_unlock(__func__);
-		DISPCHECK("[Primary Recovery]  end\n");
 
-		DISPCHECK("[Primary Recovery]restart ESD check at end\n");
 		primary_display_esd_check_enable(1);
 
 		recovery_wait = 0;
@@ -3558,7 +3484,6 @@ DECLARE_WAIT_QUEUE_HEAD(decouple_trigger_wq);
 
 int primary_display_init(char *lcm_name, unsigned int lcm_fps)
 {
-	DISPCHECK("primary_display_init begin\n");
 	DISP_STATUS ret = DISP_STATUS_OK;
 	DISP_MODULE_ENUM dst_module = 0;
 	LCM_PARAMS *lcm_param = NULL;
@@ -3589,12 +3514,10 @@ int primary_display_init(char *lcm_name, unsigned int lcm_fps)
 		ret = DISP_STATUS_ERROR;
 		goto done;
 	} else {
-		DISPCHECK("disp_lcm_probe SUCCESS\n");
 	}
 #ifndef MTK_FB_DFO_DISABLE
 	if((0 == dfo_query("LCM_FAKE_WIDTH", &lcm_fake_width)) && (0 == dfo_query("LCM_FAKE_HEIGHT", &lcm_fake_height)))
 	{
-		printk("[DFO] LCM_FAKE_WIDTH=%d, LCM_FAKE_HEIGHT=%d\n", lcm_fake_width, lcm_fake_height);
 		if(lcm_fake_width && lcm_fake_height)
 		{
 			if(DISP_STATUS_OK != primary_display_change_lcm_resolution(lcm_fake_width, lcm_fake_height))
@@ -3632,7 +3555,6 @@ int primary_display_init(char *lcm_name, unsigned int lcm_fps)
 	}
 	else
 	{
-		DISPCHECK("cmdqRecCreate SUCCESS, g_cmdq_handle=%p \n", pgc->cmdq_handle_config);
 	}
     /*create ovl2mem path cmdq handle */
     ret = cmdqRecCreate(CMDQ_SCENARIO_PRIMARY_MEMOUT, &(pgc->cmdq_handle_ovl1to2_config));
@@ -3649,26 +3571,19 @@ int primary_display_init(char *lcm_name, unsigned int lcm_fps)
 	{
 		_build_path_direct_link();
 		pgc->session_mode = DISP_SESSION_DIRECT_LINK_MODE;
-		DISPCHECK("primary display is DIRECT LINK MODE\n");
 	}
 	else if(primary_display_mode == DECOUPLE_MODE)
 	{
 		_build_path_decouple();
 		pgc->session_mode = DISP_SESSION_DECOUPLE_MODE;
-
-		DISPCHECK("primary display is DECOUPLE MODE\n");
 	}
 	else if(primary_display_mode == SINGLE_LAYER_MODE)
 	{
 		_build_path_single_layer();
-
-		DISPCHECK("primary display is SINGLE LAYER MODE\n");
 	}
 	else if(primary_display_mode == DEBUG_RDMA1_DSI0_MODE)
 	{
 		_build_path_debug_rdma1_dsi0();
-
-		DISPCHECK("primary display is DEBUG RDMA1 DSI0 MODE\n");
 	}
 	else
 	{
@@ -3688,7 +3603,6 @@ int primary_display_init(char *lcm_name, unsigned int lcm_fps)
 	if(disp_helper_get_option(DISP_HELPER_OPTION_NO_LCM_FOR_LOW_POWER_MEASUREMENT))
 	{
 		// only for low power measurement
-		DISPCHECK("WARNING!!!!!! FORCE NO LCM MODE!!!\n");
 		islcmconnected = 0;
 
 		// no need to change video mode vsync behavior
@@ -3798,17 +3712,14 @@ int primary_display_init(char *lcm_name, unsigned int lcm_fps)
 			irq = irq_of_parse_and_map(node,0);
 			if(request_irq(irq, _esd_check_ext_te_irq_handler, IRQF_TRIGGER_NONE, "DSI_TE-eint", NULL))
 			{
-				DISPCHECK("[ESD]EINT IRQ (%d) LINE NOT AVAILABLE!!\n",irq);
 			} 
 			else 
 			{
-				DISPCHECK("[ESD]eint irq (%d) line successfully!!\n",irq);
 				eint_flag++;
 			}
 		} 
 		else 
 		{
-			DISPCHECK("[ESD][%s] can't find DSI_TE eint compatible node\n", __func__);
 		}
 	}
 #endif
@@ -3988,7 +3899,6 @@ int primary_display_wait_for_vsync(void *config)
 
 	if(!islcmconnected)
 	{
-		DISPCHECK("lcm not connect, use fake vsync\n");
 		msleep(16);
 		return 0;
 	}
@@ -4008,7 +3918,6 @@ int primary_display_wait_for_vsync(void *config)
 				ret = dpmgr_wait_event_timeout(pgc->dpmgr_handle, DISP_PATH_EVENT_IF_VSYNC, HZ/10); 
 				if(ret == -2)
 				{
-					DISPCHECK("vsync for primary display path not enabled yet\n");
 					return -1;
 				}
 				else if(ret == 0)
@@ -4028,7 +3937,6 @@ int primary_display_wait_for_vsync(void *config)
 	ret = dpmgr_wait_event(pgc->dpmgr_handle, DISP_PATH_EVENT_IF_VSYNC);
 	if(ret == -2)
 	{
-		DISPCHECK("vsync for primary display path not enabled yet\n");
 		return -1;
 	}
 	else if(ret == 0)
@@ -4069,7 +3977,6 @@ int primary_display_suspend(void)
 {
 	DISP_STATUS ret = DISP_STATUS_OK;
 
-	DISPCHECK("primary_display_suspend begin\n");
 	MMProfileLogEx(ddp_mmp_get_events()->primary_suspend, MMProfileFlagStart, 0, 0);
 #ifdef DISP_SWITCH_DST_MODE
 	primary_display_switch_dst_mode(primary_display_def_dst_mode);
@@ -4079,7 +3986,6 @@ int primary_display_suspend(void)
 	_primary_path_lock(__func__);
 	if(pgc->state == DISP_SLEEPED)
 	{
-		DISPCHECK("primary display path is already sleep, skip\n");
 		goto done;
 	}
 	primary_display_idlemgr_kick(__func__, 0);
@@ -4089,7 +3995,6 @@ int primary_display_suspend(void)
 		MMProfileLogEx(ddp_mmp_get_events()->primary_suspend, MMProfileFlagPulse, 1, 2);
 		int event_ret = dpmgr_wait_event_timeout(pgc->dpmgr_handle, DISP_PATH_EVENT_FRAME_DONE, HZ*1);
 		MMProfileLogEx(ddp_mmp_get_events()->primary_suspend, MMProfileFlagPulse, 2, 2);
-		DISPCHECK("[POWER]primary display path is busy now, wait frame done, event_ret=%d\n", event_ret);
 		if(event_ret<=0)
 		{
 			DISPERR("wait frame done in suspend timeout\n");
@@ -4103,15 +4008,11 @@ int primary_display_suspend(void)
 
 	if(disp_helper_get_option(DISP_HELPER_OPTION_USE_CMDQ))
 	{
-		DISPCHECK("[POWER]display cmdq trigger loop stop[begin]\n");
 		_cmdq_stop_trigger_loop();
-		DISPCHECK("[POWER]display cmdq trigger loop stop[end]\n");
 	}
 	MMProfileLogEx(ddp_mmp_get_events()->primary_suspend, MMProfileFlagPulse, 0, 3);
 
-	DISPCHECK("[POWER]primary display path stop[begin]\n");
 	dpmgr_path_stop(pgc->dpmgr_handle, CMDQ_DISABLE);
-	DISPCHECK("[POWER]primary display path stop[end]\n");
 	MMProfileLogEx(ddp_mmp_get_events()->primary_suspend, MMProfileFlagPulse, 0, 4);
 
 	if(dpmgr_path_is_busy(pgc->dpmgr_handle))
@@ -4125,18 +4026,12 @@ int primary_display_suspend(void)
 	}
 	MMProfileLogEx(ddp_mmp_get_events()->primary_suspend, MMProfileFlagPulse, 0, 5);
 
-	DISPCHECK("[POWER]lcm suspend[begin]\n");
 	disp_lcm_suspend(pgc->plcm);
-	DISPCHECK("[POWER]lcm suspend[end]\n");
 	MMProfileLogEx(ddp_mmp_get_events()->primary_suspend, MMProfileFlagPulse, 0, 6);
-	DISPCHECK("[POWER]primary display path Release Fence[begin]\n");
 	primary_suspend_release_fence();
-	DISPCHECK("[POWER]primary display path Release Fence[end]\n");
 	MMProfileLogEx(ddp_mmp_get_events()->primary_suspend, MMProfileFlagPulse, 0, 7);
 
-	DISPCHECK("[POWER]dpmanager path power off[begin]\n");
 	dpmgr_path_power_off(pgc->dpmgr_handle, CMDQ_DISABLE);
-	DISPCHECK("[POWER]dpmanager path power off[end]\n");
 	MMProfileLogEx(ddp_mmp_get_events()->primary_suspend, MMProfileFlagPulse, 0, 8);
 
 	pgc->state = DISP_SLEEPED;
@@ -4152,7 +4047,6 @@ done:
     /* clear dim layer buffer */
 	dim_layer_mva = 0;
 	MMProfileLogEx(ddp_mmp_get_events()->primary_suspend, MMProfileFlagEnd, 0, 0);
-    DISPCHECK("primary_display_suspend end\n");
 	return ret;
 }
 
@@ -4182,14 +4076,11 @@ int primary_display_resume(void)
 	_primary_path_lock(__func__);
 	if(pgc->state == DISP_ALIVE)
 	{
-		DISPCHECK("primary display path is already resume, skip\n");
 		goto done;
 	}
 	MMProfileLogEx(ddp_mmp_get_events()->primary_resume, MMProfileFlagPulse, 0, 1);
 
-	DISPCHECK("dpmanager path power on[begin]\n");
 	dpmgr_path_power_on(pgc->dpmgr_handle, CMDQ_DISABLE);
-	DISPCHECK("dpmanager path power on[end]\n");
 	
 	MMProfileLogEx(ddp_mmp_get_events()->primary_resume, MMProfileFlagPulse, 0, 2);
 
@@ -4197,21 +4088,15 @@ int primary_display_resume(void)
 	dim_layer_mva = 0;
 	if(is_ipoh_bootup)
 	{
-	  DISPCHECK("[primary display path] leave primary_display_resume -- IPOH\n");
-      DISPCHECK("ESD check start[begin]\n");
       primary_display_esd_check_enable(1);
-      DISPCHECK("ESD check start[end]\n");
 	  is_ipoh_bootup = false;
-	  DISPCHECK("[POWER]start cmdq[begin]--IPOH\n");
 		if(disp_helper_get_option(DISP_HELPER_OPTION_USE_CMDQ))
 		{
 			_cmdq_start_trigger_loop();
 		}
-	  DISPCHECK("[POWER]start cmdq[end]--IPOH\n");	  
 	  pgc->state = DISP_ALIVE;	  
 	  goto done;
 	}
-	DISPCHECK("[POWER]dpmanager re-init[begin]\n");
 
 	{
 		/* disconnect primary path first *
@@ -4255,12 +4140,9 @@ int primary_display_resume(void)
 		MMProfileLogEx(ddp_mmp_get_events()->primary_resume, MMProfileFlagPulse, 2, 2);
 		data_config->dst_dirty = 0;
 	}
-	DISPCHECK("[POWER]dpmanager re-init[end]\n");
 	MMProfileLogEx(ddp_mmp_get_events()->primary_resume, MMProfileFlagPulse, 0, 3);
 
-	DISPCHECK("[POWER]lcm resume[begin]\n");
 	disp_lcm_resume(pgc->plcm);
-	DISPCHECK("[POWER]lcm resume[end]\n");
 
 	MMProfileLogEx(ddp_mmp_get_events()->primary_resume, MMProfileFlagPulse, 0, 4);
 	if(dpmgr_path_is_busy(pgc->dpmgr_handle))
@@ -4272,14 +4154,11 @@ int primary_display_resume(void)
 	}
 
 	MMProfileLogEx(ddp_mmp_get_events()->primary_resume, MMProfileFlagPulse, 0, 5);
-	DISPCHECK("[POWER]dpmgr path start[begin]\n");
 	dpmgr_path_start(pgc->dpmgr_handle, CMDQ_DISABLE);
 
 	if(primary_display_is_decouple_mode())
 		dpmgr_path_start(pgc->ovl2mem_path_handle, CMDQ_DISABLE);
 	
-	DISPCHECK("[POWER]dpmgr path start[end]\n");
-
 	MMProfileLogEx(ddp_mmp_get_events()->primary_resume, MMProfileFlagPulse, 0, 6);
 	if(dpmgr_path_is_busy(pgc->dpmgr_handle))
 	{
@@ -4301,9 +4180,7 @@ int primary_display_resume(void)
 
 	if(disp_helper_get_option(DISP_HELPER_OPTION_USE_CMDQ))
 	{
-		DISPCHECK("[POWER]start cmdq[begin]\n");
 		_cmdq_start_trigger_loop();
-		DISPCHECK("[POWER]start cmdq[end]\n");
 	}
 	MMProfileLogEx(ddp_mmp_get_events()->primary_resume, MMProfileFlagPulse, 0, 9);
 
@@ -4313,9 +4190,7 @@ int primary_display_resume(void)
     if(!primary_display_is_video_mode() )//&& !primary_display_is_dual_dsi())
     {
         /*refresh black picture of ovl bg*/
-        DISPCHECK("[POWER]triggger cmdq[begin]\n");
         _trigger_display_interface(1, NULL, 0);
-        DISPCHECK("[POWER]triggger cmdq[end]\n");
 		mdelay(16);//wait for one frame for pms workarround!!!!
     }
 	MMProfileLogEx(ddp_mmp_get_events()->primary_resume, MMProfileFlagPulse, 0, 11);
@@ -4331,7 +4206,6 @@ int primary_display_resume(void)
 	if(disp_helper_get_option(DISP_HELPER_OPTION_NO_LCM_FOR_LOW_POWER_MEASUREMENT))
 	{
 		// only for low power measurement
-		DISPCHECK("WARNING!!!!!! FORCE NO LCM MODE!!!\n");
 		islcmconnected = 0;
 
 		// no need to change video mode vsync behavior
@@ -4364,16 +4238,11 @@ done:
 }
 int primary_display_ipoh_restore(void)
 {
-    DISPMSG("primary_display_ipoh_restore In\n");
-    DISPCHECK("ESD check stop[begin]\n");
     primary_display_esd_check_enable(0);
-    DISPCHECK("ESD check stop[end]\n");
 	if (NULL != pgc->cmdq_handle_trigger) {
 		struct TaskStruct *pTask = pgc->cmdq_handle_trigger->pRunningTask;
 		if (NULL != pTask) {
-			DISPCHECK("[Primary_display]display cmdq trigger loop stop[begin]\n");
 			_cmdq_stop_trigger_loop();
-			DISPCHECK("[Primary_display]display cmdq trigger loop stop[end]\n");
 		}
 	}
 	DISPMSG("primary_display_ipoh_restore Out\n");
@@ -4390,7 +4259,6 @@ int primary_display_start(void)
 	dpmgr_path_start(pgc->dpmgr_handle, CMDQ_DISABLE);
 
 	if (dpmgr_path_is_busy(pgc->dpmgr_handle)) {
-		DISPCHECK("Fatal error, we didn't trigger display path but it's already busy\n");
 		ret = -1;
 		goto done;
 	}
@@ -4414,7 +4282,6 @@ int primary_display_stop(void)
 	dpmgr_path_stop(pgc->dpmgr_handle, CMDQ_DISABLE);
 
 	if (dpmgr_path_is_busy(pgc->dpmgr_handle)) {
-		DISPCHECK("stop display path failed, still busy\n");
 		ret = -1;
 		goto done;
 	}
@@ -4754,8 +4621,6 @@ int primary_display_config_input_multiple(primary_disp_input_config* input)
 		{
 		    if(input[0].layer == primary_display_get_option("ASSERT_LAYER"))
 			    ret = _convert_disp_input_to_ovl(&(data_config->ovl_config[input[0].layer]), &input[0]);
-            
-			DISPCHECK("%s save temp asset layer ,because primary dipslay is sleeped\n", __func__);
 		}
 		goto done;
 	}
@@ -4874,9 +4739,7 @@ int primary_display_config_input(primary_disp_input_config* input)
 				ret = _convert_disp_input_to_rdma(&(data_config->rdma_config), input);
 				data_config->rdma_dirty= 1;
 			}
-			DISPCHECK("%s save temp asset layer ,because primary dipslay is sleep\n", __func__);
 		}
-		DISPMSG("%s, skip because primary dipslay is sleep\n", __func__);
 		goto done;
 	}
 
@@ -4923,14 +4786,12 @@ static int Panel_Master_primary_display_config_dsi(const char * name,UINT32  con
 	//modify below for config dsi
 	if(!strcmp(name, "PM_CLK"))
 	{
-		printk("Pmaster_config_dsi: PM_CLK:%d\n", config_value);
 		data_config->dispif_config.dsi.PLL_CLOCK= config_value;
 	}
 	else if(!strcmp(name, "PM_SSC"))
 	{
 		data_config->dispif_config.dsi.ssc_range=config_value;
 	}
-	printk("Pmaster_config_dsi: will Run path_config()\n");
 	ret = dpmgr_path_config(pgc->dpmgr_handle, data_config, NULL);
 
 	return ret;
@@ -5318,7 +5179,6 @@ int primary_display_switch_cmdq_cpu(CMDQ_SWITCH use_cmdq)
 	_primary_path_lock(__func__);
 
 	primary_display_use_cmdq = use_cmdq;
-	DISPCHECK("display driver use %s to config register now\n", (use_cmdq==CMDQ_ENABLE)?"CMDQ":"CPU");
 
 	_primary_path_unlock(__func__);
 	return primary_display_use_cmdq;
@@ -5461,7 +5321,6 @@ int _set_backlight_by_cmdq(unsigned int level)
 	int ret=0;
 	cmdqRecHandle cmdq_handle_backlight = NULL;
 	ret = cmdqRecCreate(CMDQ_SCENARIO_PRIMARY_DISP,&cmdq_handle_backlight);
-	DISPCHECK("primary backlight, handle=%p\n", cmdq_handle_backlight);
 	if(ret!=0)
 	{
 		DISPCHECK("fail to create primary cmdq handle for backlight\n");
@@ -5475,7 +5334,6 @@ int _set_backlight_by_cmdq(unsigned int level)
 		//dpmgr_path_ioctl(pgc->dpmgr_handle, cmdq_handle_backlight, DDP_BACK_LIGHT, &level);
 		disp_lcm_set_backlight(pgc->plcm,cmdq_handle_backlight,level);
 		_cmdq_flush_config_handle_mira(cmdq_handle_backlight, 1);		
-		DISPCHECK("[BL]_set_backlight_by_cmdq ret=%d\n",ret);
    	}
 	else
 	{	
@@ -5491,7 +5349,6 @@ int _set_backlight_by_cmdq(unsigned int level)
 		MMProfileLogEx(ddp_mmp_get_events()->primary_set_bl, MMProfileFlagPulse, 1, 4);
 		_cmdq_flush_config_handle_mira(cmdq_handle_backlight, 1);
 		MMProfileLogEx(ddp_mmp_get_events()->primary_set_bl, MMProfileFlagPulse, 1, 6);
-		DISPCHECK("[BL]_set_backlight_by_cmdq ret=%d\n",ret);
 	}	
 	cmdqRecDestroy(cmdq_handle_backlight);		
 	cmdq_handle_backlight = NULL;
@@ -5515,32 +5372,22 @@ int _set_backlight_by_cpu(unsigned int level)
    	}
 	else
 	{		
-		DISPCHECK("[BL]display cmdq trigger loop stop[begin]\n");
         if(primary_display_cmdq_enabled())
         {
             _cmdq_stop_trigger_loop();
         }
-		DISPCHECK("[BL]display cmdq trigger loop stop[end]\n");
 		
 		if(dpmgr_path_is_busy(pgc->dpmgr_handle))
 		{
-			DISPCHECK("[BL]primary display path is busy\n");
 			ret = dpmgr_wait_event_timeout(pgc->dpmgr_handle, DISP_PATH_EVENT_FRAME_DONE, HZ*1);
-			DISPCHECK("[BL]wait frame done ret:%d\n", ret);
 		}
 
-		DISPCHECK("[BL]stop dpmgr path[begin]\n");
 		dpmgr_path_stop(pgc->dpmgr_handle, CMDQ_DISABLE);
-		DISPCHECK("[BL]stop dpmgr path[end]\n");
 		if(dpmgr_path_is_busy(pgc->dpmgr_handle))
 		{
-			DISPCHECK("[BL]primary display path is busy after stop\n");
 			dpmgr_wait_event_timeout(pgc->dpmgr_handle, DISP_PATH_EVENT_FRAME_DONE, HZ*1);
-			DISPCHECK("[BL]wait frame done ret:%d\n", ret);
 		}
-		DISPCHECK("[BL]reset display path[begin]\n");
 		dpmgr_path_reset(pgc->dpmgr_handle, CMDQ_DISABLE);
-		DISPCHECK("[BL]reset display path[end]\n");
 		
 		MMProfileLogEx(ddp_mmp_get_events()->primary_set_bl, MMProfileFlagPulse, 0, 2);
 		
@@ -5548,16 +5395,12 @@ int _set_backlight_by_cpu(unsigned int level)
 		
 		MMProfileLogEx(ddp_mmp_get_events()->primary_set_bl, MMProfileFlagPulse, 0, 3);
 
-		DISPCHECK("[BL]start dpmgr path[begin]\n"); 			
 		dpmgr_path_start(pgc->dpmgr_handle, CMDQ_DISABLE);
-		DISPCHECK("[BL]start dpmgr path[end]\n");
 
         if(primary_display_cmdq_enabled())
         {
-            DISPCHECK("[BL]start cmdq trigger loop[begin]\n");
             _cmdq_start_trigger_loop();
         }
-		DISPCHECK("[BL]start cmdq trigger loop[end]\n");
 	}		
 	MMProfileLogEx(ddp_mmp_get_events()->primary_set_bl, MMProfileFlagPulse, 0, 7);
 	return ret;
@@ -5580,7 +5423,6 @@ int primary_display_setbacklight(unsigned int level)
 	_primary_path_lock(__func__);
 	if(pgc->state == DISP_SLEEPED)
 	{
-		DISPCHECK("Sleep State set backlight invald\n");
 	}
 	else
 	{
@@ -5614,17 +5456,14 @@ int primary_display_vsync_switch(int method)
 	int ret=0;
 	if(method==0)
 	{
-		printk("Vsync map RDMA %d\n",method);
 		dpmgr_map_event_to_irq(pgc->dpmgr_handle, DISP_PATH_EVENT_IF_VSYNC, DDP_IRQ_RDMA0_DONE);
 	}
 	else if(method==1)
 	{
-		printk("Vsync map DSI TE %d\n",method);
 		dpmgr_map_event_to_irq(pgc->dpmgr_handle, DISP_PATH_EVENT_IF_VSYNC, DDP_IRQ_DSI0_EXT_TE);
 	}
 	else if(method==2)
 	{
-		printk("Vsync map DSI FRAME DONE %d\n",method);
 		dpmgr_map_event_to_irq(pgc->dpmgr_handle, DISP_PATH_EVENT_IF_VSYNC, DDP_IRQ_DSI0_FRAME_DONE);
 	}
 
@@ -5751,7 +5590,6 @@ int primary_display_capture_framebuffer_ovl(unsigned long pbuf, unsigned int for
 	m4uClient = m4u_create_client();
 	if(m4uClient == NULL)
 	{
-		DISPCHECK("primary capture:Fail to alloc  m4uClient\n");
         ret = -1;
         goto out;
 	}
@@ -5759,7 +5597,6 @@ int primary_display_capture_framebuffer_ovl(unsigned long pbuf, unsigned int for
 	ret = m4u_alloc_mva(m4uClient,M4U_PORT_DISP_WDMA0, pbuf, NULL,buffer_size,M4U_PROT_READ | M4U_PROT_WRITE,0,&mva);
 	if(ret !=0 )
 	{
-		 DISPCHECK("primary capture:Fail to allocate mva\n");
          ret = -1;
          goto out;
 	}
@@ -5767,7 +5604,6 @@ int primary_display_capture_framebuffer_ovl(unsigned long pbuf, unsigned int for
 	ret = m4u_cache_sync(m4uClient, M4U_PORT_DISP_WDMA0, pbuf, buffer_size, mva, M4U_CACHE_FLUSH_BY_RANGE);
 	if(ret !=0 )
 	{
-		DISPCHECK("primary capture:Fail to cach sync\n");
         ret = -1;
         goto out;
 	}
@@ -5778,7 +5614,6 @@ int primary_display_capture_framebuffer_ovl(unsigned long pbuf, unsigned int for
 		ret = cmdqRecCreate(CMDQ_SCENARIO_PRIMARY_DISP,&cmdq_handle);
 		if(ret!=0)
 		{
-		    DISPCHECK("primary capture:Fail to create primary cmdq handle for capture\n");
             ret = -1;
             goto out;
 		}
@@ -5788,7 +5623,6 @@ int primary_display_capture_framebuffer_ovl(unsigned long pbuf, unsigned int for
         ret = cmdqRecCreate(CMDQ_SCENARIO_DISP_SCREEN_CAPTURE,&cmdq_wait_handle);
 		if(ret!=0)
 		{
-		    DISPCHECK("primary capture:Fail to create primary cmdq wait handle for capture\n");
             ret = -1;
             goto out;
 		}
@@ -5951,7 +5785,6 @@ UINT32 DISP_GetVRamSizeBoot(char *cmdline)
 	extern int _parse_tag_videolfb(void);
 	_parse_tag_videolfb();
 	if(vramsize == 0) vramsize = 0x3000000;
-	DISPCHECK("[DT]display vram size = 0x%08x|%d\n", vramsize, vramsize);
 	return vramsize;
 #else
 	char *p = NULL;
@@ -5971,7 +5804,6 @@ UINT32 DISP_GetVRamSizeBoot(char *cmdline)
 			vramSize = 0x3000000;
 	}
 
-	DISPCHECK("display vram size = 0x%08x|%d\n", vramSize, vramSize);
     	return vramSize;
 #endif
 }
@@ -5983,7 +5815,6 @@ int disp_hal_allocate_framebuffer(phys_addr_t pa_start, phys_addr_t pa_end, unsi
 {
 	int ret = 0;
 	*va = (unsigned long) ioremap_nocache(pa_start, pa_end - pa_start + 1);
-	printk("disphal_allocate_fb, pa_start=0x%p, pa_end=0x%pa, va=0x%lx\n", &pa_start, &pa_end, *va);
 
 	if (disp_helper_get_option(DISP_HELPER_OPTION_USE_M4U)) {
 		m4u_client_t *client;
@@ -6005,7 +5836,6 @@ int disp_hal_allocate_framebuffer(phys_addr_t pa_start, phys_addr_t pa_end, unsi
 		{
 			DISPMSG("m4u_alloc_mva returns fail: %d\n", ret);
 		}
-		printk("[DISPHAL] FB MVA is 0x%lx PA is 0x%pa\n", *mva, &pa_start);
 
 	} else {
 		*mva = pa_start & 0xffffffffULL;
@@ -6109,15 +5939,12 @@ int primary_display_lcm_ATA(void)
 	DISPFUNC();
 	_primary_path_lock(__func__);
 	if (pgc->state == 0) {
-		DISPCHECK("ATA_LCM, primary display path is already sleep, skip\n");
 		goto done;
 	}
 	
-	DISPCHECK("[ATA_LCM]primary display path stop[begin]\n");
 	if (primary_display_is_video_mode()) {
 		dpmgr_path_ioctl(pgc->dpmgr_handle, NULL, DDP_STOP_VIDEO_MODE, NULL);
 	}
-	DISPCHECK("[ATA_LCM]primary display path stop[end]\n");
 	ret = disp_lcm_ATA(pgc->plcm);
 	dpmgr_path_start(pgc->dpmgr_handle, CMDQ_DISABLE);
 	if(primary_display_is_video_mode()){
@@ -6134,33 +5961,23 @@ int fbconfig_get_esd_check_test(UINT32 dsi_id,UINT32 cmd,UINT8*buffer,UINT32 num
 	int ret = 0;
 	_primary_path_lock(__func__);
 	if (pgc->state == DISP_SLEEPED) {
-		DISPCHECK("[ESD]primary display path is sleeped?? -- skip esd check\n");
 		_primary_path_unlock(__func__);
 		goto done;
 	}
 	primary_display_esd_check_enable(0);
 	/// 1: stop path
 	_cmdq_stop_trigger_loop();
-	if (dpmgr_path_is_busy(pgc->dpmgr_handle)) {
-		DISPCHECK("[ESD]wait frame done ret:%d\n", ret);
-	}
 	dpmgr_path_stop(pgc->dpmgr_handle, CMDQ_DISABLE);
-	DISPCHECK("[ESD]stop dpmgr path[end]\n");
-	if (dpmgr_path_is_busy(pgc->dpmgr_handle)) {
-		DISPCHECK("[ESD]wait frame done ret:%d\n", ret);
-	}
 	dpmgr_path_reset(pgc->dpmgr_handle, CMDQ_DISABLE);
 	extern int fbconfig_get_esd_check(DSI_INDEX dsi_id,UINT32 cmd,UINT8*buffer,UINT32 num);
 	ret=fbconfig_get_esd_check(dsi_id,cmd,buffer,num);
 	dpmgr_path_start(pgc->dpmgr_handle, CMDQ_DISABLE);
-	DISPCHECK("[ESD]start dpmgr path[end]\n");
 	if (primary_display_is_video_mode()) {
 		/* for video mode, we need to force trigger here */
 		/* for cmd mode, just set DPREC_EVENT_CMDQ_SET_EVENT_ALLOW when trigger loop start */
 		dpmgr_path_trigger(pgc->dpmgr_handle, NULL, CMDQ_DISABLE);
 	}
 	_cmdq_start_trigger_loop();
-	DISPCHECK("[ESD]start cmdq trigger loop[end]\n");
 	primary_display_esd_check_enable(1);
 	_primary_path_unlock(__func__);
 
@@ -6199,18 +6016,8 @@ int Panel_Master_dsi_config_entry(const char * name,void *config_value)
 	/// 1: stop path
 	_cmdq_stop_trigger_loop();
 
-	if(dpmgr_path_is_busy(pgc->dpmgr_handle))
-	{
-		DISPCHECK("[ESD]wait frame done ret:%d\n", ret);
-	}
-
 	dpmgr_path_stop(pgc->dpmgr_handle, CMDQ_DISABLE);
-	DISPCHECK("[ESD]stop dpmgr path[end]\n");
 
-	if(dpmgr_path_is_busy(pgc->dpmgr_handle))
-	{
-		DISPCHECK("[ESD]wait frame done ret:%d\n", ret);
-	}
 	dpmgr_path_reset(pgc->dpmgr_handle, CMDQ_DISABLE);
 	if((!strcmp(name, "PM_CLK"))||(!strcmp(name, "PM_SSC")))
 		Panel_Master_primary_display_config_dsi(name,*config_dsi);
@@ -6237,14 +6044,12 @@ int Panel_Master_dsi_config_entry(const char * name,void *config_value)
 		force_trigger_path=0;
 	}
 	_cmdq_start_trigger_loop();
-	DISPCHECK("[Pmaster]start cmdq trigger loop\n");
 done:
 	_primary_path_unlock(__func__);
 
 	if(force_trigger_path)		//command mode only
 	{
 		primary_display_trigger(0,NULL,0);
-		DISPCHECK("[Pmaster]force trigger display path\r\n");
 	}
 	atomic_set(&esd_check_task_wakeup, esd_check_backup);
 
@@ -6269,19 +6074,16 @@ int primary_display_switch_dst_mode(int mode)
 	}
 	if(pgc->state == DISP_SLEEPED)
 	{
-		DISPCHECK("[primary_display_switch_dst_mode], primary display path is already sleep, skip\n");
 		goto done;
 	}
 
 	if(mode == primary_display_cur_dst_mode){
-		DISPCHECK("[primary_display_switch_dst_mode]not need switch,cur_mode:%d, switch_mode:%d\n",primary_display_cur_dst_mode,mode);
 		goto done;
 	}
 //	DISPCHECK("[primary_display_switch_mode]need switch,cur_mode:%d, switch_mode:%d\n",primary_display_cur_dst_mode,mode);
 	lcm_cmd = disp_lcm_switch_mode(pgc->plcm,mode);
 	if(lcm_cmd == NULL)
 	{
-		DISPCHECK("[primary_display_switch_dst_mode]get lcm cmd fail\n",primary_display_cur_dst_mode,mode);
 		goto done;
 	}
 	else
@@ -6458,7 +6260,6 @@ disp_ddp_path_config data_config2;
 
 int primary_display_te_test()
 {
-    printk("display_test te begin\n");
 	int ret=0;
     int try_cnt=3;
     int time_interval=0;
@@ -6467,7 +6268,6 @@ int primary_display_te_test()
     long long time_framedone=0;
 	if(primary_display_is_video_mode())
 	{
-		printk("Video Mode No TE\n");
 		return ret;
 	}
 
@@ -6490,12 +6290,7 @@ int primary_display_te_test()
     }else{
         ret = -1;
     }
-	if(ret>=0)
-		printk("[display_test_result]==>Force On TE Open!(%d)\n",time_interval_max);
-	else
-		printk("[display_test_result]==>Force On TE Closed!(%d)\n",time_interval_max);
 
-    printk("display_test te  end\n");	
 	return ret;
 
 }
@@ -6608,27 +6403,17 @@ int primary_display_fps_test()
 
 int primary_display_roi_test(int x,int y)
 {
-    printk("display_test roi begin\n");
 	int ret=0;
-    printk("display_test roi set roi %d, %d\n",x, y);
     DSI_set_roi(x,y);
     msleep(50);
     dpmgr_path_trigger(pgc->dpmgr_handle, NULL, CMDQ_DISABLE);
     msleep(50);
-    printk("display_test DSI_check_roi\n");
     ret = DSI_check_roi();
     msleep(20);
-	if(ret==0)
-		printk("[display_test_result]==>DSI_ROI limit!\n");
-	else
-		printk("[display_test_result]==>DSI_ROI Normal!\n");
-    
-    printk("display_test set roi %d, %d\n",0, 0);
 
     DSI_set_roi(0,0);
 
     msleep(20);
-    DISPCHECK("display_test end\n");
 	return ret;
 }
 
@@ -6646,14 +6431,12 @@ int primary_display_resolution_test()
 	memcpy((void*)&data_config2, (void*)dpmgr_path_get_last_config(pgc->dpmgr_handle), sizeof(disp_ddp_path_config));
 	w_backup = data_config2.dst_w;
 	h_backup = data_config2.dst_h; 
-	DISPCHECK("[display_test resolution]w_backup %d h_backup %d dsi_mode_backup %d\n",w_backup,h_backup,dsi_mode_backup);
 	// for dsi config
 	DSI_ForceConfig(1);
 	for (i=0; i < sizeof(width_array)/sizeof(int); i++)
     { 
         dst_width = width_array[i];
         dst_heigh = heigh_array[i];
-        DISPCHECK("[display_test resolution] width %d, heigh %d\n",dst_width,dst_heigh);
     	lcm_param2 = disp_lcm_get_params(pgc->plcm);
         lcm_param2->dsi.mode = CMD_MODE;
         lcm_param2->dsi.horizontal_active_pixel = dst_width;
@@ -6699,13 +6482,6 @@ int primary_display_resolution_test()
         {
            if(!dpmgr_path_is_busy(pgc->dpmgr_handle))
            {
-               if(i==0){
-                   DISPCHECK("[display_test resolution] display_result 0x%x unlimited!\n", array_id[i]);
-               }else if(i==1){
-                   DISPCHECK("[display_test resolution] display_result 0x%x unlimited (W<H)\n", array_id[i]);
-               }else{
-                   DISPCHECK("[display_test resolution] display_result 0x%x(%d x %d)\n", array_id[i],dst_width,dst_heigh);
-               }
                break;
            }
         }
@@ -6734,7 +6510,6 @@ int primary_display_check_test(void)
 {
 	int ret=0;
 	int esd_backup=0;
-	DISPCHECK("[display_test]Display test[Start]\n");	
 	_primary_path_lock(__func__);	
 	// disable esd check
 	if(atomic_read(&esd_check_task_wakeup))
@@ -6742,32 +6517,25 @@ int primary_display_check_test(void)
 		esd_backup = 1;
 		primary_display_esd_check_enable(0);	
 		msleep(2000);		
-		DISPCHECK("[display_test]Disable esd check end\n");
 	}
 
 	// if suspend => return
 	if(pgc->state == DISP_SLEEPED)
 	{
-	DISPCHECK("[display_test_result]======================================\n");
 		DISPCHECK("[display_test_result]==>Test Fail : primary display path is sleeped\n");		
-		DISPCHECK("[display_test_result]======================================\n");
 		goto done;
 	}
 
 	// stop trigger loop
-	DISPCHECK("[display_test]Stop trigger loop[begin]\n");
 	_cmdq_stop_trigger_loop();
 	atomic_set(&ESDCheck_byCPU ,1);
 	if(dpmgr_path_is_busy(pgc->dpmgr_handle))
 	{
-		DISPCHECK("[display_test]==>primary display path is busy\n");
 		ret = dpmgr_wait_event_timeout(pgc->dpmgr_handle, DISP_PATH_EVENT_FRAME_DONE, HZ*1);
 	if(ret <=0 )
 		dpmgr_path_reset(pgc->dpmgr_handle, CMDQ_DISABLE);
 
-		DISPCHECK("[display_test]==>wait frame done ret:%d\n", ret);
 	}
-	DISPCHECK("[display_test]Stop trigger loop[end]\n");
 	//test rdma res after reset
 	//primary_display_rdma_res_test();
 
@@ -6783,17 +6551,13 @@ int primary_display_check_test(void)
 	//mutex fps
 	//primary_display_fps_test();
 
-	DISPCHECK("[display_test]start dpmgr path[begin]\n");
 	dpmgr_path_start(pgc->dpmgr_handle, CMDQ_DISABLE);
 	if(dpmgr_path_is_busy(pgc->dpmgr_handle))
 	{
 		DISPERR("[display_test]==>Fatal error, we didn't trigger display path but it's already busy\n");
 	}
-	DISPCHECK("[display_test]start dpmgr path[end]\n");
 
-	DISPCHECK("[display_test]Start trigger loop[begin]\n");
 	_cmdq_start_trigger_loop();
-	DISPCHECK("[display_test]Start trigger loop[end]\n");
 	atomic_set(&ESDCheck_byCPU ,0);
 
 done:
@@ -6802,10 +6566,8 @@ done:
 	if(esd_backup==1)
 	{
 		primary_display_esd_check_enable(1);	
-		DISPCHECK("[display_test]Restore esd check\n");
 	}
 	// unlock path
 	_primary_path_unlock(__func__);
-	DISPCHECK("[display_test]Display test[End]\n");	
 	return ret;
 }
diff --git a/drivers/misc/mediatek/watchpoint/mt6580/aarch32/hw_watchpoint_aarch32.c b/drivers/misc/mediatek/watchpoint/mt6580/aarch32/hw_watchpoint_aarch32.c
index aa86b01c4..b97887976 100644
--- a/drivers/misc/mediatek/watchpoint/mt6580/aarch32/hw_watchpoint_aarch32.c
+++ b/drivers/misc/mediatek/watchpoint/mt6580/aarch32/hw_watchpoint_aarch32.c
@@ -36,13 +36,11 @@ static int my_watch_data3;
 
 int my_wp_handler1(unsigned int addr)
 {
-	pr_notice("Access my data from an instruction at 0x%x\n", addr);
 	return 0;
 }
 
 int my_wp_handler2(unsigned int addr)
 {
-	pr_notice("Access my data from an instruction at 0x%x\n", addr);
 	/* trigger exception */
 	return 1;
 }
@@ -59,8 +57,6 @@ void foo(void)
 		/* fail to add watchpoing */
 	} else {
 		/* the memory address is under watching */
-		pr_notice("add hw watch point success...\n");
-
 		/* del_hw_watchpoint(&wp_event); */
 	}
 	/* test watchpoint */
@@ -79,7 +75,6 @@ void foo2(void)
 		/* fail to add watchpoing */
 	} else {
 		/* the memory address is under watching */
-		pr_notice("add hw watch point success...\n");
 
 		/* del_hw_watchpoint(&wp_event); */
 	}
@@ -99,7 +94,6 @@ void foo3(void)
 		/* fail to add watchpoing */
 	} else {
 		/* the memory address is under watching */
-		pr_notice("add hw watch point success...\n");
 
 		/* del_hw_watchpoint(&wp_event); */
 	}
@@ -129,8 +123,6 @@ int enable_hw_watchpoint(void)
 		}
 
 		if (readl(DBGDSCR(i)) & MDBGEN) {
-			pr_notice("already enabled, DBGDSCR = 0x%x\n",
-				  readl(DBGDSCR(i)));
 		}
 
 		writel(UNLOCK_KEY, DBGLAR(i));
@@ -190,7 +182,6 @@ int add_hw_watchpoint(struct wp_event *wp_event)
 	wp_events[i].handler = wp_event->handler;
 	wp_events[i].auto_disable = wp_event->auto_disable;
 
-	pr_notice("Add watchpoint %d at address 0x%x\n", i, wp_events[i].virt);
 	for_each_online_cpu(j) {
 		writel(wp_events[i].virt, DBGWVR_BASE(j) + i * 4);
 		writel(ctl, DBGWCR_BASE(j) + i * 4);
@@ -247,15 +238,12 @@ int watchpoint_handler(unsigned long addr, unsigned int fsr,
 
 	daddr = addr & ~3;
 	iaddr = regs->ARM_pc;
-	pr_notice("[WP] addr = 0x%x, DBGWFAR/DFAR = 0x%x\n", (unsigned int)addr, wfar);
-	pr_notice("[WP] daddr = 0x%x, iaddr = 0x%x\n", daddr, iaddr);
 
 	/* update PC to avoid re-execution of the instruction under watching */
 	regs->ARM_pc += thumb_mode(regs) ? 2 : 4;
 
 	for (i = 0; i < nr_dbg; i++) {
 		if (wp_events[i].in_use && wp_events[i].virt == (daddr)) {
-			pr_notice("Watchpoint %d triggers.\n", i);
 			if (wp_events[i].handler) {
 				if (wp_events[i].auto_disable) {
 					for_each_online_cpu(j) {
@@ -343,7 +331,6 @@ static int __init hw_watchpoint_init(void)
 	}
 
 	of_property_read_u32(node, "num", &nr_dbg);
-	pr_notice("[WP] get %d debug interface\n", nr_dbg);
 
 	MT_HW_DBG_BASE = kzalloc(sizeof(void __iomem *) * nr_dbg, GFP_KERNEL);
 	if (!MT_HW_DBG_BASE) {
@@ -384,7 +371,6 @@ static int __init hw_watchpoint_init(void)
 	hook_fault_code(0x2, watchpoint_handler, SIGTRAP, 0,
 			"watchpoint debug exception");
 #endif
-	pr_notice("[WP] watchpoint handler init.\n");
 #ifdef WATCH_DBG
 	foo();
 	foo2();
diff --git a/drivers/misc/mediatek/watchpoint/mt6580/aarch32/mt_dbg_aarch32.c b/drivers/misc/mediatek/watchpoint/mt6580/aarch32/mt_dbg_aarch32.c
index c2319c3a7..84aac334b 100644
--- a/drivers/misc/mediatek/watchpoint/mt6580/aarch32/mt_dbg_aarch32.c
+++ b/drivers/misc/mediatek/watchpoint/mt6580/aarch32/mt_dbg_aarch32.c
@@ -86,8 +86,6 @@ regs_hotplug_callback(struct notifier_block *nfb, unsigned long action,
 	int i = 0;
 	unsigned int cpu = (unsigned int)hcpu;
 
-	pr_info("[WP]CB cpu=%d\n", cpu);
-
 	switch (action) {
 	case CPU_ONLINE:
 	case CPU_ONLINE_FROZEN:
diff --git a/drivers/misc/mediatek/wdk/wd_api.c b/drivers/misc/mediatek/wdk/wd_api.c
index 678972863..e7017c5fd 100755
--- a/drivers/misc/mediatek/wdk/wd_api.c
+++ b/drivers/misc/mediatek/wdk/wd_api.c
@@ -88,7 +88,6 @@ static int wd_cpu_hot_plug_on_notify(int cpu)
 	int res = 0;
 	wk_cpu_update_bit_flag(cpu, 1);
 	mtk_wdt_restart(WD_TYPE_NOLOCK);	/* for KICK external wdt */
-	printk("WD wd_cpu_hot_plug_on_notify kick ext wd\n");
 
 	return res;
 }
@@ -135,13 +134,11 @@ static int disable_local(void)
 	local_wdt_enable(WK_WDT_DIS);
 #endif
 #endif
-	printk(" wd_api disable_local not support now\n");
 	return 0;
 }
 
 static int set_mode(enum ext_wdt_mode mode)
 {
-	printk("  support only irq mode-20140522");
 	switch (mode) {
 	case WDT_DUAL_MODE:
 		break;
@@ -150,7 +147,6 @@ static int set_mode(enum ext_wdt_mode mode)
 		break;
 
 	case WDT_IRQ_ONLY_MODE:
-		printk("wd set only irq mode for debug\n");
 		mtk_wdt_mode_config(FALSE, TRUE, TRUE, FALSE, TRUE);
 		break;
 	}
@@ -237,7 +233,6 @@ static int thermal_mode_config(WD_REQ_CTL en, WD_REQ_MODE mode)
 static int thermal_direct_mode_config(WD_REQ_CTL en, WD_REQ_MODE mode)
 {
 	int res = 0;
-	printk("thermal_direct_mode_config(en:0x%x,mode:0x%x)\n", en, mode);
 	if (WD_REQ_EN == en) {
 		/* g_ext_wd_drv.reques_en_set(MTK_WDT_REQ_SPM_THERMAL_MARK,WD_REQ_EN); */
 		res = mtk_wdt_request_en_set(MTK_WDT_REQ_THERMAL_MARK, WD_REQ_EN);
@@ -285,19 +280,16 @@ static int wd_dram_reserved_mode(bool enabled)
 
 static unsigned int wd_get_check_bit(void)
 {
-	printk("dummy wd_get_check_bit");
 	return 0;
 }
 
 static unsigned int wd_get_kick_bit(void)
 {
-	printk("dummy wd_get_kick_bit");
 	return 0;
 }
 
 static int wd_restart(enum wd_restart_type type)
 {
-	printk("dummy wd_restart");
 	return 0;
 }
 
@@ -305,20 +297,17 @@ static int wd_restart(enum wd_restart_type type)
 static int wd_cpu_hot_plug_on_notify(int cpu)
 {
 	int res = 0;
-	printk("dummy wd_cpu_hot_plug_on_notify");
 	return res;
 }
 
 static int wd_cpu_hot_plug_off_notify(int cpu)
 {
 	int res = 0;
-	printk("dummy wd_cpu_hot_plug_off_notify");
 	return res;
 }
 
 static int wd_sw_reset(int type)
 {
-	printk("dummy wd_sw_reset");
 	wdt_arch_reset(type);
 	return 0;
 }
@@ -326,80 +315,68 @@ static int wd_sw_reset(int type)
 static int mtk_wk_wdt_config(enum ext_wdt_mode mode, int timeout_val)
 {
 
-	printk("dummy mtk_wk_wdt_config");
 	return 0;
 }
 
 static int disable_ext(void)
 {
-	printk("dummy disable_ext");
 	return 0;
 }
 
 static int disable_local(void)
 {
-	printk("dummy disable_local");
 	return 0;
 }
 
 static int set_mode(enum ext_wdt_mode mode)
 {
-	printk("dummy set_mode");
 	return 0;
 
 }
 
 static int confirm_hwreboot(void)
 {
-	printk("dummy confirm_hwreboot");
 	return 0;
 }
 
 static void suspend_notify(void)
 {
 
-	printk("dummy suspend_notify  \n ");
 
 }
 
 static void resume_notify(void)
 {
 
-	printk("dummy resume_notify \n ");
 
 }
 
 static int disable_all_wd(void)
 {
-	printk("dummy disable_all_wd \n ");
 	return 0;
 }
 
 static int spmwdt_mode_config(WD_REQ_CTL en, WD_REQ_MODE mode)
 {
 	int res = 0;
-	printk("dummy spmwdt_mode_config \n ");
 	return res;
 }
 
 static int thermal_mode_config(WD_REQ_CTL en, WD_REQ_MODE mode)
 {
 	int res = 0;
-	printk("dummy thermal_mode_config \n ");
 	return res;
 }
 
 static int wd_dram_reserved_mode(bool enabled)
 {
 	int res = 0;
-	printk("dummy wd_dram_reserved_mode \n ");
 	return res;
 }
 
 static int thermal_direct_mode_config(WD_REQ_CTL en, WD_REQ_MODE mode)
 {
 	int res = 0;
-	printk("thermal_direct_mode_config in dummy driver (en:0x%x,mode:0x%x)\n", en, mode);
 	if (WD_REQ_EN == en) {
 		/* g_ext_wd_drv.reques_en_set(MTK_WDT_REQ_SPM_THERMAL_MARK,WD_REQ_EN); */
 		res = mtk_wdt_request_en_set(MTK_WDT_REQ_THERMAL_MARK, WD_REQ_EN);
@@ -436,19 +413,15 @@ int wd_api_init(void)
 	int api_size = 0;
 
 	api_size = (sizeof(g_wd_api_obj) / sizeof(long));
-	printk("wd api_size=%d\n", api_size);
 	/* check wd api */
 	check_p = (long *)&g_wd_api_obj;
 	for (i = 1; i < api_size; i++) {
-		printk("p[%d]=%lx\n", i, *(check_p + i));
 		if (0 == check_p[i]) {
-			printk("wd_api init fail the %d api not init\n", i);
 			g_wd_api_obj.ready = 0;
 			return -1;
 		}
 
 	}
-	printk("wd_api init ok\n");
 	return 0;
 }
 
diff --git a/drivers/misc/mediatek/wdk/wd_common_drv.c b/drivers/misc/mediatek/wdk/wd_common_drv.c
index f3cd0eafb..1de0d8927 100644
--- a/drivers/misc/mediatek/wdk/wd_common_drv.c
+++ b/drivers/misc/mediatek/wdk/wd_common_drv.c
@@ -117,8 +117,6 @@ static int wk_proc_cmd_write(struct file *file, const char *buf, size_t count, l
 
 	sscanf(cmd_buf, "%d %d %d %d %d", &mode, &kinterval, &timeout, &debug_sleep, &en);
 
-	printk("[WDK] mode=%d interval=%d timeout=%d enable =%d\n", mode, kinterval, timeout, en);
-
 	if (timeout < kinterval) {
 		errmsg("The interval(%d) value should be smaller than timeout value(%d)\n",
 		       kinterval, timeout);
@@ -147,17 +145,13 @@ static int wk_proc_cmd_write(struct file *file, const char *buf, size_t count, l
 		mtk_wdt_enable(WK_WDT_EN);
 #ifdef CONFIG_LOCAL_WDT
 		local_wdt_enable(WK_WDT_EN);
-		printk("[WDK] enable local wdt\n");
 #endif
-		printk("[WDK] enable wdt\n");
 	}
 	if (0 == en) {
 		mtk_wdt_enable(WK_WDT_DIS);
 #ifdef CONFIG_LOCAL_WDT
 		local_wdt_enable(WK_WDT_DIS);
-		printk("[WDK] disable local wdt\n");
 #endif
-		printk("[WDK] disable wdt\n");
 	}
 
 	spin_lock(&lock);
@@ -169,15 +163,11 @@ static int wk_proc_cmd_write(struct file *file, const char *buf, size_t count, l
 	if (1 == mode) {
 		/* irq mode only usefull to 75 */
 		mtk_wdt_swsysret_config(0x20000000, 1);
-		printk("[WDK] use irq mod\n");
 	} else if (0 == mode) {
 		/* reboot mode only usefull to 75 */
 		mtk_wdt_swsysret_config(0x20000000, 0);
-		printk("[WDK] use reboot mod\n");
 	} else if (2 == mode) {
 		my_wd_api->wd_set_mode(WDT_IRQ_ONLY_MODE);
-	} else {
-		printk("[WDK] mode err\n");
 	}
 
 	g_timeout = timeout;
@@ -203,7 +193,6 @@ static int start_kicker_thread_with_default_setting(void)
 	spin_unlock(&lock);
 	start_kicker();
 
-	printk("[WDK] fwq start_kicker_thread_with_default_setting done\n");
 	return ret;
 }
 
@@ -211,10 +200,8 @@ static unsigned int cpus_kick_bit = 0;
 void wk_start_kick_cpu(int cpu)
 {
 	if (IS_ERR(wk_tsk[cpu])) {
-		printk("[wdk]wk_task[%d] is NULL\n", cpu);
 	} else {
 		kthread_bind(wk_tsk[cpu], cpu);
-		printk("[wdk]bind thread[%d] to cpu[%d]\n", wk_tsk[cpu]->pid, cpu);
 		wake_up_process(wk_tsk[cpu]);
 	}
 }
@@ -223,14 +210,12 @@ void kicker_cpu_bind(int cpu)
 {
 	if(IS_ERR(wk_tsk[cpu]))
 	{
-		printk("[wdk]wk_task[%d] is NULL\n",cpu);
 	}
 	else
 	{
 		//kthread_bind(wk_tsk[cpu], cpu);
 		WARN_ON_ONCE(set_cpus_allowed_ptr(wk_tsk[cpu], cpumask_of(cpu)) < 0);
 		
-		printk("[wdk]bind kicker thread[%d] to cpu[%d]\n",wk_tsk[cpu]->pid,cpu);
 		wake_up_process(wk_tsk[cpu]);
 	}
 }
@@ -275,8 +260,6 @@ int wk_proc_init(void)
 		printk("[wk_proc_init]: create /proc/wdk failed\n");
 	}
 
-	printk("[WDK] Initialize proc\n");
-
 /* de->read_proc = wk_proc_cmd_read; */
 /* de->write_proc = wk_proc_cmd_write; */
 
@@ -331,18 +314,12 @@ static int kwdt_thread(void *arg)
 				/* only process WDT info if thread-x is on cpu-x */
 				spin_lock(&lock);
 				local_bit = kick_bit;
-				printk_deferred("[WDK], local_bit:0x%x, cpu:%d,RT[%lld]\n", local_bit,
-					     cpu, sched_clock());
 				if ((local_bit & (1 << cpu)) == 0) {
 					/* printk("[WDK]: set  WDT kick_bit\n"); */
 					local_bit |= (1 << cpu);
 					/* aee_rr_rec_wdk_kick_jiffies(jiffies); */
 				}
-				printk_deferred("[WDK], local_bit:0x%x, cpu:%d, check bit0x:%x,RT[%lld]\n",
-				     local_bit, cpu, wk_check_kick_bit(), sched_clock());
 				if (local_bit == wk_check_kick_bit()) {
-					printk_deferred("[WDK]: kick Ex WDT,RT[%lld]\n",
-						     sched_clock());
 					mtk_wdt_restart(WD_TYPE_NORMAL);	/* for KICK external wdt */
 					local_bit = 0;
 				}
@@ -350,14 +327,11 @@ static int kwdt_thread(void *arg)
 				spin_unlock(&lock);
 
 #ifdef CONFIG_LOCAL_WDT
-				printk_deferred("[WDK]: cpu:%d, kick local wdt,RT[%lld]\n", cpu,
-					     sched_clock());
 				/* kick local wdt */
 				mpcore_wdt_restart(WD_TYPE_NORMAL);
 #endif
 			}
 		} else if (0 == g_enable) {
-			printk("WDK stop to kick\n");
 		} else {
 			errmsg("No watch dog driver is hooked\n");
 			BUG();
@@ -373,12 +347,6 @@ static int kwdt_thread(void *arg)
 			rtc_time_to_tm(tv.tv_sec, &tm);
 			tv_android.tv_sec -= sys_tz.tz_minuteswest * 60;
 			rtc_time_to_tm(tv_android.tv_sec, &tm_android);
-			printk_deferred("[thread:%d][RT:%lld] %d-%02d-%02d %02d:%02d:%02d.%u UTC; android time %d-%02d-%02d %02d:%02d:%02d.%03d\n",
-			     current->pid, sched_clock(), tm.tm_year + 1900, tm.tm_mon + 1,
-			     tm.tm_mday, tm.tm_hour, tm.tm_min, tm.tm_sec, (unsigned int)tv.tv_usec,
-			     tm_android.tm_year + 1900, tm_android.tm_mon + 1, tm_android.tm_mday,
-			     tm_android.tm_hour, tm_android.tm_min, tm_android.tm_sec,
-			     (unsigned int)tv_android.tv_usec);
 		}
 
 		msleep((g_kinterval) * 1000);
@@ -387,13 +355,11 @@ static int kwdt_thread(void *arg)
 		if ((cpu == 0) && (wk_tsk[cpu]->pid == current->pid))	/* only effect at cpu0 */
 		{
 			if (aee_kernel_wdt_kick_api(g_kinterval) == WDT_PWK_HANG_FORCE_HWT) {
-				printk_deferred("power key trigger HWT\n");
 				cpus_kick_bit = 0xFFFF;	/* Try to force to HWT */
 			}
 		}
 #endif
 	}
-	printk("[WDK] WDT kicker thread stop, cpu:%d, pid:%d\n", cpu, current->pid);
 	return 0;
 }
 
@@ -413,7 +379,6 @@ static int start_kicker(void)
 		wk_start_kick_cpu(i);
 	}
 	g_kicker_init = 1;
-	printk("[WDK] WDT start kicker  done\n");
 	return 0;
 }
 
@@ -530,7 +495,6 @@ ssize_t mtk_rgu_pause_wdt_store(struct kobject *kobj, const char *buffer, size_t
 	int res = sscanf(buffer, "%x", &pause_wdt);
 
 	if (res != 1) {
-		printk("%s: expect 1 numbers\n", __func__);
 	} else {
 		/* For real case, pause wdt if get value is not zero. Suspend and resume may enable wdt again */
 		if (pause_wdt) {
@@ -565,12 +529,10 @@ static int __cpuinit wk_cpu_callback(struct notifier_block *nfb, unsigned long a
 
 		mtk_wdt_restart(WD_TYPE_NORMAL);	/* for KICK external wdt */
 #ifdef CONFIG_LOCAL_WDT
-		printk("[WDK]cpu %d plug on kick local wdt\n", hotcpu);
 		/* kick local wdt */
 		mpcore_wdt_restart(WD_TYPE_NORMAL);
 #endif
 
-		printk("[WDK]cpu %d plug on kick wdt\n", hotcpu);
 		break;
 #ifdef CONFIG_HOTPLUG_CPU
 #ifdef CONFIG_LOCAL_WDT
@@ -584,14 +546,12 @@ static int __cpuinit wk_cpu_callback(struct notifier_block *nfb, unsigned long a
 
 		mtk_wdt_restart(WD_TYPE_NORMAL);	/* for KICK external wdt */
 #ifdef CONFIG_LOCAL_WDT
-		printk("[WDK]cpu %d plug off kick local wdt\n", hotcpu);
 		/* kick local wdt */
 		/* mpcore_wdt_restart(WD_TYPE_NORMAL); */
 		/* disable local watchdog */
 		mpcore_wk_wdt_stop();
 #endif
 		wk_cpu_update_bit_flag(hotcpu, 0);
-		printk("[WDK]cpu %d plug off, kick wdt\n", hotcpu);
 		break;
 #endif				/* CONFIG_HOTPLUG_CPU */
 	}
@@ -614,7 +574,6 @@ static int __init init_wk(void)
 	/*  */
 	res = get_wd_api(&g_wd_api);
 	if (res) {
-		printk("get public api error in wd common driver %d", res);
 	}
 #ifdef __ENABLE_WDT_SYSFS__
 	mtk_rgu_sysfs();
@@ -635,17 +594,14 @@ static int __init init_wk(void)
 		if(cpu_online(i))
 		{
 			wk_cpu_update_bit_flag(i, 1);
-			printk("[WDK]init cpu online %d\n",i);
 		}
 		else
 		{
 			wk_cpu_update_bit_flag(i, 0);
-			printk("[WDK]init cpu offline %d\n",i);
 		}
 	}
 	mtk_wdt_restart(WD_TYPE_NORMAL);	/* for KICK external wdt */
 	cpu_hotplug_enable();
-	printk("[WDK]init_wk done late_initcall cpus_kick_bit=0x%x -----\n", cpus_kick_bit);
 		
 	return 0;
 }
@@ -659,13 +615,11 @@ static void __exit exit_wk(void)
 static int __init init_wk_check_bit(void)
 {
 	int i = 0;
-	printk("[WDK]arch init check_bit=0x%x+++++\n", cpus_kick_bit);
 	for (i = 0; i < CPU_NR; i++) {
 
 		wk_cpu_update_bit_flag(i, 1);
 
 	}
-	printk("[WDK]arch init check_bit=0x%x-----\n", cpus_kick_bit);
 	return 0;
 }
 late_initcall(init_wk);
diff --git a/drivers/misc/mediatek/wdt/mt6580/mtk_wdt.c b/drivers/misc/mediatek/wdt/mt6580/mtk_wdt.c
index 6d41af4ef..d446543b9 100755
--- a/drivers/misc/mediatek/wdt/mt6580/mtk_wdt.c
+++ b/drivers/misc/mediatek/wdt/mt6580/mtk_wdt.c
@@ -144,7 +144,6 @@ void mtk_wdt_mode_config(	BOOL dual_mode_en,
 	DRV_WriteReg32(MTK_WDT_MODE,tmp);
 	//dual_mode(1); //always dual mode
 	//mdelay(100);
-	printk(KERN_INFO " mtk_wdt_mode_config  mode value=%x, tmp:%x,pid=%d\n",DRV_Reg32(MTK_WDT_MODE), tmp,current->pid);
 
 	spin_unlock(&rgu_reg_operation_spinlock);
 }
@@ -169,7 +168,6 @@ int mtk_wdt_enable(enum wk_wdt_en en)
 	  tmp &= ~MTK_WDT_MODE_ENABLE;
 	  g_wdt_enable = 0;
 	}
-    printk("mtk_wdt_enable value=%x,pid=%d\n",tmp,current->pid);
 	DRV_WriteReg32(MTK_WDT_MODE,tmp);
 
 	spin_unlock(&rgu_reg_operation_spinlock);
@@ -233,7 +231,6 @@ void wdt_arch_reset(char mode)
     unsigned int wdt_mode_val;
 	struct device_node *np_rgu;
 	
-	printk("wdt_arch_reset called@Kernel mode =%c\n",mode);
 	np_rgu = of_find_compatible_node(NULL, NULL, rgu_of_match[0].compatible);
 	
 	if(!toprgu_base)
@@ -242,14 +239,12 @@ void wdt_arch_reset(char mode)
 		if (!toprgu_base) {
 			printk("RGU iomap failed\n");
 		}
-		printk("RGU base: 0x%p  RGU irq: %d\n", toprgu_base, wdt_irq_id);
 	}
 	
 	spin_lock(&rgu_reg_operation_spinlock);
 	/* Watchdog Rest */
 	DRV_WriteReg32(MTK_WDT_RESTART, MTK_WDT_RESTART_KEY);
 	wdt_mode_val = DRV_Reg32(MTK_WDT_MODE);
-	printk("wdt_arch_reset called MTK_WDT_MODE =%x \n",wdt_mode_val);
 	/* clear autorestart bit: autoretart: 1, bypass power key, 0: not bypass power key */
 	wdt_mode_val &=(~MTK_WDT_MODE_AUTO_RESTART);
 	/* make sure WDT mode is hw reboot mode, can not config isr mode  */
@@ -266,10 +261,8 @@ void wdt_arch_reset(char mode)
 	}
 
 	DRV_WriteReg32(MTK_WDT_MODE,wdt_mode_val);
-	printk("wdt_arch_reset called end  MTK_WDT_MODE =%x \n",wdt_mode_val);
 	udelay(100);
 	DRV_WriteReg32(MTK_WDT_SWRST, MTK_WDT_SWRST_KEY);
-        printk("wdt_arch_reset: SW_reset happen\n");
 	spin_unlock(&rgu_reg_operation_spinlock);
 
 	while (1)
@@ -297,7 +290,6 @@ int mtk_rgu_dram_reserved(int enable)
 		DRV_WriteReg32(MTK_WDT_MODE, tmp);
 	}
 
-	printk("mtk_rgu_dram_reserved:MTK_WDT_MODE(0x%x)\n", DRV_Reg32(MTK_WDT_MODE));
 	return 0;
 }
 
@@ -306,7 +298,6 @@ int mtk_wdt_swsysret_config(int bit,int set_value)
     unsigned int wdt_sys_val;
 	spin_lock(&rgu_reg_operation_spinlock);
 	wdt_sys_val = DRV_Reg32(MTK_WDT_SWSYSRST);
-	printk("fwq2 before set wdt_sys_val =%x\n",wdt_sys_val);
     wdt_sys_val |= MTK_WDT_SWSYS_RST_KEY;
 	switch(bit)
 	{
@@ -336,7 +327,6 @@ int mtk_wdt_swsysret_config(int bit,int set_value)
 	spin_unlock(&rgu_reg_operation_spinlock);
 
 	mdelay(10);
-	printk("after set wdt_sys_val =%x,wdt_sys_val=%x\n",DRV_Reg32(MTK_WDT_SWSYSRST),wdt_sys_val);
     return 0;
 }
 
@@ -472,7 +462,6 @@ static void wdt_report_info (void)
     struct task_struct *task ;
     task = &init_task ;
     
-    printk ("Qwdt: -- watchdog time out\n") ;
     for_each_process (task)
     {
         if (task->state == 0)
@@ -484,11 +473,7 @@ static void wdt_report_info (void)
     }
     
     
-    printk ("backtrace of current task:\n") ;
     show_stack (NULL, NULL) ;
-    
-       
-    printk ("Qwdt: -- watchdog time out\n") ;    
 }
 #endif
 
@@ -520,7 +505,6 @@ static void wdt_fiq(void *arg, void *regs, void *svc_sp)
 static irqreturn_t mtk_wdt_isr(int irq, void *dev_id)
 
 {
-    printk("fwq mtk_wdt_isr\n" );
     aee_wdt_irq_info();
     
 #ifndef __USING_DUMMY_WDT_DRV__ /* FPGA will set this flag */
@@ -542,13 +526,10 @@ static int mtk_wdt_probe(struct platform_device *dev)
 	int ret=0;
 	unsigned int interval_val;
 	
-	printk("******** MTK WDT driver probe!! ********\n" );
-
 	if(!toprgu_base)
 	{	
 	toprgu_base = of_iomap(dev->dev.of_node, 0);
 	if (!toprgu_base) {
-		printk("RGU iomap failed\n");
 		return -ENODEV;
 		}
 	}
@@ -556,20 +537,16 @@ static int mtk_wdt_probe(struct platform_device *dev)
 	{	
 	wdt_irq_id = irq_of_parse_and_map(dev->dev.of_node, 0);
 	if (!wdt_irq_id) {
-		printk("RGU get IRQ ID failed\n");
 		return -ENODEV;
 	}
 	}
-	printk("RGU base: 0x%p  RGU irq: %d\n", toprgu_base, wdt_irq_id);
 
 
 #ifndef __USING_DUMMY_WDT_DRV__ /* FPGA will set this flag */
 
 #ifndef CONFIG_FIQ_GLUE	
-    printk("******** MTK WDT register irq ********\n" );
 		ret = request_irq(AP_RGU_WDT_IRQ_ID, (irq_handler_t)mtk_wdt_isr, IRQF_TRIGGER_FALLING, "mtk_watchdog", NULL);
 #else
-    printk("******** MTK WDT register fiq ********\n" );
 		ret = request_fiq(AP_RGU_WDT_IRQ_ID, wdt_fiq, IRQF_TRIGGER_FALLING, NULL);
 #endif	
 
@@ -578,7 +555,6 @@ static int mtk_wdt_probe(struct platform_device *dev)
 		printk( "mtk_wdt_probe : failed to request irq (%d)\n", ret);
 		return ret;
 	}
-	printk("mtk_wdt_probe : Success to request irq\n");
 	
 	/* Set timeout vale and restart counter */
 	g_last_time_time_out_value=30;
@@ -603,10 +579,8 @@ static int mtk_wdt_probe(struct platform_device *dev)
 
 
     #ifdef  CONFIG_MTK_WD_KICKER	// Initialize to dual mode
-	printk("mtk_wdt_probe : Initialize to dual mode \n");
 	mtk_wdt_mode_config(TRUE, TRUE, TRUE, FALSE, TRUE);
 	#else				// Initialize to disable wdt
-	printk("mtk_wdt_probe : Initialize to disable wdt \n");
 	mtk_wdt_mode_config(FALSE, FALSE, TRUE, FALSE, FALSE);
 	g_wdt_enable =0;
 	#endif
@@ -623,17 +597,12 @@ static int mtk_wdt_probe(struct platform_device *dev)
 	mtk_rgu_dram_reserved(0);
 #endif
    udelay(100);
-   printk("mtk_wdt_probe : done WDT_MODE(%x)\n",DRV_Reg32(MTK_WDT_MODE));
-	 printk("mtk_wdt_probe : done MTK_WDT_REQ_MODE(%x)\n",DRV_Reg32(MTK_WDT_REQ_MODE));
-	 printk("mtk_wdt_probe : done MTK_WDT_REQ_IRQ_EN(%x)\n",DRV_Reg32(MTK_WDT_REQ_IRQ_EN));
 
 	return ret;
 }
 
 static int mtk_wdt_remove(struct platform_device *dev)
 {
-	printk("******** MTK wdt driver remove!! ********\n" );
-
 #ifndef __USING_DUMMY_WDT_DRV__ /* FPGA will set this flag */
 	free_irq(AP_RGU_WDT_IRQ_ID, NULL);
 #endif
@@ -642,15 +611,11 @@ static int mtk_wdt_remove(struct platform_device *dev)
 
 static void mtk_wdt_shutdown(struct platform_device *dev)
 {	
-	printk("******** MTK WDT driver shutdown!! ********\n" );
-
 	//mtk_wdt_ModeSelection(KAL_FALSE, KAL_FALSE, KAL_FALSE);
 	//kick external wdt
 	//mtk_wdt_mode_config(TRUE, FALSE, FALSE, FALSE, FALSE);
 
 	mtk_wdt_restart(WD_TYPE_NORMAL);
-
-   printk("******** MTK WDT driver shutdown done ********\n" );
 }
 
 void mtk_wd_suspend(void)
@@ -660,9 +625,6 @@ void mtk_wd_suspend(void)
 	mtk_wdt_mode_config(TRUE, TRUE, TRUE, FALSE, FALSE);
 
 	mtk_wdt_restart(WD_TYPE_NORMAL);
-
-	aee_sram_printk("[WDT] suspend\n");
-	printk("[WDT] suspend\n");
 }
 
 void mtk_wd_resume(void)
@@ -675,9 +637,6 @@ void mtk_wd_resume(void)
 		mtk_wdt_restart(WD_TYPE_NORMAL);
 		
 	}
-
-	aee_sram_printk("[WDT] resume(%d)\n", g_wdt_enable);
-	printk("[WDT] resume(%d)\n", g_wdt_enable);
 }
 	
 
@@ -708,7 +667,6 @@ static int __init mtk_wdt_init(void)
 		printk("****[mtk_wdt_driver] Unable to register driver (%d)\n", ret);
 		return ret;
 	}
-    printk("mtk_wdt_init ok\n");
 	return 0;	
 }
 
diff --git a/drivers/misc/mediatek/xlog/xlog_filter.c b/drivers/misc/mediatek/xlog/xlog_filter.c
index 93bd6f99a..f28a529f1 100644
--- a/drivers/misc/mediatek/xlog/xlog_filter.c
+++ b/drivers/misc/mediatek/xlog/xlog_filter.c
@@ -354,7 +354,6 @@ static int __init xlog_init(void)
 		printk(KERN_ERR "xLog: failed to unregister device\n");
 		return -1;
 	} else {
-		printk(KERN_INFO "xLog: inited.\n");
 		return 0;
 	}
 }
@@ -368,7 +367,6 @@ static void __exit xlog_exit(void)
 	err = misc_deregister(&xlog_dev);
 	if (unlikely(err))
 		printk(KERN_ERR "xLog: failed to unregister device!\n");
-	printk("xLog: exited.\n");
 }
 module_init(xlog_init);
 module_exit(xlog_exit);
diff --git a/drivers/mmc/card/block.c b/drivers/mmc/card/block.c
index 0769b49ea..02a0d94ae 100644
--- a/drivers/mmc/card/block.c
+++ b/drivers/mmc/card/block.c
@@ -55,7 +55,6 @@
 
 //add vmstat info with block tag log
 #include <linux/vmstat.h>
-#define FEATURE_STORAGE_VMSTAT_LOGGER
 
 
 #include <linux/xlog.h>
@@ -2402,8 +2401,6 @@ static int mmc_blk_issue_rw_rq(struct mmc_queue *mq, struct request *rqc)
 			t_period = time1 - mmccid_tag_t1;
 			if(t_period >= (unsigned long long )((PRT_TIME_PERIOD)*(unsigned long long )10))
 			{
-				pr_warn("[BLOCK_TAG] MMC Queue Thread:%d, %d, %d, %d, %d \n", mmcqd[0], mmcqd[1], mmcqd[2], mmcqd[3], mmcqd[4]);
-				pr_warn("[BLOCK_TAG] MMC CID: %x %x %x %x \n", g_u32_cid[0], g_u32_cid[1], g_u32_cid[2], g_u32_cid[3]);
 				mmccid_tag_t1 = time1;
 			}
 			if(mmcqd_tag_t1[idx]==0)
@@ -2417,24 +2414,20 @@ static int mmc_blk_issue_rw_rq(struct mmc_queue *mq, struct request *rqc)
 				mmcqd_r_throughput[idx] = 0;
 				mmcqd_w_throughput[idx] = 0;
 				t_usage = mmcqd_t_usage_wr [idx] + mmcqd_t_usage_rd[idx];
-				if(t_period > t_usage*100)
-					pr_warn("[BLOCK_TAG] mmcqd:%d Workload < 1%%, duty %lld, period %lld, req_cnt=%d\n", mmcqd[idx], t_usage, t_period, mmcqd_rq_count[idx]);
+				if(t_period > t_usage*100) {}
 				else
 				{
 					do_div(t_period, 100);	//boundary issue
 					t_percent =((unsigned int)t_usage)/((unsigned int)t_period);						
 					mmcqd_work_percent[idx] = t_percent;
-					pr_warn("[BLOCK_TAG] mmcqd:%d Workload=%d%%, duty %lld, period %lld00, req_cnt=%d \n", mmcqd[idx], t_percent, t_usage, t_period, mmcqd_rq_count[idx]);	//period %lld00 == period %lld x100
 				}
 				if(mmcqd_wr_rq_count[idx] >= 2)
 				{
 					diversity = mmcqd_wr_offset[idx]/(mmcqd_wr_rq_count[idx]-1);
-					pr_warn("[BLOCK_TAG] mmcqd:%d Write Diversity=%d sectors offset, req_cnt=%d, break_cnt=%d, tract_cnt=%d, bit_cnt=%d\n", mmcqd[idx], diversity, mmcqd_wr_rq_count[idx], mmcqd_wr_break[idx], mmcqd_wr_tract[idx], mmcqd_wr_bit[idx]);
 				}
 				if(mmcqd_rd_rq_count[idx] >= 2)
 				{
 					diversity = mmcqd_rd_offset[idx]/(mmcqd_rd_rq_count[idx]-1);
-					pr_warn("[BLOCK_TAG] mmcqd:%d Read Diversity=%d sectors offset, req_cnt=%d, break_cnt=%d, tract_cnt=%d, bit_cnt=%d\n", mmcqd[idx], diversity, mmcqd_rd_rq_count[idx], mmcqd_rd_break[idx], mmcqd_rd_tract[idx], mmcqd_rd_bit[idx]);
 				}
 				if(mmcqd_t_usage_wr[idx])
 				{
@@ -2443,7 +2436,6 @@ static int mmc_blk_issue_rw_rq(struct mmc_queue *mq, struct request *rqc)
 					{
 						perf_meter = (mmcqd_rq_size_wr[idx])/((unsigned int)mmcqd_t_usage_wr[idx]); //kb/s
 						mmcqd_w_throughput[idx] = perf_meter;
-						pr_warn("[BLOCK_TAG] mmcqd:%d Write Throughput=%d kB/s, size: %d bytes, time:%lld ms\n", mmcqd[idx], perf_meter, mmcqd_rq_size_wr[idx], mmcqd_t_usage_wr[idx]);
 					}
 				}
 				if(mmcqd_t_usage_rd[idx])
@@ -2453,7 +2445,6 @@ static int mmc_blk_issue_rw_rq(struct mmc_queue *mq, struct request *rqc)
 					{
 						perf_meter = (mmcqd_rq_size_rd[idx])/((unsigned int)mmcqd_t_usage_rd[idx]); //kb/s					
 						mmcqd_r_throughput[idx] = perf_meter;
-						pr_warn("[BLOCK_TAG] mmcqd:%d Read Throughput=%d kB/s, size: %d bytes, time:%lld ms\n", mmcqd[idx], perf_meter, mmcqd_rq_size_rd[idx], mmcqd_t_usage_rd[idx]);  					
 					}
 				}
 				mmcqd_tag_t1[idx]=time1;
@@ -2502,16 +2493,6 @@ static int mmc_blk_issue_rw_rq(struct mmc_queue *mq, struct request *rqc)
 					
 				} while(0);
 #endif
-				
-#if defined(FEATURE_STORAGE_VMSTAT_LOGGER)
-                pr_warn("[BLOCK_TAG] vmstat (FP:%ld)(FD:%ld)(ND:%ld)(WB:%ld)(NW:%ld)\n",
-                            ((global_page_state(NR_FILE_PAGES)) << (PAGE_SHIFT - 10)),
-                            ((global_page_state(NR_FILE_DIRTY)) << (PAGE_SHIFT - 10)),
-                            ((global_page_state(NR_DIRTIED))    << (PAGE_SHIFT - 10)),
-                            ((global_page_state(NR_WRITEBACK))  << (PAGE_SHIFT - 10)),
-                            ((global_page_state(NR_WRITTEN))    << (PAGE_SHIFT - 10)));
-#endif
-
 			}
 		if( rqc )
               {
@@ -2980,7 +2961,6 @@ static struct mmc_blk_data *mmc_blk_alloc(struct mmc_card *card)
 #ifdef CONFIG_MTK_EMMC_SUPPORT
             msdc_get_info(EMMC_CARD_BOOT, EMMC_RESERVE, &s_info);
             l_reserve =  s_info.emmc_reserve;
-            printk("l_reserve = 0x%x\n", l_reserve);
             size -= l_reserve;                         /*reserved for 64MB (emmc otp + emmc combo offset + reserved)*/
 #endif
     }
@@ -3247,8 +3227,6 @@ static int mmc_blk_probe(struct mmc_card *card)
 	mmc_set_drvdata(card, md);
 	mmc_fixup_device(card, blk_fixups);
 
-	printk("[%s]: %s by manufacturer settings, quirks=0x%x\n", __func__, md->disk->disk_name, card->quirks);
-
 #ifdef CONFIG_MMC_BLOCK_DEFERRED_RESUME
 	mmc_set_bus_resume_policy(card->host, 1);
 #endif
diff --git a/drivers/mmc/core/core.c b/drivers/mmc/core/core.c
index dbc314cf6..eac45a4b9 100644
--- a/drivers/mmc/core/core.c
+++ b/drivers/mmc/core/core.c
@@ -468,16 +468,12 @@ static void mmc_wait_for_req_done(struct mmc_host *host,
 
 	while (1) {
 		if(!wait_for_completion_timeout(&mrq->completion,DAT_TIMEOUT)){
-			printk(KERN_ERR "MSDC wait request timeout CMD<%d>ARG<0x%x>\n",mrq->cmd->opcode,mrq->cmd->arg);
 			if(mrq->data){
 				host->ops->dma_error_reset(host);
 				}
 
             if(mrq->data)
                 mrq->data->error = (unsigned int)-ETIMEDOUT;
-
-
-            printk(KERN_ERR "MSDC wait request timeout DAT<%d>\n",(mrq->data->blocks) * (mrq->data->blksz));
         }
 
 #if 0
@@ -898,14 +894,12 @@ void mmc_start_flush(struct mmc_card *card)
 	bool use_busy_signal;
 
 	if (!card || mmc_card_doing_flush(card)) {
-		printk("[%s]: !card, or it is doing flush now\n", __func__);
 		return;
 	}
 
 	mmc_claim_host(card->host);
 
 	if (card->host->flush_info.cancel_delayed_work) {
-		printk("[%s]: %s: cancel_delayed_work flush ops was set, exit.\n", __func__, mmc_hostname(card->host));
 		card->host->flush_info.cancel_delayed_work = false;
 		goto out;
 	}
@@ -936,8 +930,6 @@ void mmc_start_idle_time_flush(struct work_struct *work)
 	struct mmc_host *host = container_of(work, struct mmc_host,
 			flush_info.idle_time_dw.work);
 
-	printk("mmc_start_idle_time_flush...\n");
-
 	mmc_start_flush(host->card);
 }
 EXPORT_SYMBOL(mmc_start_idle_time_flush);
@@ -949,7 +941,6 @@ EXPORT_SYMBOL(mmc_start_idle_time_flush);
 void mmc_start_delayed_flush(struct mmc_card *card)
 {
 	if (!card->ext_csd.cache_ctrl || mmc_card_doing_flush(card)) {
-		printk("queueing delayed_flush_work return.\n");
 		return;
 	}
 
@@ -1966,7 +1957,6 @@ int mmc_resume_bus(struct mmc_host *host)
 	if (!mmc_bus_needs_resume(host))
 		return -EINVAL;
 
-	printk("%s: Starting deferred resume\n", mmc_hostname(host));
 	spin_lock_irqsave(&host->lock, flags);
 	host->bus_resume_flags &= ~MMC_BUSRESUME_NEEDS_RESUME;
 	host->rescan_disable = 0;
@@ -1983,7 +1973,6 @@ int mmc_resume_bus(struct mmc_host *host)
 		host->bus_ops->detect(host);
 
 	mmc_bus_put(host);
-	printk("%s: Deferred resume completed\n", mmc_hostname(host));
 	return 0;
 }
 
@@ -2058,7 +2047,6 @@ void mmc_detect_change(struct mmc_host *host, unsigned long delay)
 
 	wake_lock(&host->detect_wake_lock);
 	ret = mmc_schedule_delayed_work(&host->detect, delay);
-	printk(KERN_INFO"msdc: %d,mmc_schedule_delayed_work ret= %d\n",host->index,ret);
 }
 
 EXPORT_SYMBOL(mmc_detect_change);
diff --git a/drivers/mmc/core/mmc.c b/drivers/mmc/core/mmc.c
index f26fcef18..a9a17d2f8 100755
--- a/drivers/mmc/core/mmc.c
+++ b/drivers/mmc/core/mmc.c
@@ -516,7 +516,6 @@ static int mmc_read_ext_csd(struct mmc_card *card, u8 *ext_csd)
         if ((card->cid.manfid == VENDOR_SAMSUNG) &&
             (card->ext_csd.rev == 5)             &&
             (1 == (0x1 & ext_csd[EXT_CSD_SAMSUNG_FEATURE]))){
-            printk("set to support discard\n");
             card->ext_csd.feature_support |= MMC_DISCARD_FEATURE;
         }
 
@@ -809,7 +808,6 @@ static int mmc_select_hs400(struct mmc_card *card)
 	err = mmc_switch(card, EXT_CSD_CMD_SET_NORMAL,
 				 EXT_CSD_HS_TIMING, 3, 0);
 err:
-	printk("[%s]: switch to HS400 speed mode, err=%d\n", __func__, err); 
 	return err;
 }
 #endif
@@ -896,7 +894,6 @@ static int mmc_select_hs200(struct mmc_card *card)
 		err = mmc_switch(card, EXT_CSD_CMD_SET_NORMAL,
 				 EXT_CSD_HS_TIMING, 2, 0);
 err:
-	printk("[%s]: switch to HS200 speed mode, err=%d\n", __func__, err); 
 	return err;
 }
 
@@ -1430,7 +1427,6 @@ static int mmc_init_card(struct mmc_host *host, u32 ocr,
 
 #ifdef CONFIG_MTK_EMMC_SUPPORT_OTP 
 	/* enable hc erase grp size */
-	printk("switch to hc erase grp size\n");
 	err = mmc_switch(card, EXT_CSD_CMD_SET_NORMAL,
 		EXT_CSD_ERASE_GROUP_DEF, 1, 0);
 	card->ext_csd.erase_group_def = 1;
diff --git a/drivers/mmc/core/sd_ops.c b/drivers/mmc/core/sd_ops.c
index 394204279..401f6d867 100644
--- a/drivers/mmc/core/sd_ops.c
+++ b/drivers/mmc/core/sd_ops.c
@@ -186,7 +186,6 @@ int mmc_send_app_op_cond(struct mmc_host *host, u32 ocr, u32 *rocr)
 
 	if (rocr && !mmc_host_is_spi(host)) {
 		*rocr = cmd.resp[0];
-		printk(KERN_ERR "sd card rocr <0x%x>\n",*rocr);
 	}
 	return err;
 }
diff --git a/drivers/mtd/mtdcore.c b/drivers/mtd/mtdcore.c
index b6455246e..97a79e0b6 100644
--- a/drivers/mtd/mtdcore.c
+++ b/drivers/mtd/mtdcore.c
@@ -446,8 +446,6 @@ int del_mtd_device(struct mtd_info *mtd)
 		not->remove(mtd);
 
 	if (mtd->usecount) {
-		printk(KERN_NOTICE "Removing MTD device #%d (%s) with use count %d\n",
-		       mtd->index, mtd->name, mtd->usecount);
 		ret = -EBUSY;
 	} else {
 		device_unregister(&mtd->dev);
@@ -1207,12 +1205,10 @@ static int __init init_mtd(void)
 #ifdef DYNAMIC_CHANGE_MTD_WRITEABLE //tonykuo 2013-11-05
     entry = proc_create("driver/mtd_writeable", 0600, NULL, &mtd_write_proc_fops);
         if (entry != NULL) {
-            printk( "mtd_writeable success\n");
         }
 
     entry = proc_create("driver/mtd_change", 0600, NULL, &mtd_change_proc_fops);
         if (entry != NULL) {
-            printk( "mtd_change success\n");
         }
 #endif
 
diff --git a/drivers/of/of_reserved_mem.c b/drivers/of/of_reserved_mem.c
index 0cfab3f39..ac10c4cac 100644
--- a/drivers/of/of_reserved_mem.c
+++ b/drivers/of/of_reserved_mem.c
@@ -167,13 +167,6 @@ static int __init __reserved_mem_alloc_size(unsigned long node,
 
 	*res_base = base;
 	*res_size = size;
-	MTK_MEMCFG_LOG_AND_PRINTK(KERN_ALERT
-		"[PHY layout]%s   :   "
-		"0x%08llx - 0x%08llx (0x%llx)\n",
-		uname, 
-		(unsigned long long)base, 
-		(unsigned long long)base + size - 1,
-		(unsigned long long)size);
 
 	return 0;
 }
@@ -197,8 +190,6 @@ static int __init __reserved_mem_init_node(struct reserved_mem *rmem)
 			continue;
 
 		if (initfn(rmem, rmem->fdt_node, rmem->name) == 0) {
-			pr_info("Reserved memory: initialized node %s, compatible id %s\n",
-				rmem->name, compat);
 			return 0;
 		}
 	}
diff --git a/drivers/power/mediatek/battery_common.c b/drivers/power/mediatek/battery_common.c
index a1c52bf66..f800fc30e 100755
--- a/drivers/power/mediatek/battery_common.c
+++ b/drivers/power/mediatek/battery_common.c
@@ -359,7 +359,6 @@ kal_bool bat_is_ext_power(void)
 	kal_bool pwr_src = 0;
 
 	battery_charging_control(CHARGING_CMD_GET_POWER_SOURCE, &pwr_src);
-	battery_log(BAT_LOG_FULL, "[BAT_IS_EXT_POWER] is_ext_power = %d\n", pwr_src);
 	return pwr_src;
 }
 #endif
@@ -395,14 +394,8 @@ kal_bool upmu_is_chr_det(void)
 	} else {
 		#if !defined(CONFIG_MTK_DUAL_INPUT_CHARGER_SUPPORT)
 		if (mt_usb_is_device()) {
-			battery_log(BAT_LOG_FULL,
-					    "[upmu_is_chr_det] Charger exist and USB is not host\n");
-
 			return KAL_TRUE;
 		} else {
-			battery_log(BAT_LOG_CRTI,
-					    "[upmu_is_chr_det] Charger exist but USB is host\n");
-
 			return KAL_FALSE;
 		}
 		#else
@@ -416,8 +409,6 @@ EXPORT_SYMBOL(upmu_is_chr_det);
 
 void wake_up_bat(void)
 {
-	battery_log(BAT_LOG_CRTI, "[BATTERY] wake_up_bat. \r\n");
-
 	chr_wake_up_bat = KAL_TRUE;
 	bat_thread_timeout = KAL_TRUE;
 #ifdef MTK_ENABLE_AGING_ALGORITHM
@@ -432,8 +423,6 @@ EXPORT_SYMBOL(wake_up_bat);
 #ifdef FG_BAT_INT
 void wake_up_bat2(void)
 {
-	battery_log(BAT_LOG_CRTI, "[BATTERY] wake_up_bat2. \r\n");
-
 	wake_lock(&battery_fg_lock);
 	fg_wake_up_bat = KAL_TRUE;
 	bat_thread_timeout = KAL_TRUE;
@@ -458,13 +447,10 @@ static ssize_t bat_log_write(struct file *filp, const char __user *buff, size_t
 	}
 
 	if (proc_bat_data == '1') {
-		battery_log(BAT_LOG_CRTI, "enable battery driver log system\n");
 		Enable_BATDRV_LOG = 1;
 	} else if (proc_bat_data == '2') {
-		battery_log(BAT_LOG_CRTI, "enable battery driver log system:2\n");
 		Enable_BATDRV_LOG = 2;
 	} else {
-		battery_log(BAT_LOG_CRTI, "Disable battery driver log system\n");
 		Enable_BATDRV_LOG = 0;
 	}
 
@@ -481,7 +467,6 @@ int init_proc_log(void)
 
 #if 1
 	proc_create("batdrv_log", 0644, NULL, &bat_proc_fops);
-	battery_log(BAT_LOG_CRTI, "proc_create bat_proc_fops\n");
 #else
 	proc_entry = create_proc_entry("batdrv_log", 0644, NULL);
 
@@ -719,15 +704,12 @@ static struct battery_data battery_main = {
 static ssize_t show_ADC_Charger_Voltage(struct device *dev, struct device_attribute *attr,
 					char *buf)
 {
-	battery_log(BAT_LOG_CRTI, "[EM] show_ADC_Charger_Voltage : %d\n",
-			    BMT_status.charger_vol);
 	return sprintf(buf, "%d\n", BMT_status.charger_vol);
 }
 
 static ssize_t store_ADC_Charger_Voltage(struct device *dev, struct device_attribute *attr,
 					 const char *buf, size_t size)
 {
-	battery_log(BAT_LOG_CRTI, "[EM] Not Support Write Function\n");
 	return size;
 }
 
@@ -741,14 +723,12 @@ static ssize_t show_ADC_Channel_0_Slope(struct device *dev, struct device_attrib
 {
 	int ret_value = 1;
 	ret_value = (*(adc_cali_slop + 0));
-	battery_log(BAT_LOG_CRTI, "[EM] ADC_Channel_0_Slope : %d\n", ret_value);
 	return sprintf(buf, "%u\n", ret_value);
 }
 
 static ssize_t store_ADC_Channel_0_Slope(struct device *dev, struct device_attribute *attr,
 					 const char *buf, size_t size)
 {
-	battery_log(BAT_LOG_CRTI, "[EM] Not Support Write Function\n");
 	return size;
 }
 
@@ -762,14 +742,12 @@ static ssize_t show_ADC_Channel_1_Slope(struct device *dev, struct device_attrib
 {
 	int ret_value = 1;
 	ret_value = (*(adc_cali_slop + 1));
-	battery_log(BAT_LOG_CRTI, "[EM] ADC_Channel_1_Slope : %d\n", ret_value);
 	return sprintf(buf, "%u\n", ret_value);
 }
 
 static ssize_t store_ADC_Channel_1_Slope(struct device *dev, struct device_attribute *attr,
 					 const char *buf, size_t size)
 {
-	battery_log(BAT_LOG_CRTI, "[EM] Not Support Write Function\n");
 	return size;
 }
 
@@ -783,14 +761,12 @@ static ssize_t show_ADC_Channel_2_Slope(struct device *dev, struct device_attrib
 {
 	int ret_value = 1;
 	ret_value = (*(adc_cali_slop + 2));
-	battery_log(BAT_LOG_CRTI, "[EM] ADC_Channel_2_Slope : %d\n", ret_value);
 	return sprintf(buf, "%u\n", ret_value);
 }
 
 static ssize_t store_ADC_Channel_2_Slope(struct device *dev, struct device_attribute *attr,
 					 const char *buf, size_t size)
 {
-	battery_log(BAT_LOG_CRTI, "[EM] Not Support Write Function\n");
 	return size;
 }
 
@@ -804,14 +780,12 @@ static ssize_t show_ADC_Channel_3_Slope(struct device *dev, struct device_attrib
 {
 	int ret_value = 1;
 	ret_value = (*(adc_cali_slop + 3));
-	battery_log(BAT_LOG_CRTI, "[EM] ADC_Channel_3_Slope : %d\n", ret_value);
 	return sprintf(buf, "%u\n", ret_value);
 }
 
 static ssize_t store_ADC_Channel_3_Slope(struct device *dev, struct device_attribute *attr,
 					 const char *buf, size_t size)
 {
-	battery_log(BAT_LOG_CRTI, "[EM] Not Support Write Function\n");
 	return size;
 }
 
@@ -825,14 +799,12 @@ static ssize_t show_ADC_Channel_4_Slope(struct device *dev, struct device_attrib
 {
 	int ret_value = 1;
 	ret_value = (*(adc_cali_slop + 4));
-	battery_log(BAT_LOG_CRTI, "[EM] ADC_Channel_4_Slope : %d\n", ret_value);
 	return sprintf(buf, "%u\n", ret_value);
 }
 
 static ssize_t store_ADC_Channel_4_Slope(struct device *dev, struct device_attribute *attr,
 					 const char *buf, size_t size)
 {
-	battery_log(BAT_LOG_CRTI, "[EM] Not Support Write Function\n");
 	return size;
 }
 
@@ -846,14 +818,12 @@ static ssize_t show_ADC_Channel_5_Slope(struct device *dev, struct device_attrib
 {
 	int ret_value = 1;
 	ret_value = (*(adc_cali_slop + 5));
-	battery_log(BAT_LOG_CRTI, "[EM] ADC_Channel_5_Slope : %d\n", ret_value);
 	return sprintf(buf, "%u\n", ret_value);
 }
 
 static ssize_t store_ADC_Channel_5_Slope(struct device *dev, struct device_attribute *attr,
 					 const char *buf, size_t size)
 {
-	battery_log(BAT_LOG_CRTI, "[EM] Not Support Write Function\n");
 	return size;
 }
 
@@ -867,14 +837,12 @@ static ssize_t show_ADC_Channel_6_Slope(struct device *dev, struct device_attrib
 {
 	int ret_value = 1;
 	ret_value = (*(adc_cali_slop + 6));
-	battery_log(BAT_LOG_CRTI, "[EM] ADC_Channel_6_Slope : %d\n", ret_value);
 	return sprintf(buf, "%u\n", ret_value);
 }
 
 static ssize_t store_ADC_Channel_6_Slope(struct device *dev, struct device_attribute *attr,
 					 const char *buf, size_t size)
 {
-	battery_log(BAT_LOG_CRTI, "[EM] Not Support Write Function\n");
 	return size;
 }
 
@@ -888,14 +856,12 @@ static ssize_t show_ADC_Channel_7_Slope(struct device *dev, struct device_attrib
 {
 	int ret_value = 1;
 	ret_value = (*(adc_cali_slop + 7));
-	battery_log(BAT_LOG_CRTI, "[EM] ADC_Channel_7_Slope : %d\n", ret_value);
 	return sprintf(buf, "%u\n", ret_value);
 }
 
 static ssize_t store_ADC_Channel_7_Slope(struct device *dev, struct device_attribute *attr,
 					 const char *buf, size_t size)
 {
-	battery_log(BAT_LOG_CRTI, "[EM] Not Support Write Function\n");
 	return size;
 }
 
@@ -909,14 +875,12 @@ static ssize_t show_ADC_Channel_8_Slope(struct device *dev, struct device_attrib
 {
 	int ret_value = 1;
 	ret_value = (*(adc_cali_slop + 8));
-	battery_log(BAT_LOG_CRTI, "[EM] ADC_Channel_8_Slope : %d\n", ret_value);
 	return sprintf(buf, "%u\n", ret_value);
 }
 
 static ssize_t store_ADC_Channel_8_Slope(struct device *dev, struct device_attribute *attr,
 					 const char *buf, size_t size)
 {
-	battery_log(BAT_LOG_CRTI, "[EM] Not Support Write Function\n");
 	return size;
 }
 
@@ -930,14 +894,12 @@ static ssize_t show_ADC_Channel_9_Slope(struct device *dev, struct device_attrib
 {
 	int ret_value = 1;
 	ret_value = (*(adc_cali_slop + 9));
-	battery_log(BAT_LOG_CRTI, "[EM] ADC_Channel_9_Slope : %d\n", ret_value);
 	return sprintf(buf, "%u\n", ret_value);
 }
 
 static ssize_t store_ADC_Channel_9_Slope(struct device *dev, struct device_attribute *attr,
 					 const char *buf, size_t size)
 {
-	battery_log(BAT_LOG_CRTI, "[EM] Not Support Write Function\n");
 	return size;
 }
 
@@ -951,14 +913,12 @@ static ssize_t show_ADC_Channel_10_Slope(struct device *dev, struct device_attri
 {
 	int ret_value = 1;
 	ret_value = (*(adc_cali_slop + 10));
-	battery_log(BAT_LOG_CRTI, "[EM] ADC_Channel_10_Slope : %d\n", ret_value);
 	return sprintf(buf, "%u\n", ret_value);
 }
 
 static ssize_t store_ADC_Channel_10_Slope(struct device *dev, struct device_attribute *attr,
 					  const char *buf, size_t size)
 {
-	battery_log(BAT_LOG_CRTI, "[EM] Not Support Write Function\n");
 	return size;
 }
 
@@ -973,14 +933,12 @@ static ssize_t show_ADC_Channel_11_Slope(struct device *dev, struct device_attri
 {
 	int ret_value = 1;
 	ret_value = (*(adc_cali_slop + 11));
-	battery_log(BAT_LOG_CRTI, "[EM] ADC_Channel_11_Slope : %d\n", ret_value);
 	return sprintf(buf, "%u\n", ret_value);
 }
 
 static ssize_t store_ADC_Channel_11_Slope(struct device *dev, struct device_attribute *attr,
 					  const char *buf, size_t size)
 {
-	battery_log(BAT_LOG_CRTI, "[EM] Not Support Write Function\n");
 	return size;
 }
 
@@ -995,14 +953,12 @@ static ssize_t show_ADC_Channel_12_Slope(struct device *dev, struct device_attri
 {
 	int ret_value = 1;
 	ret_value = (*(adc_cali_slop + 12));
-	battery_log(BAT_LOG_CRTI, "[EM] ADC_Channel_12_Slope : %d\n", ret_value);
 	return sprintf(buf, "%u\n", ret_value);
 }
 
 static ssize_t store_ADC_Channel_12_Slope(struct device *dev, struct device_attribute *attr,
 					  const char *buf, size_t size)
 {
-	battery_log(BAT_LOG_CRTI, "[EM] Not Support Write Function\n");
 	return size;
 }
 
@@ -1017,14 +973,12 @@ static ssize_t show_ADC_Channel_13_Slope(struct device *dev, struct device_attri
 {
 	int ret_value = 1;
 	ret_value = (*(adc_cali_slop + 13));
-	battery_log(BAT_LOG_CRTI, "[EM] ADC_Channel_13_Slope : %d\n", ret_value);
 	return sprintf(buf, "%u\n", ret_value);
 }
 
 static ssize_t store_ADC_Channel_13_Slope(struct device *dev, struct device_attribute *attr,
 					  const char *buf, size_t size)
 {
-	battery_log(BAT_LOG_CRTI, "[EM] Not Support Write Function\n");
 	return size;
 }
 
@@ -1040,14 +994,12 @@ static ssize_t show_ADC_Channel_0_Offset(struct device *dev, struct device_attri
 {
 	int ret_value = 1;
 	ret_value = (*(adc_cali_offset + 0));
-	battery_log(BAT_LOG_CRTI, "[EM] ADC_Channel_0_Offset : %d\n", ret_value);
 	return sprintf(buf, "%u\n", ret_value);
 }
 
 static ssize_t store_ADC_Channel_0_Offset(struct device *dev, struct device_attribute *attr,
 					  const char *buf, size_t size)
 {
-	battery_log(BAT_LOG_CRTI, "[EM] Not Support Write Function\n");
 	return size;
 }
 
@@ -1062,14 +1014,12 @@ static ssize_t show_ADC_Channel_1_Offset(struct device *dev, struct device_attri
 {
 	int ret_value = 1;
 	ret_value = (*(adc_cali_offset + 1));
-	battery_log(BAT_LOG_CRTI, "[EM] ADC_Channel_1_Offset : %d\n", ret_value);
 	return sprintf(buf, "%u\n", ret_value);
 }
 
 static ssize_t store_ADC_Channel_1_Offset(struct device *dev, struct device_attribute *attr,
 					  const char *buf, size_t size)
 {
-	battery_log(BAT_LOG_CRTI, "[EM] Not Support Write Function\n");
 	return size;
 }
 
@@ -1084,14 +1034,12 @@ static ssize_t show_ADC_Channel_2_Offset(struct device *dev, struct device_attri
 {
 	int ret_value = 1;
 	ret_value = (*(adc_cali_offset + 2));
-	battery_log(BAT_LOG_CRTI, "[EM] ADC_Channel_2_Offset : %d\n", ret_value);
 	return sprintf(buf, "%u\n", ret_value);
 }
 
 static ssize_t store_ADC_Channel_2_Offset(struct device *dev, struct device_attribute *attr,
 					  const char *buf, size_t size)
 {
-	battery_log(BAT_LOG_CRTI, "[EM] Not Support Write Function\n");
 	return size;
 }
 
@@ -1106,14 +1054,12 @@ static ssize_t show_ADC_Channel_3_Offset(struct device *dev, struct device_attri
 {
 	int ret_value = 1;
 	ret_value = (*(adc_cali_offset + 3));
-	battery_log(BAT_LOG_CRTI, "[EM] ADC_Channel_3_Offset : %d\n", ret_value);
 	return sprintf(buf, "%u\n", ret_value);
 }
 
 static ssize_t store_ADC_Channel_3_Offset(struct device *dev, struct device_attribute *attr,
 					  const char *buf, size_t size)
 {
-	battery_log(BAT_LOG_CRTI, "[EM] Not Support Write Function\n");
 	return size;
 }
 
@@ -1128,14 +1074,12 @@ static ssize_t show_ADC_Channel_4_Offset(struct device *dev, struct device_attri
 {
 	int ret_value = 1;
 	ret_value = (*(adc_cali_offset + 4));
-	battery_log(BAT_LOG_CRTI, "[EM] ADC_Channel_4_Offset : %d\n", ret_value);
 	return sprintf(buf, "%u\n", ret_value);
 }
 
 static ssize_t store_ADC_Channel_4_Offset(struct device *dev, struct device_attribute *attr,
 					  const char *buf, size_t size)
 {
-	battery_log(BAT_LOG_CRTI, "[EM] Not Support Write Function\n");
 	return size;
 }
 
@@ -1150,14 +1094,12 @@ static ssize_t show_ADC_Channel_5_Offset(struct device *dev, struct device_attri
 {
 	int ret_value = 1;
 	ret_value = (*(adc_cali_offset + 5));
-	battery_log(BAT_LOG_CRTI, "[EM] ADC_Channel_5_Offset : %d\n", ret_value);
 	return sprintf(buf, "%u\n", ret_value);
 }
 
 static ssize_t store_ADC_Channel_5_Offset(struct device *dev, struct device_attribute *attr,
 					  const char *buf, size_t size)
 {
-	battery_log(BAT_LOG_CRTI, "[EM] Not Support Write Function\n");
 	return size;
 }
 
@@ -1172,14 +1114,12 @@ static ssize_t show_ADC_Channel_6_Offset(struct device *dev, struct device_attri
 {
 	int ret_value = 1;
 	ret_value = (*(adc_cali_offset + 6));
-	battery_log(BAT_LOG_CRTI, "[EM] ADC_Channel_6_Offset : %d\n", ret_value);
 	return sprintf(buf, "%u\n", ret_value);
 }
 
 static ssize_t store_ADC_Channel_6_Offset(struct device *dev, struct device_attribute *attr,
 					  const char *buf, size_t size)
 {
-	battery_log(BAT_LOG_CRTI, "[EM] Not Support Write Function\n");
 	return size;
 }
 
@@ -1194,14 +1134,12 @@ static ssize_t show_ADC_Channel_7_Offset(struct device *dev, struct device_attri
 {
 	int ret_value = 1;
 	ret_value = (*(adc_cali_offset + 7));
-	battery_log(BAT_LOG_CRTI, "[EM] ADC_Channel_7_Offset : %d\n", ret_value);
 	return sprintf(buf, "%u\n", ret_value);
 }
 
 static ssize_t store_ADC_Channel_7_Offset(struct device *dev, struct device_attribute *attr,
 					  const char *buf, size_t size)
 {
-	battery_log(BAT_LOG_CRTI, "[EM] Not Support Write Function\n");
 	return size;
 }
 
@@ -1216,14 +1154,12 @@ static ssize_t show_ADC_Channel_8_Offset(struct device *dev, struct device_attri
 {
 	int ret_value = 1;
 	ret_value = (*(adc_cali_offset + 8));
-	battery_log(BAT_LOG_CRTI, "[EM] ADC_Channel_8_Offset : %d\n", ret_value);
 	return sprintf(buf, "%u\n", ret_value);
 }
 
 static ssize_t store_ADC_Channel_8_Offset(struct device *dev, struct device_attribute *attr,
 					  const char *buf, size_t size)
 {
-	battery_log(BAT_LOG_CRTI, "[EM] Not Support Write Function\n");
 	return size;
 }
 
@@ -1238,14 +1174,12 @@ static ssize_t show_ADC_Channel_9_Offset(struct device *dev, struct device_attri
 {
 	int ret_value = 1;
 	ret_value = (*(adc_cali_offset + 9));
-	battery_log(BAT_LOG_CRTI, "[EM] ADC_Channel_9_Offset : %d\n", ret_value);
 	return sprintf(buf, "%u\n", ret_value);
 }
 
 static ssize_t store_ADC_Channel_9_Offset(struct device *dev, struct device_attribute *attr,
 					  const char *buf, size_t size)
 {
-	battery_log(BAT_LOG_CRTI, "[EM] Not Support Write Function\n");
 	return size;
 }
 
@@ -1260,14 +1194,12 @@ static ssize_t show_ADC_Channel_10_Offset(struct device *dev, struct device_attr
 {
 	int ret_value = 1;
 	ret_value = (*(adc_cali_offset + 10));
-	battery_log(BAT_LOG_CRTI, "[EM] ADC_Channel_10_Offset : %d\n", ret_value);
 	return sprintf(buf, "%u\n", ret_value);
 }
 
 static ssize_t store_ADC_Channel_10_Offset(struct device *dev, struct device_attribute *attr,
 					   const char *buf, size_t size)
 {
-	battery_log(BAT_LOG_CRTI, "[EM] Not Support Write Function\n");
 	return size;
 }
 
@@ -1282,14 +1214,12 @@ static ssize_t show_ADC_Channel_11_Offset(struct device *dev, struct device_attr
 {
 	int ret_value = 1;
 	ret_value = (*(adc_cali_offset + 11));
-	battery_log(BAT_LOG_CRTI, "[EM] ADC_Channel_11_Offset : %d\n", ret_value);
 	return sprintf(buf, "%u\n", ret_value);
 }
 
 static ssize_t store_ADC_Channel_11_Offset(struct device *dev, struct device_attribute *attr,
 					   const char *buf, size_t size)
 {
-	battery_log(BAT_LOG_CRTI, "[EM] Not Support Write Function\n");
 	return size;
 }
 
@@ -1304,14 +1234,12 @@ static ssize_t show_ADC_Channel_12_Offset(struct device *dev, struct device_attr
 {
 	int ret_value = 1;
 	ret_value = (*(adc_cali_offset + 12));
-	battery_log(BAT_LOG_CRTI, "[EM] ADC_Channel_12_Offset : %d\n", ret_value);
 	return sprintf(buf, "%u\n", ret_value);
 }
 
 static ssize_t store_ADC_Channel_12_Offset(struct device *dev, struct device_attribute *attr,
 					   const char *buf, size_t size)
 {
-	battery_log(BAT_LOG_CRTI, "[EM] Not Support Write Function\n");
 	return size;
 }
 
@@ -1326,14 +1254,12 @@ static ssize_t show_ADC_Channel_13_Offset(struct device *dev, struct device_attr
 {
 	int ret_value = 1;
 	ret_value = (*(adc_cali_offset + 13));
-	battery_log(BAT_LOG_CRTI, "[EM] ADC_Channel_13_Offset : %d\n", ret_value);
 	return sprintf(buf, "%u\n", ret_value);
 }
 
 static ssize_t store_ADC_Channel_13_Offset(struct device *dev, struct device_attribute *attr,
 					   const char *buf, size_t size)
 {
-	battery_log(BAT_LOG_CRTI, "[EM] Not Support Write Function\n");
 	return size;
 }
 
@@ -1348,14 +1274,12 @@ static ssize_t show_ADC_Channel_Is_Calibration(struct device *dev, struct device
 {
 	int ret_value = 2;
 	ret_value = g_ADC_Cali;
-	battery_log(BAT_LOG_CRTI, "[EM] ADC_Channel_Is_Calibration : %d\n", ret_value);
 	return sprintf(buf, "%u\n", ret_value);
 }
 
 static ssize_t store_ADC_Channel_Is_Calibration(struct device *dev, struct device_attribute *attr,
 						const char *buf, size_t size)
 {
-	battery_log(BAT_LOG_CRTI, "[EM] Not Support Write Function\n");
 	return size;
 }
 
@@ -1369,14 +1293,12 @@ static ssize_t show_Power_On_Voltage(struct device *dev, struct device_attribute
 {
 	int ret_value = 1;
 	ret_value = 3400;
-	battery_log(BAT_LOG_CRTI, "[EM] Power_On_Voltage : %d\n", ret_value);
 	return sprintf(buf, "%u\n", ret_value);
 }
 
 static ssize_t store_Power_On_Voltage(struct device *dev, struct device_attribute *attr,
 				      const char *buf, size_t size)
 {
-	battery_log(BAT_LOG_CRTI, "[EM] Not Support Write Function\n");
 	return size;
 }
 
@@ -1389,14 +1311,12 @@ static ssize_t show_Power_Off_Voltage(struct device *dev, struct device_attribut
 {
 	int ret_value = 1;
 	ret_value = 3400;
-	battery_log(BAT_LOG_CRTI, "[EM] Power_Off_Voltage : %d\n", ret_value);
 	return sprintf(buf, "%u\n", ret_value);
 }
 
 static ssize_t store_Power_Off_Voltage(struct device *dev, struct device_attribute *attr,
 				       const char *buf, size_t size)
 {
-	battery_log(BAT_LOG_CRTI, "[EM] Not Support Write Function\n");
 	return size;
 }
 
@@ -1410,14 +1330,12 @@ static ssize_t show_Charger_TopOff_Value(struct device *dev, struct device_attri
 {
 	int ret_value = 1;
 	ret_value = 4110;
-	battery_log(BAT_LOG_CRTI, "[EM] Charger_TopOff_Value : %d\n", ret_value);
 	return sprintf(buf, "%u\n", ret_value);
 }
 
 static ssize_t store_Charger_TopOff_Value(struct device *dev, struct device_attribute *attr,
 					  const char *buf, size_t size)
 {
-	battery_log(BAT_LOG_CRTI, "[EM] Not Support Write Function\n");
 	return size;
 }
 
@@ -1432,8 +1350,6 @@ static ssize_t show_FG_Battery_CurrentConsumption(struct device *dev, struct dev
 {
 	int ret_value = 8888;
 	ret_value = battery_meter_get_battery_current();
-	battery_log(BAT_LOG_CRTI, "[EM] FG_Battery_CurrentConsumption : %d/10 mA\n",
-			    ret_value);
 	return sprintf(buf, "%u\n", ret_value);
 }
 
@@ -1441,7 +1357,6 @@ static ssize_t store_FG_Battery_CurrentConsumption(struct device *dev,
 						   struct device_attribute *attr, const char *buf,
 						   size_t size)
 {
-	battery_log(BAT_LOG_CRTI, "[EM] Not Support Write Function\n");
 	return size;
 }
 
@@ -1456,14 +1371,12 @@ static ssize_t show_FG_SW_CoulombCounter(struct device *dev, struct device_attri
 {
 	kal_int32 ret_value = 7777;
 	ret_value = battery_meter_get_car();
-	battery_log(BAT_LOG_CRTI, "[EM] FG_SW_CoulombCounter : %d\n", ret_value);
 	return sprintf(buf, "%u\n", ret_value);
 }
 
 static ssize_t store_FG_SW_CoulombCounter(struct device *dev, struct device_attribute *attr,
 					  const char *buf, size_t size)
 {
-	battery_log(BAT_LOG_CRTI, "[EM] Not Support Write Function\n");
 	return size;
 }
 
@@ -1473,7 +1386,6 @@ static DEVICE_ATTR(FG_SW_CoulombCounter, 0664, show_FG_SW_CoulombCounter,
 
 static ssize_t show_Charging_CallState(struct device *dev, struct device_attribute *attr, char *buf)
 {
-	battery_log(BAT_LOG_CRTI, "call state = %d\n", g_call_state);
 	return sprintf(buf, "%u\n", g_call_state);
 }
 
@@ -1481,7 +1393,6 @@ static ssize_t store_Charging_CallState(struct device *dev, struct device_attrib
 					const char *buf, size_t size)
 {
 	sscanf(buf, "%u", &g_call_state);
-	battery_log(BAT_LOG_CRTI, "call state = %d\n", g_call_state);
 	return size;
 }
 
@@ -1490,7 +1401,6 @@ static DEVICE_ATTR(Charging_CallState, 0664, show_Charging_CallState, store_Char
 //V_0Percent_Tracking
 static ssize_t show_V_0Percent_Tracking(struct device *dev, struct device_attribute *attr, char *buf)
 {
-	battery_log(BAT_LOG_CRTI, "V_0Percent_Tracking = %d\n", V_0Percent_Tracking);
 	return sprintf(buf, "%u\n", V_0Percent_Tracking);
 }
 
@@ -1498,7 +1408,6 @@ static ssize_t store_V_0Percent_Tracking(struct device *dev, struct device_attri
 					const char *buf, size_t size)
 {
 	sscanf(buf, "%u", &V_0Percent_Tracking);
-	battery_log(BAT_LOG_CRTI, "V_0Percent_Tracking = %d\n", V_0Percent_Tracking);
 	return size;
 }
 
@@ -1511,12 +1420,10 @@ static ssize_t show_Charger_Type(struct device *dev,struct device_attribute *att
     UINT32 chr_ype = CHARGER_UNKNOWN;
     chr_ype = BMT_status.charger_exist ? BMT_status.charger_type : CHARGER_UNKNOWN;
 
-    battery_log(BAT_LOG_CRTI, "CHARGER_TYPE = %d\n",chr_ype);
     return sprintf(buf, "%u\n", chr_ype);
 }
 static ssize_t store_Charger_Type(struct device *dev,struct device_attribute *attr, const char *buf, size_t size)
 {
-    battery_log(BAT_LOG_CRTI, "[EM] Not Support Write Function\n");
     return size;
 }
 static DEVICE_ATTR(Charger_Type, 0664, show_Charger_Type, store_Charger_Type);
@@ -1533,7 +1440,6 @@ static ssize_t show_Pump_Express(struct device *dev,struct device_attribute *att
       BMT_status.SOC >= TA_START_BATTERY_SOC &&
       BMT_status.SOC < TA_STOP_BATTERY_SOC)
     {
-        battery_log(BAT_LOG_CRTI, "[%s]Wait for PE detection\n", __func__);
         do
         {
             icount--;
@@ -1547,7 +1453,6 @@ static ssize_t show_Pump_Express(struct device *dev,struct device_attribute *att
     if ( (KAL_TRUE == ta_check_chr_type) &&
       (STANDARD_CHARGER == BMT_status.charger_type) )
     {
-        battery_log(BAT_LOG_CRTI, "[%s]Wait for PE detection\n", __func__);
         do
         {
             msleep(200);
@@ -1556,13 +1461,11 @@ static ssize_t show_Pump_Express(struct device *dev,struct device_attribute *att
     #endif
 
 
-    battery_log(BAT_LOG_CRTI, "Pump express = %d\n",is_ta_connect);    
     return sprintf(buf, "%u\n", is_ta_connect);
 }
 static ssize_t store_Pump_Express(struct device *dev,struct device_attribute *attr, const char *buf, size_t size)
 {
 	sscanf(buf, "%u", &is_ta_connect);
-    battery_log(BAT_LOG_CRTI, "Pump express= %d\n",is_ta_connect);    
     return size;
 }
 static DEVICE_ATTR(Pump_Express, 0664, show_Pump_Express, store_Pump_Express);
@@ -1582,8 +1485,6 @@ static void mt_battery_update_EM(struct battery_data *bat_data)
 	bat_data->status_smb = g_status_smb;
 	bat_data->capacity_smb = g_capacity_smb;
 	bat_data->present_smb = g_present_smb;
-	battery_log(BAT_LOG_FULL, "status_smb = %d, capacity_smb = %d, present_smb = %d\n",
-			    bat_data->status_smb, bat_data->capacity_smb, bat_data->present_smb);
 	if ((BMT_status.UI_SOC == 100) && (BMT_status.charger_exist == KAL_TRUE))
 		bat_data->BAT_STATUS = POWER_SUPPLY_STATUS_FULL;
 
@@ -1591,8 +1492,6 @@ static void mt_battery_update_EM(struct battery_data *bat_data)
 	if (bat_data->BAT_CAPACITY <= 0)
 		bat_data->BAT_CAPACITY = 1;
 
-	battery_log(BAT_LOG_CRTI,
-			    "BAT_CAPACITY=1, due to define CONFIG_MTK_DISABLE_POWER_ON_OFF_VOLTAGE_LIMITATION\r\n");
 #endif
 }
 
@@ -1647,18 +1546,12 @@ static kal_bool mt_battery_100Percent_tracking_check(void)
 
 			resetBatteryMeter = KAL_TRUE;
 		}
-
-		battery_log(BAT_LOG_CRTI, "[100percent], UI_SOC(%d), reset(%d)\n",
-				    BMT_status.UI_SOC, resetBatteryMeter);
 	} else {
 		/* charging is not full,  UI keep 99% if reaching 100%, */
 
 		if (BMT_status.UI_SOC >= 99) {
 			BMT_status.UI_SOC = 99;
 			resetBatteryMeter = KAL_FALSE;
-
-			battery_log(BAT_LOG_CRTI, "[100percent],UI_SOC = %d\n",
-					    BMT_status.UI_SOC);
 		}
 
 		timer_counter = (cust_sync_time / BAT_TASK_PERIOD);
@@ -1699,21 +1592,11 @@ static kal_bool mt_battery_nPercent_tracking_check(void)
 		}
 
 		resetBatteryMeter = KAL_TRUE;
-
-		battery_log(BAT_LOG_CRTI,
-				    "[nPercent] ZCV %d <= nPercent_ZCV %d, UI_SOC=%d., tracking UI_SOC=%d\n",
-				    BMT_status.ZCV, BMT_status.nPercent_ZCV, BMT_status.UI_SOC,
-				    BMT_status.nPrecent_UI_SOC_check_point);
 	} else if ((BMT_status.ZCV > BMT_status.nPercent_ZCV)
 		   && (BMT_status.UI_SOC == BMT_status.nPrecent_UI_SOC_check_point)) {
 		/* UI less than 15 , but fuel gague is more than 15, hold UI 15% */
 		timer_counter = (batt_cust_data.npercent_tracking_time / BAT_TASK_PERIOD);
 		resetBatteryMeter = KAL_TRUE;
-
-		battery_log(BAT_LOG_CRTI,
-				    "[nPercent] ZCV %d > BMT_status.nPercent_ZCV %d and UI SOC=%d, then keep %d.\n",
-				    BMT_status.ZCV, BMT_status.nPercent_ZCV, BMT_status.UI_SOC,
-				    BMT_status.nPrecent_UI_SOC_check_point);
 	} else {
 		timer_counter = (batt_cust_data.npercent_tracking_time / BAT_TASK_PERIOD);
 	}
@@ -1736,9 +1619,6 @@ static kal_bool mt_battery_0Percent_tracking_check(void)
 		}
 	}
 
-	battery_log(BAT_LOG_CRTI, "0Percent, VBAT < %d UI_SOC=%d\r\n", SYSTEM_OFF_VOLTAGE,
-			    BMT_status.UI_SOC);
-
 	return resetBatteryMeter;
 }
 
@@ -1778,13 +1658,10 @@ static void mt_battery_Sync_UI_Percentage_to_Real(void)
 		}
 		else
 		{
-			battery_log(BAT_LOG_CRTI, "[Sync_Real] chr_wake_up_bat=1 , do not update UI_SOC\n");		
 		}
 #else
 		BMT_status.UI_SOC--;
 #endif
-		battery_log(BAT_LOG_CRTI, "[Sync_Real] UI_SOC=%d, SOC=%d, counter = %d\n",
-				    BMT_status.UI_SOC, BMT_status.SOC, timer_counter);
 	} else {
 		timer_counter = 0;
 
@@ -1805,8 +1682,6 @@ static void mt_battery_Sync_UI_Percentage_to_Real(void)
 
 	if (BMT_status.UI_SOC <= 0) {
 		BMT_status.UI_SOC = 1;
-		battery_log(BAT_LOG_CRTI, "[Battery]UI_SOC get 0 first (%d)\r\n",
-				    BMT_status.UI_SOC);
 	}
 }
 
@@ -1850,16 +1725,11 @@ static void battery_update(struct battery_data *bat_data)
 	} else {
 		if (bat_is_recharging_phase() == KAL_TRUE) {
 			BMT_status.UI_SOC = 100;
-			battery_log(BAT_LOG_CRTI, "[recharging] UI_SOC=%d, SOC=%d\n",
-					    BMT_status.UI_SOC, BMT_status.SOC);
 		} else {
 			mt_battery_Sync_UI_Percentage_to_Real();
 		}
 	}
 
-	battery_log(BAT_LOG_CRTI, "UI_SOC=(%d), resetBatteryMeter=(%d)\n",
-			    BMT_status.UI_SOC, resetBatteryMeter);
-
 #if !defined(CUST_CAPACITY_OCV2CV_TRANSFORM)
 	/* set RTC SOC to 1 to avoid SOC jump in charger boot. */
 	if (BMT_status.UI_SOC <= 1) {
@@ -1874,7 +1744,6 @@ static void battery_update(struct battery_data *bat_data)
 	else
 		set_rtc_spare_fg_value(battery_meter_get_battery_soc()); /*use battery_soc */
 
-	battery_log(BAT_LOG_FULL, "RTC_SOC=(%d)\n", get_rtc_spare_fg_value());
 #endif
 
 	mt_battery_update_EM(bat_data);
@@ -1884,7 +1753,6 @@ static void battery_update(struct battery_data *bat_data)
 	}
 	if (adjust_power != -1) {
 			bat_data->adjust_power = adjust_power;
-			battery_log(BAT_LOG_CRTI, "adjust_power=(%d)\n", adjust_power);
 	}
         
 
@@ -1892,22 +1760,17 @@ static void battery_update(struct battery_data *bat_data)
     extern int dlpt_check_power_off(void);
     if(bat_data->BAT_CAPACITY <= DLPT_POWER_OFF_THD)
     {
-        battery_log(BAT_LOG_CRTI, "[DLPT_POWER_OFF_EN] run\n");
-        
         if(bat_data->BAT_CAPACITY==0)
         {
             bat_data->BAT_CAPACITY=1;
-            battery_log(BAT_LOG_CRTI, "[DLPT_POWER_OFF_EN] SOC=0 but keep %d\n", bat_data->BAT_CAPACITY);
         }
         if(dlpt_check_power_off()==1)
         {
             bat_data->BAT_CAPACITY=0;
-            battery_log(BAT_LOG_CRTI, "[DLPT_POWER_OFF_EN] SOC=%d to power off\n", bat_data->BAT_CAPACITY);
         }
     }
     else
     {
-        battery_log(BAT_LOG_CRTI, "[DLPT_POWER_OFF_EN] disable(%d)\n", bat_data->BAT_CAPACITY);
     }
 #endif
 
@@ -1917,12 +1780,8 @@ static void battery_update(struct battery_data *bat_data)
 void update_charger_info(int wireless_state)
 {
 #if defined(CONFIG_POWER_VERIFY)
-	battery_log(BAT_LOG_CRTI, "[update_charger_info] no support\n");
 #else
 	g_wireless_state = wireless_state;
-	battery_log(BAT_LOG_CRTI, "[update_charger_info] get wireless_state=%d\n",
-			    wireless_state);
-
 	wake_up_bat();
 #endif
 }
@@ -2005,7 +1864,6 @@ kal_bool pmic_chrdet_status(void)
 	if (upmu_is_chr_det() == KAL_TRUE) {
 		return KAL_TRUE;
 	} else {
-		battery_log(BAT_LOG_CRTI, "[pmic_chrdet_status] No charger\r\n");
 		return KAL_FALSE;
 	}
 }
@@ -2033,8 +1891,6 @@ kal_uint32 bat_get_ui_percentage(void)
 	/* for plugging out charger in recharge phase, using SOC as UI_SOC */
 
 #if defined(CONFIG_POWER_EXT)
-	battery_log(BAT_LOG_CRTI,
-				    "[BATTERY] bat_get_ui_percentage return 100 !!\n\r");
 	return 100;
 #else
 	if (chr_wake_up_bat == KAL_TRUE)
@@ -2077,10 +1933,6 @@ PMU_STATUS do_batt_temp_state_machine(void)
 		return PMU_STATUS_FAIL;
 	} else if (g_batt_temp_status == TEMP_POS_LOW) {
 			if (BMT_status.temperature >= batt_cust_data.min_charge_temperature_plus_x_degree) {
-			battery_log(BAT_LOG_CRTI,
-					    "[BATTERY] Battery Temperature raise from %d to %d(%d), allow charging!!\n\r",
-						    batt_cust_data.min_charge_temperature, BMT_status.temperature,
-						    batt_cust_data.min_charge_temperature_plus_x_degree);
 			g_batt_temp_status = TEMP_POS_NORMAL;
 			BMT_status.bat_charging_state = CHR_PRE;
 			return PMU_STATUS_OK;
@@ -2096,10 +1948,6 @@ PMU_STATUS do_batt_temp_state_machine(void)
 		return PMU_STATUS_FAIL;
 	} else if (g_batt_temp_status == TEMP_POS_HIGH) {
 		if (BMT_status.temperature < batt_cust_data.max_charge_temperature_minus_x_degree) {
-			battery_log(BAT_LOG_CRTI,
-					    "[BATTERY] Battery Temperature down from %d to %d(%d), allow charging!!\n\r",
-					    batt_cust_data.max_charge_temperature, BMT_status.temperature,
-					    batt_cust_data.max_charge_temperature_minus_x_degree);
 			g_batt_temp_status = TEMP_POS_NORMAL;
 			BMT_status.bat_charging_state = CHR_PRE;
 			return PMU_STATUS_OK;
@@ -2190,9 +2038,6 @@ static void mt_battery_average_method_init(BATTERY_AVG_ENUM type, kal_uint32 *bu
     }
 	/* reset charging current window while plug in/out } */
 
-	battery_log(BAT_LOG_FULL, "batteryBufferFirst =%d, data= (%d)\n",
-			    batteryBufferFirst, data);
-
 	if (batteryBufferFirst == KAL_TRUE) {
 		for (i = 0; i < BATTERY_AVERAGE_SIZE; i++) {
 			bufferdata[i] = data;
@@ -2221,8 +2066,6 @@ static kal_uint32 mt_battery_average_method(BATTERY_AVG_ENUM type, kal_uint32 *b
 	bufferdata[batteryIndex] = data;
 	avgdata = (*sum) / BATTERY_AVERAGE_SIZE;
 
-	battery_log(BAT_LOG_FULL, "bufferdata[%d]= (%d)\n", batteryIndex,
-			    bufferdata[batteryIndex]);
 	return avgdata;
 }
 
@@ -2273,8 +2116,6 @@ void mt_battery_GetBatteryData(void)
 
     
 	if (previous_SOC == -1 && bat_vol <= batt_cust_data.v_0percent_tracking) {
-		battery_log(BAT_LOG_CRTI,
-				    "battery voltage too low, use ZCV to init average data.\n");
 		BMT_status.bat_vol =
 		    mt_battery_average_method(BATTERY_AVG_VOLT, &batteryVoltageBuffer[0], ZCV, &bat_sum,
 					      batteryIndex);
@@ -2287,8 +2128,6 @@ void mt_battery_GetBatteryData(void)
 
 	if (battery_cmd_thermal_test_mode == 1)
 	{
-		battery_log(BAT_LOG_CRTI,
-				    "test mode , battery temperature is fixed.\n");	
 	}
 	else
 	{
@@ -2321,14 +2160,6 @@ void mt_battery_GetBatteryData(void)
 
 	if (g_battery_soc_ready == KAL_FALSE)
 		g_battery_soc_ready = KAL_TRUE;
-
-	battery_log(BAT_LOG_CRTI,
-			    "AvgVbat=(%d),bat_vol=(%d),AvgI=(%d),I=(%d),VChr=(%d),AvgT=(%d),T=(%d),pre_SOC=(%d),SOC=(%d),ZCV=(%d)\n",
-			    BMT_status.bat_vol, bat_vol, BMT_status.ICharging, ICharging,
-			    BMT_status.charger_vol, BMT_status.temperature, temperature,
-			    previous_SOC, BMT_status.SOC, BMT_status.ZCV);
-
-
 }
 
 
@@ -2338,9 +2169,6 @@ static PMU_STATUS mt_battery_CheckBatteryTemp(void)
 
 #if defined(CONFIG_MTK_JEITA_STANDARD_SUPPORT)
 
-	battery_log(BAT_LOG_CRTI, "[BATTERY] support JEITA, temperature=%d\n",
-			    BMT_status.temperature);
-
 	if (do_jeita_state_machine() == PMU_STATUS_FAIL) {
 		battery_log(BAT_LOG_CRTI, "[BATTERY] JEITA : fail\n");
 		status = PMU_STATUS_FAIL;
@@ -2389,7 +2217,6 @@ static PMU_STATUS mt_battery_CheckChargerVoltage(void)
 		if(batt_cust_data.v_charger_enable)
 		{
 			if (BMT_status.charger_vol <= batt_cust_data.v_charger_min) {
-			battery_log(BAT_LOG_CRTI, "[BATTERY]Charger under voltage!!\r\n");
 			BMT_status.bat_charging_state = CHR_ERROR;
 			status = PMU_STATUS_FAIL;
 		}
@@ -2400,7 +2227,6 @@ static PMU_STATUS mt_battery_CheckChargerVoltage(void)
 		#else
 		if (BMT_status.charger_vol >= v_charger_max) {
 		#endif
-			battery_log(BAT_LOG_CRTI, "[BATTERY]Charger over voltage !!\r\n");
 			BMT_status.charger_protect_status = charger_OVER_VOL;
 			BMT_status.bat_charging_state = CHR_ERROR;
 			status = PMU_STATUS_FAIL;
@@ -2416,17 +2242,10 @@ static PMU_STATUS mt_battery_CheckChargingTime(void)
 	PMU_STATUS status = PMU_STATUS_OK;
 
 	if ((g_battery_thermal_throttling_flag == 2) || (g_battery_thermal_throttling_flag == 3)) {
-		battery_log(BAT_LOG_FULL,
-				    "[TestMode] Disable Safty Timer. bat_tt_enable=%d, bat_thr_test_mode=%d, bat_thr_test_value=%d\n",
-				    g_battery_thermal_throttling_flag,
-				    battery_cmd_thermal_test_mode,
-				    battery_cmd_thermal_test_mode_value);
 
 	} else {
 		/* Charging OT */
 		if (BMT_status.total_charging_time >= MAX_CHARGING_TIME) {
-			battery_log(BAT_LOG_CRTI, "[BATTERY] Charging Over Time.\n");
-
 			status = PMU_STATUS_FAIL;
 		}
 	}
@@ -2449,12 +2268,7 @@ static PMU_STATUS mt_battery_CheckCallState(void)
 
 static void mt_battery_CheckBatteryStatus(void)
 {
-	battery_log(BAT_LOG_FULL, "[mt_battery_CheckBatteryStatus] cmd_discharging=(%d)\n",
-			    cmd_discharging);
 	if (cmd_discharging == 1) {
-		battery_log(BAT_LOG_CRTI,
-				    "[mt_battery_CheckBatteryStatus] cmd_discharging=(%d)\n",
-				    cmd_discharging);
 		BMT_status.bat_charging_state = CHR_ERROR;
 		battery_charging_control(CHARGING_CMD_SET_ERROR_STATE, &cmd_discharging);	
 		return;
@@ -2490,22 +2304,16 @@ static void mt_battery_notify_TotalChargingTime_check(void)
 {
 #if defined(BATTERY_NOTIFY_CASE_0005_TOTAL_CHARGINGTIME)
 	if ((g_battery_thermal_throttling_flag == 2) || (g_battery_thermal_throttling_flag == 3)) {
-		battery_log(BAT_LOG_FULL,
-				    "[TestMode] Disable Safty Timer : no UI display\n");
 	} else {
 		if (BMT_status.total_charging_time >= MAX_CHARGING_TIME)
 			/* if(BMT_status.total_charging_time >= 60) //test */
 		{
 			g_BatteryNotifyCode |= 0x0010;
-			battery_log(BAT_LOG_CRTI, "[BATTERY] Charging Over Time\n");
 		} else {
 			g_BatteryNotifyCode &= ~(0x0010);
 		}
 	}
 
-	battery_log(BAT_LOG_CRTI,
-			    "[BATTERY] BATTERY_NOTIFY_CASE_0005_TOTAL_CHARGINGTIME (%x)\n",
-			    g_BatteryNotifyCode);
 #endif
 }
 
@@ -2517,15 +2325,10 @@ static void mt_battery_notify_VBat_check(void)
 		/* if(BMT_status.bat_vol > 3800) //test */
 	{
 		g_BatteryNotifyCode |= 0x0008;
-		battery_log(BAT_LOG_CRTI, "[BATTERY] bat_vlot(%ld) > 4350mV\n",
-				    BMT_status.bat_vol);
 	} else {
 		g_BatteryNotifyCode &= ~(0x0008);
 	}
 
-	battery_log(BAT_LOG_CRTI, "[BATTERY] BATTERY_NOTIFY_CASE_0004_VBAT (%x)\n",
-			    g_BatteryNotifyCode);
-
 #endif
 }
 
@@ -2535,15 +2338,10 @@ static void mt_battery_notify_ICharging_check(void)
 #if defined(BATTERY_NOTIFY_CASE_0003_ICHARGING)
 	if ((BMT_status.ICharging > 1000) && (BMT_status.total_charging_time > 300)) {
 		g_BatteryNotifyCode |= 0x0004;
-		battery_log(BAT_LOG_CRTI, "[BATTERY] I_charging(%ld) > 1000mA\n",
-				    BMT_status.ICharging);
 	} else {
 		g_BatteryNotifyCode &= ~(0x0004);
 	}
 
-	battery_log(BAT_LOG_CRTI, "[BATTERY] BATTERY_NOTIFY_CASE_0003_ICHARGING (%x)\n",
-			    g_BatteryNotifyCode);
-
 #endif
 }
 
@@ -2572,10 +2370,6 @@ static void mt_battery_notify_VBatTemp_check(void)
 	}
 #endif
 #endif
-
-	battery_log(BAT_LOG_FULL, "[BATTERY] BATTERY_NOTIFY_CASE_0002_VBATTEMP (%x)\n",
-			    g_BatteryNotifyCode);
-
 #endif
 }
 
@@ -2593,15 +2387,9 @@ static void mt_battery_notify_VCharger_check(void)
 	if (BMT_status.charger_vol > v_charger_max) {
 	#endif
 		g_BatteryNotifyCode |= 0x0001;
-		battery_log(BAT_LOG_CRTI, "[BATTERY] BMT_status.charger_vol(%d) > %d mV\n",
-				    BMT_status.charger_vol, batt_cust_data.v_charger_max);
 	} else {
 		g_BatteryNotifyCode &= ~(0x0001);
 	}
-	if (g_BatteryNotifyCode != 0x0000)
-		battery_log(BAT_LOG_CRTI,
-				    "[BATTERY] BATTERY_NOTIFY_CASE_0001_VCHARGER (%x)\n",
-				    g_BatteryNotifyCode);
 #endif
 }
 
@@ -2610,24 +2398,14 @@ static void mt_battery_notify_UI_test(void)
 {
 	if (g_BN_TestMode == 0x0001) {
 		g_BatteryNotifyCode = 0x0001;
-		battery_log(BAT_LOG_CRTI,
-				    "[BATTERY_TestMode] BATTERY_NOTIFY_CASE_0001_VCHARGER\n");
 	} else if (g_BN_TestMode == 0x0002) {
 		g_BatteryNotifyCode = 0x0002;
-		battery_log(BAT_LOG_CRTI,
-				    "[BATTERY_TestMode] BATTERY_NOTIFY_CASE_0002_VBATTEMP\n");
 	} else if (g_BN_TestMode == 0x0003) {
 		g_BatteryNotifyCode = 0x0004;
-		battery_log(BAT_LOG_CRTI,
-				    "[BATTERY_TestMode] BATTERY_NOTIFY_CASE_0003_ICHARGING\n");
 	} else if (g_BN_TestMode == 0x0004) {
 		g_BatteryNotifyCode = 0x0008;
-		battery_log(BAT_LOG_CRTI,
-				    "[BATTERY_TestMode] BATTERY_NOTIFY_CASE_0004_VBAT\n");
 	} else if (g_BN_TestMode == 0x0005) {
 		g_BatteryNotifyCode = 0x0010;
-		battery_log(BAT_LOG_CRTI,
-				    "[BATTERY_TestMode] BATTERY_NOTIFY_CASE_0005_TOTAL_CHARGINGTIME\n");
 	} else {
 		battery_log(BAT_LOG_CRTI, "[BATTERY] Unknown BN_TestMode Code : %x\n",
 				    g_BN_TestMode);
@@ -2640,8 +2418,6 @@ void mt_battery_notify_check(void)
 	g_BatteryNotifyCode = 0x0000;
 
 	if (g_BN_TestMode == 0x0000) {	/* for normal case */
-		battery_log(BAT_LOG_FULL, "[BATTERY] mt_battery_notify_check\n");
-
 		mt_battery_notify_VCharger_check();
 
 		mt_battery_notify_VBatTemp_check();
@@ -2662,33 +2438,21 @@ static void mt_battery_thermal_check(void)
 	if ((g_battery_thermal_throttling_flag == 1) || (g_battery_thermal_throttling_flag == 3)) {
 		if (battery_cmd_thermal_test_mode == 1) {
 			BMT_status.temperature = battery_cmd_thermal_test_mode_value;
-			battery_log(BAT_LOG_FULL,
-					    "[Battery] In thermal_test_mode , Tbat=%d\n",
-					    BMT_status.temperature);
 		}
 #if defined(CONFIG_MTK_JEITA_STANDARD_SUPPORT)
 		/* ignore default rule */
 #else
 		if (BMT_status.temperature >= 60) {
 #if defined(CONFIG_POWER_EXT)
-			battery_log(BAT_LOG_CRTI,
-					    "[BATTERY] CONFIG_POWER_EXT, no update battery update power down.\n");
 #else
 			{
 				if ((g_platform_boot_mode == META_BOOT)
 				    || (g_platform_boot_mode == ADVMETA_BOOT)
 				    || (g_platform_boot_mode == ATE_FACTORY_BOOT)) {
-					battery_log(BAT_LOG_FULL,
-							    "[BATTERY] boot mode = %d, bypass temperature check\n",
-							    g_platform_boot_mode);
 				} else {
 					struct battery_data *bat_data = &battery_main;
 					struct power_supply *bat_psy = &bat_data->psy;
 
-					battery_log(BAT_LOG_CRTI,
-							    "[Battery] Tbat(%d)>=60, system need power down.\n",
-							    BMT_status.temperature);
-
 					bat_data->BAT_CAPACITY = 0;
 
 					power_supply_changed(bat_psy);
@@ -2715,12 +2479,10 @@ static void mt_battery_thermal_check(void)
 static void mt_battery_update_status(void)
 {
 #if defined(CONFIG_POWER_EXT)
-	battery_log(BAT_LOG_CRTI, "[BATTERY] CONFIG_POWER_EXT, no update Android.\n");
 #else
 	{
 		if(skip_battery_update==KAL_FALSE)
 		{
-			battery_log(BAT_LOG_CRTI, "mt_battery_update_status.\n");
 		usb_update(&usb_main);
 		ac_update(&ac_main);
 		wireless_update(&wireless_main);
@@ -2728,7 +2490,6 @@ static void mt_battery_update_status(void)
 	}
 		else
 		{
-			battery_log(BAT_LOG_CRTI, "skip mt_battery_update_status.\n");
 			skip_battery_update=KAL_FALSE;
 		}
 	}
@@ -2823,10 +2584,6 @@ static void mt_battery_charger_detect_check(void)
 			}
 		}
 #endif
-
-		battery_log(BAT_LOG_CRTI, "[BAT_thread]Cable in, CHR_Type_num=%d\r\n",
-				    BMT_status.charger_type);
-
 	} else {
 		wake_unlock(&battery_suspend_lock);
 
@@ -2841,8 +2598,6 @@ static void mt_battery_charger_detect_check(void)
 		BMT_status.TOPOFF_charging_time = 0;
 		BMT_status.POSTFULL_charging_time = 0;
 
-		battery_log(BAT_LOG_CRTI, "[BAT_thread]Cable out \r\n");
-
 		mt_usb_disconnect();
 	}
 }
@@ -2850,15 +2605,10 @@ static void mt_battery_charger_detect_check(void)
 static void mt_kpoc_power_off_check(void)
 {
 #ifdef CONFIG_MTK_KERNEL_POWER_OFF_CHARGING
-	battery_log(BAT_LOG_CRTI,
-			    "[mt_kpoc_power_off_check] , chr_vol=%d, boot_mode=%d\r\n", BMT_status.charger_vol,
-			    g_platform_boot_mode);
 	if (g_platform_boot_mode == KERNEL_POWER_OFF_CHARGING_BOOT
 	    || g_platform_boot_mode == LOW_POWER_OFF_CHARGING_BOOT) {
 		if ((upmu_is_chr_det() == KAL_FALSE) && (BMT_status.charger_vol < 2500))	/* vbus < 2.5V */
 		{
-			battery_log(BAT_LOG_CRTI,
-					    "[bat_thread_kthread] Unplug Charger/USB In Kernel Power Off Charging Mode!  Shutdown OS!\r\n");
 			battery_charging_control(CHARGING_CMD_SET_POWER_OFF, NULL);
 		}
 	}
@@ -2868,14 +2618,10 @@ static void mt_kpoc_power_off_check(void)
 void update_battery_2nd_info(int status_smb, int capacity_smb, int present_smb)
 {
 #if defined(CONFIG_POWER_VERIFY)
-	battery_log(BAT_LOG_CRTI, "[update_battery_smb_info] no support\n");
 #else
 	g_status_smb = status_smb;
 	g_capacity_smb = capacity_smb;
 	g_present_smb = present_smb;
-	battery_log(BAT_LOG_CRTI,
-			    "[update_battery_smb_info] get status_smb=%d,capacity_smb=%d,present_smb=%d\n",
-			    status_smb, capacity_smb, present_smb);
 
 	wake_up_bat();
 	g_smartbook_update = 1;
@@ -2892,39 +2638,28 @@ void do_chrdet_int_task(void)
 		if ((DISO_data.diso_state.cur_vusb_state == DISO_ONLINE) ||
 		    (DISO_data.diso_state.cur_vdc_state == DISO_ONLINE)) {
 		#endif
-			battery_log(BAT_LOG_CRTI, "[do_chrdet_int_task] charger exist!\n");
 			BMT_status.charger_exist = KAL_TRUE;
 
 			wake_lock(&battery_suspend_lock);
 
 #if defined(CONFIG_POWER_EXT)
 			mt_usb_connect();
-			battery_log(BAT_LOG_CRTI,
-					    "[do_chrdet_int_task] call mt_usb_connect() in EVB\n");
 #elif defined(CONFIG_MTK_POWER_EXT_DETECT)
 			if (KAL_TRUE == bat_is_ext_power()) {
 				mt_usb_connect();
-				battery_log(BAT_LOG_CRTI,
-						    "[do_chrdet_int_task] call mt_usb_connect() in EVB\n");
 				return;
 			}
 #endif
 		} else {
-			battery_log(BAT_LOG_CRTI,
-					    "[do_chrdet_int_task] charger NOT exist!\n");
 			BMT_status.charger_exist = KAL_FALSE;
 
 			#if defined(CONFIG_MTK_DUAL_INPUT_CHARGER_SUPPORT)
-			battery_log(BAT_LOG_CRTI, 
-					    "turn off charging for no avaliable charging source\n");
 			battery_charging_control(CHARGING_CMD_ENABLE,&BMT_status.charger_exist); 
 			#endif
 
 #ifdef CONFIG_MTK_KERNEL_POWER_OFF_CHARGING
 			if (g_platform_boot_mode == KERNEL_POWER_OFF_CHARGING_BOOT
 			    || g_platform_boot_mode == LOW_POWER_OFF_CHARGING_BOOT) {
-				battery_log(BAT_LOG_CRTI,
-						    "[pmic_thread_kthread] Unplug Charger/USB In Kernel Power Off Charging Mode!  Shutdown OS!\r\n");
 				battery_charging_control(CHARGING_CMD_SET_POWER_OFF, NULL);
 				/* mt_power_off(); */
 			}
@@ -2934,13 +2669,9 @@ void do_chrdet_int_task(void)
 
 #if defined(CONFIG_POWER_EXT)
 			mt_usb_disconnect();
-			battery_log(BAT_LOG_CRTI,
-					    "[do_chrdet_int_task] call mt_usb_disconnect() in EVB\n");
 #elif defined(CONFIG_MTK_POWER_EXT_DETECT)
 			if (KAL_TRUE == bat_is_ext_power()) {
 				mt_usb_disconnect();
-				battery_log(BAT_LOG_CRTI,
-						    "[do_chrdet_int_task] call mt_usb_disconnect() in EVB\n");
 				return;
 			}
 #endif
@@ -2983,8 +2714,6 @@ void do_chrdet_int_task(void)
 		#if defined(CONFIG_MTK_DUAL_INPUT_CHARGER_SUPPORT)
 		g_vcdt_irq_delay_flag  = KAL_TRUE;
 		#endif
-		battery_log(BAT_LOG_CRTI,
-				    "[do_chrdet_int_task] battery thread not ready, will do after bettery init.\n");
 	}
 
 }
@@ -3030,11 +2759,8 @@ int bat_thread_kthread(void *x)
 
 #ifdef BATTERY_CDP_WORKAROUND
 	if (is_usb_rdy() == KAL_FALSE) {
-		battery_log(BAT_LOG_CRTI, "CDP, block\n");
 		wait_event(bat_thread_wq, (is_usb_rdy() == KAL_TRUE));
-		battery_log(BAT_LOG_CRTI, "CDP, free\n");
 	} else{
-		battery_log(BAT_LOG_CRTI, "CDP, PASS\n");
 	}
 #endif
 
@@ -3052,12 +2778,9 @@ int bat_thread_kthread(void *x)
 		{
 			wake_unlock(&battery_fg_lock);
 			fg_wake_up_bat=KAL_FALSE;
-			battery_log(BAT_LOG_CRTI, "unlock battery_fg_lock \n");
 		}
 #endif //#ifdef FG_BAT_INT
 
-		battery_log(BAT_LOG_FULL, "wait event\n");
-
 		wait_event(bat_thread_wq, (bat_thread_timeout == KAL_TRUE));
 
 		bat_thread_timeout = KAL_FALSE;
@@ -3078,10 +2801,6 @@ int bat_thread_kthread(void *x)
 			#endif
 			battery_meter_reset();
 			chr_wake_up_bat = KAL_FALSE;
-
-			battery_log(BAT_LOG_CRTI,
-					    "[BATTERY] Charger plug in/out, Call battery_meter_reset. (%d)\n",
-					    BMT_status.UI_SOC);
 		}
 
 	}
@@ -3091,8 +2810,6 @@ int bat_thread_kthread(void *x)
 
 void bat_thread_wakeup(void)
 {
-	battery_log(BAT_LOG_FULL, "******** battery : bat_thread_wakeup  ********\n");
-
 	bat_thread_timeout = KAL_TRUE;
 	bat_meter_timeout = KAL_TRUE;
 #ifdef MTK_ENABLE_AGING_ALGORITHM
@@ -3131,22 +2848,12 @@ static long adc_cali_ioctl(struct file *file, unsigned int cmd, unsigned long ar
 				*(adc_cali_slop + i) = 1000;
 			}
 		}
-		for (i = 0; i < 14; i++)
-			battery_log(BAT_LOG_CRTI, "adc_cali_slop[%d] = %d\n", i,
-					    *(adc_cali_slop + i));
-		battery_log(BAT_LOG_FULL,
-				    "**** unlocked_ioctl : SET_ADC_CALI_Slop Done!\n");
 		break;
 
 	case SET_ADC_CALI_Offset:
 		naram_data_addr = (int *)arg;
 		ret = copy_from_user(adc_cali_offset, naram_data_addr, 36);
 		g_ADC_Cali = KAL_FALSE;	/* enable calibration after setting ADC_CALI_Cal */
-		for (i = 0; i < 14; i++)
-			battery_log(BAT_LOG_CRTI, "adc_cali_offset[%d] = %d\n", i,
-					    *(adc_cali_offset + i));
-		battery_log(BAT_LOG_FULL,
-				    "**** unlocked_ioctl : SET_ADC_CALI_Offset Done!\n");
 		break;
 
 	case SET_ADC_CALI_Cal:
@@ -3158,10 +2865,6 @@ static long adc_cali_ioctl(struct file *file, unsigned int cmd, unsigned long ar
 		} else {
 			g_ADC_Cali = KAL_FALSE;
 		}
-		for (i = 0; i < 1; i++)
-			battery_log(BAT_LOG_CRTI, "adc_cali_cal[%d] = %d\n", i,
-					    *(adc_cali_cal + i));
-		battery_log(BAT_LOG_FULL, "**** unlocked_ioctl : SET_ADC_CALI_Cal Done!\n");
 		break;
 
 	case ADC_CHANNEL_READ:
@@ -3205,9 +2908,6 @@ static long adc_cali_ioctl(struct file *file, unsigned int cmd, unsigned long ar
 			adc_out_data[1] = 0;	/* success */
 
 		ret = copy_to_user(user_data_addr, adc_out_data, 8);
-		battery_log(BAT_LOG_CRTI,
-				    "**** unlocked_ioctl : Channel %d * %d times = %d\n",
-				    adc_in_data[0], adc_in_data[1], adc_out_data[0]);
 		break;
 
 	case BAT_STATUS_READ:
@@ -3220,8 +2920,6 @@ static long adc_cali_ioctl(struct file *file, unsigned int cmd, unsigned long ar
 			battery_out_data[0] = 0;
 		}
 		ret = copy_to_user(user_data_addr, battery_out_data, 4);
-		battery_log(BAT_LOG_CRTI, "**** unlocked_ioctl : CAL:%d\n",
-				    battery_out_data[0]);
 		break;
 
 	case Set_Charger_Current:	/* For Factory Mode */
@@ -3264,8 +2962,6 @@ static long adc_cali_ioctl(struct file *file, unsigned int cmd, unsigned long ar
 			charging_level_data[0] = CHARGE_CURRENT_450_00_MA;
 		}
 		wake_up_bat();
-		battery_log(BAT_LOG_CRTI, "**** unlocked_ioctl : set_Charger_Current:%d\n",
-				    charging_level_data[0]);
 		break;
 		/* add for meta tool------------------------------- */
 	case Get_META_BAT_VOL:
@@ -3316,7 +3012,6 @@ static struct file_operations adc_cali_fops = {
 void check_battery_exist(void)
 {
 #if defined(CONFIG_DIS_CHECK_BATTERY)
-	battery_log(BAT_LOG_CRTI, "[BATTERY] Disable check battery exist.\n");
 #else
 	kal_uint32 baton_count = 0;
 	kal_uint32 charging_enable = KAL_FALSE;
@@ -3332,14 +3027,7 @@ void check_battery_exist(void)
 	if (baton_count >= 3) {
 		if ((g_platform_boot_mode == META_BOOT) || (g_platform_boot_mode == ADVMETA_BOOT)
 		    || (g_platform_boot_mode == ATE_FACTORY_BOOT)) {
-			battery_log(BAT_LOG_FULL,
-					    "[BATTERY] boot mode = %d, bypass battery check\n",
-					    g_platform_boot_mode);
 		} else {
-			battery_log(BAT_LOG_CRTI,
-					    "[BATTERY] Battery is not exist, power off FAN5405 and system (%d)\n",
-					    baton_count);
-
 			battery_charging_control(CHARGING_CMD_ENABLE, &charging_enable);
 			battery_charging_control(CHARGING_CMD_SET_POWER_OFF, NULL);
 		}
@@ -3376,11 +3064,9 @@ void charger_plug_out_sw_mode(void)
 						if(ICharging<70 && VCharger<4400)
 						{
 							cnt++;
-							battery_log(BAT_LOG_CRTI,"[charger_hv_detect_sw_thread_handler] fail ICharging=%d , VCHR=%d cnt=%d \n",ICharging,VCharger,cnt);	
 						}
 						else
 						{
-							battery_log(BAT_LOG_CRTI,"[charger_hv_detect_sw_thread_handler] success ICharging=%d , VCHR=%d cnt=%d \n",ICharging,VCharger,cnt);	
 							break;
 						}
 					}
@@ -3394,7 +3080,6 @@ void charger_plug_out_sw_mode(void)
 			{
 				charging_enable = KAL_FALSE;
 				battery_charging_control(CHARGING_CMD_ENABLE, &charging_enable);
-				battery_log(BAT_LOG_CRTI,"[charger_hv_detect_sw_thread_handler] ICharging=%d VCHR=%d cnt=%d turn off charging\n",ICharging,VCharger,cnt);					
 			}	
 
 		}
@@ -3418,21 +3103,15 @@ void hv_sw_mode(void)
 			battery_charging_control(CHARGING_CMD_GET_HV_STATUS, &hv_status);
 
 		if (hv_status == KAL_TRUE) {
-			battery_log(BAT_LOG_CRTI,
-					    "[charger_hv_detect_sw_thread_handler] charger hv\n");
-
 			charging_enable = KAL_FALSE;
 			if (chargin_hw_init_done)
 				battery_charging_control(CHARGING_CMD_ENABLE, &charging_enable);
 		} else {
-			battery_log(BAT_LOG_FULL,
-					    "[charger_hv_detect_sw_thread_handler] upmu_chr_get_vcdt_hv_det() != 1\n");
 		}
 
 	//battery_log(BAT_LOG_CRTI,"[PMIC_BIAS_GEN_EN & PMIC_BIAS_GEN_EN_SEL] 0xa=0x%x \n",upmu_get_reg_value(0x000a));	
 	if(pmic_get_register_value(PMIC_BIAS_GEN_EN)==1 || pmic_get_register_value(PMIC_BIAS_GEN_EN_SEL)==0)
 	{
-		battery_log(BAT_LOG_CRTI,"[PMIC_BIAS_GEN_EN & PMIC_BIAS_GEN_EN_SEL] be writen 0xa=0x%x \n",upmu_get_reg_value(0x000a));	
 		BUG_ON(1);
 	}
 		
@@ -3538,19 +3217,12 @@ int charger_hv_detect_sw_thread_handler(void *unused)
 			battery_charging_control(CHARGING_CMD_GET_HV_STATUS, &hv_status);
 
 		if (hv_status == KAL_TRUE) {
-			battery_log(BAT_LOG_CRTI,
-					    "[charger_hv_detect_sw_thread_handler] charger hv\n");
-
 			charging_enable = KAL_FALSE;
 			if (chargin_hw_init_done)
 				battery_charging_control(CHARGING_CMD_ENABLE, &charging_enable);
 		} else {
-			battery_log(BAT_LOG_FULL,
-					    "[charger_hv_detect_sw_thread_handler] upmu_chr_get_vcdt_hv_det() != 1\n");
 		}
 
-
-
 		if (chargin_hw_init_done)
 			battery_charging_control(CHARGING_CMD_RESET_WATCH_DOG_TIMER, NULL);
 
@@ -3567,8 +3239,6 @@ enum hrtimer_restart charger_hv_detect_sw_workaround(struct hrtimer *timer)
 	charger_hv_detect_flag = KAL_TRUE;
 	wake_up_interruptible(&charger_hv_detect_waiter);
 
-	battery_log(BAT_LOG_FULL, "[charger_hv_detect_sw_workaround]\n");
-
 	return HRTIMER_NORESTART;
 }
 
@@ -3590,7 +3260,6 @@ void charger_hv_detect_sw_workaround_init(void)
 				    __func__);
 	}
 	check_battery_exist();
-	battery_log(BAT_LOG_CRTI, "charger_hv_detect_sw_workaround_init : done\n");
 }
 
 
@@ -3609,8 +3278,6 @@ void battery_kthread_hrtimer_init(void)
 	hrtimer_init(&battery_kthread_timer, CLOCK_MONOTONIC, HRTIMER_MODE_REL);
 	battery_kthread_timer.function = battery_kthread_hrtimer_func;
 	hrtimer_start(&battery_kthread_timer, ktime, HRTIMER_MODE_REL);
-
-	battery_log(BAT_LOG_CRTI, "battery_kthread_hrtimer_init : done\n");
 }
 
 
@@ -3626,10 +3293,6 @@ static irqreturn_t diso_auxadc_irq_thread(int irq, void *dev_id)
 		(DISO_data.diso_state.pre_vusb_state << 1) |
 		(DISO_data.diso_state.pre_vdc_state << 2)) & 0x7;
 
-	battery_log(BAT_LOG_CRTI,
-			    "[DISO]auxadc IRQ threaded handler triggered, pre_diso_state is %s\n",
-			    DISO_state_s[pre_diso_state]);
-
 	switch (pre_diso_state) {
 	#ifdef MTK_DISCRETE_SWITCH /*for DSC DC plugin handle */
 	case USB_ONLY:
@@ -3677,8 +3340,6 @@ static int battery_probe(struct platform_device *dev)
 	struct class_device *class_dev = NULL;
 	int ret = 0;
 
-	battery_log(BAT_LOG_CRTI, "******** battery driver probe!! ********\n");
-
 	/* Integrate with NVRAM */
 	ret = alloc_chrdev_region(&adc_cali_devno, 0, 1, ADC_CALI_DEVNAME);
 	if (ret)
@@ -3694,13 +3355,10 @@ static int battery_probe(struct platform_device *dev)
 	class_dev = (struct class_device *)device_create(adc_cali_class,
 							 NULL,
 							 adc_cali_devno, NULL, ADC_CALI_DEVNAME);
-	battery_log(BAT_LOG_CRTI, "[BAT_probe] adc_cali prepare : done !!\n ");
 
 	get_charging_control();
 
 	battery_charging_control(CHARGING_CMD_GET_PLATFORM_BOOT_MODE, &g_platform_boot_mode);
-	battery_log(BAT_LOG_CRTI, "[BAT_probe] g_platform_boot_mode = %d\n ",
-			    g_platform_boot_mode);
 
 	wake_lock_init(&battery_fg_lock, WAKE_LOCK_SUSPEND, "battery fg wakelock");
 
@@ -3715,7 +3373,6 @@ static int battery_probe(struct platform_device *dev)
 		battery_log(BAT_LOG_CRTI, "[BAT_probe] power_supply_register AC Fail !!\n");
 		return ret;
 	}
-	battery_log(BAT_LOG_CRTI, "[BAT_probe] power_supply_register AC Success !!\n");
 
 	ret = power_supply_register(&(dev->dev), &usb_main.psy);
 	if (ret) {
@@ -3723,7 +3380,6 @@ static int battery_probe(struct platform_device *dev)
 				    "[BAT_probe] power_supply_register USB Fail !!\n");
 		return ret;
 	}
-	battery_log(BAT_LOG_CRTI, "[BAT_probe] power_supply_register USB Success !!\n");
 
 	ret = power_supply_register(&(dev->dev), &wireless_main.psy);
 	if (ret) {
@@ -3731,8 +3387,6 @@ static int battery_probe(struct platform_device *dev)
 				    "[BAT_probe] power_supply_register WIRELESS Fail !!\n");
 		return ret;
 	}
-	battery_log(BAT_LOG_CRTI,
-			    "[BAT_probe] power_supply_register WIRELESS Success !!\n");
 
 	ret = power_supply_register(&(dev->dev), &battery_main.psy);
 	if (ret) {
@@ -3740,7 +3394,6 @@ static int battery_probe(struct platform_device *dev)
 				    "[BAT_probe] power_supply_register Battery Fail !!\n");
 		return ret;
 	}
-	battery_log(BAT_LOG_CRTI, "[BAT_probe] power_supply_register Battery Success !!\n");
 
 #if !defined(CONFIG_POWER_EXT)
 
@@ -3848,7 +3501,6 @@ static int battery_probe(struct platform_device *dev)
 	battery_kthread_hrtimer_init();
 
 	kthread_run(bat_thread_kthread, NULL, "bat_thread_kthread");
-	battery_log(BAT_LOG_CRTI, "[battery_probe] bat_thread_kthread Done\n");
 
 
 	charger_hv_detect_sw_workaround_init();
@@ -3892,7 +3544,6 @@ static void battery_timer_pause(void)
 	battery_suspended = KAL_TRUE;
 	mutex_unlock(&bat_mutex);
 
-	battery_log(BAT_LOG_CRTI, "@bs=1@\n");
 #endif
 
 	get_xtime_and_monotonic_and_sleep_offset(&xts, &tom, &g_bat_time_before_sleep);
@@ -3930,13 +3581,11 @@ static void battery_timer_resume(void)
 	}
 	else
 	{
-		battery_log(BAT_LOG_CRTI, "battery resume NOT by pcm timer!!\n");
 	}
 
 	if(g_call_state == CALL_ACTIVE && (bat_time_after_sleep.tv_sec - g_bat_time_before_sleep.tv_sec >= batt_cust_data.talking_sync_time))	// phone call last than x min
 	{
 		BMT_status.UI_SOC = battery_meter_get_battery_percentage();
-		battery_log(BAT_LOG_CRTI, "Sync UI SOC to SOC immediately\n");
 	}
 
 	mutex_lock(&bat_mutex);
@@ -3946,7 +3595,6 @@ static void battery_timer_resume(void)
 	hrtimer_start(&charger_hv_detect_timer, hvtime, HRTIMER_MODE_REL);
 
 	battery_suspended = KAL_FALSE;
-	battery_log(BAT_LOG_CRTI, "@bs=0@\n");
 	mutex_unlock(&bat_mutex);
 
 #endif
@@ -3954,15 +3602,11 @@ static void battery_timer_resume(void)
 
 static int battery_remove(struct platform_device *dev)
 {
-	battery_log(BAT_LOG_CRTI, "******** battery driver remove!! ********\n");
-
 	return 0;
 }
 
 static void battery_shutdown(struct platform_device *dev)
 {
-	battery_log(BAT_LOG_CRTI, "******** battery driver shutdown!! ********\n");
-
 }
 
 /* ///////////////////////////////////////////////////////////////////////////////////////// */
@@ -3970,9 +3614,6 @@ static void battery_shutdown(struct platform_device *dev)
 /* ///////////////////////////////////////////////////////////////////////////////////////// */
 static ssize_t show_BatteryNotify(struct device *dev, struct device_attribute *attr, char *buf)
 {
-	battery_log(BAT_LOG_CRTI, "[Battery] show_BatteryNotify : %x\n",
-			    g_BatteryNotifyCode);
-
 	return sprintf(buf, "%u\n", g_BatteryNotifyCode);
 }
 
@@ -3981,14 +3622,9 @@ static ssize_t store_BatteryNotify(struct device *dev, struct device_attribute *
 {
 	char *pvalue = NULL;
 	unsigned int reg_BatteryNotifyCode = 0;
-	battery_log(BAT_LOG_CRTI, "[Battery] store_BatteryNotify\n");
 	if (buf != NULL && size != 0) {
-		battery_log(BAT_LOG_CRTI, "[Battery] buf is %s and size is %Zu\n", buf,
-				    size);
 		reg_BatteryNotifyCode = simple_strtoul(buf, &pvalue, 16);
 		g_BatteryNotifyCode = reg_BatteryNotifyCode;
-		battery_log(BAT_LOG_CRTI, "[Battery] store code : %x\n",
-				    g_BatteryNotifyCode);
 	}
 	return size;
 }
@@ -3997,7 +3633,6 @@ static DEVICE_ATTR(BatteryNotify, 0664, show_BatteryNotify, store_BatteryNotify)
 
 static ssize_t show_BN_TestMode(struct device *dev, struct device_attribute *attr, char *buf)
 {
-	battery_log(BAT_LOG_CRTI, "[Battery] show_BN_TestMode : %x\n", g_BN_TestMode);
 	return sprintf(buf, "%u\n", g_BN_TestMode);
 }
 
@@ -4006,14 +3641,9 @@ static ssize_t store_BN_TestMode(struct device *dev, struct device_attribute *at
 {
 	char *pvalue = NULL;
 	unsigned int reg_BN_TestMode = 0;
-	battery_log(BAT_LOG_CRTI, "[Battery] store_BN_TestMode\n");
 	if (buf != NULL && size != 0) {
-		battery_log(BAT_LOG_CRTI, "[Battery] buf is %s and size is %Zu\n", buf,
-				    size);
 		reg_BN_TestMode = simple_strtoul(buf, &pvalue, 16);
 		g_BN_TestMode = reg_BN_TestMode;
-		battery_log(BAT_LOG_CRTI, "[Battery] store g_BN_TestMode : %x\n",
-				    g_BN_TestMode);
 	}
 	return size;
 }
@@ -4063,12 +3693,6 @@ static ssize_t battery_cmd_write(struct file *file, const char *buffer, size_t c
 		battery_cmd_thermal_test_mode = bat_thr_test_mode;
 		battery_cmd_thermal_test_mode_value = bat_thr_test_value;
 
-		battery_log(BAT_LOG_CRTI,
-				    "bat_tt_enable=%d, bat_thr_test_mode=%d, bat_thr_test_value=%d\n",
-				    g_battery_thermal_throttling_flag,
-				    battery_cmd_thermal_test_mode,
-				    battery_cmd_thermal_test_mode_value);
-
 		return count;
 	} else {
 		battery_log(BAT_LOG_CRTI,
@@ -4125,9 +3749,6 @@ static ssize_t current_cmd_write(struct file *file, const char *buffer, size_t c
 		}
 		battery_charging_control(CHARGING_CMD_ENABLE, &charging_enable);
 
-		battery_log(BAT_LOG_CRTI,
-				    "[current_cmd_write] cmd_current_unlimited=%d, cmd_discharging=%d\n",
-				    cmd_current_unlimited, cmd_discharging);
 		return count;
 	} else {
 		battery_log(BAT_LOG_CRTI, "  bad argument, echo [enable] > current_cmd\n");
@@ -4146,9 +3767,6 @@ static int current_cmd_read(struct seq_file *m, void *v)
 
 	battery_charging_control(CHARGING_CMD_ENABLE, &charging_enable);
 
-	battery_log(BAT_LOG_CRTI,
-			    "[current_cmd_write] cmd_discharging=%d\n", cmd_discharging);
-
 	return 0;
 }
 
@@ -4169,7 +3787,6 @@ static ssize_t discharging_cmd_write(struct file *file, const char *buffer, size
 	desc[len] = '\0';
     
 	if (sscanf(desc, "%d %d", &charging_enable, &adjust_power) == 2) {
-		battery_log(BAT_LOG_CRTI, "[current_cmd_write] adjust_power = %d\n", adjust_power);
 		return count;
 	} else {
 		battery_log(BAT_LOG_CRTI, "  bad argument, echo [enable] > current_cmd\n");
@@ -4196,8 +3813,6 @@ static int mt_batteryNotify_probe(struct platform_device *dev)
 	/* struct proc_dir_entry *entry = NULL; */
 	struct proc_dir_entry *battery_dir = NULL;
 
-	battery_log(BAT_LOG_CRTI, "******** mt_batteryNotify_probe!! ********\n");
-
 	ret_device_file = device_create_file(&(dev->dev), &dev_attr_BatteryNotify);
 	ret_device_file = device_create_file(&(dev->dev), &dev_attr_BN_TestMode);
 
@@ -4207,12 +3822,8 @@ static int mt_batteryNotify_probe(struct platform_device *dev)
 	} else {
 #if 1
 		proc_create("battery_cmd", S_IRUGO | S_IWUSR, battery_dir, &battery_cmd_proc_fops);
-		battery_log(BAT_LOG_CRTI, "proc_create battery_cmd_proc_fops\n");
-
 		proc_create("current_cmd", S_IRUGO | S_IWUSR, battery_dir, &current_cmd_proc_fops);
-		battery_log(BAT_LOG_CRTI, "proc_create current_cmd_proc_fops\n");
 		proc_create("discharging_cmd", S_IRUGO | S_IWUSR, battery_dir, &discharging_cmd_proc_fops);
-		battery_log(BAT_LOG_CRTI, "proc_create discharging_cmd_proc_fops\n");
             
 
 #else
@@ -4224,8 +3835,6 @@ static int mt_batteryNotify_probe(struct platform_device *dev)
 #endif
 	}
 
-	battery_log(BAT_LOG_CRTI, "******** mtk_battery_cmd!! ********\n");
-
 	return 0;
 
 }
@@ -4313,8 +3922,6 @@ static struct platform_driver battery_driver = {
 static int battery_dts_probe(struct platform_device *dev)
 {
 	int ret = 0;
-	battery_log(BAT_LOG_CRTI, "******** battery_dts_probe!! ********\n");
-
 	battery_device.dev.of_node = dev->dev.of_node;
 	ret = platform_device_register(&battery_device);
     if (ret) {
@@ -4366,8 +3973,6 @@ static int mt_batteryNotify_dts_probe(struct platform_device *dev)
 	int ret = 0;
 	/* struct proc_dir_entry *entry = NULL; */
 
-	battery_log(BAT_LOG_CRTI, "******** mt_batteryNotify_dts_probe!! ********\n");
-
 	MT_batteryNotify_device.dev.of_node = dev->dev.of_node;
 	ret = platform_device_register(&MT_batteryNotify_device);
     if (ret) {
@@ -4398,13 +4003,11 @@ static int battery_pm_event(struct notifier_block *notifier, unsigned long pm_ev
 	case PM_HIBERNATION_PREPARE: /* Going to hibernate */
 	case PM_RESTORE_PREPARE: /* Going to restore a saved image */
 	case PM_SUSPEND_PREPARE: /* Going to suspend the system */
-		pr_warn("[%s] pm_event %lu\n", __func__, pm_event);
 		battery_timer_pause();
 		return NOTIFY_DONE;
 	case PM_POST_HIBERNATION: /* Hibernation finished */
 	case PM_POST_SUSPEND: /* Suspend finished */
 	case PM_POST_RESTORE: /* Restore failed */
-		pr_warn("[%s] pm_event %lu\n", __func__, pm_event);
 		battery_timer_resume();
 		return NOTIFY_DONE;
 	}
@@ -4420,8 +4023,6 @@ static int __init battery_init(void)
 {
 	int ret;
 
-	printk("battery_init\n");
-
 #ifdef CONFIG_OF
 	//
 #else
@@ -4466,8 +4067,6 @@ static int __init battery_init(void)
 	ret = register_pm_notifier(&battery_pm_notifier_block);
 	if (ret)
 		printk("[%s] failed to register PM notifier %d\n", __func__, ret);
-
-	battery_log(BAT_LOG_CRTI, "****[battery_driver] Initialization : DONE !!\n");
 	return 0;
 }
 
diff --git a/drivers/power/mediatek/battery_meter.c b/drivers/power/mediatek/battery_meter.c
index 37fdf7809..cca50f30b 100755
--- a/drivers/power/mediatek/battery_meter.c
+++ b/drivers/power/mediatek/battery_meter.c
@@ -250,8 +250,6 @@ void fgauge_get_profile_id(void)
 	ret = IMM_GetOneChannelValue_Cali(BATTERY_ID_CHANNEL_NUM, &id_volt);
 	if (ret != 0)
 		bm_print(BM_LOG_CRTI, "[fgauge_get_profile_id]id_volt read fail\n");
-	else
-		bm_print(BM_LOG_CRTI, "[fgauge_get_profile_id]id_volt = %d\n", id_volt);
 
 	if ((sizeof(g_battery_id_voltage) / sizeof(kal_int32)) != TOTAL_BATTERY_NUMBER) {
 		bm_print(BM_LOG_CRTI, "[fgauge_get_profile_id]error! voltage range incorrect!\n");
@@ -266,8 +264,6 @@ void fgauge_get_profile_id(void)
 			g_fg_battery_id = TOTAL_BATTERY_NUMBER - 1;
 		}
 	}
-
-	bm_print(BM_LOG_CRTI, "[fgauge_get_profile_id]Battery id (%d)\n", g_fg_battery_id);
 }
 #elif defined(MTK_GET_BATTERY_ID_BY_GPIO)
 void fgauge_get_profile_id(void)
@@ -470,8 +466,6 @@ int __batt_init_cust_data_from_dt(void)
 		
 		if (of_property_read_u32(np, "stop_charging_in_takling", &val)==0){
 			batt_cust_data.stop_charging_in_takling = (int)val;
-			battery_log(BAT_LOG_CRTI, "Get stop_charging_in_takling: %d\n", 
-				batt_cust_data.stop_charging_in_takling);
 		}else{
 			battery_log(BAT_LOG_CRTI,
 				"Get stop_charging_in_takling failed\n");
@@ -479,8 +473,6 @@ int __batt_init_cust_data_from_dt(void)
 		
 		if (of_property_read_u32(np, "talking_recharge_voltage", &val)==0){
 			batt_cust_data.talking_recharge_voltage = (int)val;
-			battery_log(BAT_LOG_CRTI, "Get talking_recharge_voltage: %d\n", 
-				batt_cust_data.talking_recharge_voltage);
 		}else{
 			battery_log(BAT_LOG_CRTI,
 				"Get talking_recharge_voltage failed\n");
@@ -488,8 +480,6 @@ int __batt_init_cust_data_from_dt(void)
 		
 		if (of_property_read_u32(np, "talking_sync_time", &val)==0){
 			batt_cust_data.talking_sync_time = (int)val;
-			battery_log(BAT_LOG_CRTI, "Get talking_sync_time: %d\n", 
-				batt_cust_data.talking_sync_time);
 		}else{
 			battery_log(BAT_LOG_CRTI,
 				"Get talking_sync_time failed\n");
@@ -497,8 +487,6 @@ int __batt_init_cust_data_from_dt(void)
 		
 		if (of_property_read_u32(np, "mtk_temperature_recharge_support", &val)==0){
 			batt_cust_data.mtk_temperature_recharge_support = (int)val;
-			battery_log(BAT_LOG_CRTI, "Get mtk_temperature_recharge_support: %d\n", 
-				batt_cust_data.mtk_temperature_recharge_support);
 		}else{
 			battery_log(BAT_LOG_CRTI,
 				"Get mtk_temperature_recharge_support failed\n");
@@ -506,8 +494,6 @@ int __batt_init_cust_data_from_dt(void)
 		
 		if (of_property_read_u32(np, "max_charge_temperature", &val)==0){
 			batt_cust_data.max_charge_temperature = (int)val;
-			battery_log(BAT_LOG_CRTI, "Get max_charge_temperature: %d\n", 
-				batt_cust_data.max_charge_temperature);
 		}else{
 			battery_log(BAT_LOG_CRTI,
 				"Get max_charge_temperature failed\n");
@@ -515,8 +501,6 @@ int __batt_init_cust_data_from_dt(void)
 		
 		if (of_property_read_u32(np, "max_charge_temperature_minus_x_degree", &val)==0){
 			batt_cust_data.max_charge_temperature_minus_x_degree = (int)val;
-			battery_log(BAT_LOG_CRTI, "Get max_charge_temperature_minus_x_degree: %d\n", 
-				batt_cust_data.max_charge_temperature_minus_x_degree);
 		}else{
 			battery_log(BAT_LOG_CRTI,
 				"Get max_charge_temperature_minus_x_degree failed\n");
@@ -524,8 +508,6 @@ int __batt_init_cust_data_from_dt(void)
 		
 		if (of_property_read_u32(np, "min_charge_temperature", &val)==0){
 			batt_cust_data.min_charge_temperature = (int)val;
-			battery_log(BAT_LOG_CRTI, "Get min_charge_temperature: %d\n", 
-				batt_cust_data.min_charge_temperature);
 		}else{
 			battery_log(BAT_LOG_CRTI,
 				"Get min_charge_temperature failed\n");
@@ -533,8 +515,6 @@ int __batt_init_cust_data_from_dt(void)
 		
 		if (of_property_read_u32(np, "min_charge_temperature_plus_x_degree", &val)==0){
 			batt_cust_data.min_charge_temperature_plus_x_degree = (int)val;
-			battery_log(BAT_LOG_CRTI, "Get min_charge_temperature_plus_x_degree: %d\n", 
-				batt_cust_data.min_charge_temperature_plus_x_degree);
 		}else{
 			battery_log(BAT_LOG_CRTI,
 				"Get min_charge_temperature_plus_x_degree failed\n");
@@ -542,8 +522,6 @@ int __batt_init_cust_data_from_dt(void)
 		
 		if (of_property_read_u32(np, "err_charge_temperature", &val)==0){
 			batt_cust_data.err_charge_temperature = (int)val;
-			battery_log(BAT_LOG_CRTI, "Get err_charge_temperature: %d\n", 
-				batt_cust_data.err_charge_temperature);
 		}else{
 			battery_log(BAT_LOG_CRTI,
 				"Get err_charge_temperature failed\n");
@@ -551,8 +529,6 @@ int __batt_init_cust_data_from_dt(void)
 		
 		if (of_property_read_u32(np, "v_pre2cc_thres", &val)==0){
 			batt_cust_data.v_pre2cc_thres = (int)val;
-			battery_log(BAT_LOG_CRTI, "Get v_pre2cc_thres: %d\n", 
-				batt_cust_data.v_pre2cc_thres);
 		}else{
 			battery_log(BAT_LOG_CRTI,
 				"Get v_pre2cc_thres failed\n");
@@ -560,8 +536,6 @@ int __batt_init_cust_data_from_dt(void)
 		
 		if (of_property_read_u32(np, "v_cc2topoff_thres", &val)==0){
 			batt_cust_data.v_cc2topoff_thres = (int)val;
-			battery_log(BAT_LOG_CRTI, "Get v_cc2topoff_thres: %d\n", 
-				batt_cust_data.v_cc2topoff_thres);
 		}else{
 			battery_log(BAT_LOG_CRTI,
 				"Get v_cc2topoff_thres failed\n");
@@ -569,8 +543,6 @@ int __batt_init_cust_data_from_dt(void)
 		
 		if (of_property_read_u32(np, "recharging_voltage", &val)==0){
 			batt_cust_data.recharging_voltage = (int)val;
-			battery_log(BAT_LOG_CRTI, "Get recharging_voltage: %d\n", 
-				batt_cust_data.recharging_voltage);
 		}else{
 			battery_log(BAT_LOG_CRTI,
 				"Get recharging_voltage failed\n");
@@ -578,8 +550,6 @@ int __batt_init_cust_data_from_dt(void)
 		
 		if (of_property_read_u32(np, "charging_full_current", &val)==0){
 			batt_cust_data.charging_full_current = (int)val;
-			battery_log(BAT_LOG_CRTI, "Get charging_full_current: %d\n", 
-				batt_cust_data.charging_full_current);
 		}else{
 			battery_log(BAT_LOG_CRTI,
 				"Get charging_full_current failed\n");
@@ -587,8 +557,6 @@ int __batt_init_cust_data_from_dt(void)
 		
 		if (of_property_read_u32(np, "config_usb_if", &val)==0){
 			batt_cust_data.config_usb_if = (int)val;
-			battery_log(BAT_LOG_CRTI, "Get config_usb_if: %d\n", 
-				batt_cust_data.config_usb_if);
 		}else{
 			battery_log(BAT_LOG_CRTI,
 				"Get config_usb_if failed\n");
@@ -596,8 +564,6 @@ int __batt_init_cust_data_from_dt(void)
 		
 		if (of_property_read_u32(np, "usb_charger_current_suspend", &val)==0){
 			batt_cust_data.usb_charger_current_suspend = (int)val;
-			battery_log(BAT_LOG_CRTI, "Get usb_charger_current_suspend: %d\n", 
-				batt_cust_data.usb_charger_current_suspend);
 		}else{
 			battery_log(BAT_LOG_CRTI,
 				"Get usb_charger_current_suspend failed\n");
@@ -605,8 +571,6 @@ int __batt_init_cust_data_from_dt(void)
 		
 		if (of_property_read_u32(np, "usb_charger_current_unconfigured", &val)==0){
 			batt_cust_data.usb_charger_current_unconfigured = (int)val;
-			battery_log(BAT_LOG_CRTI, "Get usb_charger_current_unconfigured: %d\n", 
-				batt_cust_data.usb_charger_current_unconfigured);
 		}else{
 			battery_log(BAT_LOG_CRTI,
 				"Get usb_charger_current_unconfigured failed\n");
@@ -614,8 +578,6 @@ int __batt_init_cust_data_from_dt(void)
 		
 		if (of_property_read_u32(np, "usb_charger_current_configured", &val)==0){
 			batt_cust_data.usb_charger_current_configured = (int)val;
-			battery_log(BAT_LOG_CRTI, "Get usb_charger_current_configured: %d\n", 
-				batt_cust_data.usb_charger_current_configured);
 		}else{
 			battery_log(BAT_LOG_CRTI,
 				"Get usb_charger_current_configured failed\n");
@@ -623,8 +585,6 @@ int __batt_init_cust_data_from_dt(void)
 		
 		if (of_property_read_u32(np, "usb_charger_current", &val)==0){
 			batt_cust_data.usb_charger_current = (int)val;
-			battery_log(BAT_LOG_CRTI, "Get usb_charger_current: %d\n", 
-				batt_cust_data.usb_charger_current);
 		}else{
 			battery_log(BAT_LOG_CRTI,
 				"Get usb_charger_current failed\n");
@@ -632,8 +592,6 @@ int __batt_init_cust_data_from_dt(void)
 		
 		if (of_property_read_u32(np, "ac_charger_current", &val)==0){
 			batt_cust_data.ac_charger_current = (int)val;
-			battery_log(BAT_LOG_CRTI, "Get ac_charger_current: %d\n", 
-				batt_cust_data.ac_charger_current);
 		}else{
 			battery_log(BAT_LOG_CRTI,
 				"Get ac_charger_current failed\n");
@@ -641,8 +599,6 @@ int __batt_init_cust_data_from_dt(void)
 		
 		if (of_property_read_u32(np, "non_std_ac_charger_current", &val)==0){
 			batt_cust_data.non_std_ac_charger_current = (int)val;
-			battery_log(BAT_LOG_CRTI, "Get non_std_ac_charger_current: %d\n", 
-				batt_cust_data.non_std_ac_charger_current);
 		}else{
 			battery_log(BAT_LOG_CRTI,
 				"Get non_std_ac_charger_current failed\n");
@@ -650,8 +606,6 @@ int __batt_init_cust_data_from_dt(void)
 		
 		if (of_property_read_u32(np, "charging_host_charger_current", &val)==0){
 			batt_cust_data.charging_host_charger_current = (int)val;
-			battery_log(BAT_LOG_CRTI, "Get charging_host_charger_current: %d\n", 
-				batt_cust_data.charging_host_charger_current);
 		}else{
 			battery_log(BAT_LOG_CRTI,
 				"Get charging_host_charger_current failed\n");
@@ -659,8 +613,6 @@ int __batt_init_cust_data_from_dt(void)
 		
 		if (of_property_read_u32(np, "apple_0_5a_charger_current", &val)==0){
 			batt_cust_data.apple_0_5a_charger_current = (int)val;
-			battery_log(BAT_LOG_CRTI, "Get apple_0_5a_charger_current: %d\n", 
-				batt_cust_data.apple_0_5a_charger_current);
 		}else{
 			battery_log(BAT_LOG_CRTI,
 				"Get apple_0_5a_charger_current failed\n");
@@ -668,8 +620,6 @@ int __batt_init_cust_data_from_dt(void)
 		
 		if (of_property_read_u32(np, "apple_1_0a_charger_current", &val)==0){
 			batt_cust_data.apple_1_0a_charger_current = (int)val;
-			battery_log(BAT_LOG_CRTI, "Get apple_1_0a_charger_current: %d\n", 
-				batt_cust_data.apple_1_0a_charger_current);
 		}else{
 			battery_log(BAT_LOG_CRTI,
 				"Get apple_1_0a_charger_current failed\n");
@@ -677,8 +627,6 @@ int __batt_init_cust_data_from_dt(void)
 		
 		if (of_property_read_u32(np, "apple_2_1a_charger_current", &val)==0){
 			batt_cust_data.apple_2_1a_charger_current = (int)val;
-			battery_log(BAT_LOG_CRTI, "Get apple_2_1a_charger_current: %d\n", 
-				batt_cust_data.apple_2_1a_charger_current);
 		}else{
 			battery_log(BAT_LOG_CRTI,
 				"Get apple_2_1a_charger_current failed\n");
@@ -687,8 +635,6 @@ int __batt_init_cust_data_from_dt(void)
 		
 		if (of_property_read_u32(np, "bat_low_temp_protect_enable", &val)==0){
 			batt_cust_data.bat_low_temp_protect_enable = (int)val;
-			battery_log(BAT_LOG_CRTI, "Get bat_low_temp_protect_enable: %d\n", 
-				batt_cust_data.bat_low_temp_protect_enable);
 		}else{
 			battery_log(BAT_LOG_CRTI,
 				"Get bat_low_temp_protect_enable failed\n");
@@ -696,8 +642,6 @@ int __batt_init_cust_data_from_dt(void)
 		
 		if (of_property_read_u32(np, "v_charger_enable", &val)==0){
 			batt_cust_data.v_charger_enable = (int)val;
-			battery_log(BAT_LOG_CRTI, "Get v_charger_enable: %d\n", 
-				batt_cust_data.v_charger_enable);
 		}else{
 			battery_log(BAT_LOG_CRTI,
 				"Get v_charger_enable failed\n");
@@ -705,8 +649,6 @@ int __batt_init_cust_data_from_dt(void)
 		
 		if (of_property_read_u32(np, "v_charger_max", &val)==0){
 			batt_cust_data.v_charger_max = (int)val;
-			battery_log(BAT_LOG_CRTI, "Get v_charger_max: %d\n", 
-				batt_cust_data.v_charger_max);
 		}else{
 			battery_log(BAT_LOG_CRTI,
 				"Get v_charger_max failed\n");
@@ -714,8 +656,6 @@ int __batt_init_cust_data_from_dt(void)
 		
 		if (of_property_read_u32(np, "v_charger_min", &val)==0){
 			batt_cust_data.v_charger_min = (int)val;
-			battery_log(BAT_LOG_CRTI, "Get v_charger_min: %d\n", 
-				batt_cust_data.v_charger_min);
 		}else{
 			battery_log(BAT_LOG_CRTI,
 				"Get v_charger_min failed\n");
@@ -723,8 +663,6 @@ int __batt_init_cust_data_from_dt(void)
 		
 		if (of_property_read_u32(np, "onehundred_percent_tracking_time", &val)==0){
 			batt_cust_data.onehundred_percent_tracking_time = (int)val;
-			battery_log(BAT_LOG_CRTI, "Get onehundred_percent_tracking_time: %d\n", 
-				batt_cust_data.onehundred_percent_tracking_time);
 		}else{
 			battery_log(BAT_LOG_CRTI,
 				"Get onehundred_percent_tracking_time failed\n");
@@ -732,8 +670,6 @@ int __batt_init_cust_data_from_dt(void)
 		
 		if (of_property_read_u32(np, "npercent_tracking_time", &val)==0){
 			batt_cust_data.npercent_tracking_time = (int)val;
-			battery_log(BAT_LOG_CRTI, "Get npercent_tracking_time: %d\n", 
-				batt_cust_data.npercent_tracking_time);
 		}else{
 			battery_log(BAT_LOG_CRTI,
 				"Get npercent_tracking_time failed\n");
@@ -741,8 +677,6 @@ int __batt_init_cust_data_from_dt(void)
 		
 		if (of_property_read_u32(np, "sync_to_real_tracking_time", &val)==0){
 			batt_cust_data.sync_to_real_tracking_time = (int)val;
-			battery_log(BAT_LOG_CRTI, "Get sync_to_real_tracking_time: %d\n", 
-				batt_cust_data.sync_to_real_tracking_time);
 		}else{
 			battery_log(BAT_LOG_CRTI,
 				"Get sync_to_real_tracking_time failed\n");
@@ -750,8 +684,6 @@ int __batt_init_cust_data_from_dt(void)
 		
 		if (of_property_read_u32(np, "v_0percent_tracking", &val)==0){
 			batt_cust_data.v_0percent_tracking = (int)val;
-			battery_log(BAT_LOG_CRTI, "Get v_0percent_tracking: %d\n", 
-				batt_cust_data.v_0percent_tracking);
 		}else{
 			battery_log(BAT_LOG_CRTI,
 				"Get v_0percent_tracking failed\n");
@@ -760,8 +692,6 @@ int __batt_init_cust_data_from_dt(void)
 		
 		if (of_property_read_u32(np, "high_battery_voltage_support", &val)==0){
 			batt_cust_data.high_battery_voltage_support = (int)val;
-			battery_log(BAT_LOG_CRTI, "Get high_battery_voltage_support: %d\n", 
-				batt_cust_data.high_battery_voltage_support);
 		}else{
 			battery_log(BAT_LOG_CRTI,
 				"Get high_battery_voltage_support failed\n");
@@ -773,8 +703,6 @@ int __batt_init_cust_data_from_dt(void)
 #endif 
 int __batt_meter_init_cust_data_from_cust_header(void)
 {
-	battery_log(BAT_LOG_CRTI,"__batt_meter_init_cust_data_from_cust_header\n");
-
 	/* cust_battery_meter_table.h */
 	#if (BAT_NTC_10 == 1)
 	batt_meter_cust_data.bat_ntc = 10;
@@ -978,7 +906,6 @@ int __batt_meter_init_cust_data_from_dt(void)
  
 	if (of_property_read_u32(np, "rbat_pull_up_r", &val)==0){
 		batt_meter_cust_data.rbat_pull_up_r= (int)val;
-		battery_log(BAT_LOG_CRTI, "Get rbat_pull_up_r: %d\n",batt_meter_cust_data.rbat_pull_up_r);
 	}
 	else
 	{
@@ -987,7 +914,6 @@ int __batt_meter_init_cust_data_from_dt(void)
 
 	if (of_property_read_u32(np, "rbat_pull_up_volt", &val)==0){
 		batt_meter_cust_data.rbat_pull_up_volt= (int)val;
-		battery_log(BAT_LOG_CRTI, "Get rbat_pull_up_volt: %d\n",batt_meter_cust_data.rbat_pull_up_volt);
 	}
 	else
 	{
@@ -998,7 +924,6 @@ int __batt_meter_init_cust_data_from_dt(void)
 
 	if (of_property_read_u32(np, "batt_temperature_table_num", &val)==0){
 		num = (int)val;
-		battery_log(BAT_LOG_CRTI, "Get batt_temperature_table_num: %d\n",num);
 	}
 	else
 	{
@@ -1012,7 +937,6 @@ int __batt_meter_init_cust_data_from_dt(void)
 		idx++;
 		if (!of_property_read_u32_index(np, "batt_temperature_table", idx, &val))
 		{
-			battery_log(BAT_LOG_CRTI,"batt_temperature_table: addr: %d, val: %d    \n", addr, val);
 		}
 		idx++;
 		Batt_Temperature_Table[idx/2].BatteryTemp=addr;
@@ -1027,7 +951,6 @@ int __batt_meter_init_cust_data_from_dt(void)
 
 	if (of_property_read_u32(np, "battery_profile_t0_num", &val)==0){
 		num = (int)val;
-		battery_log(BAT_LOG_CRTI, "Get battery_profile_t0_num: %d\n",num);
 	}
 	else
 	{
@@ -1041,7 +964,6 @@ int __batt_meter_init_cust_data_from_dt(void)
 		idx++;
 		if (!of_property_read_u32_index(np, "battery_profile_t0", idx, &val))
 		{
-			battery_log(BAT_LOG_CRTI,"battery_profile_t0: addr: %d, val: %d\n", addr, val);
 		}
 		idx++;
 		battery_profile_t0[idx/2].percentage=addr;
@@ -1054,7 +976,6 @@ int __batt_meter_init_cust_data_from_dt(void)
 
 	if (of_property_read_u32(np, "battery_profile_t1_num", &val)==0){
 		num = (int)val;
-		battery_log(BAT_LOG_CRTI, "Get battery_profile_t1_num: %d\n",num);
 	}
 	else
 	{
@@ -1068,7 +989,6 @@ int __batt_meter_init_cust_data_from_dt(void)
 		idx++;
 		if (!of_property_read_u32_index(np, "battery_profile_t1", idx, &val))
 		{
-			battery_log(BAT_LOG_CRTI,"battery_profile_t1: addr: %d, val: %d\n", addr, val);
 		}
 		idx++;
 		battery_profile_t1[idx/2].percentage=addr;
@@ -1080,7 +1000,6 @@ int __batt_meter_init_cust_data_from_dt(void)
 
 	if (of_property_read_u32(np, "battery_profile_t2_num", &val)==0){
 		num = (int)val;
-		battery_log(BAT_LOG_CRTI, "Get battery_profile_t2_num: %d\n",num);
 	}
 	else
 	{
@@ -1094,7 +1013,6 @@ int __batt_meter_init_cust_data_from_dt(void)
 		idx++;
 		if (!of_property_read_u32_index(np, "battery_profile_t2", idx, &val))
 		{
-			battery_log(BAT_LOG_CRTI,"battery_profile_t0: addr: %d, val: %d\n", addr, val);
 		}
 		idx++;
 		battery_profile_t2[idx/2].percentage=addr;
@@ -1106,7 +1024,6 @@ int __batt_meter_init_cust_data_from_dt(void)
 
 	if (of_property_read_u32(np, "battery_profile_t3_num", &val)==0){
 		num = (int)val;
-		battery_log(BAT_LOG_CRTI, "Get battery_profile_t3_num: %d\n",num);
 	}
 	else
 	{
@@ -1120,7 +1037,6 @@ int __batt_meter_init_cust_data_from_dt(void)
 		idx++;
 		if (!of_property_read_u32_index(np, "battery_profile_t3", idx, &val))
 		{
-			battery_log(BAT_LOG_CRTI,"battery_profile_t3: addr: %d, val: %d\n", addr, val);
 		}
 		idx++;
 		battery_profile_t0[idx/2].percentage=addr;
@@ -1132,7 +1048,6 @@ int __batt_meter_init_cust_data_from_dt(void)
 
 	if (of_property_read_u32(np, "r_profile_t0_num", &val)==0){
 		num = (int)val;
-		battery_log(BAT_LOG_CRTI, "Get r_profile_t0_num: %d\n",num);
 	}
 	else
 	{
@@ -1146,7 +1061,6 @@ int __batt_meter_init_cust_data_from_dt(void)
 		idx++;
 		if (!of_property_read_u32_index(np, "r_profile_t0", idx, &val))
 		{
-			battery_log(BAT_LOG_CRTI,"r_profile_t0: addr: %d, val: %d\n", addr, val);
 		}
 		idx++;
 		r_profile_t0[idx/2].resistance=addr;
@@ -1158,7 +1072,6 @@ int __batt_meter_init_cust_data_from_dt(void)
 
 	if (of_property_read_u32(np, "r_profile_t1_num", &val)==0){
 		num = (int)val;
-		battery_log(BAT_LOG_CRTI, "Get r_profile_t1_num: %d\n",num);
 	}
 	else
 	{
@@ -1172,7 +1085,6 @@ int __batt_meter_init_cust_data_from_dt(void)
 		idx++;
 		if (!of_property_read_u32_index(np, "r_profile_t1", idx, &val))
 		{
-			battery_log(BAT_LOG_CRTI,"r_profile_t1: addr: %d, val: %d\n", addr, val);
 		}
 		idx++;
 		r_profile_t1[idx/2].resistance=addr;
@@ -1184,7 +1096,6 @@ int __batt_meter_init_cust_data_from_dt(void)
 
 	if (of_property_read_u32(np, "r_profile_t2_num", &val)==0){
 		num = (int)val;
-		battery_log(BAT_LOG_CRTI, "Get r_profile_t2_num: %d\n",num);
 	}
 	else
 	{
@@ -1198,7 +1109,6 @@ int __batt_meter_init_cust_data_from_dt(void)
 		idx++;
 		if (!of_property_read_u32_index(np, "r_profile_t2", idx, &val))
 		{
-			battery_log(BAT_LOG_CRTI,"r_profile_t2: addr: %d, val: %d\n", addr, val);
 		}
 		idx++;
 		r_profile_t2[idx/2].resistance=addr;
@@ -1210,7 +1120,6 @@ int __batt_meter_init_cust_data_from_dt(void)
 
 	if (of_property_read_u32(np, "r_profile_t3_num", &val)==0){
 		num = (int)val;
-		battery_log(BAT_LOG_CRTI, "Get r_profile_t3_num: %d\n",num);
 	}
 	else
 	{
@@ -1224,7 +1133,6 @@ int __batt_meter_init_cust_data_from_dt(void)
 		idx++;
 		if (!of_property_read_u32_index(np, "r_profile_t3", idx, &val))
 		{
-			battery_log(BAT_LOG_CRTI,"r_profile_t3: addr: %d, val: %d\n", addr, val);
 		}
 		idx++;
 		r_profile_t3[idx/2].resistance=addr;
@@ -1238,352 +1146,264 @@ int __batt_meter_init_cust_data_from_dt(void)
 	
 	if (of_property_read_u32(np, "r_bat_sense", &val)==0){
 		batt_meter_cust_data.r_bat_sense = (int)val;
-		bm_print(BM_LOG_CRTI, "Get r_bat_sense: %d\n", 
-			batt_meter_cust_data.r_bat_sense);
 	}else{
 		bm_print(BM_LOG_CRTI, "Get r_bat_sense failed\n");
 	}
 
 	if (of_property_read_u32(np, "r_i_sense", &val)==0){
 		batt_meter_cust_data.r_i_sense = (int)val;
-		bm_print(BM_LOG_CRTI, "Get r_i_sense: %d\n", 
-			batt_meter_cust_data.r_i_sense);
 	}else{
 		bm_print(BM_LOG_CRTI, "Get r_i_sense failed\n");
 	}
 
 	if (of_property_read_u32(np, "r_charger_1", &val)==0){
 		batt_meter_cust_data.r_charger_1 = (int)val;
-		bm_print(BM_LOG_CRTI, "Get r_charger_1: %d\n", 
-			batt_meter_cust_data.r_charger_1);
 	}else{
 		bm_print(BM_LOG_CRTI, "Get r_charger_1 failed\n");
 	}
 
 	if (of_property_read_u32(np, "r_charger_2", &val)==0){
 		batt_meter_cust_data.r_charger_2 = (int)val;
-		bm_print(BM_LOG_CRTI, "Get r_charger_2: %d\n", 
-			batt_meter_cust_data.r_charger_2);
 	}else{
 		bm_print(BM_LOG_CRTI, "Get r_charger_2 failed\n");
 	}
 
 	if (of_property_read_u32(np, "temperature_t0", &val)==0){
 		batt_meter_cust_data.temperature_t0 = (int)val;
-		bm_print(BM_LOG_CRTI, "Get temperature_t0: %d\n", 
-			batt_meter_cust_data.temperature_t0);
 	}else{
 		bm_print(BM_LOG_CRTI, "Get temperature_t0 failed\n");
 	}
 
 	if (of_property_read_u32(np, "temperature_t1", &val)==0){
 		batt_meter_cust_data.temperature_t1 = (int)val;
-		bm_print(BM_LOG_CRTI, "Get temperature_t1: %d\n", 
-			batt_meter_cust_data.temperature_t1);
 	}else{
 		bm_print(BM_LOG_CRTI, "Get temperature_t1 failed\n");
 	}
 
 	if (of_property_read_u32(np, "temperature_t2", &val)==0){
 		batt_meter_cust_data.temperature_t2 = (int)val;
-		bm_print(BM_LOG_CRTI, "Get temperature_t2: %d\n", 
-			batt_meter_cust_data.temperature_t2);
 	}else{
 		bm_print(BM_LOG_CRTI, "Get temperature_t2 failed\n");
 	}
 
 	if (of_property_read_u32(np, "temperature_t3", &val)==0){
 		batt_meter_cust_data.temperature_t3 = (int)val;
-		bm_print(BM_LOG_CRTI, "Get temperature_t3: %d\n", 
-			batt_meter_cust_data.temperature_t3);
 	}else{
 		bm_print(BM_LOG_CRTI, "Get temperature_t3 failed\n");
 	}
 
 	if (of_property_read_u32(np, "temperature_t", &val)==0){
 		batt_meter_cust_data.temperature_t = (int)val;
-		bm_print(BM_LOG_CRTI, "Get temperature_t: %d\n", 
-			batt_meter_cust_data.temperature_t);
 	}else{
 		bm_print(BM_LOG_CRTI, "Get temperature_t failed\n");
 	}
 
 	if (of_property_read_u32(np, "fg_meter_resistance", &val)==0){
 		batt_meter_cust_data.fg_meter_resistance = (int)val;
-		bm_print(BM_LOG_CRTI, "Get fg_meter_resistance: %d\n", 
-			batt_meter_cust_data.fg_meter_resistance);
 	}else{
 		bm_print(BM_LOG_CRTI, "Get fg_meter_resistance failed\n");
 	}
 
 	if (of_property_read_u32(np, "q_max_pos_50", &val)==0){
 		batt_meter_cust_data.q_max_pos_50 = (int)val;
-		bm_print(BM_LOG_CRTI, "Get q_max_pos_50: %d\n", 
-			batt_meter_cust_data.q_max_pos_50);
 	}else{
 		bm_print(BM_LOG_CRTI, "Get q_max_pos_50 failed\n");
 	}
 
 	if (of_property_read_u32(np, "q_max_pos_25", &val)==0){
 		batt_meter_cust_data.q_max_pos_25 = (int)val;
-		bm_print(BM_LOG_CRTI, "Get q_max_pos_25: %d\n", 
-			batt_meter_cust_data.q_max_pos_25);
 	}else{
 		bm_print(BM_LOG_CRTI, "Get q_max_pos_25 failed\n");
 	}
 
 	if (of_property_read_u32(np, "q_max_pos_0", &val)==0){
 		batt_meter_cust_data.q_max_pos_0 = (int)val;
-		bm_print(BM_LOG_CRTI, "Get q_max_pos_0: %d\n", 
-			batt_meter_cust_data.q_max_pos_0);
 	}else{
 		bm_print(BM_LOG_CRTI, "Get q_max_pos_0 failed\n");
 	}
 
 	if (of_property_read_u32(np, "q_max_neg_10", &val)==0){
 		batt_meter_cust_data.q_max_neg_10 = (int)val;
-		bm_print(BM_LOG_CRTI, "Get q_max_neg_10: %d\n", 
-			batt_meter_cust_data.q_max_neg_10);
 	}else{
 		bm_print(BM_LOG_CRTI, "Get q_max_neg_10 failed\n");
 	}
 
 	if (of_property_read_u32(np, "q_max_pos_50_h_current", &val)==0){
 		batt_meter_cust_data.q_max_pos_50_h_current = (int)val;
-		bm_print(BM_LOG_CRTI, "Get q_max_pos_50_h_current: %d\n", 
-			batt_meter_cust_data.q_max_pos_50_h_current);
 	}else{
 		bm_print(BM_LOG_CRTI, "Get q_max_pos_50_h_current failed\n");
 	}
 
 	if (of_property_read_u32(np, "q_max_pos_25_h_current", &val)==0){
 		batt_meter_cust_data.q_max_pos_25_h_current = (int)val;
-		bm_print(BM_LOG_CRTI, "Get q_max_pos_25_h_current: %d\n", 
-			batt_meter_cust_data.q_max_pos_25_h_current);
 	}else{
 		bm_print(BM_LOG_CRTI, "Get q_max_pos_25_h_current failed\n");
 	}
 
 	if (of_property_read_u32(np, "q_max_pos_0_h_current", &val)==0){
 		batt_meter_cust_data.q_max_pos_0_h_current = (int)val;
-		bm_print(BM_LOG_CRTI, "Get q_max_pos_0_h_current: %d\n", 
-			batt_meter_cust_data.q_max_pos_0_h_current);
 	}else{
 		bm_print(BM_LOG_CRTI, "Get q_max_pos_0_h_current failed\n");
 	}
 
 	if (of_property_read_u32(np, "q_max_neg_10_h_current", &val)==0){
 		batt_meter_cust_data.q_max_neg_10_h_current = (int)val;
-		bm_print(BM_LOG_CRTI, "Get q_max_neg_10_h_current: %d\n", 
-			batt_meter_cust_data.q_max_neg_10_h_current);
 	}else{
 		bm_print(BM_LOG_CRTI, "Get q_max_neg_10_h_current failed\n");
 	}
 
 	if (of_property_read_u32(np, "oam_d5", &val)==0){
 		batt_meter_cust_data.oam_d5 = (int)val;
-		bm_print(BM_LOG_CRTI, "Get oam_d5: %d\n", 
-			batt_meter_cust_data.oam_d5);
 	}else{
 		bm_print(BM_LOG_CRTI, "Get oam_d5 failed\n");
 	}
 
 	if (of_property_read_u32(np, "change_tracking_point", &val)==0){
 		batt_meter_cust_data.change_tracking_point = (int)val;
-		bm_print(BM_LOG_CRTI, "Get change_tracking_point: %d\n", 
-			batt_meter_cust_data.change_tracking_point);
 	}else{
 		bm_print(BM_LOG_CRTI, "Get change_tracking_point failed\n");
 	}
 
 	if (of_property_read_u32(np, "cust_tracking_point", &val)==0){
 		batt_meter_cust_data.cust_tracking_point = (int)val;
-		bm_print(BM_LOG_CRTI, "Get cust_tracking_point: %d\n", 
-			batt_meter_cust_data.cust_tracking_point);
 	}else{
 		bm_print(BM_LOG_CRTI, "Get cust_tracking_point failed\n");
 	}
 
 	if (of_property_read_u32(np, "cust_r_sense", &val)==0){
 		batt_meter_cust_data.cust_r_sense = (int)val;
-		bm_print(BM_LOG_CRTI, "Get cust_r_sense: %d\n", 
-			batt_meter_cust_data.cust_r_sense);
 	}else{
 		bm_print(BM_LOG_CRTI, "Get cust_r_sense failed\n");
 	}
 
 	if (of_property_read_u32(np, "cust_hw_cc", &val)==0){
 		batt_meter_cust_data.cust_hw_cc = (int)val;
-		bm_print(BM_LOG_CRTI, "Get cust_hw_cc: %d\n", 
-			batt_meter_cust_data.cust_hw_cc);
 	}else{
 		bm_print(BM_LOG_CRTI, "Get cust_hw_cc failed\n");
 	}
 
 	if (of_property_read_u32(np, "aging_tuning_value", &val)==0){
 		batt_meter_cust_data.aging_tuning_value = (int)val;
-		bm_print(BM_LOG_CRTI, "Get aging_tuning_value: %d\n", 
-			batt_meter_cust_data.aging_tuning_value);
 	}else{
 		bm_print(BM_LOG_CRTI, "Get aging_tuning_value failed\n");
 	}
 
 	if (of_property_read_u32(np, "cust_r_fg_offset", &val)==0){
 		batt_meter_cust_data.cust_r_fg_offset = (int)val;
-		bm_print(BM_LOG_CRTI, "Get cust_r_fg_offset: %d\n", 
-			batt_meter_cust_data.cust_r_fg_offset);
 	}else{
 		bm_print(BM_LOG_CRTI, "Get cust_r_fg_offset failed\n");
 	}
 
 	if (of_property_read_u32(np, "ocv_board_compesate", &val)==0){
 		batt_meter_cust_data.ocv_board_compesate = (int)val;
-		bm_print(BM_LOG_CRTI, "Get ocv_board_compesate: %d\n", 
-			batt_meter_cust_data.ocv_board_compesate);
 	}else{
 		bm_print(BM_LOG_CRTI, "Get ocv_board_compesate failed\n");
 	}
 
 	if (of_property_read_u32(np, "r_fg_board_base", &val)==0){
 		batt_meter_cust_data.r_fg_board_base = (int)val;
-		bm_print(BM_LOG_CRTI, "Get r_fg_board_base: %d\n", 
-			batt_meter_cust_data.r_fg_board_base);
 	}else{
 		bm_print(BM_LOG_CRTI, "Get r_fg_board_base failed\n");
 	}
 
 	if (of_property_read_u32(np, "r_fg_board_slope", &val)==0){
 		batt_meter_cust_data.r_fg_board_slope = (int)val;
-		bm_print(BM_LOG_CRTI, "Get r_fg_board_slope: %d\n", 
-			batt_meter_cust_data.r_fg_board_slope);
 	}else{
 		bm_print(BM_LOG_CRTI, "Get r_fg_board_slope failed\n");
 	}
 
 	if (of_property_read_u32(np, "car_tune_value", &val)==0){
 		batt_meter_cust_data.car_tune_value = (int)val;
-		bm_print(BM_LOG_CRTI, "Get car_tune_value: %d\n", 
-			batt_meter_cust_data.car_tune_value);
 	}else{
 		bm_print(BM_LOG_CRTI, "Get car_tune_value failed\n");
 	}
 
 	if (of_property_read_u32(np, "current_detect_r_fg", &val)==0){
 		batt_meter_cust_data.current_detect_r_fg = (int)val;
-		bm_print(BM_LOG_CRTI, "Get current_detect_r_fg: %d\n", 
-			batt_meter_cust_data.current_detect_r_fg);
 	}else{
 		bm_print(BM_LOG_CRTI, "Get current_detect_r_fg failed\n");
 	}
 
 	if (of_property_read_u32(np, "minerroroffset", &val)==0){
 		batt_meter_cust_data.minerroroffset = (int)val;
-		bm_print(BM_LOG_CRTI, "Get minerroroffset: %d\n", 
-			batt_meter_cust_data.minerroroffset);
 	}else{
 		bm_print(BM_LOG_CRTI, "Get minerroroffset failed\n");
 	}
 
 	if (of_property_read_u32(np, "fg_vbat_average_size", &val)==0){
 		batt_meter_cust_data.fg_vbat_average_size = (int)val;
-		bm_print(BM_LOG_CRTI, "Get fg_vbat_average_size: %d\n", 
-			batt_meter_cust_data.fg_vbat_average_size);
 	}else{
 		bm_print(BM_LOG_CRTI, "Get fg_vbat_average_size failed\n");
 	}
 
 	if (of_property_read_u32(np, "r_fg_value", &val)==0){
 		batt_meter_cust_data.r_fg_value = (int)val;
-		bm_print(BM_LOG_CRTI, "Get r_fg_value: %d\n", 
-			batt_meter_cust_data.r_fg_value);
 	}else{
 		bm_print(BM_LOG_CRTI, "Get r_fg_value failed\n");
 	}
 
 	if (of_property_read_u32(np, "cust_poweron_delta_capacity_tolrance", &val)==0){
 		batt_meter_cust_data.cust_poweron_delta_capacity_tolrance = (int)val;
-		bm_print(BM_LOG_CRTI, "Get cust_poweron_delta_capacity_tolrance: %d\n", 
-			batt_meter_cust_data.cust_poweron_delta_capacity_tolrance);
 	}else{
 		bm_print(BM_LOG_CRTI, "Get cust_poweron_delta_capacity_tolrance failed\n");
 	}
 
 	if (of_property_read_u32(np, "cust_poweron_low_capacity_tolrance", &val)==0){
 		batt_meter_cust_data.cust_poweron_low_capacity_tolrance = (int)val;
-		bm_print(BM_LOG_CRTI, "Get cust_poweron_low_capacity_tolrance: %d\n", 
-			batt_meter_cust_data.cust_poweron_low_capacity_tolrance);
 	}else{
 		bm_print(BM_LOG_CRTI, "Get cust_poweron_low_capacity_tolrance failed\n");
 	}
 
 	if (of_property_read_u32(np, "cust_poweron_max_vbat_tolrance", &val)==0){
 		batt_meter_cust_data.cust_poweron_max_vbat_tolrance = (int)val;
-		bm_print(BM_LOG_CRTI, "Get cust_poweron_max_vbat_tolrance: %d\n", 
-			batt_meter_cust_data.cust_poweron_max_vbat_tolrance);
 	}else{
 		bm_print(BM_LOG_CRTI, "Get cust_poweron_max_vbat_tolrance failed\n");
 	}
 
 	if (of_property_read_u32(np, "cust_poweron_delta_vbat_tolrance", &val)==0){
 		batt_meter_cust_data.cust_poweron_delta_vbat_tolrance = (int)val;
-		bm_print(BM_LOG_CRTI, "Get cust_poweron_delta_vbat_tolrance: %d\n", 
-			batt_meter_cust_data.cust_poweron_delta_vbat_tolrance);
 	}else{
 		bm_print(BM_LOG_CRTI, "Get cust_poweron_delta_vbat_tolrance failed\n");
 	}
 
 	if (of_property_read_u32(np, "cust_poweron_delta_hw_sw_ocv_capacity_tolrance", &val)==0){
 		batt_meter_cust_data.cust_poweron_delta_hw_sw_ocv_capacity_tolrance = (int)val;
-		bm_print(BM_LOG_CRTI, "Get cust_poweron_delta_hw_sw_ocv_capacity_tolrance: %d\n", 
-			batt_meter_cust_data.cust_poweron_delta_hw_sw_ocv_capacity_tolrance);
 	}else{
 		bm_print(BM_LOG_CRTI, "Get cust_poweron_delta_hw_sw_ocv_capacity_tolrance failed\n");
 	}
 
 	if (of_property_read_u32(np, "fixed_tbat_25", &val)==0){
 		batt_meter_cust_data.fixed_tbat_25 = (int)val;
-		bm_print(BM_LOG_CRTI, "Get fixed_tbat_25: %d\n", 
-			batt_meter_cust_data.fixed_tbat_25);
 	}else{
 		bm_print(BM_LOG_CRTI, "Get fixed_tbat_25 failed\n");
 	}
 
 	if (of_property_read_u32(np, "vbat_normal_wakeup", &val)==0){
 		batt_meter_cust_data.vbat_normal_wakeup = (int)val;
-		bm_print(BM_LOG_CRTI, "Get vbat_normal_wakeup: %d\n", 
-			batt_meter_cust_data.vbat_normal_wakeup);
 	}else{
 		bm_print(BM_LOG_CRTI, "Get vbat_normal_wakeup failed\n");
 	}
 
 	if (of_property_read_u32(np, "vbat_low_power_wakeup", &val)==0){
 		batt_meter_cust_data.vbat_low_power_wakeup = (int)val;
-		bm_print(BM_LOG_CRTI, "Get vbat_low_power_wakeup: %d\n", 
-			batt_meter_cust_data.vbat_low_power_wakeup);
 	}else{
 		bm_print(BM_LOG_CRTI, "Get vbat_low_power_wakeup failed\n");
 	}
 
 	if (of_property_read_u32(np, "normal_wakeup_period", &val)==0){
 		batt_meter_cust_data.normal_wakeup_period = (int)val;
-		bm_print(BM_LOG_CRTI, "Get normal_wakeup_period: %d\n", 
-			batt_meter_cust_data.normal_wakeup_period);
 	}else{
 		bm_print(BM_LOG_CRTI, "Get normal_wakeup_period failed\n");
 	}
 
 	if (of_property_read_u32(np, "low_power_wakeup_period", &val)==0){
 		batt_meter_cust_data.low_power_wakeup_period = (int)val;
-		bm_print(BM_LOG_CRTI, "Get low_power_wakeup_period: %d\n", 
-			batt_meter_cust_data.low_power_wakeup_period);
 	}else{
 		bm_print(BM_LOG_CRTI, "Get low_power_wakeup_period failed\n");
 	}
 
 	if (of_property_read_u32(np, "close_poweroff_wakeup_period", &val)==0){
 		batt_meter_cust_data.close_poweroff_wakeup_period = (int)val;
-		bm_print(BM_LOG_CRTI, "Get close_poweroff_wakeup_period: %d\n", 
-			batt_meter_cust_data.close_poweroff_wakeup_period);
 	}else{
 		bm_print(BM_LOG_CRTI, "Get close_poweroff_wakeup_period failed\n");
 	}
@@ -1603,18 +1423,15 @@ void batt_init_cust_data(void)
 
 	#if defined(BATTERY_DTS_SUPPORT)
 	#ifdef CONFIG_OF
-	bm_print(BM_LOG_CRTI, "battery custom init by DTS\n");
 	__batt_init_cust_data_from_cust_header();
 	__batt_meter_init_cust_data_from_cust_header();	
 	__batt_init_cust_data_from_dt();
 	__batt_meter_init_cust_data_from_dt();
 	#else // #ifdef CONFIG_OF
-	bm_print(BM_LOG_CRTI, "battery custom init\n");
 	__batt_init_cust_data_from_cust_header();
 	__batt_meter_init_cust_data_from_cust_header();
 	#endif // #ifdef CONFIG_OF
 	#else
-	bm_print(BM_LOG_CRTI, "battery custom init2\n");
 	__batt_init_cust_data_from_cust_header();
 	__batt_meter_init_cust_data_from_cust_header();	
 	#endif
@@ -1704,8 +1521,6 @@ kal_int32 fgauge_get_Q_max(kal_int16 temperature)
 				 ) / (high_temperature - low_temperature)
 	    );
 
-	bm_print(BM_LOG_FULL, "[fgauge_get_Q_max] Q_max = %d\r\n", ret_Q_max);
-
 	return ret_Q_max;
 }
 
@@ -1749,8 +1564,6 @@ kal_int32 fgauge_get_Q_max_high_current(kal_int16 temperature)
 				 ) / (high_temperature - low_temperature)
 	    );
 
-	bm_print(BM_LOG_FULL, "[fgauge_get_Q_max_high_current] Q_max = %d\r\n", ret_Q_max);
-
 	return ret_Q_max;
 }
 
@@ -1826,8 +1639,6 @@ kal_int32 fgauge_get_Q_max(kal_int16 temperature)
 				 ) / (high_temperature - low_temperature)
 	    );
 
-	bm_print(BM_LOG_FULL, "[fgauge_get_Q_max] Q_max = %d\r\n", ret_Q_max);
-
 	return ret_Q_max;
 }
 
@@ -1871,8 +1682,6 @@ kal_int32 fgauge_get_Q_max_high_current(kal_int16 temperature)
 				 ) / (high_temperature - low_temperature)
 	    );
 
-	bm_print(BM_LOG_FULL, "[fgauge_get_Q_max_high_current] Q_max = %d\r\n", ret_Q_max);
-
 	return ret_Q_max;
 }
 
@@ -1906,7 +1715,6 @@ int BattVoltToTemp(int dwVolt)
 int force_get_tbat(kal_bool update)
 {
 #if defined(CONFIG_POWER_EXT) || defined(FIXED_TBAT_25)
-	bm_print(BM_LOG_CRTI, "[force_get_tbat] fixed TBAT=25 t\n");
 	return 25;
 #else
 	int bat_temperature_volt = 0;
@@ -1946,9 +1754,6 @@ int force_get_tbat(kal_bool update)
 			bat_temperature_val = BattVoltToTemp(bat_temperature_volt);
 		}
 
-	bm_print(BM_LOG_CRTI, "[force_get_tbat] %d,%d,%d,%d,%d,%d\n",
-		 bat_temperature_volt_temp, bat_temperature_volt, fg_current_state, fg_current_temp,
-		 fg_r_value, bat_temperature_val);
 		pre_bat_temperature_val = bat_temperature_val;
 	} else {
 		bat_temperature_val = pre_bat_temperature_val;
@@ -2078,7 +1883,6 @@ kal_int32 fgauge_read_capacity_by_v(kal_int32 voltage)
 
 	profile_p = fgauge_get_profile(batt_meter_cust_data.temperature_t);
 	if (profile_p == NULL) {
-		bm_print(BM_LOG_CRTI, "[FGADC] fgauge get ZCV profile : fail !\r\n");
 		return 100;
 	}
 
@@ -2119,8 +1923,6 @@ kal_int32 fgauge_read_v_by_capacity(int bat_capacity)
 
 	profile_p = fgauge_get_profile(batt_meter_cust_data.temperature_t);
 	if (profile_p == NULL) {
-		bm_print(BM_LOG_CRTI,
-			 "[fgauge_read_v_by_capacity] fgauge get ZCV profile : fail !\r\n");
 		return 3700;
 	}
 
@@ -2159,7 +1961,6 @@ kal_int32 fgauge_read_d_by_v(kal_int32 volt_bat)
 
 	profile_p = fgauge_get_profile(batt_meter_cust_data.temperature_t);
 	if (profile_p == NULL) {
-		bm_print(BM_LOG_CRTI, "[FGADC] fgauge get ZCV profile : fail !\r\n");
 		return 100;
 	}
 
@@ -2199,8 +2000,6 @@ kal_int32 fgauge_read_v_by_d(int d_val)
 
 	profile_p = fgauge_get_profile(batt_meter_cust_data.temperature_t);
 	if (profile_p == NULL) {
-		bm_print(BM_LOG_CRTI,
-			 "[fgauge_read_v_by_capacity] fgauge get ZCV profile : fail !\r\n");
 		return 3700;
 	}
 
@@ -2304,7 +2103,6 @@ void fgauge_construct_battery_profile_init(void)
 				
 				break;
 			}
-			bm_print(BM_LOG_CRTI, "new battery_profile[%d,%d] <%d,%d>\n", i, j, (temp_profile_p + j)->percentage, (temp_profile_p + j)->voltage);
 		}
 		
 		for (j=0; j*2 <= 100; j++) {
@@ -2380,15 +2178,6 @@ void fgauge_construct_battery_profile(kal_int32 temperature, BATTERY_PROFILE_STR
 		    );
 #endif
 	}
-
-
-	/* Dumpt new battery profile */
-	for (i = 0; i < saddles; i++) {
-		bm_print(BM_LOG_CRTI, "<DOD,Voltage> at %d = <%d,%d>\r\n",
-			 temperature, (temp_profile_p + i)->percentage,
-			 (temp_profile_p + i)->voltage);
-	}
-
 }
 
 void fgauge_construct_r_table_profile(kal_int32 temperature, R_PROFILE_STRUC_P temp_profile_p)
@@ -2489,14 +2278,6 @@ void fgauge_construct_r_table_profile(kal_int32 temperature, R_PROFILE_STRUC_P t
 		    );
 #endif
 	}
-
-	/* Dumpt new r-table profile */
-	for (i = 0; i < saddles; i++) {
-		bm_print(BM_LOG_CRTI, "<Rbat,VBAT> at %d = <%d,%d>\r\n",
-			 temperature, (temp_profile_p + i)->resistance,
-			 (temp_profile_p + i)->voltage);
-	}
-
 }
 
 void fgauge_construct_table_by_temp(void)
@@ -2528,9 +2309,6 @@ void fgauge_construct_table_by_temp(void)
 	avg_temp = (temperature_sum) / TEMP_AVERAGE_SIZE;
 
 	if (avg_temp != last_temp) {
-		bm_print(BM_LOG_FULL,
-			 "[fgauge_construct_table_by_temp] reconstruct table by temperature change from (%d) to (%d)\r\n",
-			 last_temp, avg_temp);
 		fgauge_construct_r_table_profile(curr_temp,	
 			fgauge_get_profile_r_table(batt_meter_cust_data.temperature_t));
 		fgauge_construct_battery_profile(curr_temp, 
@@ -2540,7 +2318,6 @@ void fgauge_construct_table_by_temp(void)
 		#if defined(CUST_CAPACITY_OCV2CV_TRANSFORM)
 		gFG_BATT_CAPACITY = fgauge_get_Q_max(curr_temp);
 		gFG_BATT_CAPACITY_aging = gFG_BATT_CAPACITY;
-		bm_print(BM_LOG_CRTI, "[%s]gFG_BATT_CAPACITY: %d\n", __func__, gFG_BATT_CAPACITY);
 		#endif
 	}
 
@@ -2568,7 +2345,6 @@ void fgauge_get_current_factor(void)
 	if (KAL_TRUE == gFG_Is_Charging) {
 		init_current = KAL_TRUE;
 		g_currentfactor = 100;
-		bm_print(BM_LOG_CRTI, "[fgauge_get_current_factor] Charging!!\r\n");
 		return;
 	}
 
@@ -2598,9 +2374,6 @@ void fgauge_get_current_factor(void)
 
 	g_currentfactor = avg_current * 100 / CV_CURRENT;	/* calculate factor by 600ma */
 
-	bm_print(BM_LOG_CRTI, "[fgauge_get_current_factor] %d,%d,%d,%d\r\n",
-		 inst_current, avg_current, g_currentfactor, gFG_Is_Charging);
-
 	tempcurrentIndex = (tempcurrentIndex + 1) % TEMP_AVERAGE_SIZE;
 #endif
 }
@@ -2653,9 +2426,6 @@ kal_int32 fgauge_get_Q_max_high_current_by_current(kal_int32 i_current, kal_int1
 		}
 	}
 
-	bm_print(BM_LOG_CRTI, "[fgauge_get_Q_max_by_current] %d,%d,%d,%d,%d\r\n",
-		 i_current, iIndex, OCV_temp, Rbat_temp, ret_Q_max);
-
 	return ret_Q_max;
 }
 #endif
@@ -2686,18 +2456,9 @@ void fg_qmax_update_for_aging(void)
 					 "[fg_qmax_update_for_aging] error, restore gFG_BATT_CAPACITY_aging (%d)\n",
 					 gFG_BATT_CAPACITY_aging);
 			}
-
-			bm_print(BM_LOG_CRTI,
-				 "[fg_qmax_update_for_aging] need update : gFG_columb=%d, gFG_DOD0=%d, new_qmax=%d\r\n",
-				 gFG_columb, gFG_DOD0, gFG_BATT_CAPACITY_aging);
 		} else {
-			bm_print(BM_LOG_CRTI,
-				 "[fg_qmax_update_for_aging] no update : gFG_columb=%d, gFG_DOD0=%d, new_qmax=%d\r\n",
-				 gFG_columb, gFG_DOD0, gFG_BATT_CAPACITY_aging);
 		}
 	} else {
-		bm_print(BM_LOG_CRTI, "[fg_qmax_update_for_aging] hw_charging_done=%d\r\n",
-			 hw_charging_done);
 	}
 #endif
 }
@@ -2767,15 +2528,6 @@ void sw_oam_init_v2(void)
 			}
 		}	
 	}
-
-
-	bm_print(BM_LOG_CRTI, "[sw_oam_init_v2] swocv:%d(%d) hwocv:%d(%d) rtc:%d plugout_status=%d chr:%d type:%d f:%d %d %d\n",g_booting_vbat,gFG_capacity_by_v_init,
-		gFG_voltage,gFG_capacity_by_v,g_rtc_fg_soc,plugout_status,
-		bat_is_charger_exist(),type,gFG_capacity_by_v,batt_meter_cust_data.cust_poweron_delta_capacity_tolrance,batt_meter_cust_data.cust_poweron_delta_hw_sw_ocv_capacity_tolrance);
-
-	sprintf(bootbuf,      "[sw_oam_init_v2] swocv:%d(%d) hwocv:%d(%d) rtc:%d plugout_status=%d chr:%d type:%d f:%d %d %d\n",g_booting_vbat,gFG_capacity_by_v_init,
-		gFG_voltage,gFG_capacity_by_v,g_rtc_fg_soc,plugout_status,
-		bat_is_charger_exist(),type,gFG_capacity_by_v,batt_meter_cust_data.cust_poweron_delta_capacity_tolrance,batt_meter_cust_data.cust_poweron_delta_hw_sw_ocv_capacity_tolrance);
 }
 #endif
 
@@ -2792,8 +2544,6 @@ void dod_init(void)
 	ret = battery_meter_ctrl(BATTERY_METER_CMD_GET_HW_OCV, &gFG_voltage);
 	gFG_capacity_by_v = fgauge_read_capacity_by_v(gFG_voltage);
 
-	bm_print(BM_LOG_CRTI, "[FGADC] get_hw_ocv=%d, HW_SOC=%d, SW_SOC = %d\n",
-		 gFG_voltage, gFG_capacity_by_v, gFG_capacity_by_v_init);
 #if defined(EXTERNAL_SWCHR_SUPPORT)
 	/* compare with hw_ocv & sw_ocv, check if less than or equal to 5% tolerance */
 	if ((abs(gFG_capacity_by_v_init - gFG_capacity_by_v) > 5)
@@ -2803,8 +2553,6 @@ void dod_init(void)
 #endif
 #if defined(HW_FG_FORCE_USE_SW_OCV)
 	gFG_capacity_by_v = gFG_capacity_by_v_init;
-	bm_print(BM_LOG_CRTI, "[FGADC] HW_FG_FORCE_USE_SW_OCV : HW_SOC=%d, SW_SOC = %d\n",
-		 gFG_capacity_by_v, gFG_capacity_by_v_init);
 #endif
 	/* ------------------------------------------------------------------------------- */
 #endif
@@ -2819,7 +2567,6 @@ void dod_init(void)
 #if defined(IS_BATTERY_REMOVE_BY_PMIC)
 		if(is_battery_remove_pmic()==0 && (g_rtc_fg_soc != 0))
 		{
-			bm_print(BM_LOG_CRTI, "[FGADC]is_battery_remove()==0 , use rtc_fg_soc%d\n",g_rtc_fg_soc);
 			gFG_capacity_by_v = g_rtc_fg_soc;
 		}
 		else
@@ -2852,12 +2599,10 @@ void dod_init(void)
 			{
 				if(abs(gFG_capacity_by_v-gFG_capacity_by_sw_ocv)>batt_meter_cust_data.cust_poweron_delta_hw_sw_ocv_capacity_tolrance)
 				{
-					bm_print(BM_LOG_CRTI, "[FGADC] gFG_capacity_by_v=%d, gFG_capacity_by_sw_ocv=%d use SWOCV\n",gFG_capacity_by_v, gFG_capacity_by_sw_ocv);
 					gFG_capacity_by_v=gFG_capacity_by_sw_ocv;
 				}
 				else
 				{
-					bm_print(BM_LOG_CRTI, "[FGADC] gFG_capacity_by_v=%d, gFG_capacity_by_sw_ocv=%d use HWOCV\n",gFG_capacity_by_v, gFG_capacity_by_sw_ocv);
 				}
 			}
 		
@@ -2910,13 +2655,8 @@ void dod_init(void)
 	sw_oam_init_v2();
 #endif
     
-	bm_print(BM_LOG_CRTI, "[FGADC] g_rtc_fg_soc=%d, gFG_capacity_by_v=%d\n",
-		 g_rtc_fg_soc, gFG_capacity_by_v);
-
 	if (gFG_capacity_by_v == 0 && bat_is_charger_exist() == KAL_TRUE) {
 		gFG_capacity_by_v = 1;
-
-		bm_print(BM_LOG_CRTI, "[FGADC] gFG_capacity_by_v=%d\n", gFG_capacity_by_v);
 	}
 	gFG_capacity = gFG_capacity_by_v;
 	gFG_capacity_by_c_init = gFG_capacity;
@@ -2930,16 +2670,12 @@ void dod_init(void)
 	if (batt_meter_cust_data.change_tracking_point)
 	{
 	gFG_15_vlot = fgauge_read_v_by_capacity((100 - g_tracking_point));
-	bm_print(BM_LOG_CRTI, "[FGADC] gFG_15_vlot = %dmV\n", gFG_15_vlot);
 	}
 	else
 	{
 	/* gFG_15_vlot = fgauge_read_v_by_capacity(86); //14% */
 	gFG_15_vlot = fgauge_read_v_by_capacity((100 - g_tracking_point));
-	bm_print(BM_LOG_CRTI, "[FGADC] gFG_15_vlot = %dmV\n", gFG_15_vlot);
 	if ((gFG_15_vlot > 3800) || (gFG_15_vlot < 3600)) {
-		bm_print(BM_LOG_CRTI, "[FGADC] gFG_15_vlot(%d) over range, reset to 3700\n",
-			 gFG_15_vlot);
 		gFG_15_vlot = 3700;
 	}
 	}
@@ -2959,9 +2695,6 @@ kal_int32 mtk_imp_tracking(kal_int32 ori_voltage, kal_int32 ori_current, kal_int
 		ret_compensate_value = (ret_compensate_value + (10 / 2)) / 10;
 		temp_voltage_2 = temp_voltage_1 + ret_compensate_value;
 
-		bm_print(BM_LOG_FULL,
-			 "[mtk_imp_tracking] temp_voltage_2=%d,temp_voltage_1=%d,ret_compensate_value=%d,gFG_resistance_bat=%d\n",
-			 temp_voltage_2, temp_voltage_1, ret_compensate_value, gFG_resistance_bat);
 	}
 
 	gFG_resistance_bat = fgauge_read_r_bat_by_v(temp_voltage_2);
@@ -2971,10 +2704,6 @@ kal_int32 mtk_imp_tracking(kal_int32 ori_voltage, kal_int32 ori_current, kal_int
 
 	gFG_compensate_value = ret_compensate_value;
 
-	bm_print(BM_LOG_FULL,
-		 "[mtk_imp_tracking] temp_voltage_2=%d,temp_voltage_1=%d,ret_compensate_value=%d,gFG_resistance_bat=%d\n",
-		 temp_voltage_2, temp_voltage_1, ret_compensate_value, gFG_resistance_bat);
-
 	return ret_compensate_value;
 }
 
@@ -2998,17 +2727,11 @@ void oam_init(void)
 	vbat_capacity = fgauge_read_capacity_by_v(g_booting_vbat);
 
 	if (bat_is_charger_exist() == KAL_TRUE) {
-		bm_print(BM_LOG_CRTI, "[oam_init_inf] gFG_capacity_by_v=%d, vbat_capacity=%d,\n",
-			 gFG_capacity_by_v, vbat_capacity);
-
 		/* to avoid plug in cable without battery, then plug in battery to make hw soc = 100% */
 		/* if the difference bwtween ZCV and vbat is too large, using vbat instead ZCV */
 		if (((gFG_capacity_by_v == 100) && (vbat_capacity < batt_meter_cust_data.cust_poweron_max_vbat_tolrance))
 		    || (abs(gFG_capacity_by_v - vbat_capacity) >
 			batt_meter_cust_data.cust_poweron_delta_vbat_tolrance)) {
-			bm_print(BM_LOG_CRTI,
-				 "[oam_init] fg_vbat=(%d), vbat=(%d), set fg_vat as vat\n",
-				 gFG_voltage, g_booting_vbat);
 
 			gFG_voltage = g_booting_vbat;
 			gFG_capacity_by_v = vbat_capacity;
@@ -3041,24 +2764,8 @@ void oam_init(void)
 	g_d_hw_ocv = oam_d0;
 
 	if (oam_init_i == 0) {
-		bm_print(BM_LOG_CRTI,
-			 "[oam_init] oam_v_ocv_1,oam_v_ocv_2,oam_r_1,oam_r_2,oam_d0,oam_i_ori\n");
 		oam_init_i = 1;
 	}
-
-	bm_print(BM_LOG_CRTI, "[oam_init] %d,%d,%d,%d,%d,%d\n",
-		 oam_v_ocv_1, oam_v_ocv_2, oam_r_1, oam_r_2, oam_d0, oam_i_ori);
-
-	bm_print(BM_LOG_CRTI, "[oam_init_inf] hw_OCV, hw_D0, RTC, D0, oam_OCV_init, tbat\n");
-	bm_print(BM_LOG_CRTI,
-		 "[oam_run_inf] oam_OCV1, oam_OCV2, vbat, I1, I2, R1, R2, Car1, Car2,qmax, tbat\n");
-	bm_print(BM_LOG_CRTI, "[oam_result_inf] D1, D2, D3, D4, D5, UI_SOC\n");
-
-
-	bm_print(BM_LOG_CRTI, "[oam_init_inf] %d, %d, %d, %d, %d, %d\n",
-		 gFG_voltage, (100 - fgauge_read_capacity_by_v(gFG_voltage)), g_rtc_fg_soc,
-		 gFG_DOD0, oam_v_ocv_init, force_get_tbat(KAL_FALSE));
-
 }
 
 
@@ -3079,8 +2786,6 @@ void oam_run(void)
 	/* delta_time = now_time - last_oam_run_time; */
 	delta_time = now_time.tv_sec - last_oam_run_time.tv_sec;
 
-	bm_print(BM_LOG_CRTI, "[oam_run_time] delta time=%d\n", delta_time);
-
 #if defined(SW_OAM_INIT_V2)	
 	printk(bootbuf);
 #endif
@@ -3185,56 +2890,6 @@ void oam_run(void)
 		oam_d_3_pre = oam_d_3;
 		oam_d_4_pre = oam_d_4;
 	}
-
-	bm_print(BM_LOG_CRTI, "[oam_run] %d,%d,%d,%d,%d,%d,%d,%d\n",
-		 d5_count, d5_count_time, oam_d_3_pre, oam_d_3, oam_d_4_pre, oam_d_4, oam_d_5,
-		 charging_current);
-
-	if (oam_run_i == 0) {
-		bm_print(BM_LOG_FULL,
-			 "[oam_run] oam_i_1,oam_i_2,oam_car_1,oam_car_2,oam_d_1,oam_d_2,oam_v_ocv_1,oam_d_3,oam_r_1,oam_v_ocv_2,oam_r_2,vol_bat,g_vol_bat_hw_ocv,g_d_hw_ocv\n");
-		oam_run_i = 1;
-	}
-
-	bm_print(BM_LOG_FULL, "[oam_run] %d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d\n",
-		 oam_i_1, oam_i_2, oam_car_1, oam_car_2, oam_d_1, oam_d_2, oam_v_ocv_1, oam_d_3,
-		 oam_r_1, oam_v_ocv_2, oam_r_2, vol_bat, g_vol_bat_hw_ocv, g_d_hw_ocv);
-
-	bm_print(BM_LOG_FULL, "[oam_total] %d,%d,%d,%d,%d,%d,%d,%d,%d,%d\n",
-		 gFG_capacity_by_c, gFG_capacity_by_v, gfg_percent_check_point,
-		 oam_d_1, oam_d_2, oam_d_3, oam_d_4, oam_d_5, gFG_capacity_by_c_init, g_d_hw_ocv);
-
-	bm_print(BM_LOG_CRTI, "[oam_total_s] %d,%d,%d,%d,%d,%d,%d,%d,%d,%d\n", gFG_capacity_by_c,	/* 1 */
-		 gFG_capacity_by_v,	/* 2 */
-		 gfg_percent_check_point,	/* 3 */
-		 (100 - oam_d_1),	/* 4 */
-		 (100 - oam_d_2),	/* 5 */
-		 (100 - oam_d_3),	/* 6 */
-		 (100 - oam_d_4),	/* 9 */
-		 (100 - oam_d_5),	/* 10 */
-		 gFG_capacity_by_c_init,	/* 7 */
-		 (100 - g_d_hw_ocv)	/* 8 */
-	    );
-
-	bm_print(BM_LOG_FULL, "[oam_total_s_err] %d,%d,%d,%d,%d,%d,%d\n",
-		 (gFG_capacity_by_c - gFG_capacity_by_v),
-		 (gFG_capacity_by_c - gfg_percent_check_point),
-		 (gFG_capacity_by_c - (100 - oam_d_1)),
-		 (gFG_capacity_by_c - (100 - oam_d_2)),
-		 (gFG_capacity_by_c - (100 - oam_d_3)),
-		 (gFG_capacity_by_c - (100 - oam_d_4)), (gFG_capacity_by_c - (100 - oam_d_5))
-	    );
-
-	bm_print(BM_LOG_CRTI, "[oam_init_inf] %d, %d, %d, %d, %d, %d\n",
-		 gFG_voltage, (100 - fgauge_read_capacity_by_v(gFG_voltage)), g_rtc_fg_soc,
-		 gFG_DOD0, oam_v_ocv_init, force_get_tbat(KAL_FALSE));
-
-	bm_print(BM_LOG_CRTI, "[oam_run_inf] %d, %d, %d, %d, %d, %d, %d, %d, %d, %d, %d, %d\n",
-		 oam_v_ocv_1, oam_v_ocv_2, vol_bat, oam_i_1, oam_i_2, oam_r_1, oam_r_2, oam_car_1,
-		 oam_car_2, gFG_BATT_CAPACITY_aging, force_get_tbat(KAL_FALSE), oam_d0);
-
-	bm_print(BM_LOG_CRTI, "[oam_result_inf] %d, %d, %d, %d, %d, %d\n",
-		 oam_d_1, oam_d_2, oam_d_3, oam_d_4, oam_d_5, BMT_status.UI_SOC);
 }
 
 /* ============================================================ // */
@@ -3271,8 +2926,6 @@ kal_int32 auxadc_algo_run(void)
 	gFG_voltage = battery_meter_get_battery_voltage(KAL_FALSE);
 	val = fgauge_read_capacity_by_v(gFG_voltage);
 
-	bm_print(BM_LOG_CRTI, "[auxadc_algo_run] %d,%d\n", gFG_voltage, val);
-
 	return val;
 }
 
@@ -3322,10 +2975,6 @@ kal_int32 fgauge_compensate_battery_voltage(kal_int32 ori_voltage)
 
 	gFG_compensate_value = ret_compensate_value;
 
-	bm_print(BM_LOG_FULL,
-		 "[CompensateVoltage] Ori_voltage:%d, compensate_value:%d, gFG_resistance_bat:%d, gFG_current:%d\r\n",
-		 ori_voltage, ret_compensate_value, gFG_resistance_bat, gFG_current);
-
 	return ret_compensate_value;
 }
 
@@ -3346,10 +2995,6 @@ kal_int32 fgauge_compensate_battery_voltage_recursion(kal_int32 ori_voltage,
 			ret_compensate_value = ret_compensate_value - (ret_compensate_value * 2);
 		}
 		temp_voltage_2 = temp_voltage_1 + ret_compensate_value;
-
-		bm_print(BM_LOG_FULL,
-			 "[fgauge_compensate_battery_voltage_recursion] %d,%d,%d,%d\r\n",
-			 temp_voltage_1, temp_voltage_2, gFG_resistance_bat, ret_compensate_value);
 	}
 
 	gFG_resistance_bat = fgauge_read_r_bat_by_v(temp_voltage_2);	/* Ohm */
@@ -3363,8 +3008,6 @@ kal_int32 fgauge_compensate_battery_voltage_recursion(kal_int32 ori_voltage,
 
 	gFG_compensate_value = ret_compensate_value;
 
-	bm_print(BM_LOG_FULL, "[fgauge_compensate_battery_voltage_recursion] %d,%d,%d,%d\r\n",
-		 temp_voltage_1, temp_voltage_2, gFG_resistance_bat, ret_compensate_value);
 
 	return ret_compensate_value;
 }
@@ -3410,8 +3053,6 @@ kal_int32 fgauge_get_dod0(kal_int32 voltage, kal_int32 temperature, kal_bool bOc
 		}
 		/* voltage = voltage + fgauge_compensate_battery_voltage(voltage); //mV */
 		voltage = voltage + fgauge_compensate_battery_voltage_recursion(voltage, 5);	/* mV */
-		bm_print(BM_LOG_CRTI, "[FGADC] compensate_battery_voltage, voltage=%d\r\n",
-			 voltage);
 	}
 	/* If battery voltage is less then mimimum profile voltage, then return 100 */
 	/* If battery voltage is greater then maximum profile voltage, then return 0 */
@@ -3453,12 +3094,8 @@ kal_int32 fgauge_update_dod(void)
 
 	if (gFG_DOD0 > 100) {
 		gFG_DOD0 = 100;
-		bm_print(BM_LOG_FULL, "[fgauge_update_dod] gFG_DOD0 set to 100, gFG_columb=%d\r\n",
-			 gFG_columb);
 	} else if (gFG_DOD0 < 0) {
 		gFG_DOD0 = 0;
-		bm_print(BM_LOG_FULL, "[fgauge_update_dod] gFG_DOD0 set to 0, gFG_columb=%d\r\n",
-			 gFG_columb);
 	} else {
 	}
 
@@ -3466,10 +3103,6 @@ kal_int32 fgauge_update_dod(void)
 
 	if (temperature_change == 1) {
 		gFG_BATT_CAPACITY = fgauge_get_Q_max(gFG_temp);
-		bm_print(BM_LOG_CRTI,
-			 "[fgauge_update_dod] gFG_BATT_CAPACITY=%d, gFG_BATT_CAPACITY_aging=%d, gFG_BATT_CAPACITY_init_high_current=%d\r\n",
-			 gFG_BATT_CAPACITY, gFG_BATT_CAPACITY_aging,
-			 gFG_BATT_CAPACITY_init_high_current);
 		temperature_change = 0;
 	}
 #if 0
@@ -3484,19 +3117,11 @@ kal_int32 fgauge_update_dod(void)
 #else
 	FG_dod_1 = gFG_DOD0 - ((gFG_columb * 100) / gFG_BATT_CAPACITY_aging);
 
-	bm_print(BM_LOG_FULL,
-		 "[fgauge_update_dod] FG_dod_1=%d, adjust_coulomb_counter=%d, gFG_columb=%d, gFG_DOD0=%d, gFG_temp=%d, gFG_BATT_CAPACITY=%d  %d\r\n",
-		 FG_dod_1, adjust_coulomb_counter, gFG_columb, gFG_DOD0, gFG_temp,
-		 gFG_BATT_CAPACITY,gFG_BATT_CAPACITY_aging);
 #endif
 	if (FG_dod_1 > 100) {
 		FG_dod_1 = 100;
-		bm_print(BM_LOG_FULL, "[fgauge_update_dod] FG_dod_1 set to 100, gFG_columb=%d\r\n",
-			 gFG_columb);
 	} else if (FG_dod_1 < 0) {
 		FG_dod_1 = 0;
-		bm_print(BM_LOG_FULL, "[fgauge_update_dod] FG_dod_1 set to 0, gFG_columb=%d\r\n",
-			 gFG_columb);
 	} else {
 	}
 
@@ -3529,7 +3154,6 @@ kal_int32 fgauge_read_capacity(kal_int32 type)
 
 	if (dvalue <= 1) {
 		dvalue = 1;
-		bm_print(BM_LOG_FULL, "[fgauge_read_capacity] dvalue<=1 and set dvalue=1 !!\r\n");
 	}
 
 	return dvalue;
@@ -3551,10 +3175,6 @@ void fg_voltage_mode(void)
 			gfg_percent_check_point--;
 		}
 	}
-
-	bm_print(BM_LOG_FULL,
-		 "[FGADC_VoltageMothod] gFG_capacity_by_v=%d,gfg_percent_check_point=%d\r\n",
-		 gFG_capacity_by_v, gfg_percent_check_point);
 #endif
 }
 
@@ -3608,10 +3228,7 @@ void fgauge_algo_run(void)
 	if (gFG_columb_sum >= 2 * gFG_BATT_CAPACITY_aging) {
 		gFG_battery_cycle++;
 		gFG_columb_sum -= 2 * gFG_BATT_CAPACITY_aging;
-		bm_print(BM_LOG_CRTI, "Update battery cycle count to %d. \r\n", gFG_battery_cycle);
 	}
-	bm_print(BM_LOG_FULL, "@@@ bat cycle count %d, columb sum %d. \r\n", gFG_battery_cycle,
-		 gFG_columb_sum);
 #endif
 
 	// add by willcai 2014-12-18 begin 
@@ -3644,20 +3261,8 @@ void fgauge_algo_run(void)
 		FGbatteryIndex++;
 		if (FGbatteryIndex >= batt_meter_cust_data.fg_vbat_average_size)
 			FGbatteryIndex = 0;
-
-		bm_print(BM_LOG_FULL, "[FG_BUFFER] ");
-		for (i = 0; i < batt_meter_cust_data.fg_vbat_average_size; i++) {
-			bm_print(BM_LOG_FULL, "%d,", FGvbatVoltageBuffer[i]);
-		}
-		bm_print(BM_LOG_FULL, "\r\n");
 	} else {
-		bm_print(BM_LOG_FULL, "[FG] Over MinErrorOffset:V=%d,Avg_V=%d, ", gFG_voltage,
-			 gFG_voltage_AVG);
-
 		gFG_voltage = gFG_voltage_AVG;
-
-		bm_print(BM_LOG_FULL, "Avg_V need write back to V : V=%d,Avg_V=%d.\r\n",
-			 gFG_voltage, gFG_voltage_AVG);
 	}
 	} else  {
 		gFG_Is_offset_init = KAL_FALSE;
@@ -3682,12 +3287,6 @@ void fgauge_algo_run(void)
 		FGCurrentIndex++;
 		if (FGCurrentIndex >= FG_CURRENT_AVERAGE_SIZE)
 			FGCurrentIndex = 0;
-
-		bm_print(BM_LOG_FULL, "[FG_BUFFER] ");
-		for (i=0; i<FG_CURRENT_AVERAGE_SIZE; i++) {
-			bm_print(BM_LOG_FULL, "%d,", FGCurrentBuffer[i]);          
-		}
-		bm_print(BM_LOG_FULL, "\n");
 	}
 #endif
 /* 2. Calculate battery capacity by VBAT */
@@ -3706,13 +3305,6 @@ void fgauge_algo_run(void)
 	}
 
 /* 5. Logging */
-	bm_print(BM_LOG_CRTI,
-		 "[FGADC] %d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d\r\n",
-		 gFG_Is_Charging, gFG_current, gFG_columb, gFG_voltage, gFG_capacity_by_v,
-		 gFG_capacity_by_c, gFG_capacity_by_c_init, gFG_BATT_CAPACITY,
-		 gFG_BATT_CAPACITY_aging, gFG_compensate_value, gFG_ori_voltage,
-		 batt_meter_cust_data.ocv_board_compesate, batt_meter_cust_data.r_fg_board_slope, gFG_voltage_init, batt_meter_cust_data.minerroroffset, gFG_DOD0,
-		 gFG_DOD1, batt_meter_cust_data.car_tune_value, batt_meter_cust_data.aging_tuning_value);
 	update_fg_dbg_tool_value();
 }
 
@@ -3740,9 +3332,6 @@ void fgauge_algo_run_init(void)
 	gFG_voltage = gFG_voltage + fgauge_compensate_battery_voltage_recursion(gFG_voltage, 5);	/* mV */
 	gFG_voltage = gFG_voltage + batt_meter_cust_data.ocv_board_compesate;
 
-	bm_print(BM_LOG_CRTI, "[FGADC] SWOCV : %d,%d,%d,%d,%d,%d\n",
-		 gFG_voltage_init, gFG_voltage, gFG_current, gFG_Is_Charging, gFG_resistance_bat,
-		 gFG_compensate_value);
 #ifdef INIT_SOC_BY_SW_SOC
 	charging_enable = KAL_TRUE;
 	battery_charging_control(CHARGING_CMD_ENABLE,&charging_enable);
@@ -3789,7 +3378,6 @@ void fgauge_algo_run_init(void)
 
 	/* double check */
 	if (gFG_current_auto_detect_R_fg_total <= 0) {
-		bm_print(BM_LOG_CRTI, "gFG_current_auto_detect_R_fg_total=0, need double check\n");
 
 		gFG_current_auto_detect_R_fg_count = 0;
 
@@ -3807,34 +3395,14 @@ void fgauge_algo_run_init(void)
 	if (gFG_current_auto_detect_R_fg_result <= batt_meter_cust_data.current_detect_r_fg) {
 		g_auxadc_solution = 1;
 
-		bm_print(BM_LOG_CRTI,
-			 "[FGADC] Detect NO Rfg, use AUXADC report. (%d=%d/%d)(%d)\r\n",
-			 gFG_current_auto_detect_R_fg_result, gFG_current_auto_detect_R_fg_total,
-			 gFG_current_auto_detect_R_fg_count, g_auxadc_solution);
 	} else {
 		if (g_auxadc_solution == 0) {
 			g_auxadc_solution = 0;
-
-			bm_print(BM_LOG_CRTI,
-				 "[FGADC] Detect Rfg, use FG report. (%d=%d/%d)(%d)\r\n",
-				 gFG_current_auto_detect_R_fg_result,
-				 gFG_current_auto_detect_R_fg_total,
-				 gFG_current_auto_detect_R_fg_count, g_auxadc_solution);
 		} else {
-			bm_print(BM_LOG_CRTI,
-				 "[FGADC] Detect Rfg, but use AUXADC report. due to g_auxadc_solution=%d \r\n",
-				 g_auxadc_solution);
 		}
 	}
 #endif
 /* 5. Logging */
-	bm_print(BM_LOG_CRTI,
-		 "[FGADC] %d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d\r\n",
-		 gFG_Is_Charging, gFG_current, gFG_columb, gFG_voltage, gFG_capacity_by_v,
-		 gFG_capacity_by_c, gFG_capacity_by_c_init, gFG_BATT_CAPACITY,
-		 gFG_BATT_CAPACITY_aging, gFG_compensate_value, gFG_ori_voltage,
-		 batt_meter_cust_data.ocv_board_compesate, batt_meter_cust_data.r_fg_board_slope, gFG_voltage_init, batt_meter_cust_data.minerroroffset, gFG_DOD0,
-		 gFG_DOD1, batt_meter_cust_data.car_tune_value, batt_meter_cust_data.aging_tuning_value);
 	update_fg_dbg_tool_value();
 }
 
@@ -3869,7 +3437,6 @@ void fgauge_initialization(void)
 	while (gFG_current == 0) {
 		ret = battery_meter_ctrl(BATTERY_METER_CMD_GET_HW_FG_CURRENT, &gFG_current);
 		if (i > 10) {
-			bm_print(BM_LOG_CRTI, "[fgauge_initialization] gFG_current == 0\n");
 			break;
 		}
 		i++;
@@ -3887,7 +3454,6 @@ void fgauge_initialization(void)
 	gFG_capacity_by_v = gFG_capacity;
 
 	gFG_DOD0 = 100 - gFG_capacity;
-	bm_print(BM_LOG_CRTI, "[fgauge_initialization] gFG_DOD0 =%d %d \n",gFG_DOD0,gFG_capacity);
 
 	gFG_BATT_CAPACITY = fgauge_get_Q_max(gFG_temp);
 
@@ -3896,9 +3462,6 @@ void fgauge_initialization(void)
 
 	ret = battery_meter_ctrl(BATTERY_METER_CMD_DUMP_REGISTER, NULL);
 
-	bm_print(BM_LOG_CRTI, "[fgauge_initialization] Done HW_OCV:%d FG_Current:%d FG_CAR:%d tmp=%d capacity=%d Qmax=%d\n",
-		gFG_voltage,gFG_current,gFG_columb,gFG_temp,gFG_capacity,gFG_BATT_CAPACITY);
-
 #if defined(FG_BAT_INT)
 	pmic_register_interrupt_callback(41,fg_bat_int_handler);
 	pmic_register_interrupt_callback(40,fg_bat_int_handler);
@@ -3934,8 +3497,6 @@ kal_int32 get_dynamic_period(int first_use, int first_wakeup_time, int battery_c
 
 
 
-	bm_print(BM_LOG_CRTI, "vbat_val=%d, g_spm_timer=%d\n", vbat_val, g_spm_timer);
-
 	return g_spm_timer;
 #else
 
@@ -3980,7 +3541,6 @@ kal_int32 get_dynamic_period(int first_use, int first_wakeup_time, int battery_c
 
 		if (car_sleep > car_wakeup || car_sleep == 0x12345678) {
 			car_sleep = car_wakeup;
-			bm_print(BM_LOG_CRTI, "[get_dynamic_period] reset car_sleep\n");
 		}
 
 		I_sleep = ((car_wakeup - car_sleep) * 3600) / last_time;	/* unit: second */
@@ -4009,11 +3569,6 @@ kal_int32 get_dynamic_period(int first_use, int first_wakeup_time, int battery_c
 		if (ret_val == 0)
 			ret_val = first_wakeup_time;
 
-		bm_print(BM_LOG_CRTI,
-			 "[get_dynamic_period] car_instant=%d, car_wakeup=%d, car_sleep=%d, I_sleep=%d, gFG_BATT_CAPACITY=%d, last_time=%d, new_time=%d\r\n",
-			 car_instant, car_wakeup, car_sleep, I_sleep, gFG_BATT_CAPACITY, last_time,
-			 new_time);
-
 		/* update parameter */
 		car_sleep = car_wakeup;
 		last_time = ret_val;
@@ -4024,7 +3579,6 @@ kal_int32 get_dynamic_period(int first_use, int first_wakeup_time, int battery_c
 		g_spm_timer = batt_meter_cust_data.close_poweroff_wakeup_period;	/* 0.5 min */
 	}
 
-	bm_print(BM_LOG_CRTI, "vbat_val=%d, g_spm_timer=%d\n", vbat_val, g_spm_timer);
 	return g_spm_timer;
 
 #endif
@@ -4122,12 +3676,6 @@ kal_int32 battery_meter_get_charging_current(void)
 		}
 	}
 
-	bm_print(BM_LOG_FULL, "[g_Get_I_Charging:BAT_SENSE]\r\n");
-	for (i = 0; i < repeat; i++) {
-		bm_print(BM_LOG_FULL, "%d,", ADC_BAT_SENSE_tmp[i]);
-	}
-	bm_print(BM_LOG_FULL, "\r\n");
-
 	/* sorting    I_SENSE */
 	for (i = 0; i < repeat; i++) {
 		for (j = i; j < repeat; j++) {
@@ -4139,31 +3687,18 @@ kal_int32 battery_meter_get_charging_current(void)
 		}
 	}
 
-	bm_print(BM_LOG_FULL, "[g_Get_I_Charging:I_SENSE]\r\n");
-	for (i = 0; i < repeat; i++) {
-		bm_print(BM_LOG_FULL, "%d,", ADC_I_SENSE_tmp[i]);
-	}
-	bm_print(BM_LOG_FULL, "\r\n");
-
 	ADC_BAT_SENSE_sum -= ADC_BAT_SENSE_tmp[0];
 	ADC_BAT_SENSE_sum -= ADC_BAT_SENSE_tmp[1];
 	ADC_BAT_SENSE_sum -= ADC_BAT_SENSE_tmp[18];
 	ADC_BAT_SENSE_sum -= ADC_BAT_SENSE_tmp[19];
 	ADC_BAT_SENSE = ADC_BAT_SENSE_sum / (repeat - 4);
 
-	bm_print(BM_LOG_FULL, "[g_Get_I_Charging] ADC_BAT_SENSE=%d\r\n", ADC_BAT_SENSE);
-
 	ADC_I_SENSE_sum -= ADC_I_SENSE_tmp[0];
 	ADC_I_SENSE_sum -= ADC_I_SENSE_tmp[1];
 	ADC_I_SENSE_sum -= ADC_I_SENSE_tmp[18];
 	ADC_I_SENSE_sum -= ADC_I_SENSE_tmp[19];
 	ADC_I_SENSE = ADC_I_SENSE_sum / (repeat - 4);
 
-	bm_print(BM_LOG_FULL, "[g_Get_I_Charging] ADC_I_SENSE(Before)=%d\r\n", ADC_I_SENSE);
-
-
-	bm_print(BM_LOG_FULL, "[g_Get_I_Charging] ADC_I_SENSE(After)=%d\r\n", ADC_I_SENSE);
-
 	if (ADC_I_SENSE > ADC_BAT_SENSE) {
 		ICharging = (ADC_I_SENSE - ADC_BAT_SENSE + g_I_SENSE_offset) * 1000 / batt_meter_cust_data.cust_r_sense;
 	} else {
@@ -4294,9 +3829,6 @@ kal_int32 battery_meter_trans_battery_percentage(kal_bool d_val)
 	if (d_val > 100)
 		d_val = 100;
 
-	bm_print(BM_LOG_CRTI, "[battery_meter_trans_battery_percentage] %d,%d,%d,%d,%d,%d\r\n",
-		 temp_val, C_0mA, C_600mA, d_val_before, d_val, g_currentfactor);
-
 	return d_val;
 }
 #endif
@@ -4304,7 +3836,6 @@ kal_int32 battery_meter_trans_battery_percentage(kal_bool d_val)
 #if defined(FG_BAT_INT)
 kal_int32 battery_meter_set_columb_interrupt(kal_uint32 val)
 {
-	battery_log(BAT_LOG_FULL, "battery_meter_set_columb_interrupt=%d \n",val);
 	battery_meter_ctrl(BATTERY_METER_CMD_SET_COLUMB_INTERRUPT, &val);
 }
 #endif //#if defined(FG_BAT_INT)
@@ -4374,20 +3905,17 @@ kal_int32 battery_meter_initial(void)
 #if defined(SOC_BY_AUXADC)
 		g_auxadc_solution = 1;
 		table_init();
-		bm_print(BM_LOG_CRTI, "[battery_meter_initial] SOC_BY_AUXADC done\n");
 #endif
 
 #if defined(SOC_BY_HW_FG)
 		fgauge_initialization();
 		fgauge_algo_run_init();
-		bm_print(BM_LOG_CRTI, "[battery_meter_initial] SOC_BY_HW_FG done\n");
 #endif
 
 #if defined(SOC_BY_SW_FG)
 		g_auxadc_solution = 1;
 		table_init();
 		oam_init();
-		bm_print(BM_LOG_CRTI, "[battery_meter_initial] SOC_BY_SW_FG done\n");
 #endif
 
 		meter_initilized = KAL_TRUE;
@@ -4428,12 +3956,10 @@ void reset_parameter_car(void)
 void reset_parameter_dod_change(void)
 {
 #if defined(SOC_BY_HW_FG)
-	bm_print(BM_LOG_CRTI, "[FGADC] Update DOD0(%d) by %d \r\n", gFG_DOD0, gFG_DOD1);
 	gFG_DOD0 = gFG_DOD1;
 #endif
 
 #if defined(SOC_BY_SW_FG)
-	bm_print(BM_LOG_CRTI, "[FGADC] Update oam_d0(%d) by %d \r\n", oam_d0, oam_d_5);
 	oam_d0 = oam_d_5;
 	gFG_DOD0 = oam_d0;
 	oam_d_1 = oam_d_5;
@@ -4446,17 +3972,11 @@ void reset_parameter_dod_change(void)
 void reset_parameter_dod_full(kal_uint32 ui_percentage)
 {
 #if defined(SOC_BY_HW_FG)
-	bm_print(BM_LOG_CRTI, "[battery_meter_reset]1 DOD0=%d,DOD1=%d,ui=%d\n", gFG_DOD0, gFG_DOD1,
-		 ui_percentage);
 	gFG_DOD0 = 100 - ui_percentage;
 	gFG_DOD1 = gFG_DOD0;
-	bm_print(BM_LOG_CRTI, "[battery_meter_reset]2 DOD0=%d,DOD1=%d,ui=%d\n", gFG_DOD0, gFG_DOD1,
-		 ui_percentage);
 #endif
 
 #if defined(SOC_BY_SW_FG)
-	bm_print(BM_LOG_CRTI, "[battery_meter_reset]1 oam_d0=%d,oam_d_5=%d,ui=%d\n", oam_d0,
-		 oam_d_5, ui_percentage);
 	oam_d0 = 100 - ui_percentage;
 	gFG_DOD0 = oam_d0;
 	gFG_DOD1 = oam_d0;
@@ -4465,8 +3985,6 @@ void reset_parameter_dod_full(kal_uint32 ui_percentage)
 	oam_d_3 = oam_d0;
 	oam_d_4 = oam_d0;
 	oam_d_5 = oam_d0;
-	bm_print(BM_LOG_CRTI, "[battery_meter_reset]2 oam_d0=%d,oam_d_5=%d,ui=%d\n", oam_d0,
-		 oam_d_5, ui_percentage);
 #endif
 }
 
@@ -4481,8 +3999,6 @@ kal_int32 battery_meter_reset(void)
 	if (KAL_FALSE == g_USE_UI_SOC) {
 		ui_percentage = battery_meter_get_battery_soc();
 		g_USE_UI_SOC = KAL_TRUE;
-		bm_print(BM_LOG_FULL, "[CUST_CAPACITY_OCV2CV_TRANSFORM]Use Battery SOC: %d\n",
-			 ui_percentage);
 	}
 #endif
 
@@ -4579,18 +4095,14 @@ static ssize_t fgadc_log_write(struct file *filp, const char __user *buff,
 	char proc_fgadc_data;
 
 	if ((len <= 0) || copy_from_user(&proc_fgadc_data, buff, 1)) {
-		bm_print(BM_LOG_CRTI, "fgadc_log_write error.\n");
 		return -EFAULT;
 	}
 
 	if (proc_fgadc_data == '1') {
-		bm_print(BM_LOG_CRTI, "enable FGADC driver log system\n");
 		Enable_FGADC_LOG = 1;
 	} else if (proc_fgadc_data == '2') {
-		bm_print(BM_LOG_CRTI, "enable FGADC driver log system:2\n");
 		Enable_FGADC_LOG = 2;
 	} else {
-		bm_print(BM_LOG_CRTI, "Disable FGADC driver log system\n");
 		Enable_FGADC_LOG = 0;
 	}
 
@@ -4607,7 +4119,6 @@ int init_proc_log_fg(void)
 
 #if 1
 	proc_create("fgadc_log", 0644, NULL, &fgadc_proc_fops);
-	bm_print(BM_LOG_CRTI, "proc_create fgadc_proc_fops\n");
 #else
 	proc_entry_fgadc = create_proc_entry("fgadc_log", 0644, NULL);
 
@@ -4670,7 +4181,6 @@ kal_int32 get_battery_aging_factor(kal_int32 cycle)
 
 static ssize_t show_FG_Battery_Cycle(struct device *dev, struct device_attribute *attr, char *buf)
 {
-	bm_print(BM_LOG_CRTI, "[FG] gFG_battery_cycle  : %d\n", gFG_battery_cycle);
 	return sprintf(buf, "%d\n", gFG_battery_cycle);
 }
 
@@ -4685,7 +4195,6 @@ static ssize_t store_FG_Battery_Cycle(struct device *dev, struct device_attribut
 #endif
 
 	if (1 == sscanf(buf, "%d", &cycle)) {
-		bm_print(BM_LOG_CRTI, "[FG] update battery cycle count: %d\n", cycle);
 		gFG_battery_cycle = cycle;
 
 #ifdef CUSTOM_BATTERY_CYCLE_AGING_DATA
@@ -4693,17 +4202,13 @@ static ssize_t store_FG_Battery_Cycle(struct device *dev, struct device_attribut
 
 		factor = get_battery_aging_factor(gFG_battery_cycle);
 		if (factor > 0 && factor < 100) {
-			bm_print(BM_LOG_CRTI, "[FG] cycle count to aging factor %d\n", factor);
 			aging_capacity = gFG_BATT_CAPACITY * factor / 100;
 			if (aging_capacity < gFG_BATT_CAPACITY_aging) {
-				bm_print(BM_LOG_CRTI, "[FG] update gFG_BATT_CAPACITY_aging to %d\n",
-					 aging_capacity);
 				gFG_BATT_CAPACITY_aging = aging_capacity;
 			}
 		}
 #endif
 	} else {
-		bm_print(BM_LOG_CRTI, "[FG] format error!\n");
 	}
 	return size;
 }
@@ -4715,7 +4220,6 @@ static DEVICE_ATTR(FG_Battery_Cycle, 0664, show_FG_Battery_Cycle, store_FG_Batte
 static ssize_t show_FG_Max_Battery_Voltage(struct device *dev, struct device_attribute *attr,
 					   char *buf)
 {
-	bm_print(BM_LOG_CRTI, "[FG] gFG_max_voltage  : %d\n", gFG_max_voltage);
 	return sprintf(buf, "%d\n", gFG_max_voltage);
 }
 
@@ -4725,7 +4229,6 @@ static ssize_t store_FG_Max_Battery_Voltage(struct device *dev, struct device_at
 	kal_int32 voltage;
 	if (1 == sscanf(buf, "%d", &voltage)) {
 		if (voltage > gFG_max_voltage) {
-			bm_print(BM_LOG_CRTI, "[FG] update battery max voltage: %d\n", voltage);
 			gFG_max_voltage = voltage;
 		}
 	} else {
@@ -4742,7 +4245,6 @@ static DEVICE_ATTR(FG_Max_Battery_Voltage, 0664, show_FG_Max_Battery_Voltage,
 static ssize_t show_FG_Min_Battery_Voltage(struct device *dev, struct device_attribute *attr,
 					   char *buf)
 {
-	bm_print(BM_LOG_CRTI, "[FG] gFG_min_voltage  : %d\n", gFG_min_voltage);
 	return sprintf(buf, "%d\n", gFG_min_voltage);
 }
 
@@ -4752,11 +4254,9 @@ static ssize_t store_FG_Min_Battery_Voltage(struct device *dev, struct device_at
 	kal_int32 voltage;
 	if (1 == sscanf(buf, "%d", &voltage)) {
 		if (voltage < gFG_min_voltage) {
-			bm_print(BM_LOG_CRTI, "[FG] update battery min voltage: %d\n", voltage);
 			gFG_min_voltage = voltage;
 		}
 	} else {
-		bm_print(BM_LOG_CRTI, "[FG] format error!\n");
 	}
 	return size;
 }
@@ -4769,7 +4269,6 @@ static DEVICE_ATTR(FG_Min_Battery_Voltage, 0664, show_FG_Min_Battery_Voltage,
 static ssize_t show_FG_Max_Battery_Current(struct device *dev, struct device_attribute *attr,
 					   char *buf)
 {
-	bm_print(BM_LOG_CRTI, "[FG] gFG_max_current  : %d\n", gFG_max_current);
 	return sprintf(buf, "%d\n", gFG_max_current);
 }
 
@@ -4779,7 +4278,6 @@ static ssize_t store_FG_Max_Battery_Current(struct device *dev, struct device_at
 	kal_int32 bat_current;
 	if (1 == sscanf(buf, "%d", &bat_current)) {
 		if (bat_current > gFG_max_current) {
-			bm_print(BM_LOG_CRTI, "[FG] update battery max current: %d\n", bat_current);
 			gFG_max_current = bat_current;
 		}
 	} else {
@@ -4796,7 +4294,6 @@ static DEVICE_ATTR(FG_Max_Battery_Current, 0664, show_FG_Max_Battery_Current,
 static ssize_t show_FG_Min_Battery_Current(struct device *dev, struct device_attribute *attr,
 					   char *buf)
 {
-	bm_print(BM_LOG_CRTI, "[FG] gFG_min_current  : %d\n", gFG_min_current);
 	return sprintf(buf, "%d\n", gFG_min_current);
 }
 
@@ -4806,7 +4303,6 @@ static ssize_t store_FG_Min_Battery_Current(struct device *dev, struct device_at
 	kal_int32 bat_current;
 	if (1 == sscanf(buf, "%d", &bat_current)) {
 		if (bat_current < gFG_min_current) {
-			bm_print(BM_LOG_CRTI, "[FG] update battery min current: %d\n", bat_current);
 			gFG_min_current = bat_current;
 		}
 	} else {
@@ -4823,7 +4319,6 @@ static DEVICE_ATTR(FG_Min_Battery_Current, 0664, show_FG_Min_Battery_Current,
 static ssize_t show_FG_Max_Battery_Temperature(struct device *dev, struct device_attribute *attr,
 					       char *buf)
 {
-	bm_print(BM_LOG_CRTI, "[FG] gFG_max_temperature  : %d\n", gFG_max_temperature);
 	return sprintf(buf, "%d\n", gFG_max_temperature);
 }
 
@@ -4833,7 +4328,6 @@ static ssize_t store_FG_Max_Battery_Temperature(struct device *dev, struct devic
 	kal_int32 temp;
 	if (1 == sscanf(buf, "%d", &temp)) {
 		if (temp > gFG_max_temperature) {
-			bm_print(BM_LOG_CRTI, "[FG] update battery max temp: %d\n", temp);
 			gFG_max_temperature = temp;
 		}
 	} else {
@@ -4850,7 +4344,6 @@ static DEVICE_ATTR(FG_Max_Battery_Temperature, 0664, show_FG_Max_Battery_Tempera
 static ssize_t show_FG_Min_Battery_Temperature(struct device *dev, struct device_attribute *attr,
 					       char *buf)
 {
-	bm_print(BM_LOG_CRTI, "[FG] gFG_min_temperature  : %d\n", gFG_min_temperature);
 	return sprintf(buf, "%d\n", gFG_min_temperature);
 }
 
@@ -4860,7 +4353,6 @@ static ssize_t store_FG_Min_Battery_Temperature(struct device *dev, struct devic
 	kal_int32 temp;
 	if (1 == sscanf(buf, "%d", &temp)) {
 		if (temp < gFG_min_temperature) {
-			bm_print(BM_LOG_CRTI, "[FG] update battery min temp: %d\n", temp);
 			gFG_min_temperature = temp;
 		}
 	} else {
@@ -4876,7 +4368,6 @@ static DEVICE_ATTR(FG_Min_Battery_Temperature, 0664, show_FG_Min_Battery_Tempera
 
 static ssize_t show_FG_Aging_Factor(struct device *dev, struct device_attribute *attr, char *buf)
 {
-	bm_print(BM_LOG_CRTI, "[FG] gFG_aging_factor  : %d\n", gFG_aging_factor);
 	return sprintf(buf, "%d\n", gFG_aging_factor);
 }
 
@@ -4888,18 +4379,11 @@ static ssize_t store_FG_Aging_Factor(struct device *dev, struct device_attribute
 
 	if (1 == sscanf(buf, "%d", &factor)) {
 		if (factor <= 100 && factor >= 0) {
-			bm_print(BM_LOG_CRTI,
-				 "[FG] update battery aging factor: old(%d), new(%d)\n",
-				 gFG_aging_factor, factor);
-
 			gFG_aging_factor = factor;
 
 			if (gFG_aging_factor != 100) {
 				aging_capacity = gFG_BATT_CAPACITY * gFG_aging_factor / 100;
 				if (aging_capacity < gFG_BATT_CAPACITY_aging) {
-					bm_print(BM_LOG_CRTI,
-						 "[FG] update gFG_BATT_CAPACITY_aging to %d\n",
-						 aging_capacity);
 					gFG_BATT_CAPACITY_aging = aging_capacity;
 				}
 			}
@@ -4934,7 +4418,6 @@ static ssize_t show_FG_Current(struct device *dev, struct device_attribute *attr
 		fg_current_inout_battery = val;
 	}
 
-	bm_print(BM_LOG_CRTI, "[FG] gFG_current_inout_battery : %d\n", fg_current_inout_battery);
 	return sprintf(buf, "%d\n", fg_current_inout_battery);
 }
 
@@ -4950,7 +4433,6 @@ static DEVICE_ATTR(FG_Current, 0664, show_FG_Current, store_FG_Current);
 static ssize_t show_FG_g_fg_dbg_bat_volt(struct device *dev, struct device_attribute *attr,
 					 char *buf)
 {
-	bm_print(BM_LOG_CRTI, "[FG] g_fg_dbg_bat_volt : %d\n", g_fg_dbg_bat_volt);
 	return sprintf(buf, "%d\n", g_fg_dbg_bat_volt);
 }
 
@@ -4966,7 +4448,6 @@ static DEVICE_ATTR(FG_g_fg_dbg_bat_volt, 0664, show_FG_g_fg_dbg_bat_volt,
 static ssize_t show_FG_g_fg_dbg_bat_current(struct device *dev, struct device_attribute *attr,
 					    char *buf)
 {
-	bm_print(BM_LOG_CRTI, "[FG] g_fg_dbg_bat_current : %d\n", g_fg_dbg_bat_current);
 	return sprintf(buf, "%d\n", g_fg_dbg_bat_current);
 }
 
@@ -4982,7 +4463,6 @@ static DEVICE_ATTR(FG_g_fg_dbg_bat_current, 0664, show_FG_g_fg_dbg_bat_current,
 static ssize_t show_FG_g_fg_dbg_bat_zcv(struct device *dev, struct device_attribute *attr,
 					char *buf)
 {
-	bm_print(BM_LOG_CRTI, "[FG] g_fg_dbg_bat_zcv : %d\n", g_fg_dbg_bat_zcv);
 	return sprintf(buf, "%d\n", g_fg_dbg_bat_zcv);
 }
 
@@ -4997,7 +4477,6 @@ static DEVICE_ATTR(FG_g_fg_dbg_bat_zcv, 0664, show_FG_g_fg_dbg_bat_zcv, store_FG
 static ssize_t show_FG_g_fg_dbg_bat_temp(struct device *dev, struct device_attribute *attr,
 					 char *buf)
 {
-	bm_print(BM_LOG_CRTI, "[FG] g_fg_dbg_bat_temp : %d\n", g_fg_dbg_bat_temp);
 	return sprintf(buf, "%d\n", g_fg_dbg_bat_temp);
 }
 
@@ -5012,7 +4491,6 @@ static DEVICE_ATTR(FG_g_fg_dbg_bat_temp, 0664, show_FG_g_fg_dbg_bat_temp,
 /* ------------------------------------------------------------------------------------------- */
 static ssize_t show_FG_g_fg_dbg_bat_r(struct device *dev, struct device_attribute *attr, char *buf)
 {
-	bm_print(BM_LOG_CRTI, "[FG] g_fg_dbg_bat_r : %d\n", g_fg_dbg_bat_r);
 	return sprintf(buf, "%d\n", g_fg_dbg_bat_r);
 }
 
@@ -5027,7 +4505,6 @@ static DEVICE_ATTR(FG_g_fg_dbg_bat_r, 0664, show_FG_g_fg_dbg_bat_r, store_FG_g_f
 static ssize_t show_FG_g_fg_dbg_bat_car(struct device *dev, struct device_attribute *attr,
 					char *buf)
 {
-	bm_print(BM_LOG_CRTI, "[FG] g_fg_dbg_bat_car : %d\n", g_fg_dbg_bat_car);
 	return sprintf(buf, "%d\n", g_fg_dbg_bat_car);
 }
 
@@ -5042,7 +4519,6 @@ static DEVICE_ATTR(FG_g_fg_dbg_bat_car, 0664, show_FG_g_fg_dbg_bat_car, store_FG
 static ssize_t show_FG_g_fg_dbg_bat_qmax(struct device *dev, struct device_attribute *attr,
 					 char *buf)
 {
-	bm_print(BM_LOG_CRTI, "[FG] g_fg_dbg_bat_qmax : %d\n", g_fg_dbg_bat_qmax);
 	return sprintf(buf, "%d\n", g_fg_dbg_bat_qmax);
 }
 
@@ -5057,7 +4533,6 @@ static DEVICE_ATTR(FG_g_fg_dbg_bat_qmax, 0664, show_FG_g_fg_dbg_bat_qmax,
 /* ------------------------------------------------------------------------------------------- */
 static ssize_t show_FG_g_fg_dbg_d0(struct device *dev, struct device_attribute *attr, char *buf)
 {
-	bm_print(BM_LOG_CRTI, "[FG] g_fg_dbg_d0 : %d\n", g_fg_dbg_d0);
 	return sprintf(buf, "%d\n", g_fg_dbg_d0);
 }
 
@@ -5071,7 +4546,6 @@ static DEVICE_ATTR(FG_g_fg_dbg_d0, 0664, show_FG_g_fg_dbg_d0, store_FG_g_fg_dbg_
 /* ------------------------------------------------------------------------------------------- */
 static ssize_t show_FG_g_fg_dbg_d1(struct device *dev, struct device_attribute *attr, char *buf)
 {
-	bm_print(BM_LOG_CRTI, "[FG] g_fg_dbg_d1 : %d\n", g_fg_dbg_d1);
 	return sprintf(buf, "%d\n", g_fg_dbg_d1);
 }
 
@@ -5086,7 +4560,6 @@ static DEVICE_ATTR(FG_g_fg_dbg_d1, 0664, show_FG_g_fg_dbg_d1, store_FG_g_fg_dbg_
 static ssize_t show_FG_g_fg_dbg_percentage(struct device *dev, struct device_attribute *attr,
 					   char *buf)
 {
-	bm_print(BM_LOG_CRTI, "[FG] g_fg_dbg_percentage : %d\n", g_fg_dbg_percentage);
 	return sprintf(buf, "%d\n", g_fg_dbg_percentage);
 }
 
@@ -5102,7 +4575,6 @@ static DEVICE_ATTR(FG_g_fg_dbg_percentage, 0664, show_FG_g_fg_dbg_percentage,
 static ssize_t show_FG_g_fg_dbg_percentage_fg(struct device *dev, struct device_attribute *attr,
 					      char *buf)
 {
-	bm_print(BM_LOG_CRTI, "[FG] g_fg_dbg_percentage_fg : %d\n", g_fg_dbg_percentage_fg);
 	return sprintf(buf, "%d\n", g_fg_dbg_percentage_fg);
 }
 
@@ -5118,8 +4590,6 @@ static DEVICE_ATTR(FG_g_fg_dbg_percentage_fg, 0664, show_FG_g_fg_dbg_percentage_
 static ssize_t show_FG_g_fg_dbg_percentage_voltmode(struct device *dev,
 						    struct device_attribute *attr, char *buf)
 {
-	bm_print(BM_LOG_CRTI, "[FG] g_fg_dbg_percentage_voltmode : %d\n",
-		 g_fg_dbg_percentage_voltmode);
 	return sprintf(buf, "%d\n", g_fg_dbg_percentage_voltmode);
 }
 
@@ -5142,8 +4612,6 @@ static int battery_meter_probe(struct platform_device *dev)
 #endif
 	battery_meter_ctrl = bm_ctrl_cmd;
 
-	bm_print(BM_LOG_CRTI, "[battery_meter_probe] probe\n");
-
 	batt_init_cust_data();
 
 	/* select battery meter control method */
@@ -5197,13 +4665,11 @@ static int battery_meter_probe(struct platform_device *dev)
 
 static int battery_meter_remove(struct platform_device *dev)
 {
-	bm_print(BM_LOG_CRTI, "[battery_meter_remove]\n");
 	return 0;
 }
 
 static void battery_meter_shutdown(struct platform_device *dev)
 {
-	bm_print(BM_LOG_CRTI, "[battery_meter_shutdown]\n");
 }
 
 static int battery_meter_suspend(struct platform_device *dev, pm_message_t state)
@@ -5231,7 +4697,6 @@ static int battery_meter_suspend(struct platform_device *dev, pm_message_t state
 
 	/* -- hibernation path */
 	if (state.event == PM_EVENT_FREEZE) {
-		bm_print(BM_LOG_CRTI, "[%s] %p:%p\n", __func__, battery_meter_ctrl, &bm_ctrl_cmd);
 		battery_meter_ctrl = bm_ctrl_cmd;
 	}
 	/* -- end of hibernation path */
@@ -5259,7 +4724,6 @@ static int battery_meter_suspend(struct platform_device *dev, pm_message_t state
 		
 	}
 #endif
-	bm_print(BM_LOG_CRTI, "[battery_meter_suspend]\n");
 	return 0;
 }
 
@@ -5281,7 +4745,6 @@ static void battery_aging_check(void)
 
 	battery_meter_ctrl(BATTERY_METER_CMD_GET_HW_OCV, &hw_ocv_after_sleep);
 	vbat = battery_meter_get_battery_voltage(KAL_TRUE);
-	bm_print(BM_LOG_CRTI, "@@@ HW_OCV_D3=%d, HW_OCV_D1=%d, VBAT=%d\n", hw_ocv_after_sleep, g_hw_ocv_before_sleep, vbat);
 
 	// gauge correct
 	battery_meter_ctrl(BATTERY_METER_CMD_GET_HW_FG_CAR, &columb_after_sleep); //update columb counter to get DOD_now.
@@ -5290,7 +4753,6 @@ static void battery_aging_check(void)
 	suspend_time += abs(xts.tv_sec - xts_before_sleep.tv_sec);
 	_g_bat_sleep_total_time += abs(xts.tv_sec - xts_before_sleep.tv_sec);
 #if defined (MD_SLEEP_CURRENT_CHECK)
-	bm_print(BM_LOG_CRTI, "sleeptime=(%d)s, car_be = %d, car_af = %d\n", suspend_time, columb_before_sleep, columb_after_sleep);
 	if (columb_before_sleep == 0x123456) {
 		columb_before_sleep = columb_after_sleep;
 		suspend_time = 0;
@@ -5299,15 +4761,12 @@ static void battery_aging_check(void)
 	if (hw_ocv_after_sleep != g_hw_ocv_before_sleep) {
 		if(suspend_time > OCV_RECOVER_TIME) {   //35 mins
 			suspend_current = abs(columb_after_sleep - columb_before_sleep) * 3600 / suspend_time;
-			bm_print(BM_LOG_CRTI, "[aging check]sleeptime = %d, HW_OCV_D3=%d, car_be = %d, car_af = %d, suspend cur = %d ", suspend_time, hw_ocv_after_sleep, columb_before_sleep, columb_after_sleep, suspend_current);
 			if (suspend_current < 10) { //10mA
 				columb_before_sleep = columb_after_sleep;
 				suspend_time = 0;
-				bm_print(BM_LOG_CRTI, "1\n");
 			} else {
 				columb_before_sleep = columb_after_sleep;
 				suspend_time = 0;
-				bm_print(BM_LOG_CRTI, "0\n");
 				return ;
 			}
 		} else {
@@ -5329,7 +4788,6 @@ static void battery_aging_check(void)
 
 			if (fgauge_read_d_by_v(aging_ocv_1) > DOD1_ABOVE_THRESHOLD) {
 				aging_ocv_1 = 0;
-				bm_print(BM_LOG_CRTI, "[aging check] reset and find next aging_ocv1 for better precision\n");
 			}
 		} else if (aging_ocv_2 == 0) {
 			aging_ocv_2 = hw_ocv_after_sleep;
@@ -5338,7 +4796,6 @@ static void battery_aging_check(void)
 
 			if (fgauge_read_d_by_v(aging_ocv_2) < DOD2_BELOW_THRESHOLD) {
 				aging_ocv_2 = 0;
-				bm_print(BM_LOG_CRTI, "[aging check] reset and find next aging_ocv2 for better precision\n");
 			}
 		} else {
 			aging_ocv_1 = aging_ocv_2;
@@ -5367,11 +4824,6 @@ static void battery_aging_check(void)
 			if (gFG_BATT_CAPACITY > qmax_aging
 				&& ((gFG_BATT_CAPACITY - qmax_aging) >
 				(gFG_BATT_CAPACITY / (100 - MIN_AGING_FACTOR)))) {
-				bm_print(BM_LOG_CRTI,
-					"[aging check] before apply aging, qmax_aging(%d) qmax_now(%d) ocv1(%d) dod1(%d) car1(%d) ocv2(%d) dod2(%d) car2(%d)\n",
-					qmax_aging, gFG_BATT_CAPACITY, aging_ocv_1,
-					aging_dod_1, aging_car_1, aging_ocv_2, aging_dod_2,
-					aging_car_2);
 
 #ifdef MTK_BATTERY_LIFETIME_DATA_SUPPORT
 				gFG_aging_factor =
@@ -5380,42 +4832,22 @@ static void battery_aging_check(void)
 #endif
 
 				if (gFG_BATT_CAPACITY_aging > qmax_aging) {
-					bm_print(BM_LOG_CRTI,
-						"[aging check] new qmax_aging %d old qmax_aging %d\n",
-						qmax_aging, gFG_BATT_CAPACITY_aging);
 					gFG_BATT_CAPACITY_aging = qmax_aging;
 					gFG_DOD0 = aging_dod_2;
 					gFG_DOD1 = gFG_DOD0;
 					reset_parameter_car();
 				} else {
-					bm_print(BM_LOG_CRTI,
-						"[aging check] current qmax_aging %d is smaller than calculated qmax_aging %d\n",
-						gFG_BATT_CAPACITY_aging, qmax_aging);
 				}
 			} else {
 				aging_ocv_2 = 0;
-				bm_print(BM_LOG_CRTI,
-					"[aging check] show no degrade, qmax_aging(%d) qmax_now(%d) ocv1(%d) dod1(%d) car1(%d) ocv2(%d) dod2(%d) car2(%d)\n",
-					qmax_aging, gFG_BATT_CAPACITY, aging_ocv_1,
-					aging_dod_1, aging_car_1, aging_ocv_2, aging_dod_2,
-					aging_car_2);
-				bm_print(BM_LOG_CRTI,
-					"[aging check] reset and find next aging_ocv2\n");
 			}
 		} else {
 			aging_ocv_2 = 0;
-			bm_print(BM_LOG_CRTI,
-				"[aging check] reset and find next aging_ocv2\n");
 		}
-		bm_print(BM_LOG_CRTI,
-			"[aging check] qmax_aging(%d) qmax_now(%d) ocv1(%d) dod1(%d) car1(%d) ocv2(%d) dod2(%d) car2(%d)\n",
-			qmax_aging, gFG_BATT_CAPACITY, aging_ocv_1, aging_dod_1,
-			aging_car_1, aging_ocv_2, aging_dod_2, aging_car_2);
 	}
 #if defined (MD_SLEEP_CURRENT_CHECK)
 	/* self-discharging */
 	if (hw_ocv_after_sleep < vbat) {
-		bm_print(BM_LOG_CRTI, "Ignore HW_OCV : smaller than VBAT\n");
 	} else {
 
 		DOD_hwocv = fgauge_read_d_by_v(hw_ocv_after_sleep);
@@ -5428,16 +4860,7 @@ static void battery_aging_check(void)
 			gFG_DOD0 = DOD_hwocv;
 			gFG_DOD1 = gFG_DOD0;
 			reset_parameter_car();
-			bm_print(BM_LOG_CRTI,
-				 "[self-discharge check] reset to HWOCV. dod_ocv(%d) dod_now(%d)\n",
-				 DOD_hwocv, DOD_now);
 		}
-		bm_print(BM_LOG_CRTI, "[self-discharge check] dod_ocv(%d) dod_now(%d)\n",
-			 DOD_hwocv, DOD_now);
-		bm_print(BM_LOG_CRTI,
-			 "be_ocv=(%d), af_ocv=(%d), D0=(%d), car=(%d)\n",
-			 g_hw_ocv_before_sleep, hw_ocv_after_sleep,
-			 gFG_DOD0, gFG_columb);
 	}
 #endif
 }
@@ -5464,9 +4887,6 @@ static int battery_meter_resume(struct platform_device *dev)
 
 	get_xtime_and_monotonic_and_sleep_offset(&xts, &tom, &rtc_time_after_sleep);
 	_g_bat_sleep_total_time += rtc_time_after_sleep.tv_sec - g_rtc_time_before_sleep.tv_sec;
-	battery_log(BAT_LOG_CRTI,
-			    "[battery_meter_resume] sleep time = %d, g_spm_timer = %d\n",
-			    _g_bat_sleep_total_time, g_spm_timer);
 
 #if defined(SOC_BY_HW_FG)
 #ifdef MTK_ENABLE_AGING_ALGORITHM
@@ -5509,7 +4929,6 @@ static int battery_meter_resume(struct platform_device *dev)
 	getrawmonotonic(&now_time);
 	if (now_time.tv_sec - last_oam_run_time.tv_sec > 30) {
 		bat_spm_timeout = true;
-		bm_print(BM_LOG_CRTI,"[battery_meter] trigger oam_run() for 30s threshold.\n");
 	}
 
 	/* try to calibrate D0 by HWOCV if battery has no loading for more than 30mins */
@@ -5527,25 +4946,17 @@ static int battery_meter_resume(struct platform_device *dev)
 			oam_car_1 = 0;
 			oam_car_2 = 0;
 
-			bm_print(BM_LOG_CRTI,
-				"[self-discharge check] reset to HWOCV. dod_ocv(%d) dod_now(%d)\n",
-				DOD_hwocv, oam_d_2);
 		} else {
 			oam_car_1 = oam_car_1 + (40* (rtc_time_after_sleep.tv_sec - g_rtc_time_before_sleep.tv_sec)/3600); //0.1mAh
 			oam_car_2 = oam_car_2 + (40* (rtc_time_after_sleep.tv_sec - g_rtc_time_before_sleep.tv_sec)/3600); //0.1mAh
 		}
 
-		bm_print(BM_LOG_CRTI,"[self-discharge check] dod_ocv(%d) dod_now(%d)\n", DOD_hwocv, oam_d_2);
 	}else {
 		oam_car_1 = oam_car_1 + (40* (rtc_time_after_sleep.tv_sec - g_rtc_time_before_sleep.tv_sec)/3600); //0.1mAh
 		oam_car_2 = oam_car_2 + (40* (rtc_time_after_sleep.tv_sec - g_rtc_time_before_sleep.tv_sec)/3600); //0.1mAh
 	}
 #endif
 
-	bm_print(BM_LOG_CRTI,
-		 "sleeptime=(%d)s, be_ocv=(%d), af_ocv=(%d), D0=(%d), car1=(%d), car2=(%d)\n",
-		 _g_bat_sleep_total_time,
-		 g_hw_ocv_before_sleep, hw_ocv_after_sleep, oam_d0, oam_car_1, oam_car_2);
 #endif
 #endif
 
@@ -5556,7 +4967,6 @@ static int battery_meter_resume(struct platform_device *dev)
 #endif
 #endif //#if defined(FG_BAT_INT)
 
-	bm_print(BM_LOG_CRTI, "[battery_meter_resume]\n");
 	return 0;
 }
 
@@ -5592,8 +5002,6 @@ static int battery_meter_dts_probe(struct platform_device *dev)
 	int ret = 0;
 	/* struct proc_dir_entry *entry = NULL; */
 
-	battery_log(BAT_LOG_CRTI, "******** battery_meter_dts_probe!! ********\n");
-
 	battery_meter_device.dev.of_node = dev->dev.of_node;
 	ret = platform_device_register(&battery_meter_device);
     if (ret) {
@@ -5628,23 +5036,17 @@ static int __init battery_meter_init(void)
 #else
 	ret = platform_device_register(&battery_meter_device);
 	if (ret) {
-		bm_print(BM_LOG_CRTI, "[battery_meter_driver] Unable to device register(%d)\n",
-			 ret);
 		return ret;
 	}
 #endif
 
 	ret = platform_driver_register(&battery_meter_driver);
 	if (ret) {
-		bm_print(BM_LOG_CRTI, "[battery_meter_driver] Unable to register driver (%d)\n",
-			 ret);
 		return ret;
 	}
 #ifdef CONFIG_OF
 	ret = platform_driver_register(&battery_meter_dts_driver);
 #endif
-	bm_print(BM_LOG_CRTI, "[battery_meter_driver] Initialization : DONE\n");
-
 	return 0;
 
 }
diff --git a/drivers/power/mediatek/battery_meter_fg_20.c b/drivers/power/mediatek/battery_meter_fg_20.c
index 3b1ec0734..3b580f6eb 100755
--- a/drivers/power/mediatek/battery_meter_fg_20.c
+++ b/drivers/power/mediatek/battery_meter_fg_20.c
@@ -557,8 +557,6 @@ void fgauge_get_profile_id(void)
 	ret = IMM_GetOneChannelValue_Cali(BATTERY_ID_CHANNEL_NUM, &id_volt);
 	if (ret != 0)
 		bm_print(BM_LOG_CRTI, "[fgauge_get_profile_id]id_volt read fail\n");
-	else
-		bm_print(BM_LOG_CRTI, "[fgauge_get_profile_id]id_volt = %d\n", id_volt);
 
 	if ((sizeof(g_battery_id_voltage) / sizeof(kal_int32)) != TOTAL_BATTERY_NUMBER) {
 		bm_print(BM_LOG_CRTI, "[fgauge_get_profile_id]error! voltage range incorrect!\n");
@@ -573,8 +571,6 @@ void fgauge_get_profile_id(void)
 			g_fg_battery_id = TOTAL_BATTERY_NUMBER - 1;
 		}
 	}
-
-	bm_print(BM_LOG_CRTI, "[fgauge_get_profile_id]Battery id (%d)\n", g_fg_battery_id);
 }
 #elif defined(MTK_GET_BATTERY_ID_BY_GPIO)
 void fgauge_get_profile_id(void)
@@ -767,8 +763,6 @@ int __batt_init_cust_data_from_cust_header(void)
 
 int __batt_meter_init_cust_data_from_cust_header(struct platform_device *dev)
 {
-	bm_print(BM_LOG_CRTI, "__batt_meter_init_cust_data_from_cust_header\n");
-
 	/* cust_battery_meter_table.h */
 
 	batt_meter_table_cust_data.battery_profile_t0_size = sizeof(battery_profile_t0) / sizeof(BATTERY_PROFILE_STRUC);
@@ -988,276 +982,206 @@ int __batt_meter_init_cust_data_from_dt(struct platform_device *dev)
 	struct device_node *np = dev->dev.of_node;
 	u32 val;
 
-    bm_print(BM_LOG_CRTI, "__batt_meter_init_cust_data_from_dt\n");
-
 	if (of_property_read_u32(np, "hw_fg_force_use_sw_ocv", &val)){
 		batt_meter_cust_data.hw_fg_force_use_sw_ocv = (int)val;
-		bm_print(BM_LOG_CRTI, "Get hw_fg_force_use_sw_ocv: %d\n",
-			batt_meter_cust_data.hw_fg_force_use_sw_ocv);
 	}else{
 		bm_print(BM_LOG_CRTI, "Get hw_fg_force_use_sw_ocv failed\n");
 	}
 
 	if (of_property_read_u32(np, "r_bat_sense", &val)){
 		batt_meter_cust_data.r_bat_sense = (int)val;
-		bm_print(BM_LOG_CRTI, "Get r_bat_sense: %d\n",
-			batt_meter_cust_data.r_bat_sense);
 	}else{
 		bm_print(BM_LOG_CRTI, "Get r_bat_sense failed\n");
 	}
 
 	if (of_property_read_u32(np, "r_i_sense", &val)){
 		batt_meter_cust_data.r_i_sense = (int)val;
-		bm_print(BM_LOG_CRTI, "Get r_i_sense: %d\n",
-			batt_meter_cust_data.r_i_sense);
 	}else{
 		bm_print(BM_LOG_CRTI, "Get r_i_sense failed\n");
 	}
 
 	if (of_property_read_u32(np, "r_charger_1", &val)){
 		batt_meter_cust_data.r_charger_1 = (int)val;
-		bm_print(BM_LOG_CRTI, "Get r_charger_1: %d\n",
-			batt_meter_cust_data.r_charger_1);
 	}else{
 		bm_print(BM_LOG_CRTI, "Get r_charger_1 failed\n");
 	}
 
 	if (of_property_read_u32(np, "r_charger_2", &val)){
 		batt_meter_cust_data.r_charger_2 = (int)val;
-		bm_print(BM_LOG_CRTI, "Get r_charger_2: %d\n",
-			batt_meter_cust_data.r_charger_2);
 	}else{
 		bm_print(BM_LOG_CRTI, "Get r_charger_2 failed\n");
 	}
 
 	if (of_property_read_u32(np, "temperature_t0", &val)){
 		batt_meter_cust_data.temperature_t0 = (int)val;
-		bm_print(BM_LOG_CRTI, "Get temperature_t0: %d\n",
-			batt_meter_cust_data.temperature_t0);
 	}else{
 		bm_print(BM_LOG_CRTI, "Get temperature_t0 failed\n");
 	}
 
 	if (of_property_read_u32(np, "temperature_t1", &val)){
 		batt_meter_cust_data.temperature_t1 = (int)val;
-		bm_print(BM_LOG_CRTI, "Get temperature_t1: %d\n",
-			batt_meter_cust_data.temperature_t1);
 	}else{
 		bm_print(BM_LOG_CRTI, "Get temperature_t1 failed\n");
 	}
 
 	if (of_property_read_u32(np, "temperature_t2", &val)){
 		batt_meter_cust_data.temperature_t2 = (int)val;
-		bm_print(BM_LOG_CRTI, "Get temperature_t2: %d\n",
-			batt_meter_cust_data.temperature_t2);
 	}else{
 		bm_print(BM_LOG_CRTI, "Get temperature_t2 failed\n");
 	}
 
 	if (of_property_read_u32(np, "temperature_t3", &val)){
 		batt_meter_cust_data.temperature_t3 = (int)val;
-		bm_print(BM_LOG_CRTI, "Get temperature_t3: %d\n",
-			batt_meter_cust_data.temperature_t3);
 	}else{
 		bm_print(BM_LOG_CRTI, "Get temperature_t3 failed\n");
 	}
 
 	if (of_property_read_u32(np, "temperature_t", &val)){
 		batt_meter_cust_data.temperature_t = (int)val;
-		bm_print(BM_LOG_CRTI, "Get temperature_t: %d\n",
-			batt_meter_cust_data.temperature_t);
 	}else{
 		bm_print(BM_LOG_CRTI, "Get temperature_t failed\n");
 	}
 
 	if (of_property_read_u32(np, "fg_meter_resistance", &val)){
 		batt_meter_cust_data.fg_meter_resistance = (int)val;
-		bm_print(BM_LOG_CRTI, "Get fg_meter_resistance: %d\n",
-			batt_meter_cust_data.fg_meter_resistance);
 	}else{
 		bm_print(BM_LOG_CRTI, "Get fg_meter_resistance failed\n");
 	}
 
 	if (of_property_read_u32(np, "q_max_pos_50", &val)){
 		batt_meter_cust_data.q_max_pos_50 = (int)val;
-		bm_print(BM_LOG_CRTI, "Get q_max_pos_50: %d\n",
-			batt_meter_cust_data.q_max_pos_50);
 	}else{
 		bm_print(BM_LOG_CRTI, "Get q_max_pos_50 failed\n");
 	}
 
 	if (of_property_read_u32(np, "q_max_pos_25", &val)){
 		batt_meter_cust_data.q_max_pos_25 = (int)val;
-		bm_print(BM_LOG_CRTI, "Get q_max_pos_25: %d\n",
-			batt_meter_cust_data.q_max_pos_25);
 	}else{
 		bm_print(BM_LOG_CRTI, "Get q_max_pos_25 failed\n");
 	}
 
 	if (of_property_read_u32(np, "q_max_pos_0", &val)){
 		batt_meter_cust_data.q_max_pos_0 = (int)val;
-		bm_print(BM_LOG_CRTI, "Get q_max_pos_0: %d\n",
-			batt_meter_cust_data.q_max_pos_0);
 	}else{
 		bm_print(BM_LOG_CRTI, "Get q_max_pos_0 failed\n");
 	}
 
 	if (of_property_read_u32(np, "q_max_neg_10", &val)){
 		batt_meter_cust_data.q_max_neg_10 = (int)val;
-		bm_print(BM_LOG_CRTI, "Get q_max_neg_10: %d\n",
-			batt_meter_cust_data.q_max_neg_10);
 	}else{
 		bm_print(BM_LOG_CRTI, "Get q_max_neg_10 failed\n");
 	}
 
 	if (of_property_read_u32(np, "q_max_pos_50_h_current", &val)){
 		batt_meter_cust_data.q_max_pos_50_h_current = (int)val;
-		bm_print(BM_LOG_CRTI, "Get q_max_pos_50_h_current: %d\n",
-			batt_meter_cust_data.q_max_pos_50_h_current);
 	}else{
 		bm_print(BM_LOG_CRTI, "Get q_max_pos_50_h_current failed\n");
 	}
 
 	if (of_property_read_u32(np, "q_max_pos_25_h_current", &val)){
 		batt_meter_cust_data.q_max_pos_25_h_current = (int)val;
-		bm_print(BM_LOG_CRTI, "Get q_max_pos_25_h_current: %d\n",
-			batt_meter_cust_data.q_max_pos_25_h_current);
 	}else{
 		bm_print(BM_LOG_CRTI, "Get q_max_pos_25_h_current failed\n");
 	}
 
 	if (of_property_read_u32(np, "q_max_pos_0_h_current", &val)){
 		batt_meter_cust_data.q_max_pos_0_h_current = (int)val;
-		bm_print(BM_LOG_CRTI, "Get q_max_pos_0_h_current: %d\n",
-			batt_meter_cust_data.q_max_pos_0_h_current);
 	}else{
 		bm_print(BM_LOG_CRTI, "Get q_max_pos_0_h_current failed\n");
 	}
 
 	if (of_property_read_u32(np, "q_max_neg_10_h_current", &val)){
 		batt_meter_cust_data.q_max_neg_10_h_current = (int)val;
-		bm_print(BM_LOG_CRTI, "Get q_max_neg_10_h_current: %d\n",
-			batt_meter_cust_data.q_max_neg_10_h_current);
 	}else{
 		bm_print(BM_LOG_CRTI, "Get q_max_neg_10_h_current failed\n");
 	}
 
 	if (of_property_read_u32(np, "oam_d5", &val)){
 		batt_meter_cust_data.oam_d5 = (int)val;
-		bm_print(BM_LOG_CRTI, "Get oam_d5: %d\n",
-			batt_meter_cust_data.oam_d5);
 	}else{
 		bm_print(BM_LOG_CRTI, "Get oam_d5 failed\n");
 	}
 
 	if (of_property_read_u32(np, "change_tracking_point", &val)){
 		batt_meter_cust_data.change_tracking_point = (int)val;
-		bm_print(BM_LOG_CRTI, "Get change_tracking_point: %d\n",
-			batt_meter_cust_data.change_tracking_point);
 	}else{
 		bm_print(BM_LOG_CRTI, "Get change_tracking_point failed\n");
 	}
 
 	if (of_property_read_u32(np, "cust_tracking_point", &val)){
 		batt_meter_cust_data.cust_tracking_point = (int)val;
-		bm_print(BM_LOG_CRTI, "Get cust_tracking_point: %d\n",
-			batt_meter_cust_data.cust_tracking_point);
 	}else{
 		bm_print(BM_LOG_CRTI, "Get cust_tracking_point failed\n");
 	}
 
 	if (of_property_read_u32(np, "cust_r_sense", &val)){
 		batt_meter_cust_data.cust_r_sense = (int)val;
-		bm_print(BM_LOG_CRTI, "Get cust_r_sense: %d\n",
-			batt_meter_cust_data.cust_r_sense);
 	}else{
 		bm_print(BM_LOG_CRTI, "Get cust_r_sense failed\n");
 	}
 
 	if (of_property_read_u32(np, "cust_hw_cc", &val)){
 		batt_meter_cust_data.cust_hw_cc = (int)val;
-		bm_print(BM_LOG_CRTI, "Get cust_hw_cc: %d\n",
-			batt_meter_cust_data.cust_hw_cc);
 	}else{
 		bm_print(BM_LOG_CRTI, "Get cust_hw_cc failed\n");
 	}
 
 	if (of_property_read_u32(np, "aging_tuning_value", &val)){
 		batt_meter_cust_data.aging_tuning_value = (int)val;
-		bm_print(BM_LOG_CRTI, "Get aging_tuning_value: %d\n",
-			batt_meter_cust_data.aging_tuning_value);
 	}else{
 		bm_print(BM_LOG_CRTI, "Get aging_tuning_value failed\n");
 	}
 
 	if (of_property_read_u32(np, "cust_r_fg_offset", &val)){
 		batt_meter_cust_data.cust_r_fg_offset = (int)val;
-		bm_print(BM_LOG_CRTI, "Get cust_r_fg_offset: %d\n",
-			batt_meter_cust_data.cust_r_fg_offset);
 	}else{
 		bm_print(BM_LOG_CRTI, "Get cust_r_fg_offset failed\n");
 	}
 
 	if (of_property_read_u32(np, "ocv_board_compesate", &val)){
 		batt_meter_cust_data.ocv_board_compesate = (int)val;
-		bm_print(BM_LOG_CRTI, "Get ocv_board_compesate: %d\n",
-			batt_meter_cust_data.ocv_board_compesate);
 	}else{
 		bm_print(BM_LOG_CRTI, "Get ocv_board_compesate failed\n");
 	}
 
 	if (of_property_read_u32(np, "r_fg_board_base", &val)){
 		batt_meter_cust_data.r_fg_board_base = (int)val;
-		bm_print(BM_LOG_CRTI, "Get r_fg_board_base: %d\n",
-			batt_meter_cust_data.r_fg_board_base);
 	}else{
 		bm_print(BM_LOG_CRTI, "Get r_fg_board_base failed\n");
 	}
 
 	if (of_property_read_u32(np, "r_fg_board_slope", &val)){
 		batt_meter_cust_data.r_fg_board_slope = (int)val;
-		bm_print(BM_LOG_CRTI, "Get r_fg_board_slope: %d\n",
-			batt_meter_cust_data.r_fg_board_slope);
 	}else{
 		bm_print(BM_LOG_CRTI, "Get r_fg_board_slope failed\n");
 	}
 
 	if (of_property_read_u32(np, "car_tune_value", &val)){
 		batt_meter_cust_data.car_tune_value = (int)val;
-		bm_print(BM_LOG_CRTI, "Get car_tune_value: %d\n",
-			batt_meter_cust_data.car_tune_value);
 	}else{
 		bm_print(BM_LOG_CRTI, "Get car_tune_value failed\n");
 	}
 
 	if (of_property_read_u32(np, "current_detect_r_fg", &val)){
 		batt_meter_cust_data.current_detect_r_fg = (int)val;
-		bm_print(BM_LOG_CRTI, "Get current_detect_r_fg: %d\n",
-			batt_meter_cust_data.current_detect_r_fg);
 	}else{
 		bm_print(BM_LOG_CRTI, "Get current_detect_r_fg failed\n");
 	}
 
 	if (of_property_read_u32(np, "minerroroffset", &val)){
 		batt_meter_cust_data.minerroroffset = (int)val;
-		bm_print(BM_LOG_CRTI, "Get minerroroffset: %d\n",
-			batt_meter_cust_data.minerroroffset);
 	}else{
 		bm_print(BM_LOG_CRTI, "Get minerroroffset failed\n");
 	}
 
 	if (of_property_read_u32(np, "fg_vbat_average_size", &val)){
 		batt_meter_cust_data.fg_vbat_average_size = (int)val;
-		bm_print(BM_LOG_CRTI, "Get fg_vbat_average_size: %d\n",
-			batt_meter_cust_data.fg_vbat_average_size);
 	}else{
 		bm_print(BM_LOG_CRTI, "Get fg_vbat_average_size failed\n");
 	}
 
 	if (of_property_read_u32(np, "r_fg_value", &val)){
 		batt_meter_cust_data.r_fg_value = (int)val;
-		bm_print(BM_LOG_CRTI, "Get r_fg_value: %d\n",
-			batt_meter_cust_data.r_fg_value);
 	}else{
 		bm_print(BM_LOG_CRTI, "Get r_fg_value failed\n");
 	}
@@ -1266,56 +1190,42 @@ int __batt_meter_init_cust_data_from_dt(struct platform_device *dev)
 
 	if (of_property_read_u32(np, "difference_hwocv_rtc", &val)){
 		batt_meter_cust_data.difference_hwocv_rtc = (int)val;
-		bm_print(BM_LOG_CRTI, "Get difference_hwocv_rtc: %d\n",
-			batt_meter_cust_data.difference_hwocv_rtc);
 	}else{
 		bm_print(BM_LOG_CRTI, "Get difference_hwocv_rtc failed\n");
 	}
 
 	if (of_property_read_u32(np, "difference_hwocv_swocv", &val)){
 		batt_meter_cust_data.difference_hwocv_swocv = (int)val;
-		bm_print(BM_LOG_CRTI, "Get difference_hwocv_swocv: %d\n",
-			batt_meter_cust_data.difference_hwocv_swocv);
 	}else{
 		bm_print(BM_LOG_CRTI, "Get difference_hwocv_swocv failed\n");
 	}
 
 	if (of_property_read_u32(np, "difference_swocv_rtc", &val)){
 		batt_meter_cust_data.difference_swocv_rtc = (int)val;
-		bm_print(BM_LOG_CRTI, "Get difference_swocv_rtc: %d\n",
-			batt_meter_cust_data.difference_swocv_rtc);
 	}else{
 		bm_print(BM_LOG_CRTI, "Get difference_swocv_rtc failed\n");
 	}
 
 	if (of_property_read_u32(np, "max_swocv", &val)){
 		batt_meter_cust_data.max_swocv = (int)val;
-		bm_print(BM_LOG_CRTI, "Get max_swocv: %d\n",
-			batt_meter_cust_data.max_swocv);
 	}else{
 		bm_print(BM_LOG_CRTI, "Get max_swocv failed\n");
 	}
 
 	if (of_property_read_u32(np, "max_hwocv", &val)){
 		batt_meter_cust_data.max_hwocv = (int)val;
-		bm_print(BM_LOG_CRTI, "Get max_hwocv: %d\n",
-			batt_meter_cust_data.max_hwocv);
 	}else{
 		bm_print(BM_LOG_CRTI, "Get max_hwocv failed\n");
 	}
 
 	if (of_property_read_u32(np, "max_vbat", &val)){
 		batt_meter_cust_data.max_vbat = (int)val;
-		bm_print(BM_LOG_CRTI, "Get max_vbat: %d\n",
-			batt_meter_cust_data.max_vbat);
 	} else {
 		bm_print(BM_LOG_CRTI, "Get max_vbat failed\n");
 	}
 
 	if (of_property_read_u32(np, "difference_hwocv_vbat", &val)){
 		batt_meter_cust_data.difference_hwocv_vbat = (int)val;
-		bm_print(BM_LOG_CRTI, "Get difference_hwocv_vbat: %d\n",
-			batt_meter_cust_data.difference_hwocv_vbat);
 	}else{
 		bm_print(BM_LOG_CRTI, "Get difference_hwocv_vbat failed\n");
 	}
@@ -1323,8 +1233,6 @@ int __batt_meter_init_cust_data_from_dt(struct platform_device *dev)
 
 	if (of_property_read_u32(np, "suspend_current_threshold", &val)){
 			batt_meter_cust_data.suspend_current_threshold = (int)val;
-			bm_print(BM_LOG_CRTI, "Get suspend_current_threshold: %d\n",
-				batt_meter_cust_data.suspend_current_threshold);
 	}else{
 		bm_print(BM_LOG_CRTI, "Get suspend_current_threshold failed\n");
 	}
@@ -1332,16 +1240,12 @@ int __batt_meter_init_cust_data_from_dt(struct platform_device *dev)
 
 	if (of_property_read_u32(np, "ocv_check_time", &val)){
 			batt_meter_cust_data.ocv_check_time = (int)val;
-			bm_print(BM_LOG_CRTI, "Get ocv_check_time: %d\n",
-				batt_meter_cust_data.ocv_check_time);
 	}else{
 		bm_print(BM_LOG_CRTI, "Get ocv_check_time failed\n");
 	}
 
 	if (of_property_read_u32(np, "fixed_tbat_25", &val)){
 		batt_meter_cust_data.fixed_tbat_25 = (int)val;
-		bm_print(BM_LOG_CRTI, "Get fixed_tbat_25: %d\n",
-			batt_meter_cust_data.fixed_tbat_25);
 	} else {
 		bm_print(BM_LOG_CRTI, "Get fixed_tbat_25 failed\n");
 	}
@@ -1353,40 +1257,30 @@ int __batt_meter_init_cust_data_from_dt(struct platform_device *dev)
 
 	if (of_property_read_u32(np, "vbat_normal_wakeup", &val)){
 		batt_meter_cust_data.vbat_normal_wakeup = (int)val;
-		bm_print(BM_LOG_CRTI, "Get vbat_normal_wakeup: %d\n",
-			batt_meter_cust_data.vbat_normal_wakeup);
 	} else {
 		bm_print(BM_LOG_CRTI, "Get vbat_normal_wakeup failed\n");
 	}
 
 	if (of_property_read_u32(np, "vbat_low_power_wakeup", &val)){
 		batt_meter_cust_data.vbat_low_power_wakeup = (int)val;
-		bm_print(BM_LOG_CRTI, "Get vbat_low_power_wakeup: %d\n",
-			batt_meter_cust_data.vbat_low_power_wakeup);
 	}else{
 		bm_print(BM_LOG_CRTI, "Get vbat_low_power_wakeup failed\n");
 	}
 
 	if (of_property_read_u32(np, "normal_wakeup_period", &val)){
 		batt_meter_cust_data.normal_wakeup_period = (int)val;
-		bm_print(BM_LOG_CRTI, "Get normal_wakeup_period: %d\n",
-			batt_meter_cust_data.normal_wakeup_period);
 	}else{
 		bm_print(BM_LOG_CRTI, "Get normal_wakeup_period failed\n");
 	}
 
 	if (of_property_read_u32(np, "low_power_wakeup_period", &val)){
 		batt_meter_cust_data.low_power_wakeup_period = (int)val;
-		bm_print(BM_LOG_CRTI, "Get low_power_wakeup_period: %d\n",
-			batt_meter_cust_data.low_power_wakeup_period);
 	}else{
 		bm_print(BM_LOG_CRTI, "Get low_power_wakeup_period failed\n");
 	}
 
 	if (of_property_read_u32(np, "close_poweroff_wakeup_period", &val)){
 		batt_meter_cust_data.close_poweroff_wakeup_period = (int)val;
-		bm_print(BM_LOG_CRTI, "Get close_poweroff_wakeup_period: %d\n",
-			batt_meter_cust_data.close_poweroff_wakeup_period);
 	}else{
 		bm_print(BM_LOG_CRTI, "Get close_poweroff_wakeup_period failed\n");
 	}
@@ -1394,71 +1288,53 @@ int __batt_meter_init_cust_data_from_dt(struct platform_device *dev)
 
 	if (of_property_read_u32(np, "init_soc_by_sw_soc", &val)){
 		batt_meter_cust_data.init_soc_by_sw_soc = (int)val;
-		bm_print(BM_LOG_CRTI, "Get init_soc_by_sw_soc: %d\n",
-			batt_meter_cust_data.init_soc_by_sw_soc);
 	}else{
 		bm_print(BM_LOG_CRTI, "Get init_soc_by_sw_soc failed\n");
 	}
 
 	if (of_property_read_u32(np, "sync_ui_soc_imm", &val)){
 		batt_meter_cust_data.sync_ui_soc_imm = (int)val;
-		bm_print(BM_LOG_CRTI, "Get sync_ui_soc_imm: %d\n",
-			batt_meter_cust_data.sync_ui_soc_imm);
 	}else{
 		bm_print(BM_LOG_CRTI, "Get sync_ui_soc_imm failed\n");
 	}
 
     if (of_property_read_u32(np, "mtk_enable_aging_algorithm", &val)){
 		batt_meter_cust_data.mtk_enable_aging_algorithm = (int)val;
-		bm_print(BM_LOG_CRTI, "Get mtk_enable_aging_algorithm: %d\n",
-			batt_meter_cust_data.mtk_enable_aging_algorithm);
 	}else{
 		bm_print(BM_LOG_CRTI, "Get mtk_enable_aging_algorithm failed\n");
 	}
 
     if (of_property_read_u32(np, "md_sleep_current_check", &val)){
 		batt_meter_cust_data.md_sleep_current_check = (int)val;
-		bm_print(BM_LOG_CRTI, "Get md_sleep_current_check: %d\n",
-			batt_meter_cust_data.md_sleep_current_check);
 	}else{
 		bm_print(BM_LOG_CRTI, "Get md_sleep_current_check failed\n");
 	}
 
     if (of_property_read_u32(np, "q_max_by_current", &val)){
 		batt_meter_cust_data.q_max_by_current = (int)val;
-		bm_print(BM_LOG_CRTI, "Get q_max_by_current: %d\n",
-			batt_meter_cust_data.q_max_by_current);
 	}else{
 		bm_print(BM_LOG_CRTI, "Get q_max_by_current failed\n");
 	}
 	if (of_property_read_u32(np, "q_max_sys_voltage", &val)){
 		    batt_meter_cust_data.q_max_sys_voltage = (int)val;
-		    bm_print(BM_LOG_CRTI, "Get q_max_sys_voltage: %d\n",
-			    batt_meter_cust_data.q_max_sys_voltage);
 	    }else{
 		    bm_print(BM_LOG_CRTI, "Get q_max_sys_voltage failed\n");
 	    }
 
     if (of_property_read_u32(np, "shutdown_gauge0", &val)){
 		batt_meter_cust_data.shutdown_gauge0 = (int)val;
-		bm_print(BM_LOG_CRTI, "Get shutdown_gauge0: %d\n",
-			batt_meter_cust_data.shutdown_gauge0);
 	}else{
 		bm_print(BM_LOG_CRTI, "Get shutdown_gauge0 failed\n");
 	}
 
     if (of_property_read_u32(np, "shutdown_gauge1_xmins", &val)){
 		batt_meter_cust_data.shutdown_gauge1_xmins = (int)val;
-		bm_print(BM_LOG_CRTI, "Get shutdown_gauge1_xmins: %d\n",
-			batt_meter_cust_data.shutdown_gauge1_xmins);
 	}else{
 		bm_print(BM_LOG_CRTI, "Get shutdown_gauge1_xmins failed\n");
 	}
 
     if (of_property_read_u32(np, "shutdown_gauge1_mins", &val)){
 		batt_meter_cust_data.shutdown_gauge1_mins = (int)val;
-		bm_print(BM_LOG_CRTI, "Get shutdown_gauge1_mins: %d\n",
-			batt_meter_cust_data.shutdown_gauge1_mins);
 	}else{
 		bm_print(BM_LOG_CRTI, "Get shutdown_gauge1_mins failed\n");
 	}
@@ -1581,8 +1457,6 @@ kal_int32 fgauge_get_Q_max(kal_int16 temperature)
 	        );
   }
 
-	bm_print(BM_LOG_FULL, "[fgauge_get_Q_max] Q_max = %d\r\n", ret_Q_max);
-
 	return ret_Q_max;
 }
 
@@ -1637,8 +1511,6 @@ kal_int32 fgauge_get_Q_max_high_current(kal_int16 temperature)
 	        );
         }
 
-	bm_print(BM_LOG_FULL, "[fgauge_get_Q_max_high_current] Q_max = %d\r\n", ret_Q_max);
-
 	return ret_Q_max;
 }
 
@@ -1725,8 +1597,6 @@ kal_int32 fgauge_get_Q_max(kal_int16 temperature)
 	        );
         }
 
-	bm_print(BM_LOG_FULL, "[fgauge_get_Q_max] Q_max = %d\r\n", ret_Q_max);
-
 	return ret_Q_max;
 }
 
@@ -1780,8 +1650,6 @@ kal_int32 fgauge_get_Q_max_high_current(kal_int16 temperature)
 	        );
   }
 
-	bm_print(BM_LOG_FULL, "[fgauge_get_Q_max_high_current] Q_max = %d\r\n", ret_Q_max);
-
 	return ret_Q_max;
 }
 
@@ -1815,7 +1683,6 @@ int BattVoltToTemp(int dwVolt)
 int force_get_tbat(kal_bool update)
 {
 #if defined(CONFIG_POWER_EXT) || defined(FIXED_TBAT_25)
-	bm_print(BM_LOG_CRTI, "[force_get_tbat] fixed TBAT=25 t\n");
 	return 25;
 #else
 	int bat_temperature_volt = 0;
@@ -1855,9 +1722,6 @@ int force_get_tbat(kal_bool update)
 			bat_temperature_val = BattVoltToTemp(bat_temperature_volt);
 		}
 
-	bm_print(BM_LOG_CRTI, "[force_get_tbat] %d,%d,%d,%d,%d,%d\n",
-		 bat_temperature_volt_temp, bat_temperature_volt, fg_current_state, fg_current_temp,
-		 fg_r_value, bat_temperature_val);
 		pre_bat_temperature_val = bat_temperature_val;
 	} else {
 		bat_temperature_val = pre_bat_temperature_val;
@@ -1917,8 +1781,6 @@ void fgauge_algo_run_get_init_data(void)
 	ret=battery_meter_ctrl(BATTERY_METER_CMD_GET_HW_FG_CURRENT_SIGN, &gFG_Is_Charging_init);
 	charging_enable = KAL_TRUE;
 	battery_charging_control(CHARGING_CMD_ENABLE,&charging_enable);
-	bm_print(BM_LOG_CRTI,"1.[fgauge_algo_run_get_init_data](gFG_voltage_init %d, gFG_current_init %d, gFG_Is_Charging_init %d)\n",
-				gFG_voltage_init, gFG_current_init, gFG_Is_Charging_init);
 }
 #endif
 
@@ -1943,8 +1805,6 @@ void fgauge_algo_run_get_init_data(void)
 	gFG_Is_Charging_init=KAL_FALSE;
 	charging_enable = KAL_TRUE;
 	battery_charging_control(CHARGING_CMD_ENABLE,&charging_enable);
-	bm_print(BM_LOG_CRTI,"1.[fgauge_algo_run_get_init_data](gFG_voltage_init %d, gFG_current_init %d, gFG_Is_Charging_init %d)\n",
-				gFG_voltage_init, gFG_current_init, gFG_Is_Charging_init);
 }
 #endif
 
@@ -1982,8 +1842,6 @@ kal_int32 get_dynamic_period(int first_use, int first_wakeup_time, int battery_c
 	}
 
 
-	bm_print(BM_LOG_CRTI, "vbat_val=%d, g_spm_timer=%d wake_up_smooth_time=%d\n", vbat_val, g_spm_timer,wake_up_smooth_time);
-
 	return g_spm_timer;
 #else
 
@@ -2027,7 +1885,6 @@ kal_int32 get_dynamic_period(int first_use, int first_wakeup_time, int battery_c
 
 		if (car_sleep > car_wakeup || car_sleep == 0x12345678) {
 			car_sleep = car_wakeup;
-			bm_print(BM_LOG_CRTI, "[get_dynamic_period] reset car_sleep\n");
 		}
 		if (last_time == 0) {
 			last_time = 1;
@@ -2053,10 +1910,6 @@ kal_int32 get_dynamic_period(int first_use, int first_wakeup_time, int battery_c
 			    ((gFG_BATT_CAPACITY_aging * battery_capacity_level * 3600) / 100) / I_sleep;
 		}
 
-		bm_print(BM_LOG_CRTI,
-			 "[get_dynamic_period] car_instant=%d, car_wakeup=%d, car_sleep=%d, I_sleep=%d, gFG_BATT_CAPACITY=%d, add_time=%d, last_time=%d, new_time=%d , battery_capacity_level = %d\r\n",
-			 car_instant, car_wakeup, car_sleep, I_sleep, gFG_BATT_CAPACITY_aging, add_time, last_time,
-			 new_time, battery_capacity_level);
 		if (new_time > 1000)
 			new_time = 1000;
 		ret_val = new_time;
@@ -2073,7 +1926,6 @@ kal_int32 get_dynamic_period(int first_use, int first_wakeup_time, int battery_c
 		g_spm_timer = CLOSE_POWEROFF_WAKEUP_PERIOD;	/* 0.5 min */
 	}
 
-	bm_print(BM_LOG_CRTI, "vbat_val=%d, g_spm_timer=%d\n", vbat_val, g_spm_timer);
 	return g_spm_timer;
 
 #endif
@@ -2175,12 +2027,6 @@ kal_int32 battery_meter_get_charging_current(void)
 		}
 	}
 
-	bm_print(BM_LOG_FULL, "[g_Get_I_Charging:BAT_SENSE]\r\n");
-	for (i = 0; i < repeat; i++) {
-		bm_print(BM_LOG_FULL, "%d,", ADC_BAT_SENSE_tmp[i]);
-	}
-	bm_print(BM_LOG_FULL, "\r\n");
-
 	/* sorting    I_SENSE */
 	for (i = 0; i < repeat; i++) {
 		for (j = i; j < repeat; j++) {
@@ -2192,31 +2038,18 @@ kal_int32 battery_meter_get_charging_current(void)
 		}
 	}
 
-	bm_print(BM_LOG_FULL, "[g_Get_I_Charging:I_SENSE]\r\n");
-	for (i = 0; i < repeat; i++) {
-		bm_print(BM_LOG_FULL, "%d,", ADC_I_SENSE_tmp[i]);
-	}
-	bm_print(BM_LOG_FULL, "\r\n");
-
 	ADC_BAT_SENSE_sum -= ADC_BAT_SENSE_tmp[0];
 	ADC_BAT_SENSE_sum -= ADC_BAT_SENSE_tmp[1];
 	ADC_BAT_SENSE_sum -= ADC_BAT_SENSE_tmp[18];
 	ADC_BAT_SENSE_sum -= ADC_BAT_SENSE_tmp[19];
 	ADC_BAT_SENSE = ADC_BAT_SENSE_sum / (repeat - 4);
 
-	bm_print(BM_LOG_FULL, "[g_Get_I_Charging] ADC_BAT_SENSE=%d\r\n", ADC_BAT_SENSE);
-
 	ADC_I_SENSE_sum -= ADC_I_SENSE_tmp[0];
 	ADC_I_SENSE_sum -= ADC_I_SENSE_tmp[1];
 	ADC_I_SENSE_sum -= ADC_I_SENSE_tmp[18];
 	ADC_I_SENSE_sum -= ADC_I_SENSE_tmp[19];
 	ADC_I_SENSE = ADC_I_SENSE_sum / (repeat - 4);
 
-	bm_print(BM_LOG_FULL, "[g_Get_I_Charging] ADC_I_SENSE(Before)=%d\r\n", ADC_I_SENSE);
-
-
-	bm_print(BM_LOG_FULL, "[g_Get_I_Charging] ADC_I_SENSE(After)=%d\r\n", ADC_I_SENSE);
-
 	if (ADC_I_SENSE > ADC_BAT_SENSE) {
 		ICharging = (ADC_I_SENSE - ADC_BAT_SENSE + g_I_SENSE_offset) * 1000 / CUST_R_SENSE;
 	} else {
@@ -2330,7 +2163,6 @@ kal_int32 battery_meter_initial(void)
 	if (wakeup_fg_algo(FG_MAIN) == -1) {
 		//fgauge_initialization();
 		fgauge_algo_run_get_init_data();
-		bm_print(BM_LOG_CRTI, "[battery_meter_initial] SOC_BY_HW_FG not done\n");
         }
 #endif
 
@@ -2340,7 +2172,6 @@ kal_int32 battery_meter_initial(void)
 			if (wakeup_fg_algo(FG_MAIN) == -1) {
 				//fgauge_initialization();
 				fgauge_algo_run_get_init_data();
-				bm_print(BM_LOG_CRTI, "[battery_meter_initial] SOC_BY_SW_FG not done\n");
 				}
 #endif
 
@@ -2444,13 +2275,10 @@ static ssize_t fgadc_log_write(struct file *filp, const char __user *buff,
 	}
 
 	if (proc_fgadc_data == '1') {
-		bm_print(BM_LOG_CRTI, "enable FGADC driver log system\n");
 		Enable_FGADC_LOG = 1;
 	} else if (proc_fgadc_data == '2') {
-		bm_print(BM_LOG_CRTI, "enable FGADC driver log system:2\n");
 		Enable_FGADC_LOG = 2;
 	} else {
-		bm_print(BM_LOG_CRTI, "Disable FGADC driver log system\n");
 		Enable_FGADC_LOG = 0;
 	}
 
@@ -2467,7 +2295,6 @@ int init_proc_log_fg(void)
 
 #if 1
 	proc_create("fgadc_log", 0644, NULL, &fgadc_proc_fops);
-	bm_print(BM_LOG_CRTI, "proc_create fgadc_proc_fops\n");
 #else
 	proc_entry_fgadc = create_proc_entry("fgadc_log", 0644, NULL);
 
@@ -2545,7 +2372,6 @@ static ssize_t store_FG_Battery_Cycle(struct device *dev, struct device_attribut
 #endif
 
 	if (1 == sscanf(buf, "%d", &cycle)) {
-		bm_print(BM_LOG_CRTI, "[FG] update battery cycle count: %d\n", cycle);
 		gFG_battery_cycle = cycle;
 
 #ifdef CUSTOM_BATTERY_CYCLE_AGING_DATA
@@ -2553,11 +2379,8 @@ static ssize_t store_FG_Battery_Cycle(struct device *dev, struct device_attribut
 
 		factor = get_battery_aging_factor(gFG_battery_cycle);
 		if (factor > 0 && factor < 100) {
-			bm_print(BM_LOG_CRTI, "[FG] cycle count to aging factor %d\n", factor);
 			aging_capacity = gFG_BATT_CAPACITY * factor / 100;
 			if (aging_capacity < gFG_BATT_CAPACITY_aging) {
-				bm_print(BM_LOG_CRTI, "[FG] update gFG_BATT_CAPACITY_aging to %d\n",
-					 aging_capacity);
 				gFG_BATT_CAPACITY_aging = aging_capacity;
 			}
 		}
@@ -2575,7 +2398,6 @@ static DEVICE_ATTR(FG_Battery_Cycle, 0664, show_FG_Battery_Cycle, store_FG_Batte
 static ssize_t show_FG_Max_Battery_Voltage(struct device *dev, struct device_attribute *attr,
 					   char *buf)
 {
-	bm_print(BM_LOG_CRTI, "[FG] gFG_max_voltage  : %d\n", gFG_max_voltage);
 	return sprintf(buf, "%d\n", gFG_max_voltage);
 }
 
@@ -2585,7 +2407,6 @@ static ssize_t store_FG_Max_Battery_Voltage(struct device *dev, struct device_at
 	kal_int32 voltage;
 	if (1 == sscanf(buf, "%d", &voltage)) {
 		if (voltage > gFG_max_voltage) {
-			bm_print(BM_LOG_CRTI, "[FG] update battery max voltage: %d\n", voltage);
 			gFG_max_voltage = voltage;
 		}
 	} else {
@@ -2602,7 +2423,6 @@ static DEVICE_ATTR(FG_Max_Battery_Voltage, 0664, show_FG_Max_Battery_Voltage,
 static ssize_t show_FG_Min_Battery_Voltage(struct device *dev, struct device_attribute *attr,
 					   char *buf)
 {
-	bm_print(BM_LOG_CRTI, "[FG] gFG_min_voltage  : %d\n", gFG_min_voltage);
 	return sprintf(buf, "%d\n", gFG_min_voltage);
 }
 
@@ -2612,7 +2432,6 @@ static ssize_t store_FG_Min_Battery_Voltage(struct device *dev, struct device_at
 	kal_int32 voltage;
 	if (1 == sscanf(buf, "%d", &voltage)) {
 		if (voltage < gFG_min_voltage) {
-			bm_print(BM_LOG_CRTI, "[FG] update battery min voltage: %d\n", voltage);
 			gFG_min_voltage = voltage;
 		}
 	} else {
@@ -2629,7 +2448,6 @@ static DEVICE_ATTR(FG_Min_Battery_Voltage, 0664, show_FG_Min_Battery_Voltage,
 static ssize_t show_FG_Max_Battery_Current(struct device *dev, struct device_attribute *attr,
 					   char *buf)
 {
-	bm_print(BM_LOG_CRTI, "[FG] gFG_max_current  : %d\n", gFG_max_current);
 	return sprintf(buf, "%d\n", gFG_max_current);
 }
 
@@ -2639,7 +2457,6 @@ static ssize_t store_FG_Max_Battery_Current(struct device *dev, struct device_at
 	kal_int32 bat_current;
 	if (1 == sscanf(buf, "%d", &bat_current)) {
 		if (bat_current > gFG_max_current) {
-			bm_print(BM_LOG_CRTI, "[FG] update battery max current: %d\n", bat_current);
 			gFG_max_current = bat_current;
 		}
 	} else {
@@ -2656,7 +2473,6 @@ static DEVICE_ATTR(FG_Max_Battery_Current, 0664, show_FG_Max_Battery_Current,
 static ssize_t show_FG_Min_Battery_Current(struct device *dev, struct device_attribute *attr,
 					   char *buf)
 {
-	bm_print(BM_LOG_CRTI, "[FG] gFG_min_current  : %d\n", gFG_min_current);
 	return sprintf(buf, "%d\n", gFG_min_current);
 }
 
@@ -2683,7 +2499,6 @@ static DEVICE_ATTR(FG_Min_Battery_Current, 0664, show_FG_Min_Battery_Current,
 static ssize_t show_FG_Max_Battery_Temperature(struct device *dev, struct device_attribute *attr,
 					       char *buf)
 {
-	bm_print(BM_LOG_CRTI, "[FG] gFG_max_temperature  : %d\n", gFG_max_temperature);
 	return sprintf(buf, "%d\n", gFG_max_temperature);
 }
 
@@ -2693,7 +2508,6 @@ static ssize_t store_FG_Max_Battery_Temperature(struct device *dev, struct devic
 	kal_int32 temp;
 	if (1 == sscanf(buf, "%d", &temp)) {
 		if (temp > gFG_max_temperature) {
-			bm_print(BM_LOG_CRTI, "[FG] update battery max temp: %d\n", temp);
 			gFG_max_temperature = temp;
 		}
 	} else {
@@ -2710,7 +2524,6 @@ static DEVICE_ATTR(FG_Max_Battery_Temperature, 0664, show_FG_Max_Battery_Tempera
 static ssize_t show_FG_Min_Battery_Temperature(struct device *dev, struct device_attribute *attr,
 					       char *buf)
 {
-	bm_print(BM_LOG_CRTI, "[FG] gFG_min_temperature  : %d\n", gFG_min_temperature);
 	return sprintf(buf, "%d\n", gFG_min_temperature);
 }
 
@@ -2720,7 +2533,6 @@ static ssize_t store_FG_Min_Battery_Temperature(struct device *dev, struct devic
 	kal_int32 temp;
 	if (1 == sscanf(buf, "%d", &temp)) {
 		if (temp < gFG_min_temperature) {
-			bm_print(BM_LOG_CRTI, "[FG] update battery min temp: %d\n", temp);
 			gFG_min_temperature = temp;
 		}
 	} else {
@@ -2736,7 +2548,6 @@ static DEVICE_ATTR(FG_Min_Battery_Temperature, 0664, show_FG_Min_Battery_Tempera
 
 static ssize_t show_FG_Aging_Factor(struct device *dev, struct device_attribute *attr, char *buf)
 {
-	bm_print(BM_LOG_CRTI, "[FG] gFG_aging_factor_1  : %d\n", gFG_aging_factor_1);
 	return sprintf(buf, "%d\n", gFG_aging_factor_1);
 }
 
@@ -2748,18 +2559,12 @@ static ssize_t store_FG_Aging_Factor(struct device *dev, struct device_attribute
 
 	if (1 == sscanf(buf, "%d", &factor)) {
 		if (factor <= 100 && factor >= 0) {
-			bm_print(BM_LOG_CRTI,
-				 "[FG] update battery aging factor: old(%d), new(%d)\n",
-				 gFG_aging_factor_1, factor);
 
 			gFG_aging_factor_1 = factor;
 
 			if (gFG_aging_factor_1 != 100) {
 				aging_capacity = gFG_BATT_CAPACITY * gFG_aging_factor_1 / 100;
 				if (aging_capacity < gFG_BATT_CAPACITY_aging) {
-					bm_print(BM_LOG_CRTI,
-						 "[FG] update gFG_BATT_CAPACITY_aging to %d\n",
-						 aging_capacity);
 					gFG_BATT_CAPACITY_aging = aging_capacity;
 				}
 			}
@@ -2794,7 +2599,6 @@ static ssize_t show_FG_Current(struct device *dev, struct device_attribute *attr
 		fg_current_inout_battery = val;
 	}
 
-	bm_print(BM_LOG_CRTI, "[FG] gFG_current_inout_battery : %d\n", fg_current_inout_battery);
 	return sprintf(buf, "%d\n", fg_current_inout_battery);
 }
 
@@ -2810,7 +2614,6 @@ static DEVICE_ATTR(FG_Current, 0664, show_FG_Current, store_FG_Current);
 static ssize_t show_FG_g_fg_dbg_bat_volt(struct device *dev, struct device_attribute *attr,
 					 char *buf)
 {
-	bm_print(BM_LOG_CRTI, "[FG] g_fg_dbg_bat_volt : %d\n", g_fg_dbg_bat_volt);
 	return sprintf(buf, "%d\n", g_fg_dbg_bat_volt);
 }
 
@@ -2826,7 +2629,6 @@ static DEVICE_ATTR(FG_g_fg_dbg_bat_volt, 0664, show_FG_g_fg_dbg_bat_volt,
 static ssize_t show_FG_g_fg_dbg_bat_current(struct device *dev, struct device_attribute *attr,
 					    char *buf)
 {
-	bm_print(BM_LOG_CRTI, "[FG] g_fg_dbg_bat_current : %d\n", g_fg_dbg_bat_current);
 	return sprintf(buf, "%d\n", g_fg_dbg_bat_current);
 }
 
@@ -2842,7 +2644,6 @@ static DEVICE_ATTR(FG_g_fg_dbg_bat_current, 0664, show_FG_g_fg_dbg_bat_current,
 static ssize_t show_FG_g_fg_dbg_bat_zcv(struct device *dev, struct device_attribute *attr,
 					char *buf)
 {
-	bm_print(BM_LOG_CRTI, "[FG] g_fg_dbg_bat_zcv : %d\n", g_fg_dbg_bat_zcv);
 	return sprintf(buf, "%d\n", g_fg_dbg_bat_zcv);
 }
 
@@ -2857,7 +2658,6 @@ static DEVICE_ATTR(FG_g_fg_dbg_bat_zcv, 0664, show_FG_g_fg_dbg_bat_zcv, store_FG
 static ssize_t show_FG_g_fg_dbg_bat_temp(struct device *dev, struct device_attribute *attr,
 					 char *buf)
 {
-	bm_print(BM_LOG_CRTI, "[FG] g_fg_dbg_bat_temp : %d\n", g_fg_dbg_bat_temp);
 	return sprintf(buf, "%d\n", g_fg_dbg_bat_temp);
 }
 
@@ -2872,7 +2672,6 @@ static DEVICE_ATTR(FG_g_fg_dbg_bat_temp, 0664, show_FG_g_fg_dbg_bat_temp,
 /* ------------------------------------------------------------------------------------------- */
 static ssize_t show_FG_g_fg_dbg_bat_r(struct device *dev, struct device_attribute *attr, char *buf)
 {
-	bm_print(BM_LOG_CRTI, "[FG] g_fg_dbg_bat_r : %d\n", g_fg_dbg_bat_r);
 	return sprintf(buf, "%d\n", g_fg_dbg_bat_r);
 }
 
@@ -2887,7 +2686,6 @@ static DEVICE_ATTR(FG_g_fg_dbg_bat_r, 0664, show_FG_g_fg_dbg_bat_r, store_FG_g_f
 static ssize_t show_FG_g_fg_dbg_bat_car(struct device *dev, struct device_attribute *attr,
 					char *buf)
 {
-	bm_print(BM_LOG_CRTI, "[FG] g_fg_dbg_bat_car : %d\n", g_fg_dbg_bat_car);
 	return sprintf(buf, "%d\n", g_fg_dbg_bat_car);
 }
 
@@ -2902,7 +2700,6 @@ static DEVICE_ATTR(FG_g_fg_dbg_bat_car, 0664, show_FG_g_fg_dbg_bat_car, store_FG
 static ssize_t show_FG_g_fg_dbg_bat_qmax(struct device *dev, struct device_attribute *attr,
 					 char *buf)
 {
-	bm_print(BM_LOG_CRTI, "[FG] g_fg_dbg_bat_qmax : %d\n", g_fg_dbg_bat_qmax);
 	return sprintf(buf, "%d\n", g_fg_dbg_bat_qmax);
 }
 
@@ -2917,7 +2714,6 @@ static DEVICE_ATTR(FG_g_fg_dbg_bat_qmax, 0664, show_FG_g_fg_dbg_bat_qmax,
 /* ------------------------------------------------------------------------------------------- */
 static ssize_t show_FG_g_fg_dbg_d0(struct device *dev, struct device_attribute *attr, char *buf)
 {
-	bm_print(BM_LOG_CRTI, "[FG] g_fg_dbg_d0 : %d\n", g_fg_dbg_d0);
 	return sprintf(buf, "%d\n", g_fg_dbg_d0);
 }
 
@@ -2931,7 +2727,6 @@ static DEVICE_ATTR(FG_g_fg_dbg_d0, 0664, show_FG_g_fg_dbg_d0, store_FG_g_fg_dbg_
 /* ------------------------------------------------------------------------------------------- */
 static ssize_t show_FG_g_fg_dbg_d1(struct device *dev, struct device_attribute *attr, char *buf)
 {
-	bm_print(BM_LOG_CRTI, "[FG] g_fg_dbg_d1 : %d\n", g_fg_dbg_d1);
 	return sprintf(buf, "%d\n", g_fg_dbg_d1);
 }
 
@@ -2946,7 +2741,6 @@ static DEVICE_ATTR(FG_g_fg_dbg_d1, 0664, show_FG_g_fg_dbg_d1, store_FG_g_fg_dbg_
 static ssize_t show_FG_g_fg_dbg_percentage(struct device *dev, struct device_attribute *attr,
 					   char *buf)
 {
-	bm_print(BM_LOG_CRTI, "[FG] g_fg_dbg_percentage : %d\n", g_fg_dbg_percentage);
 	return sprintf(buf, "%d\n", g_fg_dbg_percentage);
 }
 
@@ -2962,7 +2756,6 @@ static DEVICE_ATTR(FG_g_fg_dbg_percentage, 0664, show_FG_g_fg_dbg_percentage,
 static ssize_t show_FG_g_fg_dbg_percentage_fg(struct device *dev, struct device_attribute *attr,
 					      char *buf)
 {
-	bm_print(BM_LOG_CRTI, "[FG] g_fg_dbg_percentage_fg : %d\n", g_fg_dbg_percentage_fg);
 	return sprintf(buf, "%d\n", g_fg_dbg_percentage_fg);
 }
 
@@ -2978,8 +2771,6 @@ static DEVICE_ATTR(FG_g_fg_dbg_percentage_fg, 0664, show_FG_g_fg_dbg_percentage_
 static ssize_t show_FG_g_fg_dbg_percentage_voltmode(struct device *dev,
 						    struct device_attribute *attr, char *buf)
 {
-	bm_print(BM_LOG_CRTI, "[FG] g_fg_dbg_percentage_voltmode : %d\n",
-		 g_fg_dbg_percentage_voltmode);
 	return sprintf(buf, "%d\n", g_fg_dbg_percentage_voltmode);
 }
 
@@ -2998,7 +2789,6 @@ static DEVICE_ATTR(FG_g_fg_dbg_percentage_voltmode, 0664, show_FG_g_fg_dbg_perce
 /* ------------------------------------------------------------------------------------------- */
 static ssize_t show_FG_suspend_current_threshold(struct device *dev, struct device_attribute *attr, char *buf)
 {
-	bm_print(BM_LOG_CRTI, "[FG] show suspend_current_threshold : %d\n", suspend_current_threshold);
 	return sprintf(buf, "%d\n", suspend_current_threshold);
 }
 
@@ -3008,16 +2798,12 @@ static ssize_t store_FG_suspend_current_threshold(struct device *dev, struct dev
 	char *pvalue = NULL;
 	U32 val = 0;
 
-	bm_print(BM_LOG_CRTI, "[store_FG_suspend_current_threshold] \n");
-
 	if(buf != NULL && size != 0)
 	{
-		bm_print(BM_LOG_CRTI, "[store_FG_suspend_current_threshold] buf is %s \n",buf);
 		val = simple_strtoul(buf,&pvalue,10);
 		if( val < 100 )
 			val = 100;
 		suspend_current_threshold = val;
-		bm_print(BM_LOG_CRTI, "[store_FG_suspend_current_threshold] suspend_current_threshold=%d\n", suspend_current_threshold);
 	}
 	return size;
 }
@@ -3027,7 +2813,6 @@ static DEVICE_ATTR(FG_suspend_current_threshold, 0664, show_FG_suspend_current_t
 /* ------------------------------------------------------------------------------------------- */
 static ssize_t show_FG_ocv_check_time(struct device *dev, struct device_attribute *attr, char *buf)
 {
-	bm_print(BM_LOG_CRTI, "[FG] show ocv_check_time : %d\n", ocv_check_time);
 	return sprintf(buf, "%d\n", ocv_check_time);
 }
 
@@ -3037,16 +2822,12 @@ static ssize_t store_FG_ocv_check_time(struct device *dev, struct device_attribu
 	char *pvalue = NULL;
 	U32 val = 0;
 
-	bm_print(BM_LOG_CRTI, "[store_FG_ocv_check_time] \n");
-
 	if(buf != NULL && size != 0)
 	{
-		bm_print(BM_LOG_CRTI, "[store_FG_ocv_check_time] buf is %s \n",buf);
 		val = simple_strtoul(buf,&pvalue,10);
 		if( val < 100 )
 			val = 100;
 		ocv_check_time = val;
-		bm_print(BM_LOG_CRTI, "[store_ocv_check_time] ocv_check_time=%d\n", ocv_check_time);
 	}
 	return size;
 }
@@ -3056,7 +2837,6 @@ static DEVICE_ATTR(FG_ocv_check_time, 0664, show_FG_ocv_check_time, store_FG_ocv
 /* ------------------------------------------------------------------------------------------- */
 static ssize_t show_FG_difference_voltage_update(struct device *dev, struct device_attribute *attr, char *buf)
 {
-	bm_print(BM_LOG_CRTI, "[FG] show ocv_check_time : %d\n", ocv_check_time);
 	return sprintf(buf, "%d\n", ocv_check_time);
 }
 
@@ -3066,16 +2846,12 @@ static ssize_t store_FG_difference_voltage_update(struct device *dev, struct dev
 	char *pvalue = NULL;
 	U32 val = 0;
 
-	bm_print(BM_LOG_CRTI, "[store_FG_difference_voltage_update] \n");
-
 	if(buf != NULL && size != 0)
 	{
-		bm_print(BM_LOG_CRTI, "[store_FG_difference_voltage_update] buf is %s \n",buf);
 		val = simple_strtoul(buf,&pvalue,10);
 		if( val < 0 )
 			val = 0;
 		difference_voltage_update = val;
-		bm_print(BM_LOG_CRTI, "[store_difference_voltage_update] difference_voltage_update=%d\n", difference_voltage_update);
 	}
 	return size;
 }
@@ -3085,7 +2861,6 @@ static DEVICE_ATTR(FG_difference_voltage_update, 0664, show_FG_difference_voltag
 
 static ssize_t show_FG_aging1_load_soc(struct device *dev, struct device_attribute *attr, char *buf)
 {
-	bm_print(BM_LOG_CRTI, "[FG] show aging1_load_soc : %d\n", aging1_load_soc);
 	return sprintf(buf, "%d\n", aging1_load_soc);
 }
 
@@ -3095,18 +2870,14 @@ static ssize_t store_FG_aging1_load_soc(struct device *dev, struct device_attrib
 	char *pvalue = NULL;
 	U32 val = 0;
 
-	bm_print(BM_LOG_CRTI, "[store_FG_aging1_load_soc] \n");
-
 	if(buf != NULL && size != 0)
 	{
-		bm_print(BM_LOG_CRTI, "[store_FG_aging1_load_soc] buf is %s \n",buf);
 		val = simple_strtoul(buf,&pvalue,10);
 		if( val < 0 )
 			val = 0;
 		if( val > 100 )
 			val = 100;
 		aging1_load_soc = val;
-		bm_print(BM_LOG_CRTI, "[store_aging1_load_soc] aging1_load_soc=%d\n", aging1_load_soc);
 	}
 	return size;
 }
@@ -3116,7 +2887,6 @@ static DEVICE_ATTR(FG_aging1_load_soc, 0664, show_FG_aging1_load_soc, store_FG_a
 
 static ssize_t show_FG_aging1_update_soc(struct device *dev, struct device_attribute *attr, char *buf)
 {
-	bm_print(BM_LOG_CRTI, "[FG] show aging1_update_soc : %d\n", aging1_update_soc);
 	return sprintf(buf, "%d\n", aging1_update_soc);
 }
 
@@ -3126,18 +2896,14 @@ static ssize_t store_FG_aging1_update_soc(struct device *dev, struct device_attr
 	char *pvalue = NULL;
 	U32 val = 0;
 
-	bm_print(BM_LOG_CRTI, "[store_FG_aging1_update_soc] \n");
-
 	if(buf != NULL && size != 0)
 	{
-		bm_print(BM_LOG_CRTI, "[store_FG_aging1_update_soc] buf is %s \n",buf);
 		val = simple_strtoul(buf,&pvalue,10);
 		if( val < 0 )
 			val = 0;
 		if( val > 100 )
 			val = 100;
 		aging1_update_soc = val;
-		bm_print(BM_LOG_CRTI, "[store_aging1_update_soc] aging1_update_soc=%d\n", aging1_update_soc);
 	}
 	return size;
 }
@@ -3147,7 +2913,6 @@ static DEVICE_ATTR(FG_aging1_update_soc, 0664, show_FG_aging1_update_soc, store_
 
 static ssize_t show_FG_shutdown_system_voltage(struct device *dev, struct device_attribute *attr, char *buf)
 {
-	bm_print(BM_LOG_CRTI, "[FG] show shutdown_system_voltage : %d\n", shutdown_system_voltage);
 	return sprintf(buf, "%d\n", shutdown_system_voltage);
 }
 
@@ -3157,16 +2922,12 @@ static ssize_t store_FG_shutdown_system_voltage(struct device *dev, struct devic
 	char *pvalue = NULL;
 	U32 val = 0;
 
-	bm_print(BM_LOG_CRTI, "[shutdown_system_voltage] \n");
-
 	if(buf != NULL && size != 0)
 	{
-		bm_print(BM_LOG_CRTI, "[shutdown_system_voltage] buf is %s \n",buf);
 		val = simple_strtoul(buf,&pvalue,10);
 		if( val < 0 )
 			val = 0;
 		shutdown_system_voltage = val;
-		bm_print(BM_LOG_CRTI, "[shutdown_system_voltage] shutdown_system_voltage=%d\n", shutdown_system_voltage);
 	}
 	return size;
 }
@@ -3176,7 +2937,6 @@ static DEVICE_ATTR(FG_shutdown_system_voltage, 0664, show_FG_shutdown_system_vol
 
 static ssize_t show_FG_charge_tracking_time(struct device *dev, struct device_attribute *attr, char *buf)
 {
-	bm_print(BM_LOG_CRTI, "[FG] show charge_tracking_time : %d\n", charge_tracking_time);
 	return sprintf(buf, "%d\n", charge_tracking_time);
 }
 
@@ -3186,16 +2946,12 @@ static ssize_t store_FG_charge_tracking_time(struct device *dev, struct device_a
 	char *pvalue = NULL;
 	U32 val = 0;
 
-	bm_print(BM_LOG_CRTI, "[charge_tracking_time] \n");
-
 	if(buf != NULL && size != 0)
 	{
-		bm_print(BM_LOG_CRTI, "[charge_tracking_time] buf is %s \n",buf);
 		val = simple_strtoul(buf,&pvalue,10);
 		if( val < 0 )
 			val = 0;
 		charge_tracking_time = val;
-		bm_print(BM_LOG_CRTI, "[charge_tracking_time] charge_tracking_time=%d\n", charge_tracking_time);
 	}
 	return size;
 }
@@ -3205,7 +2961,6 @@ static DEVICE_ATTR(FG_charge_tracking_time, 0664, show_FG_charge_tracking_time,
 
 static ssize_t show_FG_discharge_tracking_time(struct device *dev, struct device_attribute *attr, char *buf)
 {
-	bm_print(BM_LOG_CRTI, "[FG] show discharge_tracking_time : %d\n", discharge_tracking_time);
 	return sprintf(buf, "%d\n", discharge_tracking_time);
 }
 
@@ -3215,16 +2970,12 @@ static ssize_t store_FG_discharge_tracking_time(struct device *dev, struct devic
 	char *pvalue = NULL;
 	U32 val = 0;
 
-	bm_print(BM_LOG_CRTI, "[discharge_tracking_time] \n");
-
 	if(buf != NULL && size != 0)
 	{
-		bm_print(BM_LOG_CRTI, "[discharge_tracking_time] buf is %s \n",buf);
 		val = simple_strtoul(buf,&pvalue,10);
 		if( val < 0 )
 			val = 0;
 		discharge_tracking_time = val;
-		bm_print(BM_LOG_CRTI, "[discharge_tracking_time] discharge_tracking_time=%d\n", discharge_tracking_time);
 	}
 	return size;
 }
@@ -3234,7 +2985,6 @@ static DEVICE_ATTR(FG_discharge_tracking_time, 0664, show_FG_discharge_tracking_
 #endif
 static ssize_t show_FG_shutdown_gauge0(struct device *dev, struct device_attribute *attr, char *buf)
 {
-	bm_print(BM_LOG_CRTI, "[FG] show shutdown_gauge0 : %d\n", shutdown_gauge0);
 	return sprintf(buf, "%d\n", shutdown_gauge0);
 }
 
@@ -3244,16 +2994,12 @@ static ssize_t store_FG_shutdown_gauge0(struct device *dev, struct device_attrib
 	char *pvalue = NULL;
 	U32 val = 0;
 
-	bm_print(BM_LOG_CRTI, "[shutdown_gauge0] \n");
-
 	if(buf != NULL && size != 0)
 	{
-		bm_print(BM_LOG_CRTI, "[shutdown_gauge0] buf is %s \n",buf);
 		val = simple_strtoul(buf,&pvalue,10);
 		if( val < 0 )
 			val = 0;
 		shutdown_gauge0 = val;
-		bm_print(BM_LOG_CRTI, "[shutdown_gauge0] shutdown_gauge0=%d\n", shutdown_gauge0);
 	}
 	return size;
 }
@@ -3263,7 +3009,6 @@ static DEVICE_ATTR(FG_shutdown_gauge0, 0664, show_FG_shutdown_gauge0, store_FG_s
 
 static ssize_t show_FG_shutdown_gauge1_xmins(struct device *dev, struct device_attribute *attr, char *buf)
 {
-	bm_print(BM_LOG_CRTI, "[FG] show shutdown_gauge1_xmins : %d\n", shutdown_gauge1_xmins);
 	return sprintf(buf, "%d\n", shutdown_gauge1_xmins);
 }
 
@@ -3273,16 +3018,12 @@ static ssize_t store_FG_shutdown_gauge1_xmins(struct device *dev, struct device_
 	char *pvalue = NULL;
 	U32 val = 0;
 
-	bm_print(BM_LOG_CRTI, "[shutdown_gauge1_xmins] \n");
-
 	if(buf != NULL && size != 0)
 	{
-		bm_print(BM_LOG_CRTI, "[shutdown_gauge1_xmins] buf is %s \n",buf);
 		val = simple_strtoul(buf,&pvalue,10);
 		if( val < 0 )
 			val = 0;
 		shutdown_gauge1_xmins = val;
-		bm_print(BM_LOG_CRTI, "[shutdown_gauge1_xmins] shutdown_gauge1_xmins=%d\n", shutdown_gauge1_xmins);
 	}
 	return size;
 }
@@ -3292,7 +3033,6 @@ static DEVICE_ATTR(FG_shutdown_gauge1_xmins, 0664, show_FG_shutdown_gauge1_xmins
 
 static ssize_t show_FG_shutdown_gauge1_mins(struct device *dev, struct device_attribute *attr, char *buf)
 {
-	bm_print(BM_LOG_CRTI, "[FG] show shutdown_gauge1_mins : %d\n", shutdown_gauge1_mins);
 	return sprintf(buf, "%d\n", shutdown_gauge1_mins);
 }
 
@@ -3302,16 +3042,12 @@ static ssize_t store_FG_shutdown_gauge1_mins(struct device *dev, struct device_a
 	char *pvalue = NULL;
 	U32 val = 0;
 
-	bm_print(BM_LOG_CRTI, "[shutdown_gauge1_mins] \n");
-
 	if(buf != NULL && size != 0)
 	{
-		bm_print(BM_LOG_CRTI, "[shutdown_gauge1_mins] buf is %s \n",buf);
 		val = simple_strtoul(buf,&pvalue,10);
 		if( val < 0 )
 			val = 0;
 		shutdown_gauge1_mins = val;
-		bm_print(BM_LOG_CRTI, "[shutdown_gauge1_mins] shutdown_gauge1_mins=%d\n", shutdown_gauge1_mins);
 	}
 	return size;
 }
@@ -3348,7 +3084,6 @@ static int battery_meter_probe(struct platform_device *dev)
 	int ret_device_file = 0;
 	char* temp_strptr;
 
-	bm_print(BM_LOG_CRTI, "[battery_meter_probe] probe\n");
 	/* select battery meter control method */
 	battery_meter_ctrl = bm_ctrl_cmd;
 #if defined (CONFIG_MTK_KERNEL_POWER_OFF_CHARGING)
@@ -3418,13 +3153,11 @@ static int battery_meter_probe(struct platform_device *dev)
 
 static int battery_meter_remove(struct platform_device *dev)
 {
-	bm_print(BM_LOG_CRTI, "[battery_meter_remove]\n");
 	return 0;
 }
 
 static void battery_meter_shutdown(struct platform_device *dev)
 {
-	bm_print(BM_LOG_CRTI, "[battery_meter_shutdown]\n");
 }
 
 static int battery_meter_suspend(struct platform_device *dev, pm_message_t state)
@@ -3442,13 +3175,11 @@ static int battery_meter_suspend(struct platform_device *dev, pm_message_t state
 #elif defined(SOC_BY_HW_FG)
 		if (reset_fg_bat_int==KAL_TRUE)
 		{
-			bm_print(BM_LOG_CRTI, "[battery_meter_suspend]enable battery_meter_set_columb_interrupt\n");
 			battery_meter_set_columb_interrupt(gFG_BATT_CAPACITY/100);
 			reset_fg_bat_int=KAL_FALSE;
 		}
 		else
 		{
-			bm_print(BM_LOG_CRTI, "[battery_meter_suspend]do not enable battery_meter_set_columb_interrupt\n");
 			battery_meter_set_columb_interrupt(0x1ffff);	
 		}
 #endif
@@ -3488,13 +3219,11 @@ static int battery_meter_suspend(struct platform_device *dev, pm_message_t state
 		sleep_total_time = 0;
 		last_time = 0;
 		battery_meter_ctrl(BATTERY_METER_CMD_GET_HW_OCV, &g_hw_ocv_before_sleep);
-		bm_print(BM_LOG_CRTI, "[battery_meter_suspend]2. sleep_total_time = %d, last_time = %d\n", sleep_total_time, last_time);
 	}
 #endif
 
 	battery_meter_ctrl(BATTERY_METER_CMD_GET_REFRESH_HW_OCV, &hwocv_token);
 
-	bm_print(BM_LOG_CRTI, "[battery_meter_suspend]\n");
 	return 0;
 }
 
@@ -3555,8 +3284,6 @@ static int battery_meter_resume(struct platform_device *dev)
 
 		if(voltage==hwocv_token) {
 			oam_car_tmp=-time*APSLEEP_MDWAKEUP_CAR;
-			bm_print(BM_LOG_CRTI, "[battery_meter_resume](1)time:%d bat:%d ocv:%d r:%d i:%d ocar:%d card:%d lbat:%d %d\n",time,voltage,oam_v_ocv,oam_r,oam_i,ap_suspend_car/3600,oam_car_tmp/3600, 
-			pmic_get_register_value(PMIC_RG_ADC_OUT_LBAT), pmic_get_register_value(PMIC_RG_LBAT_DEBOUNCE_COUNT_MIN));
 			last_hwocv=0;
 			last_i=0;
 			is_hwocv_update=KAL_FALSE;
@@ -3569,10 +3296,6 @@ static int battery_meter_resume(struct platform_device *dev)
 		last_hwocv=voltage;
 		last_i=oam_i;
 			is_hwocv_update=KAL_TRUE;
-
-			bm_print(BM_LOG_CRTI, "[battery_meter_resume](2)time:%d bat:%d ocv:%d r:%d i:%d ocar:%d card:%d lbat:%d %d\n",time,voltage,oam_v_ocv,oam_r,oam_i,ap_suspend_car/3600,oam_car_tmp/3600, 
-			pmic_get_register_value(PMIC_RG_ADC_OUT_LBAT), pmic_get_register_value(PMIC_RG_LBAT_DEBOUNCE_COUNT_MIN));
-
 		}
 
 		swfg_ap_suspend_time=swfg_ap_suspend_time+time;
@@ -3602,7 +3325,6 @@ static int battery_meter_resume(struct platform_device *dev)
 	bat_spm_timeout = true;
 
 #endif
-	bm_print(BM_LOG_CRTI, "[battery_meter_resume]\n");
 	return 0;
 }
 
@@ -3637,8 +3359,6 @@ static int battery_meter_dts_probe(struct platform_device *dev)
 {
 	int ret = 0;
 
-	battery_xlog_printk(BAT_LOG_CRTI, "******** battery_meter_dts_probe!! ********\n");
-
 	battery_meter_device.dev.of_node = dev->dev.of_node;
 	ret = platform_device_register(&battery_meter_device);
     if (ret) {
@@ -3683,7 +3403,6 @@ void bmd_ctrl_cmd_from_user(void *nl_data, struct fgd_nl_msg_t *ret_msg)
 			ret_msg->fgd_data_len += sizeof(init_flag);
 			memcpy(ret_msg->fgd_data, &init_flag, sizeof(init_flag));
 			//bm_print(BM_LOG_CRTI, " ret_msg->fgd_data_len %d\n",ret_msg->fgd_data_len);
-			bm_print(BM_LOG_CRTI, "[fg_res] init_flag = %d\n",init_flag);
 		}
 		break;
 
@@ -3692,7 +3411,6 @@ void bmd_ctrl_cmd_from_user(void *nl_data, struct fgd_nl_msg_t *ret_msg)
 			ret_msg->fgd_data_len += sizeof(gFG_capacity_by_c);
 			memcpy(ret_msg->fgd_data, &gFG_capacity_by_c, sizeof(gFG_capacity_by_c));
 			//bm_print(BM_LOG_CRTI, " ret_msg->fgd_data_len %d\n",ret_msg->fgd_data_len);
-			bm_print(BM_LOG_CRTI, "[fg_res] gFG_capacity_by_c = %d\n",gFG_capacity_by_c);
 		}
 		break;
 		case FG_DAEMON_CMD_GET_DOD0:
@@ -3700,7 +3418,6 @@ void bmd_ctrl_cmd_from_user(void *nl_data, struct fgd_nl_msg_t *ret_msg)
 			ret_msg->fgd_data_len += sizeof(gFG_DOD0);
 			memcpy(ret_msg->fgd_data, &gFG_DOD0, sizeof(gFG_DOD0));
 			//bm_print(BM_LOG_CRTI, " ret_msg->fgd_data_len %d\n",ret_msg->fgd_data_len);
-			bm_print(BM_LOG_CRTI, "[fg_res] gFG_DOD0 = %d\n",gFG_DOD0);
 		}
 		break;
 		case FG_DAEMON_CMD_GET_DOD1:
@@ -3708,7 +3425,6 @@ void bmd_ctrl_cmd_from_user(void *nl_data, struct fgd_nl_msg_t *ret_msg)
 			ret_msg->fgd_data_len += sizeof(gFG_DOD1);
 			memcpy(ret_msg->fgd_data, &gFG_DOD1, sizeof(gFG_DOD1));
 			//bm_print(BM_LOG_CRTI, " ret_msg->fgd_data_len %d\n",ret_msg->fgd_data_len);
-			bm_print(BM_LOG_CRTI, "[fg_res] gFG_DOD1 = %d\n",gFG_DOD1);
 		}
 		break;
 
@@ -3721,7 +3437,6 @@ void bmd_ctrl_cmd_from_user(void *nl_data, struct fgd_nl_msg_t *ret_msg)
 			ret_msg->fgd_data_len += sizeof(voltage);
 			memcpy(ret_msg->fgd_data, &voltage, sizeof(voltage));
 			//bm_print(BM_LOG_CRTI, " ret_msg->fgd_data_len %d\n",ret_msg->fgd_data_len);
-			bm_print(BM_LOG_CRTI, "[fg_res] voltage = %d\n",voltage);
 			gFG_hwocv = voltage;
 		}
 		break;
@@ -3731,7 +3446,6 @@ void bmd_ctrl_cmd_from_user(void *nl_data, struct fgd_nl_msg_t *ret_msg)
 			ret_msg->fgd_data_len += sizeof(gFG_current_init);
 			memcpy(ret_msg->fgd_data, &gFG_current_init, sizeof(gFG_current_init));
 			//bm_print(BM_LOG_CRTI, " ret_msg->fgd_data_len %d\n",ret_msg->fgd_data_len);
-			bm_print(BM_LOG_CRTI, "[fg_res] fg_current = %d\n",gFG_current_init);
 			gFG_current = gFG_current_init;
 		}
 		break;
@@ -3745,7 +3459,6 @@ void bmd_ctrl_cmd_from_user(void *nl_data, struct fgd_nl_msg_t *ret_msg)
 			ret_msg->fgd_data_len += sizeof(fg_current);
 			memcpy(ret_msg->fgd_data, &fg_current, sizeof(fg_current));
 			//bm_print(BM_LOG_CRTI, " ret_msg->fgd_data_len %d\n",ret_msg->fgd_data_len);
-			bm_print(BM_LOG_CRTI, "[fg_res] fg_current = %d\n",fg_current);
 			gFG_current = fg_current;
 		}
 		break;
@@ -3755,7 +3468,6 @@ void bmd_ctrl_cmd_from_user(void *nl_data, struct fgd_nl_msg_t *ret_msg)
 			ret_msg->fgd_data_len += sizeof(gFG_Is_Charging_init);
 			memcpy(ret_msg->fgd_data, &gFG_Is_Charging_init, sizeof(gFG_Is_Charging_init));
 			//bm_print(BM_LOG_CRTI, " ret_msg->fgd_data_len %d\n",ret_msg->fgd_data_len);
-			bm_print(BM_LOG_CRTI, "[fg_res] current_state = %d\n",gFG_Is_Charging_init);
 			gFG_Is_Charging = gFG_Is_Charging_init;
 		}
 		break;
@@ -3769,7 +3481,6 @@ void bmd_ctrl_cmd_from_user(void *nl_data, struct fgd_nl_msg_t *ret_msg)
 			ret_msg->fgd_data_len += sizeof(current_state);
 			memcpy(ret_msg->fgd_data, &current_state, sizeof(current_state));
 			//bm_print(BM_LOG_CRTI, " ret_msg->fgd_data_len %d\n",ret_msg->fgd_data_len);
-			bm_print(BM_LOG_CRTI, "[fg_res] current_state = %d\n",current_state);
 			gFG_Is_Charging = current_state;
 		}
 		break;
@@ -3782,7 +3493,6 @@ void bmd_ctrl_cmd_from_user(void *nl_data, struct fgd_nl_msg_t *ret_msg)
 			ret_msg->fgd_data_len += sizeof(fg_coulomb);
 			memcpy(ret_msg->fgd_data, &fg_coulomb, sizeof(fg_coulomb));
 			//bm_print(BM_LOG_CRTI, " ret_msg->fgd_data_len %d\n",ret_msg->fgd_data_len);
-			bm_print(BM_LOG_CRTI, "[fg_res] fg_coulomb = %d\n",fg_coulomb);
 			gFG_coulomb_act = fg_coulomb;
 			break;
 		}
@@ -3793,9 +3503,7 @@ void bmd_ctrl_cmd_from_user(void *nl_data, struct fgd_nl_msg_t *ret_msg)
 			int temperture = 0;
 
 			memcpy(&update, &msg->fgd_data[0], sizeof(update));
-			bm_print(BM_LOG_CRTI, "[fg_res] update = %d\n",update);
 			temperture = force_get_tbat(update);
-			bm_print(BM_LOG_CRTI, "[fg_res] temperture = %d\n",temperture);
 			ret_msg->fgd_data_len += sizeof(temperture);
 			memcpy(ret_msg->fgd_data, &temperture, sizeof(temperture));
 			gFG_temp = temperture;
@@ -3814,7 +3522,6 @@ void bmd_ctrl_cmd_from_user(void *nl_data, struct fgd_nl_msg_t *ret_msg)
 			ret_msg->fgd_data_len += sizeof(charging_enable);
 			memcpy(ret_msg->fgd_data, &charging_enable, sizeof(charging_enable));
 			//bm_print(BM_LOG_CRTI, " ret_msg->fgd_data_len %d\n",ret_msg->fgd_data_len);
-			bm_print(BM_LOG_CRTI, "[fg_res] charging_enable = %d\n",charging_enable);
 		}
 		break;
 
@@ -3823,7 +3530,6 @@ void bmd_ctrl_cmd_from_user(void *nl_data, struct fgd_nl_msg_t *ret_msg)
 			ret_msg->fgd_data_len += sizeof(gFG_voltage_init);
 			memcpy(ret_msg->fgd_data, &gFG_voltage_init, sizeof(gFG_voltage_init));
 			//bm_print(BM_LOG_CRTI, " ret_msg->fgd_data_len %d\n",ret_msg->fgd_data_len);
-			bm_print(BM_LOG_CRTI, "[fg_res] voltage = %d\n",gFG_voltage_init);
 		}
 		break;
 
@@ -3833,7 +3539,6 @@ void bmd_ctrl_cmd_from_user(void *nl_data, struct fgd_nl_msg_t *ret_msg)
 			int voltage = 0;
 
 			memcpy(&update, &msg->fgd_data[0], sizeof(update));
-			bm_print(BM_LOG_CRTI, "[fg_res] update = %d\n", update);
 			if (update == 1) {
 				voltage = battery_meter_get_battery_voltage(KAL_TRUE);
 			} else {
@@ -3842,12 +3547,10 @@ void bmd_ctrl_cmd_from_user(void *nl_data, struct fgd_nl_msg_t *ret_msg)
 			ret_msg->fgd_data_len += sizeof(voltage);
 			memcpy(ret_msg->fgd_data, &voltage, sizeof(voltage));
 			//bm_print(BM_LOG_CRTI, " ret_msg->fgd_data_len %d\n",ret_msg->fgd_data_len);
-			bm_print(BM_LOG_CRTI, "[fg_res] voltage = %d\n",voltage);
 		}
 		break;
 
 		case FG_DAEMON_CMD_FGADC_RESET:
-			bm_print(BM_LOG_CRTI, "[fg_res] fgadc_reset\n");
 			battery_meter_ctrl(BATTERY_METER_CMD_HW_RESET, NULL);
 		break;
 
@@ -3858,7 +3561,6 @@ void bmd_ctrl_cmd_from_user(void *nl_data, struct fgd_nl_msg_t *ret_msg)
 			ret_msg->fgd_data_len += sizeof(plugout_status);
 			memcpy(ret_msg->fgd_data, &plugout_status, sizeof(plugout_status));
 			//bm_print(BM_LOG_CRTI, " ret_msg->fgd_data_len %d\n",ret_msg->fgd_data_len);
-			bm_print(BM_LOG_CRTI, "[fg_res] plugout_status = %d\n",plugout_status);
 
 			gFG_plugout_status = plugout_status;
 		}
@@ -3871,7 +3573,6 @@ void bmd_ctrl_cmd_from_user(void *nl_data, struct fgd_nl_msg_t *ret_msg)
 			ret_msg->fgd_data_len += sizeof(rtc_fg_soc);
 			memcpy(ret_msg->fgd_data, &rtc_fg_soc, sizeof(rtc_fg_soc));
 			//bm_print(BM_LOG_CRTI, " ret_msg->fgd_data_len %d\n",ret_msg->fgd_data_len);
-			bm_print(BM_LOG_CRTI, "[fg_res] rtc_fg_soc = %d\n",rtc_fg_soc);
 		}
 		break;
 
@@ -3882,7 +3583,6 @@ void bmd_ctrl_cmd_from_user(void *nl_data, struct fgd_nl_msg_t *ret_msg)
 			ret_msg->fgd_data_len += sizeof(charger_exist);
 			memcpy(ret_msg->fgd_data, &charger_exist, sizeof(charger_exist));
 			//bm_print(BM_LOG_CRTI, " ret_msg->fgd_data_len %d\n",ret_msg->fgd_data_len);
-			bm_print(BM_LOG_CRTI, "[fg_res] charger_exist = %d\n",charger_exist);
 		}
 		break;
 
@@ -3893,7 +3593,6 @@ void bmd_ctrl_cmd_from_user(void *nl_data, struct fgd_nl_msg_t *ret_msg)
 			ret_msg->fgd_data_len += sizeof(battery_full);
 			memcpy(ret_msg->fgd_data, &battery_full, sizeof(battery_full));
 			//bm_print(BM_LOG_CRTI, " ret_msg->fgd_data_len %d\n",ret_msg->fgd_data_len);
-			bm_print(BM_LOG_CRTI, "[fg_res] battery_full = %d\n",battery_full);
 		}
 		break;
 
@@ -3901,8 +3600,6 @@ void bmd_ctrl_cmd_from_user(void *nl_data, struct fgd_nl_msg_t *ret_msg)
 		{
 			ret_msg->fgd_data_len += sizeof(g_boot_reason);
 			memcpy(ret_msg->fgd_data, &g_boot_reason, sizeof(g_boot_reason));
-			bm_print(BM_LOG_CRTI, " ret_msg->fgd_data_len %d\n",ret_msg->fgd_data_len);
-			bm_print(BM_LOG_CRTI, "[fg_res] g_boot_reason = %d\n",g_boot_reason);
 		}
 		break;
 
@@ -3912,7 +3609,6 @@ void bmd_ctrl_cmd_from_user(void *nl_data, struct fgd_nl_msg_t *ret_msg)
 			ret_msg->fgd_data_len += sizeof(ICharging);
 			memcpy(ret_msg->fgd_data, &ICharging, sizeof(ICharging));
 			//bm_print(BM_LOG_CRTI, " ret_msg->fgd_data_len %d\n",ret_msg->fgd_data_len);
-			bm_print(BM_LOG_CRTI, "[fg_res] ICharging = %d\n",ICharging);
 		}
 		break;
 
@@ -3922,7 +3618,6 @@ void bmd_ctrl_cmd_from_user(void *nl_data, struct fgd_nl_msg_t *ret_msg)
 			ret_msg->fgd_data_len += sizeof(charger_vol);
 			memcpy(ret_msg->fgd_data, &charger_vol, sizeof(charger_vol));
 			//bm_print(BM_LOG_CRTI, " ret_msg->fgd_data_len %d\n",ret_msg->fgd_data_len);
-			bm_print(BM_LOG_CRTI, "[fg_res] charger_vol = %d\n",charger_vol);
 		}
 		break;
 
@@ -3932,7 +3627,6 @@ void bmd_ctrl_cmd_from_user(void *nl_data, struct fgd_nl_msg_t *ret_msg)
 			ret_msg->fgd_data_len += sizeof(shutdown_cond);
 			memcpy(ret_msg->fgd_data, &shutdown_cond, sizeof(shutdown_cond));
 			//bm_print(BM_LOG_CRTI, " ret_msg->fgd_data_len %d\n",ret_msg->fgd_data_len);
-			bm_print(BM_LOG_CRTI, "[fg_res] shutdown_cond = %d\n",shutdown_cond);
 		}
 		break;
 
@@ -3941,7 +3635,6 @@ void bmd_ctrl_cmd_from_user(void *nl_data, struct fgd_nl_msg_t *ret_msg)
 			kal_bool version;
 
 			memcpy(&version, &msg->fgd_data[0], sizeof(version));
-			bm_print(BM_LOG_CRTI, "[fg_res] version = %d\n",version);
 
 			if (version != CUST_SETTING_VERSION)
 			{
@@ -3955,16 +3648,6 @@ void bmd_ctrl_cmd_from_user(void *nl_data, struct fgd_nl_msg_t *ret_msg)
 			memcpy(&ret_msg->fgd_data[ret_msg->fgd_data_len], &batt_meter_table_cust_data, sizeof(batt_meter_table_cust_data));
 			ret_msg->fgd_data_len += sizeof(batt_meter_table_cust_data);
 
-
-			bm_print(BM_LOG_CRTI, "k fgauge_construct_profile_init1 %d:%d %d:%d %d:%d %d:%d %d:%d\n", 
-				batt_meter_table_cust_data.battery_profile_t0[0].percentage,batt_meter_table_cust_data.battery_profile_t0[0].voltage,
-				batt_meter_table_cust_data.battery_profile_t0[10].percentage,batt_meter_table_cust_data.battery_profile_t0[10].voltage,
-				batt_meter_table_cust_data.battery_profile_t0[20].percentage,batt_meter_table_cust_data.battery_profile_t0[20].voltage,
-				batt_meter_table_cust_data.battery_profile_t0[30].percentage,batt_meter_table_cust_data.battery_profile_t0[30].voltage,
-				batt_meter_table_cust_data.battery_profile_t0[40].percentage,batt_meter_table_cust_data.battery_profile_t0[40].voltage
-				);
-
-			
 			
 			//bm_print(BM_LOG_CRTI, " FG_DAEMON_CMD_GET_CUSTOM_SETTING ret_msg->fgd_data_len %d\n",ret_msg->fgd_data_len);
 		}
@@ -3975,7 +3658,6 @@ void bmd_ctrl_cmd_from_user(void *nl_data, struct fgd_nl_msg_t *ret_msg)
 			ret_msg->fgd_data_len += sizeof(BMT_status.UI_SOC);
 			memcpy(ret_msg->fgd_data, &(BMT_status.UI_SOC), sizeof(BMT_status.UI_SOC));
 			//bm_print(BM_LOG_CRTI, " ret_msg->fgd_data_len %d\n",ret_msg->fgd_data_len);
-			bm_print(BM_LOG_CRTI, "[fg_res] ui soc = %d\n", BMT_status.UI_SOC);
 		}
 		break;
 
@@ -3984,7 +3666,6 @@ void bmd_ctrl_cmd_from_user(void *nl_data, struct fgd_nl_msg_t *ret_msg)
 			ret_msg->fgd_data_len += sizeof(cv_voltage);
 			memcpy(ret_msg->fgd_data, &cv_voltage, sizeof(cv_voltage));
 			//bm_print(BM_LOG_CRTI, " ret_msg->fgd_data_len %d\n",ret_msg->fgd_data_len);
-			bm_print(BM_LOG_CRTI, "[fg_res] cv value = %d\n", cv_voltage);
 		}
 		break;
 
@@ -3994,13 +3675,11 @@ void bmd_ctrl_cmd_from_user(void *nl_data, struct fgd_nl_msg_t *ret_msg)
 			BATTERY_TIME_ENUM duration_type;
 
 			memcpy(&duration_type, &msg->fgd_data[0], sizeof(duration_type));
-			bm_print(BM_LOG_CRTI, "[fg_res] duration_type = %d\n", duration_type);
 
 			duration_time = mt_battery_get_duration_time(duration_type);
 			ret_msg->fgd_data_len += sizeof(duration_time);
 			memcpy(ret_msg->fgd_data, &duration_time, sizeof(duration_time));
 			//bm_print(BM_LOG_CRTI, " ret_msg->fgd_data_len %d\n",ret_msg->fgd_data_len);
-			bm_print(BM_LOG_CRTI, "[fg_res] duration time = %d\n", duration_time);
 		}
 		break;
 
@@ -4009,7 +3688,6 @@ void bmd_ctrl_cmd_from_user(void *nl_data, struct fgd_nl_msg_t *ret_msg)
 			ret_msg->fgd_data_len += sizeof(battery_tracking_time);
 			memcpy(ret_msg->fgd_data, &battery_tracking_time, sizeof(battery_tracking_time));
 			//bm_print(BM_LOG_CRTI, " ret_msg->fgd_data_len %d\n",ret_msg->fgd_data_len);
-			bm_print(BM_LOG_CRTI, "[fg_res] tracking time = %d\n", battery_tracking_time);
 		}
 		break;
 
@@ -4018,7 +3696,6 @@ void bmd_ctrl_cmd_from_user(void *nl_data, struct fgd_nl_msg_t *ret_msg)
 			ret_msg->fgd_data_len += sizeof(suspend_current_threshold);
 			memcpy(ret_msg->fgd_data, &suspend_current_threshold, sizeof(suspend_current_threshold));
 			//bm_print(BM_LOG_CRTI, " ret_msg->fgd_data_len %d\n",ret_msg->fgd_data_len);
-			bm_print(BM_LOG_CRTI, "[fg_res] suspend_current_threshold = %d\n", suspend_current_threshold);
 		}
 		break;
 
@@ -4027,7 +3704,6 @@ void bmd_ctrl_cmd_from_user(void *nl_data, struct fgd_nl_msg_t *ret_msg)
 			ret_msg->fgd_data_len += sizeof(ocv_check_time);
 			memcpy(ret_msg->fgd_data, &ocv_check_time, sizeof(ocv_check_time));
 			//bm_print(BM_LOG_CRTI, " ret_msg->fgd_data_len %d\n",ret_msg->fgd_data_len);
-			bm_print(BM_LOG_CRTI, "[fg_res] check time = %d\n", ocv_check_time);
 		}
 		break;
 
@@ -4036,7 +3712,6 @@ void bmd_ctrl_cmd_from_user(void *nl_data, struct fgd_nl_msg_t *ret_msg)
 			ret_msg->fgd_data_len += sizeof(difference_voltage_update);
 			memcpy(ret_msg->fgd_data, &difference_voltage_update, sizeof(difference_voltage_update));
 			//bm_print(BM_LOG_CRTI, " ret_msg->fgd_data_len %d\n",ret_msg->fgd_data_len);
-			bm_print(BM_LOG_CRTI, "[fg_res] difference_voltage_update = %d\n", difference_voltage_update);
 		}
 		break;
 
@@ -4045,7 +3720,6 @@ void bmd_ctrl_cmd_from_user(void *nl_data, struct fgd_nl_msg_t *ret_msg)
 			ret_msg->fgd_data_len += sizeof(aging1_load_soc);
 			memcpy(ret_msg->fgd_data, &aging1_load_soc, sizeof(aging1_load_soc));
 			//bm_print(BM_LOG_CRTI, " ret_msg->fgd_data_len %d\n",ret_msg->fgd_data_len);
-			bm_print(BM_LOG_CRTI, "[fg_res] aging1_load_soc = %d\n", aging1_load_soc);
 		}
 		break;
 		case FG_DAEMON_CMD_GET_AGING1_UPDATE_SOC:
@@ -4053,7 +3727,6 @@ void bmd_ctrl_cmd_from_user(void *nl_data, struct fgd_nl_msg_t *ret_msg)
 			ret_msg->fgd_data_len += sizeof(aging1_update_soc);
 			memcpy(ret_msg->fgd_data, &aging1_update_soc, sizeof(aging1_update_soc));
 			//bm_print(BM_LOG_CRTI, " ret_msg->fgd_data_len %d\n",ret_msg->fgd_data_len);
-			bm_print(BM_LOG_CRTI, "[fg_res] aging1_update_soc = %d\n", aging1_update_soc);
 		}
 		break;
 
@@ -4062,7 +3735,6 @@ void bmd_ctrl_cmd_from_user(void *nl_data, struct fgd_nl_msg_t *ret_msg)
 			ret_msg->fgd_data_len += sizeof(shutdown_system_voltage);
 			memcpy(ret_msg->fgd_data, &shutdown_system_voltage, sizeof(shutdown_system_voltage));
 			//bm_print(BM_LOG_CRTI, " ret_msg->fgd_data_len %d\n",ret_msg->fgd_data_len);
-			bm_print(BM_LOG_CRTI, "[fg_res] shutdown_system_voltage = %d\n", shutdown_system_voltage);
 		}
 		break;
 
@@ -4071,7 +3743,6 @@ void bmd_ctrl_cmd_from_user(void *nl_data, struct fgd_nl_msg_t *ret_msg)
 			ret_msg->fgd_data_len += sizeof(charge_tracking_time);
 			memcpy(ret_msg->fgd_data, &charge_tracking_time, sizeof(charge_tracking_time));
 			//bm_print(BM_LOG_CRTI, " ret_msg->fgd_data_len %d\n",ret_msg->fgd_data_len);
-			bm_print(BM_LOG_CRTI, "[fg_res] charge_tracking_time = %d\n", charge_tracking_time);
 		}
 		break;
 
@@ -4080,7 +3751,6 @@ void bmd_ctrl_cmd_from_user(void *nl_data, struct fgd_nl_msg_t *ret_msg)
 			ret_msg->fgd_data_len += sizeof(discharge_tracking_time);
 			memcpy(ret_msg->fgd_data, &discharge_tracking_time, sizeof(discharge_tracking_time));
 			//bm_print(BM_LOG_CRTI, " ret_msg->fgd_data_len %d\n",ret_msg->fgd_data_len);
-			bm_print(BM_LOG_CRTI, "[fg_res] discharge_tracking_time = %d\n", discharge_tracking_time);
 		}
 		break;
 
@@ -4089,7 +3759,6 @@ void bmd_ctrl_cmd_from_user(void *nl_data, struct fgd_nl_msg_t *ret_msg)
 			ret_msg->fgd_data_len += sizeof(shutdown_gauge0);
 			memcpy(ret_msg->fgd_data, &shutdown_gauge0, sizeof(shutdown_gauge0));
 			//bm_print(BM_LOG_CRTI, " ret_msg->fgd_data_len %d\n",ret_msg->fgd_data_len);
-			bm_print(BM_LOG_CRTI, "[fg_res] shutdown_gauge0 = %d\n", shutdown_gauge0);
 		}
 		break;
 
@@ -4098,7 +3767,6 @@ void bmd_ctrl_cmd_from_user(void *nl_data, struct fgd_nl_msg_t *ret_msg)
 			ret_msg->fgd_data_len += sizeof(shutdown_gauge1_xmins);
 			memcpy(ret_msg->fgd_data, &shutdown_gauge1_xmins, sizeof(shutdown_gauge1_xmins));
 			//bm_print(BM_LOG_CRTI, " ret_msg->fgd_data_len %d\n",ret_msg->fgd_data_len);
-			bm_print(BM_LOG_CRTI, "[fg_res] shutdown_gauge1_xmins = %d\n", shutdown_gauge1_xmins);
 		}
 		break;
 
@@ -4107,61 +3775,52 @@ void bmd_ctrl_cmd_from_user(void *nl_data, struct fgd_nl_msg_t *ret_msg)
 			ret_msg->fgd_data_len += sizeof(shutdown_gauge1_mins);
 			memcpy(ret_msg->fgd_data, &shutdown_gauge1_mins, sizeof(shutdown_gauge1_mins));
 			//bm_print(BM_LOG_CRTI, " ret_msg->fgd_data_len %d\n",ret_msg->fgd_data_len);
-			bm_print(BM_LOG_CRTI, "[fg_res] shutdown_gauge1_mins = %d\n", shutdown_gauge1_mins);
 		}
 		break;
 
 		case FG_DAEMON_CMD_SET_SUSPEND_TIME:
-			bm_print(BM_LOG_CRTI, "[fg_res] set suspend time\n");
 			get_monotonic_boottime(&suspend_time);
 		break;
 
 		case FG_DAEMON_CMD_SET_WAKEUP_SMOOTH_TIME:
 		{
 			memcpy(&wake_up_smooth_time, &msg->fgd_data[0], sizeof(wake_up_smooth_time));
-			bm_print(BM_LOG_CRTI, "[fg_res] wake_up_smooth_time = %d\n", wake_up_smooth_time);
 		}
 		break;
 
 		case FG_DAEMON_CMD_SET_IS_CHARGING:
 		{
 			memcpy(&gFG_coulomb_is_charging, &msg->fgd_data[0], sizeof(gFG_coulomb_is_charging));
-			bm_print(BM_LOG_CRTI, "[fg_res] is_charging = %d\n", gFG_coulomb_is_charging);
 		}
 		break;
 
 		case FG_DAEMON_CMD_SET_RBAT:
 		{
 			memcpy(&gFG_resistance_bat, &msg->fgd_data[0], sizeof(gFG_resistance_bat));
-			bm_print(BM_LOG_CRTI, "[fg_res] gFG_resistance_bat = %d\n", gFG_resistance_bat);
 		}
 		break;
 
 		case FG_DAEMON_CMD_SET_SWOCV:
 		{
 			memcpy(&gFG_voltage, &msg->fgd_data[0], sizeof(gFG_voltage));
-			bm_print(BM_LOG_CRTI, "[fg_res] gFG_voltage = %d\n", gFG_voltage);
 		}
 		break;
 
 		case FG_DAEMON_CMD_SET_DOD0:
 		{
 			memcpy(&gFG_DOD0, &msg->fgd_data[0], sizeof(gFG_DOD0));
-			bm_print(BM_LOG_CRTI, "[fg_res] gFG_DOD0 = %d\n", gFG_DOD0);
 		}
 		break;
 
 		case FG_DAEMON_CMD_SET_DOD1:
 		{
 			memcpy(&gFG_DOD1, &msg->fgd_data[0], sizeof(gFG_DOD1));
-			bm_print(BM_LOG_CRTI, "[fg_res] gFG_DOD1 = %d\n", gFG_DOD1);
 		}
 		break;
 
 		case FG_DAEMON_CMD_SET_QMAX:
 		{
 			memcpy(&gFG_BATT_CAPACITY_aging, &msg->fgd_data[0], sizeof(gFG_BATT_CAPACITY_aging));
-			bm_print(BM_LOG_CRTI, "[fg_res] QMAX = %d\n", gFG_BATT_CAPACITY_aging);
 		}
 		break;
 
@@ -4170,7 +3829,6 @@ void bmd_ctrl_cmd_from_user(void *nl_data, struct fgd_nl_msg_t *ret_msg)
 			INT32 battery_full;
 			memcpy(&battery_full, &msg->fgd_data[0], sizeof(battery_full));
 			BMT_status.bat_full=(kal_bool)battery_full;
-			bm_print(BM_LOG_CRTI, "[fg_res] set bat_full = %d\n", BMT_status.bat_full);
 		}
 		break;
 
@@ -4179,14 +3837,12 @@ void bmd_ctrl_cmd_from_user(void *nl_data, struct fgd_nl_msg_t *ret_msg)
 			INT32 rtcvalue;
 			memcpy(&rtcvalue, &msg->fgd_data[0], sizeof(rtcvalue));
 			set_rtc_spare_fg_value(rtcvalue);
-			bm_print(BM_LOG_CRTI, "[fg_res] set rtc = %d\n", rtcvalue);
 		}
 		break;
 
 		case FG_DAEMON_CMD_SET_POWEROFF:
 		{
 
-			bm_print(BM_LOG_CRTI, "[fg_res] FG_DAEMON_CMD_SET_POWEROFF \n");
 			kernel_power_off();
 		}
 		break;
@@ -4195,7 +3851,6 @@ void bmd_ctrl_cmd_from_user(void *nl_data, struct fgd_nl_msg_t *ret_msg)
 		{
 			memcpy(&init_flag, &msg->fgd_data[0], sizeof(init_flag));
 			//bm_print(BM_LOG_CRTI, " ret_msg->fgd_data_len %d\n",ret_msg->fgd_data_len);
-			bm_print(BM_LOG_CRTI, "[fg_res] init_flag = %d\n",init_flag);
 		}
 		break;
 
@@ -4205,14 +3860,12 @@ void bmd_ctrl_cmd_from_user(void *nl_data, struct fgd_nl_msg_t *ret_msg)
 			ret_msg->fgd_data_len += sizeof(kpoc);
 			memcpy(ret_msg->fgd_data, &kpoc, sizeof(kpoc));
 			//bm_print(BM_LOG_CRTI, " ret_msg->fgd_data_len %d\n",ret_msg->fgd_data_len);
-			bm_print(BM_LOG_CRTI, "[fg_res] query kpoc = %d\n", kpoc);
 		}
 		break;
 
 		case FG_DAEMON_CMD_SET_SOC:
 		{
 			memcpy(&gFG_capacity_by_c, &msg->fgd_data[0], sizeof(gFG_capacity_by_c));
-			bm_print(BM_LOG_CRTI, "[fg_res] SOC = %d\n", gFG_capacity_by_c);
 			BMT_status.SOC = gFG_capacity_by_c;
 		}
 		break;
@@ -4221,7 +3874,6 @@ void bmd_ctrl_cmd_from_user(void *nl_data, struct fgd_nl_msg_t *ret_msg)
 		{
 			INT32 UI_SOC;
 			memcpy(&UI_SOC, &msg->fgd_data[0], sizeof(UI_SOC));
-			bm_print(BM_LOG_CRTI, "[fg_res] UI_SOC = %d\n", UI_SOC);
 			BMT_status.UI_SOC = UI_SOC;
 		}
 		break;
@@ -4230,7 +3882,6 @@ void bmd_ctrl_cmd_from_user(void *nl_data, struct fgd_nl_msg_t *ret_msg)
 		{
 			INT32 UI_SOC;
 			memcpy(&UI_SOC, &msg->fgd_data[0], sizeof(UI_SOC));
-			bm_print(BM_LOG_CRTI, "[fg_res] UI_SOC2 = %d\n", UI_SOC);
 			BMT_status.UI_SOC2 = UI_SOC;
 			if (!g_battery_soc_ready) {
 				g_battery_soc_ready = KAL_TRUE;
@@ -4245,7 +3896,6 @@ void bmd_ctrl_cmd_from_user(void *nl_data, struct fgd_nl_msg_t *ret_msg)
 		case FG_DAEMON_CMD_SET_DAEMON_PID:
 		{
 			memcpy(&g_fgd_pid, &msg->fgd_data[0], sizeof(g_fgd_pid));
-			bm_print(BM_LOG_CRTI, "[fg_res] g_fgd_pid = %d\n", g_fgd_pid);
 		}
 		break;
 
@@ -4253,16 +3903,13 @@ void bmd_ctrl_cmd_from_user(void *nl_data, struct fgd_nl_msg_t *ret_msg)
 		{
 			INT32 tmp;
 			memcpy(&tmp, &msg->fgd_data[0], sizeof(tmp));
-			bm_print(BM_LOG_CRTI, "[fg_res] OAM_V_OCV = %d\n", tmp);
 			oam_v_ocv = tmp;
 		}
 		break;
 
 		case FG_DAEMON_CMD_SET_OAM_R:
 		{
-			INT32 tmp;
-			memcpy(&tmp, &msg->fgd_data[0], sizeof(tmp));
-			bm_print(BM_LOG_CRTI, "[fg_res] OAM_R = %d\n", tmp);
+			INT32 tmp; memcpy(&tmp, &msg->fgd_data[0], sizeof(tmp)); 
 			oam_r = tmp;
 		}
 		break;
@@ -4271,7 +3918,6 @@ void bmd_ctrl_cmd_from_user(void *nl_data, struct fgd_nl_msg_t *ret_msg)
 		{
 			ret_msg->fgd_data_len += sizeof(swfg_ap_suspend_time);
 			memcpy(ret_msg->fgd_data, &swfg_ap_suspend_time, sizeof(swfg_ap_suspend_time));
-			bm_print(BM_LOG_CRTI, "[fg_res] suspend_time = %d\n", swfg_ap_suspend_time);
 			swfg_ap_suspend_time=0;
 		}
 		break;
@@ -4281,8 +3927,6 @@ void bmd_ctrl_cmd_from_user(void *nl_data, struct fgd_nl_msg_t *ret_msg)
 			INT32 car=ap_suspend_car/3600;
 			ret_msg->fgd_data_len += sizeof(car);
 			memcpy(ret_msg->fgd_data, &car, sizeof(car));
-			bm_print(BM_LOG_CRTI, "[fg_res] ap_suspend_car:(%d:%d) t:%d hwocv:%d ocv:%d i:%d stime:%d:%d\n", ap_suspend_car, car, swfg_ap_suspend_time, last_hwocv, oam_v_ocv, last_i
-				, total_suspend_times, this_suspend_times);
 			ap_suspend_car=ap_suspend_car%3600;
 			this_suspend_times=0;
 		}
@@ -4292,14 +3936,12 @@ void bmd_ctrl_cmd_from_user(void *nl_data, struct fgd_nl_msg_t *ret_msg)
 		{
 			ret_msg->fgd_data_len += sizeof(is_hwocv_update);
 			memcpy(ret_msg->fgd_data, &is_hwocv_update, sizeof(is_hwocv_update));
-			bm_print(BM_LOG_CRTI, "[fg_res] is_hwocv_update = %d\n", is_hwocv_update);
 			is_hwocv_update=KAL_FALSE;
 		}
 		break;		
 
 
 		default:
-			bm_print(BM_LOG_CRTI, "bad FG_DAEMON_CTRL_CMD_FROM_USER 0x%x\n", msg->fgd_cmd);
 			break;
 	}
 
@@ -4377,7 +4019,6 @@ int wakeup_fg_algo(int flow_state)
 		int size = FGD_NL_MSG_T_HDR_LEN + sizeof(flow_state);
 
 		fgd_msg = (struct fgd_nl_msg_t *)vmalloc(size);
-		bm_print(BM_LOG_CRTI, "[battery_meter_driver] malloc size=%d\n", size);
 		memset(fgd_msg, 0, size);
 		fgd_msg->fgd_cmd = FG_DAEMON_CMD_NOTIFY_DAEMON;
 		memcpy(fgd_msg->fgd_data, &flow_state, sizeof(flow_state));
@@ -4424,7 +4065,6 @@ static int __init battery_meter_init(void)
 
 	//daemo_nl_sk = netlink_kernel_create(&init_net, NETLINK_TEST, 0, nl_data_handler, NULL, THIS_MODULE);
 	daemo_nl_sk=netlink_kernel_create(&init_net, NETLINK_FGD,&cfg);
-	bm_print(BM_LOG_CRTI,"netlink_kernel_create protol= %d \n",NETLINK_FGD);
 
 	if(daemo_nl_sk == NULL)
 	{
@@ -4432,9 +4072,6 @@ static int __init battery_meter_init(void)
 		bm_print(BM_LOG_CRTI,"netlink_kernel_create error \n");
 		return -1;
 	}
-	bm_print(BM_LOG_CRTI,"netlink_kernel_create ok \n");
-
-	bm_print(BM_LOG_CRTI, "[battery_meter_driver] Initialization : DONE\n");
 
 	return 0;
 
diff --git a/drivers/power/mediatek/linear_charging.c b/drivers/power/mediatek/linear_charging.c
index a56a5b3d2..3aa015f75 100644
--- a/drivers/power/mediatek/linear_charging.c
+++ b/drivers/power/mediatek/linear_charging.c
@@ -161,8 +161,6 @@ void BATTERY_SetUSBState(int usb_state_value)
 				    "[BATTERY] BAT_SetUSBState Fail! Restore to default value\r\n");
 		usb_state_value = USB_UNCONFIGURED;
 	} else {
-		battery_log(BAT_LOG_CRTI, "[BATTERY] BAT_SetUSBState Success! Set %d\r\n",
-				    usb_state_value);
 		g_usb_state = usb_state_value;
 	}
 #endif
@@ -626,10 +624,6 @@ PMU_STATUS do_jeita_state_machine(void)
 			battery_log(BAT_LOG_CRTI,
 					    "[BATTERY] Battery Temperature not recovery to normal temperature charging mode yet!!\n\r");
 		} else {
-			battery_log(BAT_LOG_CRTI,
-					    "[BATTERY] Battery Normal Temperature between %d and %d !!\n\r",
-					    TEMP_POS_10_THRESHOLD, TEMP_POS_45_THRESHOLD);
-
 			g_temp_status = TEMP_POS_10_TO_POS_45;
 if(batt_cust_data.high_battery_voltage_support)
 			g_jeita_recharging_voltage = 4200;
@@ -707,8 +701,6 @@ static void set_jeita_charging_current(void)
 
 	if (g_temp_status == TEMP_NEG_10_TO_POS_0) {
 		g_temp_CC_value = CHARGE_CURRENT_200_00_MA;	/* for low temp */
-		battery_log(BAT_LOG_CRTI, "[BATTERY] JEITA set charging current : %d\r\n",
-				    g_temp_CC_value);
 	}
 }
 
@@ -735,9 +727,6 @@ void select_charging_curret_bcct(void)
 
 kal_uint32 set_bat_charging_current_limit(int current_limit)
 {
-	battery_log(BAT_LOG_CRTI, "[BATTERY] set_bat_charging_current_limit (%d)\r\n",
-			    current_limit);
-
 	if (current_limit != -1) {
 		g_bcct_flag = 1;
 
@@ -791,8 +780,6 @@ kal_uint32 set_bat_charging_current_limit(int current_limit)
 
 void set_bat_sw_cv_charging_current_limit(int current_limit)
 {
-    battery_log(BAT_LOG_CRTI, "[BATTERY] set_bat_sw_cv_charging_current_limit (%d)\r\n", current_limit);
-
     if(current_limit <= CHARGE_CURRENT_70_00_MA)         ulc_cv_charging_current=CHARGE_CURRENT_0_00_MA;
     else if(current_limit <= CHARGE_CURRENT_200_00_MA)   ulc_cv_charging_current=CHARGE_CURRENT_70_00_MA;
     else if(current_limit <= CHARGE_CURRENT_300_00_MA)   ulc_cv_charging_current=CHARGE_CURRENT_200_00_MA;
@@ -816,8 +803,6 @@ void set_bat_sw_cv_charging_current_limit(int current_limit)
 void select_charging_curret(void)
 {
 	if (g_ftm_battery_flag) {
-		battery_log(BAT_LOG_CRTI, "[BATTERY] FTM charging : %d\r\n",
-				    charging_level_data[0]);
 		g_temp_CC_value = charging_level_data[0];
 	} else {
 		if (BMT_status.charger_type == STANDARD_HOST) {
@@ -832,10 +817,6 @@ void select_charging_curret(void)
 				} else {
 					g_temp_CC_value = batt_cust_data.usb_charger_current_unconfigured;
 				}
-
-				battery_log(BAT_LOG_CRTI,
-						    "[BATTERY] STANDARD_HOST CC mode charging : %d on %d state\r\n",
-						    g_temp_CC_value, g_usb_state);
 			}
 #else
 			{
@@ -863,9 +844,6 @@ void select_charging_curret(void)
 			g_temp_CC_value = CHARGE_CURRENT_70_00_MA;
 		}
 
-		battery_log(BAT_LOG_CRTI, "[BATTERY] Default CC mode charging : %d\r\n",
-				    g_temp_CC_value);
-
 #if defined(CONFIG_MTK_JEITA_STANDARD_SUPPORT)
 		set_jeita_charging_current();
 #endif
@@ -885,21 +863,11 @@ static kal_uint32 charging_full_check(void)
 	if (post_charging_time >= POST_CHARGING_TIME) {
 		status = KAL_TRUE;
 		post_charging_time = 0;
-
-		battery_log(BAT_LOG_CRTI,
-				    "[BATTERY] Battery real full and disable charging on %d mA\n",
-				    BMT_status.ICharging);
 	} else if (post_charging_time > 0) {
 		post_charging_time += BAT_TASK_PERIOD;
-		battery_log(BAT_LOG_CRTI,
-				    "[BATTERY] post_charging_time=%d,POST_CHARGING_TIME=%d\n",
-				    post_charging_time, POST_CHARGING_TIME);
 	} else if ((BMT_status.TOPOFF_charging_time > 60)
 		   && (BMT_status.ICharging <= charging_full_current)) {
 		post_charging_time = BAT_TASK_PERIOD;
-		battery_log(BAT_LOG_CRTI,
-				    "[BATTERY] Enter Post charge, post_charging_time=%d,POST_CHARGING_TIME=%d\n",
-				    post_charging_time, POST_CHARGING_TIME);
 	} else {
 		post_charging_time = 0;
 	}
@@ -911,9 +879,6 @@ static kal_uint32 charging_full_check(void)
 		if (6 == full_check_count) {
 			status = KAL_TRUE;
 			full_check_count = 0;
-			battery_log(BAT_LOG_CRTI,
-					    "[BATTERY] Battery full and disable charging on %d mA\n",
-					    BMT_status.ICharging);
 		}
 	} else {
 		full_check_count = 0;
@@ -964,10 +929,6 @@ static void pchr_sw_cv_charing_current_check(void)
 		ulc_cv_charging_current_flag = KAL_TRUE;
 
 		msleep(192);	/* large than 512 code x 0.25ms */
-		
-		battery_charging_control(CHARGING_CMD_GET_CSDAC_FALL_FLAG,&csdac_full_flag);
-
-		battery_log(BAT_LOG_CRTI, "[BATTERY] Sw CV set charging current, csdac_full_flag=%d, current=%d !\n",csdac_full_flag,ulc_cv_charging_current);
 	}
 
 	if(ulc_cv_charging_current == CHARGE_CURRENT_0_00_MA)
@@ -981,8 +942,6 @@ static void pchr_turn_on_charging(void)
 #endif
 	kal_uint32 charging_enable = KAL_TRUE;
 
-	battery_log(BAT_LOG_FULL, "[BATTERY] pchr_turn_on_charging()!\r\n");
-
 	if (BMT_status.bat_charging_state == CHR_ERROR) {
 		battery_log(BAT_LOG_CRTI, "[BATTERY] Charger Error, turn OFF charging !\n");
 
@@ -993,7 +952,6 @@ static void pchr_turn_on_charging(void)
 		charging_enable = KAL_FALSE;
 	} else {
 		/*HW initialization */
-		battery_log(BAT_LOG_FULL, "charging_hw_init\n");
 		battery_charging_control(CHARGING_CMD_INIT, NULL);
 
 #if defined(CONFIG_MTK_PUMP_EXPRESS_SUPPORT)
@@ -1006,19 +964,14 @@ static void pchr_turn_on_charging(void)
 			battery_log(BAT_LOG_FULL, "USB_CURRENT_UNLIMITED, use AC_CHARGER_CURRENT\n" );
 		} else {
 			if (g_bcct_flag == 1) {
-				battery_log(BAT_LOG_FULL,
-					    "[BATTERY] select_charging_curret_bcct !\n");
 				select_charging_curret_bcct();
 			} else {
-				battery_log(BAT_LOG_FULL, "[BATTERY] select_charging_current !\n");
 				select_charging_curret();
 			}
 		}
 
 		if (g_temp_CC_value == CHARGE_CURRENT_0_00_MA) {
 			charging_enable = KAL_FALSE;
-			battery_log(BAT_LOG_CRTI,
-					"[BATTERY] charging current is set 0mA, turn off charging !\r\n");
 		} else {
 #if defined(CONFIG_MTK_PUMP_EXPRESS_SUPPORT)
 			if(ta_check_ta_control == KAL_FALSE)
@@ -1043,8 +996,6 @@ static void pchr_turn_on_charging(void)
 	}
 
 	/* enable/disable charging */
-	battery_log(BAT_LOG_CRTI, "[BATTERY] pchr_turn_on_charging(), enable =%d \r\n",
-			    charging_enable);
 	battery_charging_control(CHARGING_CMD_ENABLE, &charging_enable);
 
 
@@ -1053,9 +1004,6 @@ static void pchr_turn_on_charging(void)
 
 PMU_STATUS BAT_PreChargeModeAction(void)
 {
-	battery_log(BAT_LOG_CRTI, "[BATTERY] Pre-CC mode charge, timer=%d on %d !!\n\r",
-			    BMT_status.PRE_charging_time, BMT_status.total_charging_time);
-
 	BMT_status.PRE_charging_time += BAT_TASK_PERIOD;
 	BMT_status.CC_charging_time = 0;
 	BMT_status.TOPOFF_charging_time = 0;
@@ -1094,9 +1042,6 @@ PMU_STATUS BAT_PreChargeModeAction(void)
 
 PMU_STATUS BAT_ConstantCurrentModeAction(void)
 {
-	battery_log(BAT_LOG_CRTI, "[BATTERY] CC mode charge, timer=%d on %d !!\n\r",
-			    BMT_status.CC_charging_time, BMT_status.total_charging_time);
-
 	BMT_status.PRE_charging_time = 0;
 	BMT_status.CC_charging_time += BAT_TASK_PERIOD;
 	BMT_status.TOPOFF_charging_time = 0;
@@ -1139,10 +1084,6 @@ if(batt_cust_data.high_battery_voltage_support)
 else
 	cv_voltage = 4200;
 
-
-	battery_log(BAT_LOG_CRTI, "[BATTERY] Top Off mode charge, timer=%d on %d !!\n\r",
-			    BMT_status.TOPOFF_charging_time, BMT_status.total_charging_time);
-
 	BMT_status.PRE_charging_time = 0;
 	BMT_status.CC_charging_time = 0;
 	BMT_status.TOPOFF_charging_time += BAT_TASK_PERIOD;
@@ -1172,8 +1113,6 @@ PMU_STATUS BAT_BatteryFullAction(void)
 {
 	kal_uint32 charging_enable = KAL_FALSE;
 
-	battery_log(BAT_LOG_CRTI, "[BATTERY] Battery full !!\n\r");
-
 	BMT_status.bat_full = KAL_TRUE;
 	BMT_status.total_charging_time = 0;
 	BMT_status.PRE_charging_time = 0;
@@ -1189,10 +1128,6 @@ PMU_STATUS BAT_BatteryFullAction(void)
 	if (BMT_status.bat_vol < batt_cust_data.recharging_voltage)
 #endif
 	{
-		battery_log(BAT_LOG_CRTI,
-				    "[BATTERY] Battery Enter Re-charging!! , vbat=(%d)\n\r",
-				    BMT_status.bat_vol);
-
 		BMT_status.bat_in_recharging_state = KAL_TRUE;
 		BMT_status.bat_charging_state = CHR_CC;
 		ulc_cv_charging_current = g_temp_CC_value;
@@ -1210,12 +1145,8 @@ PMU_STATUS BAT_BatteryHoldAction(void)
 {
 	kal_uint32 charging_enable;
 
-	battery_log(BAT_LOG_CRTI, "[BATTERY] Hold mode !!\n\r");
-
 	if (BMT_status.bat_vol < batt_cust_data.talking_recharge_voltage || g_call_state == CALL_IDLE) {
 		BMT_status.bat_charging_state = CHR_CC;
-		battery_log(BAT_LOG_CRTI,
-				    "[BATTERY] Exit Hold mode and Enter CC mode !!\n\r");
 	}
 
 	/*  Disable charger */
diff --git a/drivers/power/mediatek/switch_charging.c b/drivers/power/mediatek/switch_charging.c
index 8ec1368c9..2a6c07be9 100644
--- a/drivers/power/mediatek/switch_charging.c
+++ b/drivers/power/mediatek/switch_charging.c
@@ -753,17 +753,11 @@ static void pchr_turn_on_charging(void)
 
 	/* enable/disable charging */
 	battery_charging_control(CHARGING_CMD_ENABLE, &charging_enable);
-
-	battery_log(BAT_LOG_FULL, "[BATTERY] pchr_turn_on_charging(), enable =%d !\r\n",
-			    charging_enable);
 }
 
 
 PMU_STATUS BAT_PreChargeModeAction(void)
 {
-	battery_log(BAT_LOG_CRTI, "[BATTERY] Pre-CC mode charge, timer=%d on %d !!\n\r",
-			    BMT_status.PRE_charging_time, BMT_status.total_charging_time);
-
 	BMT_status.PRE_charging_time += BAT_TASK_PERIOD;
 	BMT_status.CC_charging_time = 0;
 	BMT_status.TOPOFF_charging_time = 0;
@@ -788,9 +782,6 @@ PMU_STATUS BAT_PreChargeModeAction(void)
 
 PMU_STATUS BAT_ConstantCurrentModeAction(void)
 {
-	battery_log(BAT_LOG_FULL, "[BATTERY] CC mode charge, timer=%d on %d !!\n\r",
-			    BMT_status.CC_charging_time, BMT_status.total_charging_time);
-
 	BMT_status.PRE_charging_time = 0;
 	BMT_status.CC_charging_time += BAT_TASK_PERIOD;
 	BMT_status.TOPOFF_charging_time = 0;
diff --git a/drivers/regulator/core.c b/drivers/regulator/core.c
index e873e8f00..df71872de 100644
--- a/drivers/regulator/core.c
+++ b/drivers/regulator/core.c
@@ -993,7 +993,6 @@ static int set_machine_constraints(struct regulator_dev *rdev,
 		}
 	}
 
-	print_constraints(rdev);
 	return 0;
 out:
 	kfree(rdev->constraints);
@@ -4009,9 +4008,6 @@ static int __init regulator_init_complete(void)
 			 * goes wrong. */
 			rdev_info(rdev, "disabling\n");
 			ret = _regulator_do_disable(rdev);
-			if (ret != 0) {
-				rdev_err(rdev, "couldn't disable: %d\n", ret);
-			}
 		} else {
 			/* The intention is that in future we will
 			 * assume that full constraints are provided
diff --git a/drivers/spi/spi.c b/drivers/spi/spi.c
index 32b7bb111..a31bfd116 100644
--- a/drivers/spi/spi.c
+++ b/drivers/spi/spi.c
@@ -1164,9 +1164,7 @@ int spi_register_master(struct spi_master *master)
 			dynamic ? " (dynamic)" : "");
 
 	/* If we're using a queued driver, start the queue */
-	if (master->transfer)
-		dev_info(dev, "master is unqueued, this is deprecated\n");
-	else {
+    if (!master->transfer) {
 		status = spi_master_initialize_queue(master);
 		if (status) {
 			device_unregister(&master->dev);
diff --git a/drivers/staging/android/ion/ion.c b/drivers/staging/android/ion/ion.c
index e692d5b0f..f531e8d99 100644
--- a/drivers/staging/android/ion/ion.c
+++ b/drivers/staging/android/ion/ion.c
@@ -588,7 +588,6 @@ struct ion_handle *__ion_alloc(struct ion_client *client, size_t len,
         }
 
 	if (IS_ERR(buffer)) {
-                IONMSG("%s buffer is error 0x%p.\n", __func__, buffer);
 		return ERR_PTR(PTR_ERR(buffer));
         }
 
diff --git a/drivers/staging/android/ion/mtk/ion_drv.c b/drivers/staging/android/ion/mtk/ion_drv.c
index fcdca6c67..311fff386 100644
--- a/drivers/staging/android/ion/mtk/ion_drv.c
+++ b/drivers/staging/android/ion/mtk/ion_drv.c
@@ -543,7 +543,6 @@ int ion_drv_create_heap(struct ion_platform_heap *heap_data)
 	heap->id = heap_data->id;        
 	ion_device_add_heap(g_ion_device, heap);
 
-	IONMSG("%s: create heap: %s\n", __func__, heap->name);
 	return 0;
 }
 
@@ -553,8 +552,6 @@ static int ion_drv_probe(struct platform_device *pdev)
 	struct ion_platform_data *pdata = pdev->dev.platform_data;
     unsigned int num_heaps = pdata->nr;
 
-	IONMSG("ion_drv_probe() heap_nr=%d\n", pdata->nr);
-	printk("cui:heap_nr=%d\n",pdata->nr);
 	g_ion_device = ion_device_create(ion_custom_ioctl);
 	if (IS_ERR_OR_NULL(g_ion_device))
 	{
@@ -662,7 +659,6 @@ static struct platform_device ion_device = {
 
 static int __init ion_init(void)
 {
-    printk("ion_init()\n");
 	if (platform_device_register(&ion_device))
 	{
                 IONMSG("%s platform device register failed.\n", __func__);
diff --git a/drivers/staging/android/ion/mtk/ion_fb_heap.c b/drivers/staging/android/ion/mtk/ion_fb_heap.c
index c0a69e7f7..d25074c78 100644
--- a/drivers/staging/android/ion/mtk/ion_fb_heap.c
+++ b/drivers/staging/android/ion/mtk/ion_fb_heap.c
@@ -49,7 +49,6 @@ ion_phys_addr_t ion_fb_allocate(struct ion_heap *heap,
 	unsigned long offset = gen_pool_alloc(fb_heap->pool, size);
 
 	if (!offset) {
-		IONMSG("[ion_fb_alloc]:fail!\n");
 		return ION_CARVEOUT_ALLOCATE_FAIL;
 	}
 
@@ -81,8 +80,6 @@ static int ion_fb_heap_phys(struct ion_heap *heap,
 		IONMSG("[ion_fb_heap_phys]: Error. Buffer not configured.\n");
 		return -EFAULT;	/* Buffer not configured. */
 	}
-	IONMSG("[ion_fb_heap_phys]: eModuleID = %d, len = 0x%x, pa = 0x%lx.\n",
-			pBufferInfo->eModuleID, (unsigned int)buffer->size, pBufferInfo->priv_phys);
 	
 	/*Allocate MVA*/
 	mutex_lock(&(pBufferInfo->lock));
@@ -102,7 +99,6 @@ static int ion_fb_heap_phys(struct ion_heap *heap,
 	mutex_unlock(&(pBufferInfo->lock));
 	*len = buffer->size;
 	
-	IONMSG("[ion_fb_heap_phys]: MVA = 0x%x, len = 0x%x.\n", pBufferInfo->MVA, (unsigned int)buffer->size);
 
 	return 0;
 }
@@ -141,7 +137,6 @@ static int ion_fb_heap_allocate(struct ion_heap *heap,
 
 	buffer->priv_virt = pBufferInfo;
 
-	IONMSG("[ion_fb_heap_allocate] Success! buffer->priv_phys = %lx\n",pBufferInfo->priv_phys);
 	return pBufferInfo->priv_phys == ION_CARVEOUT_ALLOCATE_FAIL ? -ENOMEM : 0;
 }
 
diff --git a/drivers/staging/zram/zram_drv.c b/drivers/staging/zram/zram_drv.c
index f81706a4a..af6212f17 100755
--- a/drivers/staging/zram/zram_drv.c
+++ b/drivers/staging/zram/zram_drv.c
@@ -395,13 +395,10 @@ void zram_set_hooks(void *compress_func, void *decompress_func, const char *name
 	printk(KERN_ALERT "\nZSM only supports LZO1X now.\n\n");         	/* TODO: Add LZ4K or other algorithms. */
 #else
 	if (name != NULL) {
-		printk(KERN_ALERT "[%s] Compress[%p] Decompress[%p]\n",name, compress_func, decompress_func);
 		zram_comp = name;
-	} else
-		printk(KERN_ALERT "[UNKNOWN] Compress[%p] Decompress[%p]\n", compress_func, decompress_func);
+	} 
 	zram_compress = (comp_hook)compress_func;
 	zram_decompress = (decomp_hook)decompress_func;
-	printk(KERN_ALERT "[%s][%d] ZCompress[%p] ZDecompress[%p]\n", __FUNCTION__, __LINE__, zram_compress, zram_decompress);
 #endif
 }
 EXPORT_SYMBOL(zram_set_hooks);
@@ -1348,9 +1345,7 @@ static int __init zram_init(void)
 #endif
 		zram_decompress = &lzo1x_decompress_safe;
 	}
-	printk(KERN_ALERT "[%s][%d] ZCompress[%p] ZDecompress[%p]\n", __FUNCTION__, __LINE__, zram_compress, zram_decompress);
 	proc_create("zraminfo", 0, NULL, &zraminfo_proc_fops);
-	pr_info("Created %u device(s) ...\n", num_devices);
 
 	return 0;
 
diff --git a/drivers/tty/serial/serial_core.c b/drivers/tty/serial/serial_core.c
index 57977ec53..86a8f06a0 100644
--- a/drivers/tty/serial/serial_core.c
+++ b/drivers/tty/serial/serial_core.c
@@ -2106,13 +2106,6 @@ uart_report_port(struct uart_driver *drv, struct uart_port *port)
 		strlcpy(address, "*unknown*", sizeof(address));
 		break;
 	}
-
-	printk(KERN_INFO "%s%s%s%d at %s (irq = %d) is a %s\n",
-	       port->dev ? dev_name(port->dev) : "",
-	       port->dev ? ": " : "",
-	       drv->dev_name,
-	       drv->tty_driver->name_base + port->line,
-	       address, port->irq, uart_type(port));
 }
 
 static void
diff --git a/drivers/usb/class/cdc-acm.c b/drivers/usb/class/cdc-acm.c
index dc5ec38c4..dbc2f4c34 100644
--- a/drivers/usb/class/cdc-acm.c
+++ b/drivers/usb/class/cdc-acm.c
@@ -213,7 +213,6 @@ bool usb_h_acm_all_clear(void)
 			count++;
 		}
 	}
-	MYDBG("count<%d>\n", count); 
 	return !count;
 }
 EXPORT_SYMBOL_GPL(usb_h_acm_all_clear);
@@ -237,14 +236,6 @@ void mark_callback_alive(char *func_name, struct urb *urb, struct acm *acm)
 		if(!strcmp(func_name, callback_name[i])){
 			if(enable_debug || time_after(jiffies, callback_check_timeout[i]))
 			{
-				MYDBG("%s,ep(%d),len(%d,%d),data(%x),sts(%d), minor(%d)\n", 
-						func_name,
-						urb->ep->desc.bEndpointAddress, 	
-						urb->actual_length, 
-						urb->transfer_buffer_length, 
-						*((unsigned char*)urb->transfer_buffer), 
-						urb->status,
-						acm->minor);
 				callback_check_timeout[i] = jiffies + HZ * CHECK_INTERVAL;
 			}
 			break;
@@ -589,7 +580,6 @@ static int acm_submit_read_urb(struct acm *acm, int index, gfp_t mem_flags)
 
 	res = usb_submit_urb(acm->read_urbs[index], mem_flags);
 	if (res) {
-		MYDBG("urb fail(%d)\n", res);
 		if (res != -EPERM) {
 			dev_err(&acm->data->dev,
 					"%s - usb_submit_urb failed: %d\n",
@@ -764,10 +754,6 @@ static int acm_tty_open(struct tty_struct *tty, struct file *filp)
 
 #ifdef CONFIG_MTK_DT_USB_SUPPORT
 	dbg_mtk(&acm->control->dev, "%s port_cnt=%d", __func__, acm->port.count);
-	MYDBG("ctrl:%x, read:%x, write:%x\n",
-			(acm->control->cur_altsetting->endpoint[0].desc).bEndpointAddress,
-			(acm->data->cur_altsetting->endpoint[0].desc).bEndpointAddress,
-			(acm->data->cur_altsetting->endpoint[1].desc).bEndpointAddress);
 
 
 #define META_BIN_NAME "meta_tst"
@@ -936,7 +922,6 @@ static void acm_tty_close(struct tty_struct *tty, struct file *filp)
 	dbg_mtk(&acm->control->dev, "%s port_cnt=%d", __func__, acm->port.count);
 	if(!strcmp(MDDOWNLOADER_BIN_NAME, current->comm)){
 		record_enable = 0;
-		dump_record();
 	}
 #endif
 	tty_port_close(&acm->port, tty, filp);
diff --git a/drivers/usb/core/devio.c b/drivers/usb/core/devio.c
index 6563b5ec2..0f8df518d 100644
--- a/drivers/usb/core/devio.c
+++ b/drivers/usb/core/devio.c
@@ -842,9 +842,6 @@ static int usbdev_open(struct inode *inode, struct file *file)
 	snoop(&dev->dev, "opened by process %d: %s\n", task_pid_nr(current),
 			current->comm);
 
-	MYDBG("opened by process %d: %s\n", task_pid_nr(current),
-			current->comm);	
-
 	return ret;
 
  out_unlock_device:
diff --git a/drivers/usb/core/driver.c b/drivers/usb/core/driver.c
index 26add17be..2b8d149c9 100644
--- a/drivers/usb/core/driver.c
+++ b/drivers/usb/core/driver.c
@@ -217,8 +217,6 @@ static int usb_probe_device(struct device *dev)
 	struct usb_device *udev = to_usb_device(dev);
 	int error = 0;
 
-	dev_dbg(dev, "%s\n", __func__);
-
 	/* TODO: Add real matching code */
 
 	/* The device should always appear to be in use
@@ -269,8 +267,6 @@ static int usb_probe_interface(struct device *dev)
 	int error = -ENODEV;
 	int lpm_disable_error;
 
-	dev_dbg(dev, "%s\n", __func__);
-
 	intf->needs_binding = 0;
 
 	if (usb_device_is_owned(udev))
@@ -287,8 +283,6 @@ static int usb_probe_interface(struct device *dev)
 	if (!id)
 		return error;
 
-	dev_dbg(dev, "%s - got id\n", __func__);
-
 	error = usb_autoresume_device(udev);
 	if (error)
 		return error;
@@ -959,7 +953,6 @@ void usb_forced_unbind_intf(struct usb_interface *intf)
 {
 	struct usb_driver *driver = to_usb_driver(intf->dev.driver);
 
-	dev_dbg(&intf->dev, "forced unbind\n");
 	usb_driver_release_interface(driver, intf);
 
 	/* Mark the interface for later rebinding */
@@ -1089,18 +1082,15 @@ static int usb_suspend_device(struct usb_device *udev, pm_message_t msg)
 	/* For devices that don't have a driver, we do a generic suspend. */
 	if (udev->dev.driver)
 	{
-		MYDBG("");	
 		udriver = to_usb_device_driver(udev->dev.driver);
 	}
 	else {
-		MYDBG("");	
 		udev->do_remote_wakeup = 0;
 		udriver = &usb_generic_driver;
 	}
 	status = udriver->suspend(udev, msg);
 
  done:
-	dev_vdbg(&udev->dev, "%s: status %d\n", __func__, status);
 	return status;
 }
 
@@ -1128,13 +1118,10 @@ static int usb_resume_device(struct usb_device *udev, pm_message_t msg)
 	if (udev->quirks & USB_QUIRK_RESET_RESUME)
 		udev->reset_resume = 1;
 
-	MYDBG("");	
 	udriver = to_usb_device_driver(udev->dev.driver);
 	status = udriver->resume(udev, msg);
-	MYDBG("");	
 
  done:
-	dev_vdbg(&udev->dev, "%s: status %d\n", __func__, status);
 	return status;
 }
 
@@ -1155,7 +1142,6 @@ static int usb_suspend_interface(struct usb_device *udev,
 		dev_err(&intf->dev, "suspend error %d\n", status);
 
  done:
-	dev_vdbg(&intf->dev, "%s: status %d\n", __func__, status);
 	return status;
 }
 
@@ -1207,7 +1193,6 @@ static int usb_resume_interface(struct usb_device *udev,
 	}
 
 done:
-	dev_vdbg(&intf->dev, "%s: status %d\n", __func__, status);
 
 	/* Later we will unbind the driver and/or reprobe, if necessary */
 	return status;
@@ -1244,8 +1229,6 @@ static int usb_suspend_both(struct usb_device *udev, pm_message_t msg)
 	int			i = 0, n = 0;
 	struct usb_interface	*intf;
 
-	dev_err(&udev->dev, "%s: READY TO SUSPEND BOTH\n", __func__);
-
 	if (udev->state == USB_STATE_NOTATTACHED ||
 			udev->state == USB_STATE_SUSPENDED)
 		goto done;
@@ -1268,9 +1251,7 @@ static int usb_suspend_both(struct usb_device *udev, pm_message_t msg)
 		}
 	}
 	if (status == 0) {
-		dev_err(&udev->dev, "%s: BEFORE usb_suspend_device\n", __func__);
 		status = usb_suspend_device(udev, msg);
-		dev_err(&udev->dev, "%s: AFTER usb_suspend_device\n", __func__);
 
 		/*
 		 * Ignore errors from non-root-hub devices during
@@ -1297,7 +1278,6 @@ static int usb_suspend_both(struct usb_device *udev, pm_message_t msg)
 	 * and flush any outstanding URBs.
 	 */
 	} else {
-		dev_err(&udev->dev, "%s: SUSPEND SUCCESS: status: %d\n", __func__, status);
 		udev->can_submit = 0;
 		for (i = 0; i < 16; ++i) {
 			usb_hcd_flush_endpoint(udev, udev->ep_out[i]);
@@ -1306,7 +1286,6 @@ static int usb_suspend_both(struct usb_device *udev, pm_message_t msg)
 	}
 
  done:
-	dev_vdbg(&udev->dev, "%s: status %d\n", __func__, status);
 	return status;
 }
 
@@ -1333,7 +1312,6 @@ static int usb_resume_both(struct usb_device *udev, pm_message_t msg)
 	int			status = 0;
 	int			i;
 	struct usb_interface	*intf;
-	dev_err(&udev->dev, "%s: READY TO RESUME BOTH\n", __func__);
 
 	if (udev->state == USB_STATE_NOTATTACHED) {
 		status = -ENODEV;
@@ -1356,7 +1334,6 @@ static int usb_resume_both(struct usb_device *udev, pm_message_t msg)
 	usb_mark_last_busy(udev);
 
  done:
-	dev_vdbg(&udev->dev, "%s: status %d\n", __func__, status);
 	if (!status)
 		udev->reset_resume = 0;
 	return status;
@@ -1378,7 +1355,6 @@ void usb_hnp_polling_work(struct work_struct *work)
 	udev = usb_hub_find_child(hcd->self.root_hub, bus->otg_port);
 
 	u8 *status = NULL;
-	dev_err(&udev->dev, "%s: BEGIN usb_hnp_polling_work\n", __func__);
 
 	/*
 	 * The OTG-B device must hand back the host role to OTG PET
@@ -1399,35 +1375,27 @@ void usb_hnp_polling_work(struct work_struct *work)
 		USB_CTRL_GET_TIMEOUT);
 	if (ret < 0) {
 		/* Peripheral may not be supporting HNP polling */
-		dev_err(&udev->dev, "%s: HNP polling failed. status %d\n", __func__, ret);
 		goto out;
 	}
 
 	if (!(*status & (1 << HOST_REQUEST_FLAG))) {
-        dev_err(&udev->dev, "%s: goto reschedule!!\n", __func__);
 		goto reschedule;
     }
 
 start_hnp:
 	//do_unbind_rebind(udev, DO_UNBIND);
 #if 1
-	dev_err(&udev->dev, "%s: start_hnp\n", __func__);
 	unbind_no_pm_drivers_interfaces(udev);
 	udev->do_remote_wakeup = device_may_wakeup(&udev->dev);
-	dev_err(&udev->dev, "%s: before usb_suspend_both\n", __func__);
 	ret = usb_suspend_both(udev, PMSG_USER_SUSPEND);
-	dev_err(&udev->dev, "%s: after usb_suspend_both\n", __func__);
 #endif
     
 stop_hnp:
 #if 1
 	//msleee(5000);
-	dev_err(&udev->dev, "%s: STOP_RECORD_OPSTATE\n", __func__);
 	//spin_lock(&mtk_musb->lock);
-	dev_err(&udev->dev, "%s: MUSB_HNP_STOP\n", __func__);
 	musb_hnp_stop(mtk_musb);
 	//spin_unlock(&mtk_musb->lock);
-	dev_err(&udev->dev, "%s: SET_HOST_REQ_FLAG 0\n", __func__);
 	musb_set_host_request_flag(mtk_musb, 0);
 #endif
 	if (ret)
@@ -1435,7 +1403,6 @@ stop_hnp:
 	goto out;
 
 reschedule:
-	dev_err(&udev->dev, "%s: schedule_delayed_work\n", __func__);
 	schedule_delayed_work(&bus->hnp_polling,
 		msecs_to_jiffies(THOST_REQ_POLL));
 out:
@@ -1584,9 +1551,6 @@ void usb_autosuspend_device(struct usb_device *udev)
 
 	usb_mark_last_busy(udev);
 	status = pm_runtime_put_sync_autosuspend(&udev->dev);
-	dev_vdbg(&udev->dev, "%s: cnt %d -> %d\n",
-			__func__, atomic_read(&udev->dev.power.usage_count),
-			status);
 }
 
 /**
@@ -1614,9 +1578,6 @@ int usb_autoresume_device(struct usb_device *udev)
 	status = pm_runtime_get_sync(&udev->dev);
 	if (status < 0)
 		pm_runtime_put_sync(&udev->dev);
-	dev_vdbg(&udev->dev, "%s: cnt %d -> %d\n",
-			__func__, atomic_read(&udev->dev.power.usage_count),
-			status);
 	if (status > 0)
 		status = 0;
 	return status;
@@ -1645,9 +1606,6 @@ void usb_autopm_put_interface(struct usb_interface *intf)
 	usb_mark_last_busy(udev);
 	atomic_dec(&intf->pm_usage_cnt);
 	status = pm_runtime_put_sync(&intf->dev);
-	dev_vdbg(&intf->dev, "%s: cnt %d -> %d\n",
-			__func__, atomic_read(&intf->dev.power.usage_count),
-			status);
 }
 EXPORT_SYMBOL_GPL(usb_autopm_put_interface);
 
@@ -1674,9 +1632,6 @@ void usb_autopm_put_interface_async(struct usb_interface *intf)
 	usb_mark_last_busy(udev);
 	atomic_dec(&intf->pm_usage_cnt);
 	status = pm_runtime_put(&intf->dev);
-	dev_vdbg(&intf->dev, "%s: cnt %d -> %d\n",
-			__func__, atomic_read(&intf->dev.power.usage_count),
-			status);
 }
 EXPORT_SYMBOL_GPL(usb_autopm_put_interface_async);
 
@@ -1725,9 +1680,6 @@ int usb_autopm_get_interface(struct usb_interface *intf)
 		pm_runtime_put_sync(&intf->dev);
 	else
 		atomic_inc(&intf->pm_usage_cnt);
-	dev_vdbg(&intf->dev, "%s: cnt %d -> %d\n",
-			__func__, atomic_read(&intf->dev.power.usage_count),
-			status);
 	if (status > 0)
 		status = 0;
 	return status;
@@ -1758,9 +1710,6 @@ int usb_autopm_get_interface_async(struct usb_interface *intf)
 		pm_runtime_put_noidle(&intf->dev);
 	else
 		atomic_inc(&intf->pm_usage_cnt);
-	dev_vdbg(&intf->dev, "%s: cnt %d -> %d\n",
-			__func__, atomic_read(&intf->dev.power.usage_count),
-			status);
 	if (status > 0 || status == -EINPROGRESS)
 		status = 0;
 	return status;
@@ -1826,7 +1775,6 @@ static int autosuspend_check(struct usb_device *udev)
 		}
 	}
 	if (w && !device_can_wakeup(&udev->dev)) {
-		dev_dbg(&udev->dev, "remote wakeup needed for autosuspend\n");
 		return -EOPNOTSUPP;
 	}
 	udev->do_remote_wakeup = w;
@@ -1838,7 +1786,6 @@ int usb_runtime_suspend(struct device *dev)
 	struct usb_device	*udev = to_usb_device(dev);
 	int			status;
 
-	dev_err(&udev->dev, "%s: LINE: %d\n", __func__, __LINE__);
 	/* A USB device can be suspended if it passes the various autosuspend
 	 * checks.  Runtime suspend for a USB device means suspending all the
 	 * interfaces and then the device itself.
@@ -1846,13 +1793,11 @@ int usb_runtime_suspend(struct device *dev)
 	if (autosuspend_check(udev) != 0)
 		return -EAGAIN;
 
-	dev_err(&udev->dev, "%s: LINE: %d\n", __func__, __LINE__);
 	status = usb_suspend_both(udev, PMSG_AUTO_SUSPEND);
 
 	/* Allow a retry if autosuspend failed temporarily */
 	if (status == -EAGAIN || status == -EBUSY)
 	{
-		MYDBG("");	
 		usb_mark_last_busy(udev);
 	}
 
@@ -1864,7 +1809,6 @@ int usb_runtime_suspend(struct device *dev)
 	 */
 	if (status != 0 && udev->parent)
 	{
-		MYDBG("");	
 		return -EBUSY;
 	}
 	
@@ -1876,8 +1820,6 @@ int usb_runtime_resume(struct device *dev)
 	struct usb_device	*udev = to_usb_device(dev);
 	int			status;
 	
-	dev_err(&udev->dev, "%s: LINE: %d\n", __func__, __LINE__);
-
 	/* Runtime resume for a USB device means resuming both the device
 	 * and all its interfaces.
 	 */
diff --git a/drivers/usb/core/generic.c b/drivers/usb/core/generic.c
index 6e578bdc6..250269069 100644
--- a/drivers/usb/core/generic.c
+++ b/drivers/usb/core/generic.c
@@ -219,8 +219,6 @@ static int generic_suspend(struct usb_device *udev, pm_message_t msg)
 {
 	int rc;
 
-  	MYDBG("udev : %lu", (unsigned long)udev);
-
 	/* Normal USB devices suspend through their upstream port.
 	 * Root hubs don't have upstream ports to suspend,
 	 * so we have to shut down their downstream HC-to-USB
@@ -228,19 +226,16 @@ static int generic_suspend(struct usb_device *udev, pm_message_t msg)
 	 */
 	if (!udev->parent)
 	{
-		MYDBG("");
 		rc = hcd_bus_suspend(udev, msg);
 	}
 
 	/* Non-root devices don't need to do anything for FREEZE or PRETHAW */
 	else if (msg.event == PM_EVENT_FREEZE || msg.event == PM_EVENT_PRETHAW)
 	{
-		MYDBG("");
 		rc = 0;
 	}
 	else
 	{
-		MYDBG("");
 		rc = usb_port_suspend(udev, msg);
 	}
 
@@ -250,8 +245,6 @@ static int generic_suspend(struct usb_device *udev, pm_message_t msg)
 static int generic_resume(struct usb_device *udev, pm_message_t msg)
 {
 	int rc;
-	MYDBG("udev : %lu", (unsigned long)udev);
-
 	/* Normal USB devices resume/reset through their upstream port.
 	 * Root hubs don't have upstream ports to resume or reset,
 	 * so we have to start up their downstream HC-to-USB
@@ -259,12 +252,10 @@ static int generic_resume(struct usb_device *udev, pm_message_t msg)
 	 */
 	if (!udev->parent)
 	{
-		MYDBG("udev : %lu", (unsigned long)udev);
 		rc = hcd_bus_resume(udev, msg);
 	}
 	else
 	{
-		MYDBG("udev : %lu", (unsigned long)udev);
 		rc = usb_port_resume(udev, msg);
 	}
 	return rc;
diff --git a/drivers/usb/core/hub.c b/drivers/usb/core/hub.c
index 1cc7973eb..6570a7d12 100755
--- a/drivers/usb/core/hub.c
+++ b/drivers/usb/core/hub.c
@@ -62,10 +62,8 @@ int is_musbfsh_rh(struct usb_device *udev);
 struct usb_device *get_usb11_child_udev(void)
 {
 	if(usb11_hub){
-		MYDBG("\n");
 		return usb11_hub->ports[0]->child;
 	}else{
-		MYDBG("\n");
 		return NULL;
 	}
 }
@@ -76,7 +74,6 @@ void dump_data(char *buf, int len)
 	int i;
 	for(i =0 ; i< len ; i++)
 	{
-		MYDBG("data[%d]: %x\n", i, buf[i]);
 	}
 }
 
@@ -101,7 +98,6 @@ void test_dsda_device_ep0(void)
 	}
 	else
 	{
-		MYDBG("test ep0 ok, ret : %d\n", ret);
 		dump_data(data_buf, ret);
 	}
 
@@ -122,16 +118,13 @@ static ssize_t dsda_tmp_proc_entry(struct file *file_ptr, const char __user *use
 	/* apply action here */
 	if(cmd[0] == '0')
 	{
-		MYDBG("");
 		test_dsda_device_ep0();
 	}
 	if(cmd[0] == '1')
 	{
-		MYDBG("");
 		release_usb11_wakelock();
 	}
 
-	MYDBG("");
 
 	return count;
 }
@@ -145,12 +138,10 @@ void create_dsda_tmp_entry(void)
 {
 	struct proc_dir_entry *prEntry;
 
-	MYDBG("");
 
 	prEntry = proc_create("DSDA_TMP_ENTRY", 0660, 0, &dsda_tmp_proc_fops);
 	if (prEntry)
 	{
-		MYDBG("add /proc/DSDA_TMP_ENTRY ok\n");
 	}
 	else
 	{
@@ -537,7 +528,6 @@ int usb_clear_port_feature(struct usb_device *hdev, int port1, int feature)
  */
 static int set_port_feature(struct usb_device *hdev, int port1, int feature)
 {
-	MYDBG("");
 	return usb_control_msg(hdev, usb_sndctrlpipe(hdev, 0),
 		USB_REQ_SET_FEATURE, USB_RT_PORT, feature, port1,
 		NULL, 0, 1000);
@@ -2291,7 +2281,6 @@ void usb_disconnect(struct usb_device **pdev)
 	do_gettimeofday(&tv_before);
 	usb_disable_device(udev, 0);
 	do_gettimeofday(&tv_after);
-	MYDBG("usb_disable_device(), time spent, sec : %d, usec : %d\n", (unsigned int)(tv_after.tv_sec - tv_before.tv_sec), (unsigned int)(tv_after.tv_usec - tv_before.tv_usec));
 
 	usb_hcd_synchronize_unlinks(udev);
 
@@ -2311,7 +2300,6 @@ void usb_disconnect(struct usb_device **pdev)
 	do_gettimeofday(&tv_before);
 	usb_remove_ep_devs(&udev->ep0);
 	do_gettimeofday(&tv_after);
-	MYDBG("usb_remove_ep_devs(), time spent, sec : %d, usec : %d\n", (unsigned int)(tv_after.tv_sec - tv_before.tv_sec), (unsigned int)(tv_after.tv_usec - tv_before.tv_usec));
 
 	usb_unlock_device(udev);
 
@@ -2322,7 +2310,6 @@ void usb_disconnect(struct usb_device **pdev)
 	do_gettimeofday(&tv_before);
 	device_del(&udev->dev);
 	do_gettimeofday(&tv_after);
-	MYDBG("device_del(), time spent, sec : %d, usec : %d\n", (unsigned int)(tv_after.tv_sec - tv_before.tv_sec), (unsigned int)(tv_after.tv_usec - tv_before.tv_usec));
 
 	/* Free the device number and delete the parent's children[]
 	 * (or root_hub) pointer.
@@ -2342,11 +2329,9 @@ void usb_disconnect(struct usb_device **pdev)
 	if (is_icusb_rh)
 	{
 		set_icusb_sts_disconnect_done();
-		MYDBG("ICUSB Disconnect\n");
 	}
 #endif
 	do_gettimeofday(&tv_end);
-	MYDBG("time spent, sec : %d, usec : %d\n", (unsigned int)(tv_end.tv_sec - tv_begin.tv_sec), (unsigned int)(tv_end.tv_usec - tv_begin.tv_usec));
 }
 
 #ifdef CONFIG_USB_ANNOUNCE_NEW_DEVICES
@@ -2682,11 +2667,9 @@ int usb_new_device(struct usb_device *udev)
 		 * sysfs power/wakeup controls wakeup enabled/disabled
 		 */
 		device_init_wakeup(&udev->dev, 0);
-		MYDBG("udev :%p\n", udev);
 #ifdef CONFIG_MTK_DT_USB_SUPPORT
 #ifdef	CONFIG_PM_RUNTIME
 		if(is_musbfsh_rh(udev->parent)){
-			MYDBG("\n");
 			/*find out struct *usb_hub and hook it */
 			usb11_hub = usb_hub_to_struct_hub(udev->parent);
 		}
@@ -2921,9 +2904,7 @@ static int hub_port_wait_reset(struct usb_hub *hub, int port1,
 		msleep(delay);
 
 		/* read and decode port status */
-		MYDBG("");
 		ret = hub_port_status(hub, port1, &portstatus, &portchange);
-		MYDBG("");
 		if (ret < 0)
 			return ret;
 
@@ -3048,38 +3029,29 @@ static int hub_port_reset(struct usb_hub *hub, int port1,
 
 	/* Reset the port */
 	for (i = 0; i < PORT_RESET_TRIES; i++) {
-		MYDBG("");
 		status = set_port_feature(hub->hdev, port1, (warm ?
 					USB_PORT_FEAT_BH_PORT_RESET :
 					USB_PORT_FEAT_RESET));
-		MYDBG("");
 		if (status == -ENODEV) {
-			MYDBG("");
 			;	/* The hub is gone */
 		} else if (status) {
-			MYDBG("");
 			dev_err(hub->intfdev,
 					"cannot %sreset port %d (err = %d)\n",
 					warm ? "warm " : "", port1, status);
 		} else {
-			MYDBG("");
 			status = hub_port_wait_reset(hub, port1, udev, delay,
 								warm);
 			if (status && status != -ENOTCONN)
 			{
-				MYDBG("");
 				dev_dbg(hub->intfdev,
 						"port_wait_reset: err = %d\n",
 						status);
 			}
 		}
 
-		MYDBG("");
 		/* Check for disconnect or reset */
 		if (status == 0 || status == -ENOTCONN || status == -ENODEV) {
-			MYDBG("");
 			hub_port_finish_reset(hub, port1, udev, &status);
-			MYDBG("");
 
 			if (!hub_is_superspeed(hub->hdev))
 				goto done;
@@ -3105,14 +3077,12 @@ static int hub_port_reset(struct usb_hub *hub, int port1,
 				warm = true;
 			}
 		}
-		MYDBG("");
 
 		dev_dbg (hub->intfdev,
 			"port %d not enabled, trying %sreset again...\n",
 			port1, warm ? "warm " : "");
 		delay = HUB_LONG_RESET_TIME;
 	}
-	MYDBG("");
 
 
 	dev_err (hub->intfdev,
@@ -3122,18 +3092,14 @@ static int hub_port_reset(struct usb_hub *hub, int port1,
 done:
 	if (!hub_is_superspeed(hub->hdev))
 	{
-		MYDBG("");
 		up_read(&ehci_cf_port_reset_rwsem);
 	}
 
-	MYDBG("");
 
 	return status;
 }
 
-/* Check if a port is power on */
-static int port_is_power_on(struct usb_hub *hub, unsigned portstatus)
-{
+/* Check if a port is power on */ static int port_is_power_on(struct usb_hub *hub, unsigned portstatus) {
 	int ret = 0;
 
 	if (hub_is_superspeed(hub->hdev)) {
@@ -3391,7 +3357,6 @@ int usb_port_suspend(struct usb_device *udev, pm_message_t msg)
 			/* bail if autosuspend is requested */
 			if (PMSG_IS_AUTO(msg))
 			{
-				MYDBG("");
 				goto err_wakeup;
 			}
 		}
@@ -3404,14 +3369,12 @@ int usb_port_suspend(struct usb_device *udev, pm_message_t msg)
 	if (usb_disable_ltm(udev)) {
 		dev_err(&udev->dev, "Failed to disable LTM before suspend\n.");
 		status = -ENOMEM;
-		MYDBG("");
 		if (PMSG_IS_AUTO(msg))
 			goto err_ltm;
 	}
 	if (usb_unlocked_disable_lpm(udev)) {
 		dev_err(&udev->dev, "Failed to disable LPM before suspend\n.");
 		status = -ENOMEM;
-		MYDBG("");
 		if (PMSG_IS_AUTO(msg))
 			goto err_lpm3;
 	}
@@ -3419,7 +3382,6 @@ int usb_port_suspend(struct usb_device *udev, pm_message_t msg)
 	/* see 7.1.7.6 */
 	if (hub_is_superspeed(hub->hdev))
 	{
-		MYDBG("");
 		status = hub_set_port_link_state(hub, port1, USB_SS_PORT_LS_U3);
 
 #if 0	/* behavior for kernel 3.10 */
@@ -3444,7 +3406,6 @@ int usb_port_suspend(struct usb_device *udev, pm_message_t msg)
 	}
 #else	/*roll back behavior to kernel 3.4 */
 	}else{
-		MYDBG("");
 		status = set_port_feature(hub->hdev, port1,
 				USB_PORT_FEAT_SUSPEND);
 	}
@@ -3453,7 +3414,6 @@ int usb_port_suspend(struct usb_device *udev, pm_message_t msg)
 	if (status) {
 		dev_dbg(hub->intfdev, "can't suspend port %d, status %d\n",
 				port1, status);
-		MYDBG("");
 
 		/* Try to enable USB3 LPM and LTM again */
 		usb_unlocked_enable_lpm(udev);
@@ -3549,9 +3509,7 @@ static int finish_port_resume(struct usb_device *udev)
 	 */
 	if (status == 0) {
 		devstatus = 0;
-		MYDBG("\n");
 		status = usb_get_status(udev, USB_RECIP_DEVICE, 0, &devstatus);
-		MYDBG("%d\n", status);
 		if (status >= 0)
 			status = (status > 0 ? 0 : -ENODEV);
 
@@ -4491,12 +4449,10 @@ hub_port_init (struct usb_hub *hub, struct usb_device *udev, int port1,
 
 	/* Reset the device; full speed may morph to high speed */
 	/* FIXME a USB 2.0 device may morph into SuperSpeed on reset. */
-	MYDBG("");
 #if defined(CONFIG_USBIF_COMPLIANCE)
 	msleep(50);
 #endif
 	retval = hub_port_reset(hub, port1, udev, delay, false);
-	MYDBG("");
 	if (retval < 0)		/* error or disconnect */
 		goto fail;
 	/* success, speed is known */
@@ -4535,7 +4491,6 @@ hub_port_init (struct usb_hub *hub, struct usb_device *udev, int port1,
 	default:
 		goto fail;
 	}
-	MYDBG("");
 
 	if (udev->speed == USB_SPEED_WIRELESS)
 		speed = "variable speed Wireless";
@@ -4576,7 +4531,6 @@ hub_port_init (struct usb_hub *hub, struct usb_device *udev, int port1,
 	 * value.
 	 */
 	for (i = 0; i < GET_DESCRIPTOR_TRIES; (++i, msleep(100))) {
-		MYDBG("");
 		if (USE_NEW_SCHEME(retry_counter) && !(hcd->driver->flags & HCD_USB3)) {
 			struct usb_device_descriptor *buf;
 			int r = 0;
@@ -5230,7 +5184,6 @@ static void hub_events(void)
 			dev_dbg (hub_dev, "resetting for error %d\n",
 				hub->error);
 
-			MYDBG("");
 			ret = usb_reset_device(hdev);
 			if (ret) {
 				dev_dbg (hub_dev,
@@ -5615,7 +5568,6 @@ static int usb_reset_and_verify_device(struct usb_device *udev)
 	int 				i, ret = 0;
 	int				port1 = udev->portnum;
 
-	MYDBG("");
 	if (udev->state == USB_STATE_NOTATTACHED ||
 			udev->state == USB_STATE_SUSPENDED) {
 		dev_dbg(&udev->dev, "device reset not allowed in state %d\n",
@@ -5771,7 +5723,6 @@ int usb_reset_device(struct usb_device *udev)
 	unsigned int noio_flag;
 	struct usb_host_config *config = udev->actconfig;
 
-	MYDBG("");
 	if (udev->state == USB_STATE_NOTATTACHED ||
 			udev->state == USB_STATE_SUSPENDED) {
 		dev_dbg(&udev->dev, "device reset not allowed in state %d\n",
diff --git a/drivers/usb/core/usb.c b/drivers/usb/core/usb.c
index bd9b6d4a2..e54b1bdcd 100644
--- a/drivers/usb/core/usb.c
+++ b/drivers/usb/core/usb.c
@@ -270,13 +270,11 @@ static void usb_dev_complete(struct device *dev)
 
 static int usb_dev_suspend(struct device *dev)
 {
-	MYDBG("");	
 	return usb_suspend(dev, PMSG_SUSPEND);
 }
 
 static int usb_dev_resume(struct device *dev)
 {
-	MYDBG("");	
 	return usb_resume(dev, PMSG_RESUME);
 }
 
diff --git a/drivers/usb/gadget/android.c b/drivers/usb/gadget/android.c
index 419e42f36..1e873d0fd 100755
--- a/drivers/usb/gadget/android.c
+++ b/drivers/usb/gadget/android.c
@@ -246,7 +246,6 @@ static void android_work(struct work_struct *data)
 	else
 		is_hwconnected = false;
 
-	pr_notice("[USB]%s: is_hwconnected=%d \n", __func__, is_hwconnected);
 	/* Add for HW/SW connect */
 
 	spin_lock_irqsave(&cdev->lock, flags);
@@ -270,22 +269,16 @@ static void android_work(struct work_struct *data)
 
 	if (uevent_envp) {
 		kobject_uevent_env(&dev->dev->kobj, KOBJ_CHANGE, uevent_envp);
-		pr_notice("[USB]%s: sent uevent %s\n", __func__, uevent_envp[0]);
 	} else {
-		pr_notice("[USB]%s: did not send uevent (%d %d %p)\n", __func__,
-			 dev->connected, dev->sw_connected, cdev->config);
 	}
 
 	if (!is_hwconnected) {
 		kobject_uevent_env(&dev->dev->kobj, KOBJ_CHANGE, hwdisconnected);
-		pr_notice("[USB]%s: sent uevent %s\n", __func__, hwdisconnected[0]);
 	}
 
 	if (uevent_envp_cdrom) {
 		kobject_uevent_env(&dev->dev->kobj, KOBJ_CHANGE, uevent_envp_cdrom);
-		pr_notice("[USB]%s: sent uevent %s\n", __func__, uevent_envp_cdrom[0]);
 	} else {
-		pr_notice("[USB]%s: did not send zero uevent\n", __func__);
 	}
 
 }
@@ -662,7 +655,6 @@ acm_function_bind_config(struct android_usb_function *f,
 				pr_err("Could not bind acm%u config\n", i);
 				goto err_usb_add_function;
 			}
-			pr_info("%s Open /dev/ttyGS%d\n", __func__, i);
 			config->port_index[i] = 0;
 			config->port_index_on[i] = 1;
 			config->instances = 0;
@@ -676,7 +668,6 @@ acm_function_bind_config(struct android_usb_function *f,
 			pr_err("Could not bind acm%u config\n", i);
 			goto err_usb_add_function;
 		}
-		pr_info("%s Open /dev/ttyGS%d\n", __func__, i);
 	}
 
 	return 0;
@@ -766,9 +757,6 @@ static ssize_t acm_port_index_store(struct device *dev,
 
 	num = sscanf(buf, "%d,%d,%d,%d", &(val[0]), &(val[1]), &(val[2]), &(val[3]));
 
-	pr_notice("%s [0]=%d,[1]=%d,[2]=%d,[3]=%d, num=%d\n", __func__, val[0], val[1], \
-								val[2], val[3], num);
-
 	/* Set all port_index as 0*/
 	for (tmp = 0; tmp < MAX_ACM_INSTANCES; tmp ++)
 		config->port_index[tmp] = 0;
@@ -868,7 +856,6 @@ loopback_function_bind_config(struct android_usb_function *f, struct usb_configu
 		pr_err("Could not bind loopback%u config\n", config->port_num);
 		goto err_usb_add_function;
 	}
-	pr_info("%s Open loopback\n", __func__);
 
 	return 0;
 
@@ -960,7 +947,6 @@ serial_function_bind_config(struct android_usb_function *f, struct usb_configura
 		pr_err("Could not bind ser%u config\n", config->port_num);
 		goto err_usb_add_function;
 	}
-	pr_info("%s Open /dev/ttyGS%d\n", __func__, config->port_num);
 
 	return 0;
 
@@ -1121,10 +1107,6 @@ ecm_function_bind_config(struct android_usb_function *f,
 	}
 
 
-	pr_info("%s MAC: %02X:%02X:%02X:%02X:%02X:%02X\n", __func__,
-		ecm->ethaddr[0], ecm->ethaddr[1], ecm->ethaddr[2],
-		ecm->ethaddr[3], ecm->ethaddr[4], ecm->ethaddr[5]);
-
 	dev = gether_setup_name(c->cdev->gadget, ecm->ethaddr, "rndis");
 	if (IS_ERR(dev)) {
 		ret = PTR_ERR(dev);
@@ -1214,17 +1196,11 @@ eem_function_bind_config(struct android_usb_function *f,
 	struct eth_dev *dev;
 	struct eem_function_config *eem = f->config;
 
-	pr_notice("[USB]%s: \n", __func__);
-
 	if (!eem) {
 		pr_err("%s: rndis_pdata\n", __func__);
 		return -1;
 	}
 
-	pr_info("%s MAC: %02X:%02X:%02X:%02X:%02X:%02X\n", __func__,
-		eem->ethaddr[0], eem->ethaddr[1], eem->ethaddr[2],
-		eem->ethaddr[3], eem->ethaddr[4], eem->ethaddr[5]);
-
 	dev = gether_setup_name(c->cdev->gadget, eem->ethaddr, "rndis");
 	if (IS_ERR(dev)) {
 		ret = PTR_ERR(dev);
@@ -1317,17 +1293,11 @@ rndis_function_bind_config(struct android_usb_function *f,
 	struct eth_dev *dev;
 	struct rndis_function_config *rndis = f->config;
 
-	pr_notice("[USB]%s: \n", __func__);
-
 	if (!rndis) {
 		pr_err("%s: rndis_pdata\n", __func__);
 		return -1;
 	}
 
-	pr_info("%s MAC: %02X:%02X:%02X:%02X:%02X:%02X\n", __func__,
-		rndis->ethaddr[0], rndis->ethaddr[1], rndis->ethaddr[2],
-		rndis->ethaddr[3], rndis->ethaddr[4], rndis->ethaddr[5]);
-
 	dev = gether_setup_name(c->cdev->gadget, rndis->ethaddr, "rndis");
 	if (IS_ERR(dev)) {
 		ret = PTR_ERR(dev);
@@ -1927,7 +1897,6 @@ static int android_init_functions(struct android_usb_function **functions,
 	for (; (f = *functions++); index++) {
 		f->dev_name = kasprintf(GFP_KERNEL, "f_%s", f->name);
 		/* Added for USB Develpment debug, more log for more debuging help */
-		pr_notice("[USB]%s: f->dev_name = %s, f->name = %s\n", __func__, f->dev_name, f->name);
 		/* Added for USB Develpment debug, more log for more debuging help */
 		f->dev = device_create(android_class, dev->dev,
 				MKDEV(0, index), f, f->dev_name);
@@ -1945,7 +1914,6 @@ static int android_init_functions(struct android_usb_function **functions,
 								f->name);
 				goto err_out;
 			} else {
-				pr_notice("[USB]%s: init %s success!!\n", __func__, f->name);
 			}
 		}
 
@@ -1994,11 +1962,9 @@ android_bind_enabled_functions(struct android_dev *dev,
 	int ret;
 
 	/* Added for USB Develpment debug, more log for more debuging help */
-	pr_notice("[USB]%s: ", __func__);
 	/* Added for USB Develpment debug, more log for more debuging help */
 
 	list_for_each_entry(f, &dev->enabled_functions, enabled_list) {
-		pr_notice("[USB]bind_config function '%s'/%p\n", f->name, f);
 		ret = f->bind_config(f, c);
 		if (ret) {
 			pr_err("%s: %s failed", __func__, f->name);
@@ -2015,7 +1981,6 @@ android_unbind_enabled_functions(struct android_dev *dev,
 	struct android_usb_function *f;
 
 	list_for_each_entry(f, &dev->enabled_functions, enabled_list) {
-		pr_notice("[USB]unbind_config function '%s'/%p\n", f->name, f);
 		if (f->unbind_config)
 			f->unbind_config(f, c);
 	}
@@ -2028,7 +1993,6 @@ static int android_enable_function(struct android_dev *dev, char *name)
 	while ((f = *functions++)) {
 
 		/* Added for USB Develpment debug, more log for more debuging help */
-		pr_notice("[USB]%s: name = %s, f->name=%s \n", __func__, name, f->name);
 		/* Added for USB Develpment debug, more log for more debuging help */
 		if (!strcmp(name, f->name)) {
 			list_add_tail(&f->enabled_list,
@@ -2050,7 +2014,6 @@ functions_show(struct device *pdev, struct device_attribute *attr, char *buf)
 	char *buff = buf;
 
 	/* Added for USB Develpment debug, more log for more debuging help */
-	pr_notice("[USB]%s: ", __func__);
 	/* Added for USB Develpment debug, more log for more debuging help */
 
 	mutex_lock(&dev->mutex);
@@ -2089,7 +2052,6 @@ functions_store(struct device *pdev, struct device_attribute *attr,
 #ifdef MTK_CDP_ENABLE
 #ifdef CONFIG_MTK_KERNEL_POWER_OFF_CHARGING
 	if (g_boot_mode == KERNEL_POWER_OFF_CHARGING_BOOT || g_boot_mode == LOW_POWER_OFF_CHARGING_BOOT) {
-		pr_notice("[USB]KPOC, func%s\n", KPOC_USB_FUNC);
 		err = android_enable_function(dev, KPOC_USB_FUNC);
 		if (err)
 			pr_err("android_usb: Cannot enable '%s' (%d)",
@@ -2101,7 +2063,6 @@ functions_store(struct device *pdev, struct device_attribute *attr,
 #endif
 
 	/* Added for USB Develpment debug, more log for more debuging help */
-	pr_notice("[USB]%s: \n", __func__);
 	/* Added for USB Develpment debug, more log for more debuging help */
 
 	strlcpy(buf, buff, sizeof(buf));
@@ -2111,7 +2072,6 @@ functions_store(struct device *pdev, struct device_attribute *attr,
 		name = strsep(&b, ",");
 
 		/* Added for USB Develpment debug, more log for more debuging help */
-		pr_notice("[USB]%s: name = %s \n", __func__, name);
 		/* Added for USB Develpment debug, more log for more debuging help */
 
 		if (!name)
@@ -2174,7 +2134,6 @@ static ssize_t enable_store(struct device *pdev, struct device_attribute *attr,
 	mutex_lock(&dev->mutex);
 
 	/* Added for USB Develpment debug, more log for more debuging help */
-	pr_notice("[USB]%s: device_attr->attr.name: %s\n", __func__, attr->attr.name);
 	/* Added for USB Develpment debug, more log for more debuging help */
 
 	sscanf(buff, "%d", &enabled);
@@ -2198,7 +2157,6 @@ static ssize_t enable_store(struct device *pdev, struct device_attribute *attr,
 #ifdef MTK_CDP_ENABLE
 #ifdef CONFIG_MTK_KERNEL_POWER_OFF_CHARGING
 	if (g_boot_mode == KERNEL_POWER_OFF_CHARGING_BOOT || g_boot_mode == LOW_POWER_OFF_CHARGING_BOOT) {
-			pr_notice("[USB]KPOC, vid:%d, pid:%d\n", KPOC_USB_VENDOR_ID, KPOC_USB_PRODUCT_ID);
 			cdev->desc.idVendor = __constant_cpu_to_le16(KPOC_USB_VENDOR_ID);
 			cdev->desc.idProduct = __constant_cpu_to_le16(KPOC_USB_PRODUCT_ID);
 		}
@@ -2217,7 +2175,6 @@ static ssize_t enable_store(struct device *pdev, struct device_attribute *attr,
 		}
 
 		list_for_each_entry(f, &dev->enabled_functions, enabled_list) {
-			pr_notice("[USB]enable function '%s'/%p\n", f->name, f);
 			if (f->enable)
 				f->enable(f);
 		}
@@ -2225,18 +2182,15 @@ static ssize_t enable_store(struct device *pdev, struct device_attribute *attr,
 		dev->enabled = true;
 
 		/* Added for USB Develpment debug, more log for more debuging help */
-		pr_notice("[USB]%s: enable 0->1 case, device_desc.idVendor = 0x%x, device_desc.idProduct = 0x%x\n", __func__, device_desc.idVendor, device_desc.idProduct);
 		/* Added for USB Develpment debug, more log for more debuging help */
 
 	} else if (!enabled && dev->enabled) {
 
 		/* Added for USB Develpment debug, more log for more debuging help */
-		pr_notice("[USB]%s: enable 1->0 case, device_desc.idVendor = 0x%x, device_desc.idProduct = 0x%x\n", __func__, device_desc.idVendor, device_desc.idProduct);
 		/* Added for USB Develpment debug, more log for more debuging help */
 
 		android_disable(dev);
 		list_for_each_entry(f, &dev->enabled_functions, enabled_list) {
-			pr_notice("[USB]disable function '%s'/%p\n", f->name, f);
 			if (f->disable) {
 				f->disable(f);
 			}
@@ -2248,7 +2202,6 @@ static ssize_t enable_store(struct device *pdev, struct device_attribute *attr,
 		/* Add for HW/SW connect */
 		if (!usb_cable_connected()) {
 			schedule_work(&dev->work);
-			pr_notice("[USB]%s: enable 0->0 case - no usb cable", __func__);
 		}
 		/* Add for HW/SW connect */
 	}
@@ -2377,8 +2330,6 @@ static int android_setup_config(struct usb_configuration *c, const struct usb_ct
 	int handled = -EINVAL;
 	const u8 recip = ctrl->bRequestType & USB_RECIP_MASK;
 
-	pr_notice("%s bRequestType=%x, bRequest=%x, recip=%x\n", __func__, ctrl->bRequestType, ctrl->bRequest, recip);
-
 	if ((ctrl->bRequestType & USB_TYPE_MASK) == USB_TYPE_STANDARD) {
 		switch (ctrl->bRequest)
 		{
@@ -2390,12 +2341,10 @@ static int android_setup_config(struct usb_configuration *c, const struct usb_ct
 						{
 							case USB_DEVICE_U1_ENABLE:
 								handled = 1;
-								pr_notice("Clear Feature->U1 Enable\n");
 							break;
 
 							case USB_DEVICE_U2_ENABLE:
 								handled = 1;
-								pr_notice("Clear Feature->U2 Enable\n");
 							break;
 
 							default:
@@ -2416,11 +2365,9 @@ static int android_setup_config(struct usb_configuration *c, const struct usb_ct
 						switch (ctrl->wValue)
 						{
 							case USB_DEVICE_U1_ENABLE:
-								pr_notice("Set Feature->U1 Enable\n");
 								handled = 1;
 							break;
 							case USB_DEVICE_U2_ENABLE:
-								pr_notice("Set Feature->U2 Enable\n");
 								handled = 1;
 							break;
 							default:
@@ -2522,8 +2469,6 @@ android_setup(struct usb_gadget *gadget, const struct usb_ctrlrequest *c)
 	int value = -EOPNOTSUPP;
 	unsigned long flags;
 
-	pr_notice("[USB]%s\n", __func__);
-
 	req->zero = 0;
 	req->complete = composite_setup_complete;
 	req->length = 0;
@@ -2564,10 +2509,6 @@ static void android_disconnect(struct usb_composite_dev *cdev)
 {
 	struct android_dev *dev = _android_dev;
 
-	/* Added for USB Develpment debug, more log for more debuging help */
-	pr_notice("[USB]%s: \n", __func__);
-	/* Added for USB Develpment debug, more log for more debuging help */
-
 	/* accessory HID support can be active while the
 	   accessory function is not actually enabled,
 	   so we need to inform it when we are disconnected.
@@ -2576,10 +2517,6 @@ static void android_disconnect(struct usb_composite_dev *cdev)
 
 	dev->connected = 0;
 	schedule_work(&dev->work);
-
-	/* Added for USB Develpment debug, more log for more debuging help */
-	pr_notice("[USB]%s: dev->connected = %d \n", __func__, dev->connected);
-	/* Added for USB Develpment debug, more log for more debuging help */
 }
 
 static struct usb_composite_driver android_usb_driver = {
@@ -2634,8 +2571,6 @@ static int android_start(void)
 	struct android_dev *dev;
 	int err;
 
-	pr_notice("android_start ===> \n");
-
 	err = usb_composite_probe(&android_usb_driver);
 	if (err) {
 		pr_err("%s: failed to probe driver %d", __func__, err);
@@ -2645,18 +2580,12 @@ static int android_start(void)
 	composite_setup_func = android_usb_driver.gadget_driver.setup;
 	android_usb_driver.gadget_driver.setup = android_setup;
 
-	pr_notice("android_start <=== \n");
-
 	return err;
 }
 
 static int android_stop(void)
 {
-	pr_notice("android_stop ===> \n");
-
 	usb_composite_unregister(&android_usb_driver);
-
-	pr_notice("android_stop <=== \n");
 }
 
 static int andoid_usbif_proc_show(struct seq_file *seq, void *v)
@@ -2692,21 +2621,12 @@ static ssize_t andoid_usbif_proc_write(struct file *file, const char __user *buf
 
 	msg[length] = 0 ;
 
-	pr_notice("andoid_usbif_proc_write: %s, current driver on/off: %d\n", msg, andoid_usbif_driver_on);
-
 	if ((msg[0] == '1') && (andoid_usbif_driver_on == 0)){
-		pr_notice("start usb android driver ===> \n");
-		printk("start usb android driver ===> \n");
 		android_start() ;
 		andoid_usbif_driver_on = 1 ;
-		pr_notice("start usb android driver <=== \n");
 	}else if ((msg[0] == '0') && (andoid_usbif_driver_on == 1)){
-		pr_notice("stop usb android driver ===> \n");
-		printk("stop usb android driver ===> \n");
 		andoid_usbif_driver_on = 0 ;
 		android_stop() ;
-
-		pr_notice("stop usb android driver <=== \n");
 	}
 
 	return length;
@@ -2755,7 +2675,6 @@ static int __init init(void)
 
 	if (prEntry)
 	{
-		printk("create the android_usbif_init proc OK!\n") ;
 	}else{
 		printk("[ERROR] create the android_usbif_init proc FAIL\n") ;
 	}
@@ -2779,11 +2698,9 @@ late_initcall(init);
 
 static void __exit cleanup(void)
 {
-	printk("[U3D] android cleanup ===> \n") ;
 	class_destroy(android_class);
 	kfree(_android_dev);
 	_android_dev = NULL;
-	printk("[U3D] android cleanup <=== \n") ;
 }
 module_exit(cleanup);
 
diff --git a/drivers/usb/gadget/composite.c b/drivers/usb/gadget/composite.c
index 284995092..927cc8c5d 100644
--- a/drivers/usb/gadget/composite.c
+++ b/drivers/usb/gadget/composite.c
@@ -190,12 +190,6 @@ int usb_add_function(struct usb_configuration *config,
 {
 	int	value = -EINVAL;
 	
-	pr_debug("[XLOG_DEBUG][USB][COM]%s: \n", __func__);
-
-	INFO(config->cdev, "adding '%s'/%p to config '%s'/%p\n",
-			function->name, function,
-			config->label, config);
-
 	if (!function->set_alt || !function->disable)
 		goto done;
 
@@ -225,9 +219,6 @@ int usb_add_function(struct usb_configuration *config,
 		config->superspeed = true;
 
 done:
-	if (value)
-		INFO(config->cdev, "adding '%s'/%p --> %d\n",
-				function->name, function, value);
 	return value;
 }
 EXPORT_SYMBOL_GPL(usb_add_function);
@@ -235,14 +226,12 @@ EXPORT_SYMBOL_GPL(usb_add_function);
 void usb_remove_function(struct usb_configuration *c, struct usb_function *f)
 {
 	if (f->disable) {
-		INFO(c->cdev, "disable function '%s'/%p\n", f->name, f);
 		f->disable(f);
 	}
 
 	bitmap_zero(f->endpoints, 32);
 	list_del(&f->list);
 	if (f->unbind) {
-		INFO(c->cdev, "unbind function '%s'/%p\n", f->name, f);
 		f->unbind(c, f);
 	}
 }
@@ -603,10 +592,7 @@ static void reset_config(struct usb_composite_dev *cdev)
 {
 	struct usb_function		*f;
 
-	DBG(cdev, "reset config\n");
-
 	list_for_each_entry(f, &cdev->config->functions, list) {
-		INFO(cdev, "disable function '%s'/%p\n", f->name, f);
 		if (f->disable)
 			f->disable(f);
 
@@ -647,10 +633,6 @@ static int set_config(struct usb_composite_dev *cdev,
 		result = 0;
 	}
 
-	INFO(cdev, "%s config #%d: %s\n",
-	     usb_speed_string(gadget->speed),
-	     number, c ? c->label : "unconfigured");
-
 	if (!c)
 		goto done;
 
@@ -788,8 +770,6 @@ int usb_add_config(struct usb_composite_dev *cdev,
 					struct usb_function, list);
 			list_del(&f->list);
 			if (f->unbind) {
-				INFO(cdev, "unbind function '%s'/%p\n",
-					f->name, f);
 				f->unbind(config, f);
 				/* may free memory for "f" */
 			}
@@ -800,16 +780,6 @@ int usb_add_config(struct usb_composite_dev *cdev,
 	} else {
 		unsigned	i;
 
-		INFO(cdev, "cfg %d/%p speeds:%s%s%s\n",
-			config->bConfigurationValue, config,
-			config->superspeed ? " super" : "",
-			config->highspeed ? " high" : "",
-			config->fullspeed
-				? (gadget_is_dualspeed(cdev->gadget)
-					? " full"
-					: " full/low")
-				: "");
-
 		for (i = 0; i < MAX_CONFIG_INTERFACES; i++) {
 			struct usb_function	*f = config->interface[i];
 
@@ -843,13 +813,11 @@ static void unbind_config(struct usb_composite_dev *cdev,
 				struct usb_function, list);
 		list_del(&f->list);
 		if (f->unbind) {
-			INFO(cdev, "unbind function '%s'/%p\n", f->name, f);
 			f->unbind(config, f);
 			/* may free memory for "f" */
 		}
 	}
 	if (config->unbind) {
-		INFO(cdev, "unbind config '%s'/%p\n", config->label, config);
 		config->unbind(config);
 			/* may free memory for "c" */
 	}
@@ -1261,8 +1229,6 @@ composite_setup(struct usb_gadget *gadget, const struct usb_ctrlrequest *ctrl)
 	struct usb_function		*f = NULL;
 	u8				endp;
 
-	INFO(cdev, "%s bRequest=0x%X\n", __func__, ctrl->bRequest);
-
 	/* partial re-init of the response message; the function or the
 	 * gadget might need to intercept e.g. a control-OUT completion
 	 * when we delegate to it.
@@ -1307,8 +1273,6 @@ composite_setup(struct usb_gadget *gadget, const struct usb_ctrlrequest *ctrl)
 
 			value = min(w_length, (u16) sizeof cdev->desc);
 			memcpy(req->buf, &cdev->desc, value);
-			INFO(cdev, "[COM]USB_REQ_GET_DESCRIPTOR: "
-							"USB_DT_DEVICE, value=%d\n",value);
 			break;
 		case USB_DT_DEVICE_QUALIFIER:
 			if (!gadget_is_dualspeed(gadget) ||
@@ -1317,12 +1281,8 @@ composite_setup(struct usb_gadget *gadget, const struct usb_ctrlrequest *ctrl)
 			device_qual(cdev);
 			value = min_t(int, w_length,
 				sizeof(struct usb_qualifier_descriptor));
-			INFO(cdev, "[COM]USB_REQ_GET_DESCRIPTOR: "
-							"USB_DT_DEVICE_QUALIFIER, value=%d\n",value);
 			break;
 		case USB_DT_OTHER_SPEED_CONFIG:
-			INFO(cdev, "[COM]USB_REQ_GET_DESCRIPTOR: "
-							"USB_DT_OTHER_SPEED_CONFIG\n");
 			if (!gadget_is_dualspeed(gadget) ||
 			    gadget->speed >= USB_SPEED_SUPER)
 				break;
@@ -1331,16 +1291,12 @@ composite_setup(struct usb_gadget *gadget, const struct usb_ctrlrequest *ctrl)
 			value = config_desc(cdev, w_value);
 			if (value >= 0)
 				value = min(w_length, (u16) value);
-			INFO(cdev, "[COM]USB_REQ_GET_DESCRIPTOR: "
-							"USB_DT_CONFIG, value=%d\n",value);
 			break;
 		case USB_DT_STRING:
 			value = get_string(cdev, req->buf,
 					w_index, w_value & 0xff);
 			if (value >= 0) {
 				value = min(w_length, (u16) value);
-				INFO(cdev, "[COM]USB_REQ_GET_DESCRIPTOR: "
-						"USB_DT_STRING, value=%d\n" ,value);
 			}
 			break;
 		case USB_DT_BOS:
@@ -1348,11 +1304,8 @@ composite_setup(struct usb_gadget *gadget, const struct usb_ctrlrequest *ctrl)
 				value = bos_desc(cdev);
 				value = min(w_length, (u16) value);
 			}
-			INFO(cdev, "[COM]USB_REQ_GET_DESCRIPTOR: "
-						"USB_DT_BOS, value=%d\n",value);
 			break;
 		default:
-			INFO(cdev, "[COM]USB_REQ_GET_DESCRIPTOR w_value=0x%X\n", w_value);
 			break;
 		}
 		break;
@@ -1373,8 +1326,6 @@ composite_setup(struct usb_gadget *gadget, const struct usb_ctrlrequest *ctrl)
 		value = set_config(cdev, ctrl, w_value);
 		spin_unlock(&cdev->lock);
 
-		INFO(cdev, "[COM]USB_REQ_SET_CONFIGURATION: "
-						"value=%d\n",value);
 		break;
 	case USB_REQ_GET_CONFIGURATION:
 		if (ctrl->bRequestType != USB_DIR_IN)
@@ -1385,9 +1336,6 @@ composite_setup(struct usb_gadget *gadget, const struct usb_ctrlrequest *ctrl)
 			*(u8 *)req->buf = 0;
 		value = min(w_length, (u16) 1);
 
-		INFO(cdev, "[COM]USB_REQ_GET_CONFIGURATION: "
-						"value=%d\n", value);
-
 		break;
 
 	/* function drivers must handle get/set altsetting; if there's
@@ -1401,8 +1349,6 @@ composite_setup(struct usb_gadget *gadget, const struct usb_ctrlrequest *ctrl)
 
 		if (cdev->config)
 		    f = cdev->config->interface[intf];
-		else
-			INFO(cdev, "%s: cdev->config = NULL \n", __func__);
 
 		if (!f)
 			break;
@@ -1417,9 +1363,6 @@ composite_setup(struct usb_gadget *gadget, const struct usb_ctrlrequest *ctrl)
 			DBG(cdev, "delayed_status count %d\n",
 					cdev->delayed_status);
 		}
-
-		INFO(cdev, "[COM]USB_REQ_SET_INTERFACE: "
-						"value=%d\n", value);
 		break;
 	case USB_REQ_GET_INTERFACE:
 		if (ctrl->bRequestType != (USB_DIR_IN|USB_RECIP_INTERFACE))
@@ -1436,8 +1379,6 @@ composite_setup(struct usb_gadget *gadget, const struct usb_ctrlrequest *ctrl)
 		*((u8 *)req->buf) = value;
 		value = min(w_length, (u16) 1);
 
-		INFO(cdev, "[COM]USB_REQ_GET_INTERFACE: "
-						"value=%d\n", value);
 		break;
 
 	/*
@@ -1448,7 +1389,6 @@ composite_setup(struct usb_gadget *gadget, const struct usb_ctrlrequest *ctrl)
 	 * interface of the function
 	 */
 	case USB_REQ_GET_STATUS:
-		INFO(cdev, "[COM]USB_REQ_GET_STATUS\n");
 		if (!gadget_is_superspeed(gadget))
 			goto unknown;
 		if (ctrl->bRequestType != (USB_DIR_IN | USB_RECIP_INTERFACE))
@@ -1472,15 +1412,12 @@ composite_setup(struct usb_gadget *gadget, const struct usb_ctrlrequest *ctrl)
 	 */
 	case USB_REQ_CLEAR_FEATURE:
 	case USB_REQ_SET_FEATURE:
-		INFO(cdev, "[COM]%s w_value=%d\n",
-			((ctrl->bRequest==USB_REQ_SET_FEATURE)? "USB_REQ_SET_FEATURE" : "USB_REQ_CLEAR_FEATURE"), w_value);
 		if (!gadget_is_superspeed(gadget))
 			goto unknown;
 		if (ctrl->bRequestType != (USB_DIR_OUT | USB_RECIP_INTERFACE))
 			goto unknown;
 		switch (w_value) {
 		case USB_INTRF_FUNC_SUSPEND:
-			INFO(cdev, "[COM]USB_INTRF_FUNC_SUSPEND\n");
 			if (!cdev->config || intf >= MAX_CONFIG_INTERFACES)
 				break;
 			f = cdev->config->interface[intf];
@@ -1499,16 +1436,10 @@ composite_setup(struct usb_gadget *gadget, const struct usb_ctrlrequest *ctrl)
 		}
 		break;
 	case USB_REQ_SET_SEL:
-		INFO(cdev, "[COM]USB_REQ_SET_SEL Pretend success\n");
 		value = 0;
 		break;
 	default:
 unknown:
-		INFO(cdev,
-			"non-core control req%02x.%02x v%04x i%04x l%d\n",
-			ctrl->bRequestType, ctrl->bRequest,
-			w_value, w_index, w_length);
-
 		/* functions always handle their interfaces and endpoints...
 		 * punt other recipients (other, WUSB, ...) to the current
 		 * configuration code.
@@ -1565,11 +1496,6 @@ unknown:
 	}
 
 done:
-	if(value < 0) {
-		INFO(cdev, "[COM]composite_setup: value=%d,"
-				"bRequestType=0x%x, bRequest=0x%x, w_value=0x%x, w_length=0x%x \n", value,
-				ctrl->bRequestType,	ctrl->bRequest, w_value, w_length);
-	}
 	/* device either stalls (value < 0) or reports success */
 	return value;
 }
@@ -1591,7 +1517,6 @@ void composite_disconnect(struct usb_gadget *gadget)
 	/* ALPS00235316 and ALPS00234976 */
 	/* reset the complet function */
 	if(cdev->req->complete)	{
-		INFO(cdev, "[COM]%s: reassign the complete function!!\n", __func__);
 		cdev->req->complete = composite_setup_complete;
 	}
 
@@ -1784,7 +1709,6 @@ static int composite_bind(struct usb_gadget *gadget,
 	if (composite->needs_serial && !cdev->desc.iSerialNumber)
 		WARNING(cdev, "userspace failed to provide iSerialNumber\n");
 
-	INFO(cdev, "%s ready\n", composite->name);
 	return 0;
 
 fail:
diff --git a/drivers/usb/gadget/f_acm.c b/drivers/usb/gadget/f_acm.c
index 59f492a29..0d58ff238 100644
--- a/drivers/usb/gadget/f_acm.c
+++ b/drivers/usb/gadget/f_acm.c
@@ -416,9 +416,9 @@ static int acm_setup(struct usb_function *f, const struct usb_ctrlrequest *ctrl)
 
 	default:
 invalid:
-		VDBG(cdev, "invalid control req%02x.%02x v%04x i%04x l%d\n",
-			ctrl->bRequestType, ctrl->bRequest,
-			w_value, w_index, w_length);
+               VDBG(cdev, "invalid control req%02x.%02x v%04x i%04x l%d\n",
+                       ctrl->bRequestType, ctrl->bRequest,
+                       w_value, w_index, w_length);
 	}
 
 	/* respond with data transfer or status phase? */
@@ -447,7 +447,6 @@ static int acm_set_alt(struct usb_function *f, unsigned intf, unsigned alt)
 
 	if (intf == acm->ctrl_id) {
 		if (acm->notify->driver_data) {
-			VDBG(cdev, "reset acm control interface %d\n", intf);
 			usb_ep_disable(acm->notify);
 		}
 
diff --git a/drivers/usb/gadget/f_ecm.c b/drivers/usb/gadget/f_ecm.c
index abf8a31ae..96b161841 100644
--- a/drivers/usb/gadget/f_ecm.c
+++ b/drivers/usb/gadget/f_ecm.c
@@ -398,8 +398,6 @@ static void ecm_do_notify(struct f_ecm *ecm)
 		event->wLength = 0;
 		req->length = sizeof *event;
 
-		DBG(cdev, "notify connect %s\n",
-				ecm->is_open ? "true" : "false");
 		ecm->notify_state = ECM_NOTIFY_SPEED;
 		break;
 
@@ -414,7 +412,6 @@ static void ecm_do_notify(struct f_ecm *ecm)
 		data[0] = cpu_to_le32(ecm_bitrate(cdev->gadget));
 		data[1] = data[0];
 
-		DBG(cdev, "notify speed %d\n", ecm_bitrate(cdev->gadget));
 		ecm->notify_state = ECM_NOTIFY_NONE;
 		break;
 	}
@@ -425,7 +422,6 @@ static void ecm_do_notify(struct f_ecm *ecm)
 	status = usb_ep_queue(ecm->notify, req, GFP_ATOMIC);
 	if (status < 0) {
 		ecm->notify_req = req;
-		DBG(cdev, "notify --> %d\n", status);
 	}
 }
 
@@ -455,8 +451,6 @@ static void ecm_notify_complete(struct usb_ep *ep, struct usb_request *req)
 		ecm->notify_state = ECM_NOTIFY_NONE;
 		break;
 	default:
-		DBG(cdev, "event %02x --> %d\n",
-			event->bNotificationType, req->status);
 		break;
 	}
 	ecm->notify_req = req;
@@ -484,7 +478,6 @@ static int ecm_setup(struct usb_function *f, const struct usb_ctrlrequest *ctrl)
 		 */
 		if (w_length != 0 || w_index != ecm->ctrl_id)
 			goto invalid;
-		DBG(cdev, "packet filter %02x\n", w_value);
 		/* REVISIT locking of cdc_filter.  This assumes the UDC
 		 * driver won't have a concurrent packet TX irq running on
 		 * another CPU; or that if it does, this write is atomic...
@@ -504,16 +497,13 @@ static int ecm_setup(struct usb_function *f, const struct usb_ctrlrequest *ctrl)
 
 	default:
 invalid:
-		DBG(cdev, "invalid control req%02x.%02x v%04x i%04x l%d\n",
-			ctrl->bRequestType, ctrl->bRequest,
-			w_value, w_index, w_length);
+               DBG(cdev, "invalid control req%02x.%02x v%04x i%04x l%d\n",
+                       ctrl->bRequestType, ctrl->bRequest,
+                       w_value, w_index, w_length);
 	}
 
 	/* respond with data transfer or status phase? */
 	if (value >= 0) {
-		DBG(cdev, "ecm req%02x.%02x v%04x i%04x l%d\n",
-			ctrl->bRequestType, ctrl->bRequest,
-			w_value, w_index, w_length);
 		req->zero = 0;
 		req->length = value;
 		value = usb_ep_queue(cdev->gadget->ep0, req, GFP_ATOMIC);
@@ -539,11 +529,9 @@ static int ecm_set_alt(struct usb_function *f, unsigned intf, unsigned alt)
 			goto fail;
 
 		if (ecm->notify->driver_data) {
-			VDBG(cdev, "reset ecm control %d\n", intf);
 			usb_ep_disable(ecm->notify);
 		}
 		if (!(ecm->notify->desc)) {
-			VDBG(cdev, "init ecm ctrl %d\n", intf);
 			if (config_ep_by_speed(cdev->gadget, f, ecm->notify))
 				goto fail;
 		}
@@ -556,13 +544,11 @@ static int ecm_set_alt(struct usb_function *f, unsigned intf, unsigned alt)
 			goto fail;
 
 		if (ecm->port.in_ep->driver_data) {
-			DBG(cdev, "reset ecm\n");
 			gether_disconnect(&ecm->port);
 		}
 
 		if (!ecm->port.in_ep->desc ||
 		    !ecm->port.out_ep->desc) {
-			DBG(cdev, "init ecm\n");
 			if (config_ep_by_speed(cdev->gadget, f,
 					       ecm->port.in_ep) ||
 			    config_ep_by_speed(cdev->gadget, f,
@@ -585,7 +571,6 @@ static int ecm_set_alt(struct usb_function *f, unsigned intf, unsigned alt)
 			ecm->port.is_zlp_ok = !(gadget_is_musbhdrc(cdev->gadget)
 				);
 			ecm->port.cdc_filter = DEFAULT_FILTER;
-			DBG(cdev, "activate ecm\n");
 			net = gether_connect(&ecm->port);
 			if (IS_ERR(net))
 				return PTR_ERR(net);
@@ -623,8 +608,6 @@ static void ecm_disable(struct usb_function *f)
 	struct f_ecm		*ecm = func_to_ecm(f);
 	struct usb_composite_dev *cdev = f->config->cdev;
 
-	DBG(cdev, "ecm deactivated\n");
-
 	if (ecm->port.in_ep->driver_data)
 		gether_disconnect(&ecm->port);
 
@@ -659,8 +642,6 @@ static void ecm_open(struct gether *geth)
 {
 	struct f_ecm		*ecm = func_to_ecm(&geth->func);
 
-	DBG(ecm->port.func.config->cdev, "%s\n", __func__);
-
 	ecm->is_open = true;
 	ecm_notify(ecm);
 }
@@ -669,8 +650,6 @@ static void ecm_close(struct gether *geth)
 {
 	struct f_ecm		*ecm = func_to_ecm(&geth->func);
 
-	DBG(ecm->port.func.config->cdev, "%s\n", __func__);
-
 	ecm->is_open = false;
 	ecm_notify(ecm);
 }
@@ -770,11 +749,6 @@ ecm_bind(struct usb_configuration *c, struct usb_function *f)
 	ecm->port.open = ecm_open;
 	ecm->port.close = ecm_close;
 
-	DBG(cdev, "CDC Ethernet: %s speed IN/%s OUT/%s NOTIFY/%s\n",
-			gadget_is_superspeed(c->cdev->gadget) ? "super" :
-			gadget_is_dualspeed(c->cdev->gadget) ? "dual" : "full",
-			ecm->port.in_ep->name, ecm->port.out_ep->name,
-			ecm->notify->name);
 	return 0;
 
 fail:
@@ -801,8 +775,6 @@ ecm_unbind(struct usb_configuration *c, struct usb_function *f)
 {
 	struct f_ecm		*ecm = func_to_ecm(f);
 
-	DBG(c->cdev, "ecm unbind\n");
-
 	ecm_string_defs[0].id = 0;
 	usb_free_all_descriptors(f);
 
diff --git a/drivers/usb/gadget/f_eem.c b/drivers/usb/gadget/f_eem.c
index 82281cb69..835abd38c 100644
--- a/drivers/usb/gadget/f_eem.c
+++ b/drivers/usb/gadget/f_eem.c
@@ -172,10 +172,6 @@ static int eem_setup(struct usb_function *f, const struct usb_ctrlrequest *ctrl)
 	u16			w_value = le16_to_cpu(ctrl->wValue);
 	u16			w_length = le16_to_cpu(ctrl->wLength);
 
-	DBG(cdev, "invalid control req%02x.%02x v%04x i%04x l%d\n",
-		ctrl->bRequestType, ctrl->bRequest,
-		w_value, w_index, w_length);
-
 	/* device either stalls (value < 0) or reports success */
 	return value;
 }
@@ -194,12 +190,10 @@ static int eem_set_alt(struct usb_function *f, unsigned intf, unsigned alt)
 	if (intf == eem->ctrl_id) {
 
 		if (eem->port.in_ep->driver_data) {
-			DBG(cdev, "reset eem\n");
 			gether_disconnect(&eem->port);
 		}
 
 		if (!eem->port.in_ep->desc || !eem->port.out_ep->desc) {
-			DBG(cdev, "init eem\n");
 			if (config_ep_by_speed(cdev->gadget, f,
 					       eem->port.in_ep) ||
 			    config_ep_by_speed(cdev->gadget, f,
@@ -215,7 +209,6 @@ static int eem_set_alt(struct usb_function *f, unsigned intf, unsigned alt)
 		 */
 		eem->port.is_zlp_ok = 1;
 		eem->port.cdc_filter = DEFAULT_FILTER;
-		DBG(cdev, "activate eem\n");
 		net = gether_connect(&eem->port);
 		if (IS_ERR(net))
 			return PTR_ERR(net);
@@ -232,8 +225,6 @@ static void eem_disable(struct usb_function *f)
 	struct f_eem		*eem = func_to_eem(f);
 	struct usb_composite_dev *cdev = f->config->cdev;
 
-	DBG(cdev, "eem deactivated\n");
-
 	if (eem->port.in_ep->driver_data)
 		gether_disconnect(&eem->port);
 }
@@ -289,10 +280,6 @@ eem_bind(struct usb_configuration *c, struct usb_function *f)
 	if (status)
 		goto fail;
 
-	DBG(cdev, "CDC Ethernet (EEM): %s speed IN/%s OUT/%s\n",
-			gadget_is_superspeed(c->cdev->gadget) ? "super" :
-			gadget_is_dualspeed(c->cdev->gadget) ? "dual" : "full",
-			eem->port.in_ep->name, eem->port.out_ep->name);
 	return 0;
 
 fail:
@@ -312,8 +299,6 @@ eem_unbind(struct usb_configuration *c, struct usb_function *f)
 {
 	struct f_eem	*eem = func_to_eem(f);
 
-	DBG(c->cdev, "eem unbind\n");
-
 	usb_free_all_descriptors(f);
 	kfree(eem);
 }
diff --git a/drivers/usb/gadget/f_fs.c b/drivers/usb/gadget/f_fs.c
index ff6514982..8613eb56e 100644
--- a/drivers/usb/gadget/f_fs.c
+++ b/drivers/usb/gadget/f_fs.c
@@ -445,7 +445,6 @@ static ssize_t ffs_ep0_write(struct file *file, const char __user *buf,
 
 		/* Handle data */
 		if (ffs->state == FFS_READ_DESCRIPTORS) {
-			pr_info("read descriptors\n");
 			ret = __ffs_data_got_descs(ffs, data, len);
 			if (unlikely(ret < 0))
 				break;
@@ -453,7 +452,6 @@ static ssize_t ffs_ep0_write(struct file *file, const char __user *buf,
 			ffs->state = FFS_READ_STRINGS;
 			ret = len;
 		} else {
-			pr_info("read strings\n");
 			ret = __ffs_data_got_strings(ffs, data, len);
 			if (unlikely(ret < 0))
 				break;
@@ -1303,8 +1301,7 @@ static int functionfs_init(void)
 	ENTER();
 
 	ret = register_filesystem(&ffs_fs_type);
-	if (likely(!ret))
-		pr_info("file system registered\n");
+	if (likely(!ret)) {}
 	else
 		pr_err("failed registering file system (%d)\n", ret);
 
@@ -1315,7 +1312,6 @@ static void functionfs_cleanup(void)
 {
 	ENTER();
 
-	pr_info("unloading\n");
 	unregister_filesystem(&ffs_fs_type);
 }
 
@@ -1345,7 +1341,6 @@ static void ffs_data_put(struct ffs_data *ffs)
 	ENTER();
 
 	if (unlikely(atomic_dec_and_test(&ffs->ref))) {
-		pr_info("%s(): freeing\n", __func__);
 		ffs_data_clear(ffs);
 		BUG_ON(waitqueue_active(&ffs->ev.waitq) ||
 		       waitqueue_active(&ffs->ep0req_completion.wait));
diff --git a/drivers/usb/gadget/f_mass_storage.c b/drivers/usb/gadget/f_mass_storage.c
index 78d1c9e55..df9f19629 100644
--- a/drivers/usb/gadget/f_mass_storage.c
+++ b/drivers/usb/gadget/f_mass_storage.c
@@ -564,7 +564,6 @@ static int fsg_setup(struct usb_function *f,
 		*(u8 *)req->buf = fsg->common->nluns - 1;
 #endif
 
-		INFO(fsg, "get max LUN = %d\n",*(u8 *)req->buf);
 		/* Respond with data/status */
 		req->length = min((u16)1, w_length);
 		return ep0_queue(fsg->common);
@@ -2845,9 +2844,6 @@ buffhds_first_it:
 	init_waitqueue_head(&common->fsg_wait);
 
 	/* Information */
-	INFO(common, FSG_DRIVER_DESC ", version: " FSG_DRIVER_VERSION "\n");
-	INFO(common, "Number of LUNs=%d\n", common->nluns);
-
 	pathbuf = kmalloc(PATH_MAX, GFP_KERNEL);
 	for (i = 0, nluns = common->nluns, curlun = common->luns;
 	     i < nluns;
@@ -2862,11 +2858,6 @@ buffhds_first_it:
 					p = "(error)";
 			}
 		}
-		LINFO(curlun, "LUN: %s%s%sfile: %s\n",
-		      curlun->removable ? "removable " : "",
-		      curlun->ro ? "read only " : "",
-		      curlun->cdrom ? "CD-ROM " : "",
-		      p);
 	}
 	kfree(pathbuf);
 
diff --git a/drivers/usb/gadget/f_ncm.c b/drivers/usb/gadget/f_ncm.c
index ee19bc8d0..d0001f3b5 100644
--- a/drivers/usb/gadget/f_ncm.c
+++ b/drivers/usb/gadget/f_ncm.c
@@ -474,8 +474,6 @@ static void ncm_do_notify(struct f_ncm *ncm)
 		event->wLength = 0;
 		req->length = sizeof *event;
 
-		DBG(cdev, "notify connect %s\n",
-				ncm->is_open ? "true" : "false");
 		ncm->notify_state = NCM_NOTIFY_NONE;
 		break;
 
@@ -490,7 +488,6 @@ static void ncm_do_notify(struct f_ncm *ncm)
 		data[0] = cpu_to_le32(ncm_bitrate(cdev->gadget));
 		data[1] = data[0];
 
-		DBG(cdev, "notify speed %d\n", ncm_bitrate(cdev->gadget));
 		ncm->notify_state = NCM_NOTIFY_CONNECT;
 		break;
 	}
@@ -508,7 +505,6 @@ static void ncm_do_notify(struct f_ncm *ncm)
 	spin_lock(&ncm->lock);
 	if (status < 0) {
 		ncm->notify_req = req;
-		DBG(cdev, "notify --> %d\n", status);
 	}
 }
 
@@ -540,16 +536,12 @@ static void ncm_notify_complete(struct usb_ep *ep, struct usb_request *req)
 	spin_lock(&ncm->lock);
 	switch (req->status) {
 	case 0:
-		VDBG(cdev, "Notification %02x sent\n",
-		     event->bNotificationType);
 		break;
 	case -ECONNRESET:
 	case -ESHUTDOWN:
 		ncm->notify_state = NCM_NOTIFY_NONE;
 		break;
 	default:
-		DBG(cdev, "event %02x --> %d\n",
-			event->bNotificationType, req->status);
 		break;
 	}
 	ncm->notify_req = req;
@@ -567,7 +559,6 @@ static void ncm_ep0out_complete(struct usb_ep *ep, struct usb_request *req)
 
 	req->context = NULL;
 	if (req->status || req->actual != req->length) {
-		DBG(cdev, "Bad control-OUT transfer\n");
 		goto invalid;
 	}
 
@@ -579,7 +570,6 @@ static void ncm_ep0out_complete(struct usb_ep *ep, struct usb_request *req)
 	}
 
 	ncm->port.fixed_in_len = in_size;
-	VDBG(cdev, "Set NTB INPUT SIZE %d\n", in_size);
 	return;
 
 invalid:
@@ -610,7 +600,6 @@ static int ncm_setup(struct usb_function *f, const struct usb_ctrlrequest *ctrl)
 		 */
 		if (w_length != 0 || w_index != ncm->ctrl_id)
 			goto invalid;
-		DBG(cdev, "packet filter %02x\n", w_value);
 		/*
 		 * REVISIT locking of cdc_filter.  This assumes the UDC
 		 * driver won't have a concurrent packet TX irq running on
@@ -637,7 +626,6 @@ static int ncm_setup(struct usb_function *f, const struct usb_ctrlrequest *ctrl)
 		value = w_length > sizeof ntb_parameters ?
 			sizeof ntb_parameters : w_length;
 		memcpy(req->buf, &ntb_parameters, value);
-		VDBG(cdev, "Host asked NTB parameters\n");
 		break;
 
 	case ((USB_DIR_IN | USB_TYPE_CLASS | USB_RECIP_INTERFACE) << 8)
@@ -647,8 +635,6 @@ static int ncm_setup(struct usb_function *f, const struct usb_ctrlrequest *ctrl)
 			goto invalid;
 		put_unaligned_le32(ncm->port.fixed_in_len, req->buf);
 		value = 4;
-		VDBG(cdev, "Host asked INPUT SIZE, sending %d\n",
-		     ncm->port.fixed_in_len);
 		break;
 
 	case ((USB_DIR_OUT | USB_TYPE_CLASS | USB_RECIP_INTERFACE) << 8)
@@ -674,7 +660,6 @@ static int ncm_setup(struct usb_function *f, const struct usb_ctrlrequest *ctrl)
 		format = (ncm->parser_opts == &ndp16_opts) ? 0x0000 : 0x0001;
 		put_unaligned_le16(format, req->buf);
 		value = 2;
-		VDBG(cdev, "Host asked NTB FORMAT, sending %d\n", format);
 		break;
 	}
 
@@ -686,11 +671,9 @@ static int ncm_setup(struct usb_function *f, const struct usb_ctrlrequest *ctrl)
 		switch (w_value) {
 		case 0x0000:
 			ncm->parser_opts = &ndp16_opts;
-			DBG(cdev, "NCM16 selected\n");
 			break;
 		case 0x0001:
 			ncm->parser_opts = &ndp32_opts;
-			DBG(cdev, "NCM32 selected\n");
 			break;
 		default:
 			goto invalid;
@@ -708,7 +691,6 @@ static int ncm_setup(struct usb_function *f, const struct usb_ctrlrequest *ctrl)
 		is_crc = ncm->is_crc ? 0x0001 : 0x0000;
 		put_unaligned_le16(is_crc, req->buf);
 		value = 2;
-		VDBG(cdev, "Host asked CRC MODE, sending %d\n", is_crc);
 		break;
 	}
 
@@ -723,12 +705,10 @@ static int ncm_setup(struct usb_function *f, const struct usb_ctrlrequest *ctrl)
 		case 0x0000:
 			ncm->is_crc = false;
 			ndp_hdr_crc = NCM_NDP_HDR_NOCRC;
-			DBG(cdev, "non-CRC mode selected\n");
 			break;
 		case 0x0001:
 			ncm->is_crc = true;
 			ndp_hdr_crc = NCM_NDP_HDR_CRC;
-			DBG(cdev, "CRC mode selected\n");
 			break;
 		default:
 			goto invalid;
@@ -746,16 +726,10 @@ static int ncm_setup(struct usb_function *f, const struct usb_ctrlrequest *ctrl)
 
 	default:
 invalid:
-		DBG(cdev, "invalid control req%02x.%02x v%04x i%04x l%d\n",
-			ctrl->bRequestType, ctrl->bRequest,
-			w_value, w_index, w_length);
 	}
 
 	/* respond with data transfer or status phase? */
 	if (value >= 0) {
-		DBG(cdev, "ncm req%02x.%02x v%04x i%04x l%d\n",
-			ctrl->bRequestType, ctrl->bRequest,
-			w_value, w_index, w_length);
 		req->zero = 0;
 		req->length = value;
 		value = usb_ep_queue(cdev->gadget->ep0, req, GFP_ATOMIC);
@@ -781,12 +755,10 @@ static int ncm_set_alt(struct usb_function *f, unsigned intf, unsigned alt)
 			goto fail;
 
 		if (ncm->notify->driver_data) {
-			DBG(cdev, "reset ncm control %d\n", intf);
 			usb_ep_disable(ncm->notify);
 		}
 
 		if (!(ncm->notify->desc)) {
-			DBG(cdev, "init ncm ctrl %d\n", intf);
 			if (config_ep_by_speed(cdev->gadget, f, ncm->notify))
 				goto fail;
 		}
@@ -799,7 +771,6 @@ static int ncm_set_alt(struct usb_function *f, unsigned intf, unsigned alt)
 			goto fail;
 
 		if (ncm->port.in_ep->driver_data) {
-			DBG(cdev, "reset ncm\n");
 			gether_disconnect(&ncm->port);
 			ncm_reset_values(ncm);
 		}
@@ -813,7 +784,6 @@ static int ncm_set_alt(struct usb_function *f, unsigned intf, unsigned alt)
 
 			if (!ncm->port.in_ep->desc ||
 			    !ncm->port.out_ep->desc) {
-				DBG(cdev, "init ncm\n");
 				if (config_ep_by_speed(cdev->gadget, f,
 						       ncm->port.in_ep) ||
 				    config_ep_by_speed(cdev->gadget, f,
@@ -832,7 +802,6 @@ static int ncm_set_alt(struct usb_function *f, unsigned intf, unsigned alt)
 				gadget_is_musbhdrc(cdev->gadget)
 				);
 			ncm->port.cdc_filter = DEFAULT_FILTER;
-			DBG(cdev, "activate ncm\n");
 			net = gether_connect(&ncm->port);
 			if (IS_ERR(net))
 				return PTR_ERR(net);
@@ -1078,8 +1047,6 @@ static int ncm_unwrap_ntb(struct gether *port,
 			break;
 	} while (ndp_len > 2 * (opts->dgram_item_len * 2)); /* zero entry */
 
-	VDBG(port->func.config->cdev,
-	     "Parsed NTB with %d frames\n", dgram_counter);
 	return 0;
 err:
 	skb_queue_purge(list);
@@ -1092,8 +1059,6 @@ static void ncm_disable(struct usb_function *f)
 	struct f_ncm		*ncm = func_to_ncm(f);
 	struct usb_composite_dev *cdev = f->config->cdev;
 
-	DBG(cdev, "ncm deactivated\n");
-
 	if (ncm->port.in_ep->driver_data)
 		gether_disconnect(&ncm->port);
 
@@ -1128,8 +1093,6 @@ static void ncm_open(struct gether *geth)
 {
 	struct f_ncm		*ncm = func_to_ncm(&geth->func);
 
-	DBG(ncm->port.func.config->cdev, "%s\n", __func__);
-
 	spin_lock(&ncm->lock);
 	ncm->is_open = true;
 	ncm_notify(ncm);
@@ -1140,8 +1103,6 @@ static void ncm_close(struct gether *geth)
 {
 	struct f_ncm		*ncm = func_to_ncm(&geth->func);
 
-	DBG(ncm->port.func.config->cdev, "%s\n", __func__);
-
 	spin_lock(&ncm->lock);
 	ncm->is_open = false;
 	ncm_notify(ncm);
@@ -1233,10 +1194,6 @@ ncm_bind(struct usb_configuration *c, struct usb_function *f)
 	ncm->port.open = ncm_open;
 	ncm->port.close = ncm_close;
 
-	DBG(cdev, "CDC Network: %s speed IN/%s OUT/%s NOTIFY/%s\n",
-			gadget_is_dualspeed(c->cdev->gadget) ? "dual" : "full",
-			ncm->port.in_ep->name, ncm->port.out_ep->name,
-			ncm->notify->name);
 	return 0;
 
 fail:
@@ -1264,8 +1221,6 @@ ncm_unbind(struct usb_configuration *c, struct usb_function *f)
 {
 	struct f_ncm		*ncm = func_to_ncm(f);
 
-	DBG(c->cdev, "ncm unbind\n");
-
 	ncm_string_defs[0].id = 0;
 	usb_free_all_descriptors(f);
 
diff --git a/drivers/usb/gadget/f_rndis.c b/drivers/usb/gadget/f_rndis.c
index 472c97f48..2e98fb663 100644
--- a/drivers/usb/gadget/f_rndis.c
+++ b/drivers/usb/gadget/f_rndis.c
@@ -438,7 +438,6 @@ static void rndis_response_available(void *_rndis)
 	status = usb_ep_queue(rndis->notify, req, GFP_ATOMIC);
 	if (status) {
 		atomic_dec(&rndis->notify_count);
-		DBG(cdev, "notify/0 --> %d\n", status);
 	}
 }
 
@@ -464,9 +463,6 @@ static void rndis_response_complete(struct usb_ep *ep, struct usb_request *req)
 		atomic_set(&rndis->notify_count, 0);
 		break;
 	default:
-		DBG(cdev, "RNDIS %s response error %d, %d/%d\n",
-			ep->name, status,
-			req->actual, req->length);
 		/* FALLTHROUGH */
 	case 0:
 		if (ep != rndis->notify)
@@ -480,7 +476,6 @@ static void rndis_response_complete(struct usb_ep *ep, struct usb_request *req)
 		status = usb_ep_queue(rndis->notify, req, GFP_ATOMIC);
 		if (status) {
 			atomic_dec(&rndis->notify_count);
-			DBG(cdev, "notify/1 --> %d\n", status);
 		}
 		break;
 	}
@@ -514,10 +509,6 @@ static void rndis_command_complete(struct usb_ep *ep, struct usb_request *req)
 		}else{
 			rndis->port.multi_pkt_xfer = 0;
 		}		
-		DBG(cdev, "%s: MaxTransferSize: %d : Multi_pkt_txr: %s\n",
-				__func__, buf->MaxTransferSize,
-				rndis->port.multi_pkt_xfer ? "enabled" :
-							    "disabled");
 		if (rndis_dl_max_pkt_per_xfer <= 1)
 			rndis->port.multi_pkt_xfer = 0;
 	}
@@ -595,20 +586,13 @@ rndis_setup(struct usb_function *f, const struct usb_ctrlrequest *ctrl)
 
 	default:
 invalid:
-		pr_err("invalid control req%02x.%02x v%04x i%04x l%d\n",
-			ctrl->bRequestType, ctrl->bRequest,
-			w_value, w_index, w_length);
-
-		VDBG(cdev, "invalid control req%02x.%02x v%04x i%04x l%d\n",
-			ctrl->bRequestType, ctrl->bRequest,
-			w_value, w_index, w_length);
+               pr_err("invalid control req%02x.%02x v%04x i%04x l%d\n",
+                       ctrl->bRequestType, ctrl->bRequest,
+                       w_value, w_index, w_length);
 	}
 
 	/* respond with data transfer or status phase? */
 	if (value >= 0) {
-		DBG(cdev, "rndis req%02x.%02x v%04x i%04x l%d\n",
-			ctrl->bRequestType, ctrl->bRequest,
-			w_value, w_index, w_length);
 		req->zero = (value < w_length);
 		req->length = value;
 		value = usb_ep_queue(cdev->gadget->ep0, req, GFP_ATOMIC);
@@ -627,18 +611,12 @@ static int rndis_set_alt(struct usb_function *f, unsigned intf, unsigned alt)
 	struct usb_composite_dev *cdev = f->config->cdev;
 
 	/* we know alt == 0 */
-	printk( F_RNDIS_LOG "rndis_set_alt - interface : %d, rndis ctrl id : %d, rndis data id : %d\n" ,
-	intf, rndis->ctrl_id, rndis->data_id);
 
 	if (intf == rndis->ctrl_id) {
 		if (rndis->notify->driver_data) {
-			VDBG(cdev, "reset rndis control %d\n", intf);
-			printk( F_RNDIS_LOG "reset rndis control %d\n", intf);
 			usb_ep_disable(rndis->notify);
 		}
 		if (!rndis->notify->desc) {
-			VDBG(cdev, "init rndis ctrl %d\n", intf);
-			printk( F_RNDIS_LOG "init rndis ctrl %d\n", intf);
 			if (config_ep_by_speed(cdev->gadget, f, rndis->notify))
 				goto fail;
 		}
@@ -649,14 +627,10 @@ static int rndis_set_alt(struct usb_function *f, unsigned intf, unsigned alt)
 		struct net_device	*net;
 
 		if (rndis->port.in_ep->driver_data) {
-			DBG(cdev, "reset rndis\n");
-			printk( F_RNDIS_LOG "reset rndis\n");
 			gether_disconnect(&rndis->port);
 		}
 
 		if (!rndis->port.in_ep->desc || !rndis->port.out_ep->desc) {
-			DBG(cdev, "init rndis\n");
-			printk( F_RNDIS_LOG "init rndis\n");
 			if (config_ep_by_speed(cdev->gadget, f,
 					       rndis->port.in_ep) ||
 			    config_ep_by_speed(cdev->gadget, f,
@@ -684,7 +658,6 @@ static int rndis_set_alt(struct usb_function *f, unsigned intf, unsigned alt)
 		 */
 		rndis->port.cdc_filter = 0;
 
-		DBG(cdev, "RNDIS RX/TX early activation ... \n");
 		net = gether_connect(&rndis->port);
 		if (IS_ERR(net))
 			return PTR_ERR(net);
@@ -707,9 +680,6 @@ static void rndis_disable(struct usb_function *f)
 	if (!rndis->notify->driver_data)
 		return;
 
-	DBG(cdev, "rndis deactivated\n");
-	printk( F_RNDIS_LOG "rndis deactivated\n");
-
 	rndis_uninit(rndis->config);
 	gether_disconnect(&rndis->port);
 
@@ -731,9 +701,6 @@ static void rndis_open(struct gether *geth)
 	struct f_rndis		*rndis = func_to_rndis(&geth->func);
 	struct usb_composite_dev *cdev = geth->func.config->cdev;
 
-	DBG(cdev, "%s\n", __func__);
-	printk( F_RNDIS_LOG "%s\n", __func__);
-
 	rndis_set_param_medium(rndis->config, RNDIS_MEDIUM_802_3,
 				bitrate(cdev->gadget) / 100);
 	rndis_signal_connect(rndis->config);
@@ -743,9 +710,6 @@ static void rndis_close(struct gether *geth)
 {
 	struct f_rndis		*rndis = func_to_rndis(&geth->func);
 
-	DBG(geth->func.config->cdev, "%s\n", __func__);
-	printk( F_RNDIS_LOG "%s\n", __func__);
-
 	rndis_set_param_medium(rndis->config, RNDIS_MEDIUM_802_3, 0);
 	rndis_signal_disconnect(rndis->config);
 }
@@ -762,10 +726,6 @@ rndis_bind(struct usb_configuration *c, struct usb_function *f)
 	int			status;
 	struct usb_ep		*ep;
 
-	printk( F_RNDIS_LOG \
-			"%s: rndis_bind begin \n", \
-			__func__);
-
 	/* allocate instance-specific interface IDs */
 	status = usb_interface_id(c, f);
 	if (status < 0)
@@ -865,18 +825,6 @@ rndis_bind(struct usb_configuration *c, struct usb_function *f)
 	 * until we're activated via set_alt().
 	 */
 
-	printk( F_RNDIS_LOG
-				"RNDIS: %s speed IN/%s OUT/%s NOTIFY/%s\n",
-			gadget_is_superspeed(c->cdev->gadget) ? "super" :
-			gadget_is_dualspeed(c->cdev->gadget) ? "dual" : "full",
-			rndis->port.in_ep->name, rndis->port.out_ep->name,
-			rndis->notify->name);
-
-	DBG(cdev, "RNDIS: %s speed IN/%s OUT/%s NOTIFY/%s\n",
-			gadget_is_superspeed(c->cdev->gadget) ? "super" :
-			gadget_is_dualspeed(c->cdev->gadget) ? "dual" : "full",
-			rndis->port.in_ep->name, rndis->port.out_ep->name,
-			rndis->notify->name);
 	return 0;
 
 fail:
@@ -905,11 +853,6 @@ rndis_unbind(struct usb_configuration *c, struct usb_function *f)
 {
 	struct f_rndis		*rndis = func_to_rndis(f);
 
-	printk( F_RNDIS_LOG \
-			"%s: rndis_unbind \n", \
-			__func__);
-
-
 	rndis_deregister(rndis->config);
 	rndis_exit();
 
@@ -991,8 +934,5 @@ fail:
 		rndis_exit();
 	}
 
-	printk( F_RNDIS_LOG \
-			"%s: rndis_bind_config_vendor done, status is %d \n", \
-			__func__, status);
 	return status;
 }
diff --git a/drivers/usb/gadget/f_uac1.c b/drivers/usb/gadget/f_uac1.c
index fa8ea4ea0..aab782980 100644
--- a/drivers/usb/gadget/f_uac1.c
+++ b/drivers/usb/gadget/f_uac1.c
@@ -364,9 +364,6 @@ static int audio_set_intf_req(struct usb_function *f,
 	struct usb_audio_control_selector *cs;
 	struct usb_audio_control *con;
 
-	DBG(cdev, "bRequest 0x%x, w_value 0x%04x, len %d, entity %d\n",
-			ctrl->bRequest, w_value, len, id);
-
 	list_for_each_entry(cs, &audio->cs, list) {
 		if (cs->id == id) {
 			list_for_each_entry(con, &cs->control, list) {
@@ -401,9 +398,6 @@ static int audio_get_intf_req(struct usb_function *f,
 	struct usb_audio_control_selector *cs;
 	struct usb_audio_control *con;
 
-	DBG(cdev, "bRequest 0x%x, w_value 0x%04x, len %d, entity %d\n",
-			ctrl->bRequest, w_value, len, id);
-
 	list_for_each_entry(cs, &audio->cs, list) {
 		if (cs->id == id) {
 			list_for_each_entry(con, &cs->control, list) {
@@ -433,9 +427,6 @@ static int audio_set_endpoint_req(struct usb_function *f,
 	u16			len = le16_to_cpu(ctrl->wLength);
 	u16			w_value = le16_to_cpu(ctrl->wValue);
 
-	DBG(cdev, "bRequest 0x%x, w_value 0x%04x, len %d, endpoint %d\n",
-			ctrl->bRequest, w_value, len, ep);
-
 	switch (ctrl->bRequest) {
 	case UAC_SET_CUR:
 		value = len;
@@ -469,9 +460,6 @@ static int audio_get_endpoint_req(struct usb_function *f,
 	u16 len = le16_to_cpu(ctrl->wLength);
 	u16 w_value = le16_to_cpu(ctrl->wValue);
 
-	DBG(cdev, "bRequest 0x%x, w_value 0x%04x, len %d, endpoint %d\n",
-			ctrl->bRequest, w_value, len, ep);
-
 	switch (ctrl->bRequest) {
 	case UAC_GET_CUR:
 	case UAC_GET_MIN:
@@ -519,16 +507,10 @@ f_audio_setup(struct usb_function *f, const struct usb_ctrlrequest *ctrl)
 		break;
 
 	default:
-		ERROR(cdev, "invalid control req%02x.%02x v%04x i%04x l%d\n",
-			ctrl->bRequestType, ctrl->bRequest,
-			w_value, w_index, w_length);
 	}
 
 	/* respond with data transfer or status phase? */
 	if (value >= 0) {
-		DBG(cdev, "audio req%02x.%02x v%04x i%04x l%d\n",
-			ctrl->bRequestType, ctrl->bRequest,
-			w_value, w_index, w_length);
 		req->zero = 0;
 		req->length = value;
 		value = usb_ep_queue(cdev->gadget->ep0, req, GFP_ATOMIC);
@@ -548,8 +530,6 @@ static int f_audio_set_alt(struct usb_function *f, unsigned intf, unsigned alt)
 	struct usb_request *req;
 	int i = 0, err = 0;
 
-	DBG(cdev, "intf %d, alt %d\n", intf, alt);
-
 	if (intf == 1) {
 		if (alt == 1) {
 			usb_ep_enable(out_ep);
diff --git a/fs/bio.c b/fs/bio.c
index 5e7507d79..f272171b1 100644
--- a/fs/bio.c
+++ b/fs/bio.c
@@ -118,7 +118,6 @@ static struct kmem_cache *bio_find_or_create_slab(unsigned int extra_size)
 	if (!slab)
 		goto out_unlock;
 
-	printk(KERN_INFO "bio: create slab <%s> at %d\n", bslab->name, entry);
 	bslab->slab = slab;
 	bslab->slab_ref = 1;
 	bslab->slab_size = sz;
diff --git a/fs/pstore/ram.c b/fs/pstore/ram.c
index 762c4fa22..155f13238 100644
--- a/fs/pstore/ram.c
+++ b/fs/pstore/ram.c
@@ -179,7 +179,6 @@ static ssize_t ramoops_pstore_read(u64 *id, enum pstore_type_id *type,
 	if (!prz_ok(prz)) {
 		prz = ramoops_get_next_prz(&cxt->bprz, &cxt->bconsole_read_cnt,
 					   1, id, type, PSTORE_TYPE_CONSOLE, 0);
-		pr_err("pstore: pstore_read bprz type: %d count %d id %llx\n", *type, cxt->bconsole_read_cnt, *id);
 		*id = 2;
 	}
 /*
@@ -200,7 +199,6 @@ static ssize_t ramoops_pstore_read(u64 *id, enum pstore_type_id *type,
 					   1, id, type, PSTORE_TYPE_PMSG, 0);
 	if (!prz_ok(prz))
 		return 0;
-	pr_err("pstore: ramoops_pstore_read  type: %d count %d id %llx\n", *type, *count, *id);
 	/* TODO(kees): Bogus time for the moment. */
 	time->tv_sec = 0;
 	time->tv_nsec = 0;
@@ -555,10 +553,6 @@ static int ramoops_probe(struct platform_device *pdev)
 	record_size = pdata->record_size;
 	dump_oops = pdata->dump_oops;
 
-	pr_info("attached 0x%lx@0x%llx, ecc: %d/%d\n",
-		cxt->size, (unsigned long long)cxt->phys_addr,
-		cxt->ecc_info.ecc_size, cxt->ecc_info.block_size);
-
 	return 0;
 
 fail_buf:
@@ -614,8 +608,6 @@ static void ramoops_register_dummy(void)
 	if (!mem_size)
 		return;
 
-	pr_info("using module parameters\n");
-
 	dummy_data = kzalloc(sizeof(*dummy_data), GFP_KERNEL);
 	if (!dummy_data) {
 		pr_info("could not allocate pdata\n");
diff --git a/include/linux/hwmsen_helper.h b/include/linux/hwmsen_helper.h
index dd9ffea8f..36ab3496a 100644
--- a/include/linux/hwmsen_helper.h
+++ b/include/linux/hwmsen_helper.h
@@ -29,7 +29,7 @@
 ******************************************************************************/
 #define C_I2C_FIFO_SIZE         8	/*according i2c_mt6516.c */
 #define HWM_TAG					"<HWMSEN> "
-#define HWM_FUN(f)				printk(HWM_TAG"%s\n", __func__)
+#define HWM_FUN(f)				;
 #define HWM_ERR(fmt, args...)	printk(HWM_TAG"%s %d : "fmt, __func__, __LINE__, ##args)
 #define HWM_LOG(fmt, args...)	printk(HWM_TAG fmt, ##args)
 #define HWM_VER(fmt, args...)   printk(HWM_TAG"%s: "fmt, __func__, ##args)	/* ((void)0) */
diff --git a/include/linux/kpd.h b/include/linux/kpd.h
index 3e663f9d8..062e5fab9 100644
--- a/include/linux/kpd.h
+++ b/include/linux/kpd.h
@@ -74,7 +74,7 @@ extern struct keypad_dts_data kpd_dts_data;
 
 
 #define KPD_AUTOTEST	KPD_NO
-#define KPD_DEBUG	KPD_YES
+#define KPD_DEBUG	KPD_NO
 
 #if KPD_AUTOTEST
 #define PRESS_OK_KEY		_IO('k', 1)
diff --git a/include/linux/musb/musb_io.h b/include/linux/musb/musb_io.h
index 38da79b43..f0ce5e5f3 100644
--- a/include/linux/musb/musb_io.h
+++ b/include/linux/musb/musb_io.h
@@ -52,7 +52,6 @@ static inline u16 musb_readw(const void __iomem *addr, unsigned offset)
 		unsigned long flags = 0;
 		spin_lock_irqsave(&usb_io_lock, flags);
 		usb_enable_clock(true);
-		DBG(0, "[MUSB]:access %s function when usb clock is off 0x%X\n", __func__, offset);
 		rc = readw(addr + offset);
 		usb_enable_clock(false);
 		spin_unlock_irqrestore(&usb_io_lock, flags);
@@ -70,7 +69,6 @@ static inline u32 musb_readl(const void __iomem *addr, unsigned offset)
 		unsigned long flags = 0;
 		spin_lock_irqsave(&usb_io_lock, flags);
 		usb_enable_clock(true);
-		DBG(0, "[MUSB]:access %s function when usb clock is off 0x%X\n", __func__, offset);
 		rc = readl(addr + offset);
 		usb_enable_clock(false);
 		spin_unlock_irqrestore(&usb_io_lock, flags);
@@ -87,7 +85,6 @@ static inline void musb_writew(void __iomem *addr, unsigned offset, u16 data)
 		unsigned long flags = 0;
 		spin_lock_irqsave(&usb_io_lock, flags);
 		usb_enable_clock(true);
-		DBG(0, "[MUSB]:access %s function when usb clock is off 0x%X\n", __func__, offset);
 		writew(data, addr + offset);
 		usb_enable_clock(false);
 		spin_unlock_irqrestore(&usb_io_lock, flags);
@@ -102,7 +99,6 @@ static inline void musb_writel(void __iomem *addr, unsigned offset, u32 data)
 		unsigned long flags = 0;
 		spin_lock_irqsave(&usb_io_lock, flags);
 		usb_enable_clock(true);
-		DBG(0, "[MUSB]:access %s function when usb clock is off 0x%X\n", __func__, offset);
 		writel(data, addr + offset);
 		usb_enable_clock(false);
 		spin_unlock_irqrestore(&usb_io_lock, flags);
@@ -119,7 +115,6 @@ static inline u8 musb_readb(const void __iomem *addr, unsigned offset)
 		unsigned long flags = 0;
 		spin_lock_irqsave(&usb_io_lock, flags);
 		usb_enable_clock(true);
-		DBG(0, "[MUSB]:access %s function when usb clock is off 0x%X\n", __func__, offset);
 		rc = readb(addr + offset);
 		usb_enable_clock(false);
 		spin_unlock_irqrestore(&usb_io_lock, flags);
@@ -135,7 +130,6 @@ static inline void musb_writeb(void __iomem *addr, unsigned offset, u8 data)
 		unsigned long flags = 0;
 		spin_lock_irqsave(&usb_io_lock, flags);
 		usb_enable_clock(true);
-		DBG(0, "[MUSB]:access %s function when usb clock is off 0x%X\n", __func__, offset);
 		writeb(data, addr + offset);
 		usb_enable_clock(false);
 		spin_unlock_irqrestore(&usb_io_lock, flags);
diff --git a/ipc/msg.c b/ipc/msg.c
index 52770bfde..823010176 100644
--- a/ipc/msg.c
+++ b/ipc/msg.c
@@ -131,9 +131,6 @@ void __init msg_init(void)
 {
 	msg_init_ns(&init_ipc_ns);
 
-	printk(KERN_INFO "msgmni has been set to %d\n",
-		init_ipc_ns.msg_ctlmni);
-
 	ipc_init_proc_interface("sysvipc/msg",
 				"       key      msqid perms      cbytes       qnum lspid lrpid   uid   gid  cuid  cgid      stime      rtime      ctime\n",
 				IPC_MSG_IDS, sysvipc_msg_proc_show);
diff --git a/kernel/cpu.c b/kernel/cpu.c
index 92bdb5bad..bdb469560 100644
--- a/kernel/cpu.c
+++ b/kernel/cpu.c
@@ -216,12 +216,7 @@ int __ref register_cpu_notifier(struct notifier_block *nb)
 	const char *symname;
 	
 	symname = kallsyms_lookup((unsigned long)nb->notifier_call, NULL, NULL, NULL, namebuf);
-	if (symname) 
-		printk("[cpu_ntf] <%02d>%08lx (%s)\n", index++, (unsigned long)nb->notifier_call, symname);
-	else
-		printk("[cpu_ntf] <%02d>%08lx\n", index++, (unsigned long)nb->notifier_call);
  #else //#ifdef CONFIG_KALLSYMS
-	printk("[cpu_ntf] <%02d>%08lx\n", index++, (unsigned long)nb->notifier_call);
  #endif //#ifdef CONFIG_KALLSYMS
 #endif //#ifdef MTK_CPU_HOTPLUG_DEBUG_0
 /******************************************************************************/
@@ -313,12 +308,6 @@ static inline void check_for_tasks(int cpu)
 	write_lock_irq(&tasklist_lock);
 	for_each_process(p) {
 		task_cputime(p, &utime, &stime);
-		if (task_cpu(p) == cpu && p->state == TASK_RUNNING &&
-		    (utime || stime))
-			printk(KERN_WARNING "Task %s (pid = %d) is on cpu %d "
-				"(state = %ld, flags = %x)\n",
-				p->comm, task_pid_nr(p), cpu,
-				p->state, p->flags);
 	}
 	write_unlock_irq(&tasklist_lock);
 }
@@ -557,7 +546,6 @@ int disable_nonboot_cpus(void)
 	 */
 	cpumask_clear(frozen_cpus);
 
-	printk("Disabling non-boot CPUs ...\n");
 	for_each_online_cpu(cpu) {
 		if (cpu == first_cpu)
 			continue;
@@ -565,8 +553,6 @@ int disable_nonboot_cpus(void)
 		if (!error)
 			cpumask_set_cpu(cpu, frozen_cpus);
 		else {
-			printk(KERN_ERR "Error taking CPU%d down: %d\n",
-				cpu, error);
 			break;
 		}
 	}
@@ -601,14 +587,11 @@ void __ref enable_nonboot_cpus(void)
 	if (cpumask_empty(frozen_cpus))
 		goto out;
 
-	printk(KERN_INFO "Enabling non-boot CPUs ...\n");
-
 	arch_enable_nonboot_cpus_begin();
 
 	for_each_cpu(cpu, frozen_cpus) {
 		error = _cpu_up(cpu, 1);
 		if (!error) {
-			printk(KERN_INFO "CPU%d is up\n", cpu);
 			continue;
 		}
 		printk(KERN_WARNING "Error taking CPU%d up: %d\n", cpu, error);
diff --git a/kernel/exit.c b/kernel/exit.c
index b75ebb365..8e27f11b8 100644
--- a/kernel/exit.c
+++ b/kernel/exit.c
@@ -728,7 +728,6 @@ void do_exit(long code)
 	profile_task_exit(tsk);
 #ifdef CONFIG_SCHEDSTATS
 	/* mt shceduler profiling*/
-	printk(KERN_DEBUG "[%d:%s] exit\n", tsk->pid, tsk->comm);
 	end_mtproc_info(tsk);
 #endif
 
diff --git a/kernel/fork.c b/kernel/fork.c
index 972d9a0d3..3d018a6ad 100644
--- a/kernel/fork.c
+++ b/kernel/fork.c
@@ -320,18 +320,15 @@ static struct task_struct *dup_task_struct(struct task_struct *orig)
 
 	tsk = alloc_task_struct_node(node);
 	if (!tsk){
-		printk("[%d:%s] fork fail at alloc_tsk_node, please check kmem_cache_alloc_node()\n", current->pid, current->comm);
 		return NULL;
 	}
 	ti = alloc_thread_info_node(tsk, node);
 	if (!ti) {
-		printk("[%d:%s] fork fail at alloc_t_info_node, please check alloc_pages_node()\n", current->pid, current->comm);
 		goto free_tsk;
 	}
 
 	err = arch_dup_task_struct(tsk, orig);
 	if (err){
-		printk("[%d:%s] fork fail at arch_dup_task_struct, err:%d \n", current->pid, current->comm, err);
 		goto free_ti;
 	}
 	tsk->stack = ti;
@@ -1242,7 +1239,6 @@ static struct task_struct *copy_process(unsigned long clone_flags,
 	struct task_struct *p;
 
 	if ((clone_flags & (CLONE_NEWNS|CLONE_FS)) == (CLONE_NEWNS|CLONE_FS)){
-		printk("[%d:%s] fork fail at cpp 1, clone_flags:0x%x\n", current->pid, current->comm, (unsigned int)clone_flags);
 		return ERR_PTR(-EINVAL);
 	}
 	if ((clone_flags & (CLONE_NEWUSER|CLONE_FS)) == (CLONE_NEWUSER|CLONE_FS))
@@ -1253,7 +1249,6 @@ static struct task_struct *copy_process(unsigned long clone_flags,
 	 * can only be started up within the thread group.
 	 */
 	if ((clone_flags & CLONE_THREAD) && !(clone_flags & CLONE_SIGHAND)){
-		printk("[%d:%s] fork fail at cpp 2, clone_flags:0x%x\n", current->pid, current->comm, (unsigned int)clone_flags);
 		return ERR_PTR(-EINVAL);
 	}
 	/*
@@ -1262,7 +1257,6 @@ static struct task_struct *copy_process(unsigned long clone_flags,
 	 * for various simplifications in other code.
 	 */
 	if ((clone_flags & CLONE_SIGHAND) && !(clone_flags & CLONE_VM)){
-		printk("[%d:%s] fork fail at cpp 3, clone_flags:0x%x\n", current->pid, current->comm, (unsigned int)clone_flags);
 		return ERR_PTR(-EINVAL);
 	}
 	/*
@@ -1273,7 +1267,6 @@ static struct task_struct *copy_process(unsigned long clone_flags,
 	 */
 	if ((clone_flags & CLONE_PARENT) &&
 				current->signal->flags & SIGNAL_UNKILLABLE){
-		printk("[%d:%s] fork fail at cpp 4, clone_flags:0x%x\n", current->pid, current->comm, (unsigned int)clone_flags);
 		return ERR_PTR(-EINVAL);
 	}
 	/*
@@ -1292,7 +1285,6 @@ static struct task_struct *copy_process(unsigned long clone_flags,
 	retval = -ENOMEM;
 	p = dup_task_struct(current);
 	if (!p){
-		printk("[%d:%s] fork fail at dup_task_struc, p=%p\n", current->pid, current->comm, p);
 		goto fork_out;
 	}
 
@@ -1653,7 +1645,6 @@ bad_fork_cleanup_count:
 bad_fork_free:
 	free_task(p);
 fork_out:
-	printk("[%d:%s] fork fail retval:0x%x\n", current->pid, current->comm, retval);
 	return ERR_PTR(retval);
 }
 
@@ -1705,7 +1696,6 @@ long do_fork(unsigned long clone_flags,
 	 */
 	if (clone_flags & (CLONE_NEWUSER | CLONE_NEWPID)) {
 		if (clone_flags & (CLONE_THREAD|CLONE_PARENT)) {
-			printk("[%d:%s] fork fail at clone_thread, flags:0x%x\n", current->pid, current->comm, (unsigned int)clone_flags);
 			return -EINVAL;
 		}
 	}
@@ -1755,7 +1745,6 @@ long do_fork(unsigned long clone_flags,
 #ifdef CONFIG_SCHEDSTATS
         /* mt shceduler profiling*/
         save_mtproc_info(p, sched_clock());	
-        printk(KERN_DEBUG "[%d:%s] fork [%d:%s]\n", current->pid, current->comm, p->pid, p->comm);
 #endif
 		wake_up_new_task(p);
 
@@ -1775,7 +1764,6 @@ long do_fork(unsigned long clone_flags,
 #endif
 	} else {
 		nr = PTR_ERR(p);
-		printk("[%d:%s] fork fail:[%p, %d]\n", current->pid, current->comm, p,(int) nr);
 	}
 	return nr;
 }
diff --git a/kernel/irq/irqdesc.c b/kernel/irq/irqdesc.c
index 8ab8e9390..6fe302fb9 100644
--- a/kernel/irq/irqdesc.c
+++ b/kernel/irq/irqdesc.c
@@ -219,7 +219,6 @@ int __init early_irq_init(void)
 
 	/* Let arch update nr_irqs and return the nr of preallocated irqs */
 	initcnt = arch_probe_nr_irqs();
-	printk(KERN_INFO "NR_IRQS:%d nr_irqs:%d %d\n", NR_IRQS, nr_irqs, initcnt);
 
 	if (WARN_ON(nr_irqs > IRQ_BITMAP_BITS))
 		nr_irqs = IRQ_BITMAP_BITS;
@@ -255,8 +254,6 @@ int __init early_irq_init(void)
 
 	init_irq_default_affinity();
 
-	printk(KERN_INFO "NR_IRQS:%d\n", NR_IRQS);
-
 	desc = irq_desc;
 	count = ARRAY_SIZE(irq_desc);
 
diff --git a/kernel/mutex-debug.c b/kernel/mutex-debug.c
index b88ca48e7..ee16c28d1 100644
--- a/kernel/mutex-debug.c
+++ b/kernel/mutex-debug.c
@@ -37,15 +37,9 @@ void debug_mutex_lock_common(struct mutex *lock, struct mutex_waiter *waiter)
 void debug_mutex_wake_waiter(struct mutex *lock, struct mutex_waiter *waiter)
 {
 	SMP_DEBUG_LOCKS_WARN_ON(!spin_is_locked(&lock->wait_lock));
-    if(DEBUG_LOCKS_WARN_ON(list_empty(&lock->wait_list))){
-        printk("[MUTEX WARN!!]\n");
-    }
-    if(DEBUG_LOCKS_WARN_ON(waiter->magic != waiter)){
-        printk("[MUTEX WARN!!] bad magic number %p:%p\n", waiter->magic, waiter);
-    }
-    if(DEBUG_LOCKS_WARN_ON(list_empty(&waiter->list))){
-        printk("[MUTEX WARN!!] empt waiter list\n");
-    }
+    DEBUG_LOCKS_WARN_ON(list_empty(&lock->wait_list));
+    DEBUG_LOCKS_WARN_ON(waiter->magic != waiter);
+    DEBUG_LOCKS_WARN_ON(list_empty(&waiter->list));
 }
 
 void debug_mutex_free_waiter(struct mutex_waiter *waiter)
@@ -69,15 +63,9 @@ void debug_mutex_add_waiter(struct mutex *lock, struct mutex_waiter *waiter,
 void mutex_remove_waiter(struct mutex *lock, struct mutex_waiter *waiter,
 			 struct thread_info *ti)
 {
-    if(DEBUG_LOCKS_WARN_ON(list_empty(&waiter->list))){
-        printk("[MUTEX WARN!!] empty waiter list\n");
-    }
-    if(DEBUG_LOCKS_WARN_ON(waiter->task != ti->task)){
-        printk("[MUTEX WARN!!] waiter task is not the same![%d:%s] != [%d:%s]\n", waiter->task->pid, waiter->task->comm, ti->task->pid, ti->task->comm);
-    }
-    if(DEBUG_LOCKS_WARN_ON(ti->task->blocked_on != waiter)){
-        printk("[MUTEX WARN!!] blocked on different waiter\n");
-    }
+    DEBUG_LOCKS_WARN_ON(list_empty(&waiter->list)):
+    DEBUG_LOCKS_WARN_ON(waiter->task != ti->task);
+    DEBUG_LOCKS_WARN_ON(ti->task->blocked_on != waiter);
 	ti->task->blocked_on = NULL;
 
 	list_del_init(&waiter->list);
@@ -92,19 +80,9 @@ void debug_mutex_unlock(struct mutex *lock)
 //	if (unlikely(!debug_locks))
 //		return;
 
-    if(DEBUG_LOCKS_WARN_ON(lock->magic != lock)){
-        printk("[MUTEX WARN!!] bad lock magic:%p\n", lock->magic);
-    }
-    if(DEBUG_LOCKS_WARN_ON(lock->owner != current)){
-        if(lock->owner != NULL){
-            printk("[MUTEX WARN!!] releasing mutex which is hold by another process, %p\n", lock->owner);
-            printk("[MUTEX WARN!!] current process[%d:%s] is trying to release lock\n But it should be released by lock owner-process[%d:%s]\n", current->pid, current->comm, lock->owner->pid, lock->owner->comm);
-        }else
-            printk("\n[MUTEX WARN!!] imbalanced unlock\n");
-    }
-    if(DEBUG_LOCKS_WARN_ON(!lock->wait_list.prev && !lock->wait_list.next)){
-        printk("[MUTEX WARN!!] wait_list both empty in prev and next \n");
-    }
+    DEBUG_LOCKS_WARN_ON(lock->magic != lock);
+    DEBUG_LOCKS_WARN_ON(lock->owner != current);
+    DEBUG_LOCKS_WARN_ON(!lock->wait_list.prev && !lock->wait_list.next);
 	mutex_clear_owner(lock);
 }
 
diff --git a/kernel/power/autosleep.c b/kernel/power/autosleep.c
index 792336834..574b5ae57 100644
--- a/kernel/power/autosleep.c
+++ b/kernel/power/autosleep.c
@@ -17,7 +17,7 @@
 #define autosleep_log(fmt, ...)    pr_debug("[%s][%s]" fmt, _TAG_AUTOSLEEP, __func__, ##__VA_ARGS__)
 #define autosleep_warn(fmt, ...)   pr_warn("[%s][%s]" fmt, _TAG_AUTOSLEEP, __func__, ##__VA_ARGS__)
 
-#define HIB_AUTOSLEEP_DEBUG 1
+#define HIB_AUTOSLEEP_DEBUG 0
 #define _TAG_HIB_M "HIB/AUTOSLEEP"
 #if (HIB_AUTOSLEEP_DEBUG)
 #define hib_autoslp_log(fmt, ...)   pr_warn("[%s][%s]" fmt, _TAG_HIB_M, __func__, ##__VA_ARGS__);
@@ -46,15 +46,11 @@ static void try_to_suspend(struct work_struct *work)
 {
 	unsigned int initial_count, final_count;
 
-	//<20130327> <marc.huang> add autosleep dubug log
-	autosleep_log("pm_get_wakeup_count\n");
 	if (!pm_get_wakeup_count(&initial_count, true))
 		goto out;
 
 	mutex_lock(&autosleep_lock);
 
-	//<20130327> <marc.huang> add autosleep dubug log
-	autosleep_log("pm_save_wakeup_count\n");
 	if (!pm_save_wakeup_count(initial_count) ||
 		system_state != SYSTEM_RUNNING) {
 		mutex_unlock(&autosleep_lock);
@@ -65,8 +61,6 @@ static void try_to_suspend(struct work_struct *work)
 #ifdef CONFIG_MTK_HIBERNATION
         system_is_hibernating = false;
 #endif
-		//<20130327> <marc.huang> add autosleep dubug log
-		autosleep_warn("abort due to autosleep_state: %d\n", autosleep_state);
 		mutex_unlock(&autosleep_lock);
 		return;
 	}
@@ -75,13 +69,10 @@ static void try_to_suspend(struct work_struct *work)
         mtk_hibernate_via_autosleep(&autosleep_state);
     }
     else {
-        hib_autoslp_log("pm_suspend: state(%d)\n", autosleep_state);
         if (!system_is_hibernating) {
-            hib_autoslp_warn("calling pm_suspend() state(%d)\n", autosleep_state);
             pm_suspend(autosleep_state);
         }
         else {
-            hib_autoslp_warn("system is hibernating: so changing state(%d->%d)\n",  autosleep_state, PM_SUSPEND_MAX);
             autosleep_state = PM_SUSPEND_MAX;
         }
     }
@@ -90,8 +81,6 @@ static void try_to_suspend(struct work_struct *work)
 		hibernate();
 	else
         {
-		//<20130327> <marc.huang> add autosleep dubug log
-		autosleep_log("pm_suspend, autosleep_state: %d\n", autosleep_state);
 		pm_suspend(autosleep_state);
         }
 #endif // CONFIG_MTK_HIBERNATION
@@ -108,8 +97,6 @@ static void try_to_suspend(struct work_struct *work)
 		schedule_timeout_uninterruptible(HZ / 2);
 
  out:
-	//<20130327> <marc.huang> add autosleep dubug log
-	autosleep_log("queue_up_suspend_work again\n");
 	queue_up_suspend_work();
 }
 
@@ -119,8 +106,6 @@ void queue_up_suspend_work(void)
 {
 	if (autosleep_state > PM_SUSPEND_ON)
         {
-		//<20130327> <marc.huang> add autosleep dubug log
-		autosleep_log("autosleep_state: %d\n", autosleep_state);
 		queue_work(autosleep_wq, &suspend_work);
         }
 }
@@ -157,13 +142,9 @@ int pm_autosleep_set_state(suspend_state_t state)
 	__pm_relax(autosleep_ws);
 
 	if (state > PM_SUSPEND_ON) {
-		//<20130327> <marc.huang> add autosleep dubug log
-		autosleep_log("pm_wakep_autosleep_enabled(true)\n");
 		pm_wakep_autosleep_enabled(true);
 		queue_up_suspend_work();
 	} else {
-		//<20130327> <marc.huang> add autosleep dubug log
-		autosleep_log("pm_wakep_autosleep_enabled(false)\n");
 		pm_wakep_autosleep_enabled(false);
 	}
 
diff --git a/kernel/power/earlysuspend.c b/kernel/power/earlysuspend.c
index d63b21b94..74d29cba4 100644
--- a/kernel/power/earlysuspend.c
+++ b/kernel/power/earlysuspend.c
@@ -96,9 +96,7 @@ EXPORT_SYMBOL(unregister_early_suspend);
 static void early_sys_sync(struct work_struct *work)
 {
 	wake_lock(&sys_sync_wake_lock);
-	pm_warn("++\n");
 	sys_sync();
-	pm_warn("--\n");
 	wake_unlock(&sys_sync_wake_lock);
 }
 
@@ -108,8 +106,6 @@ static void early_suspend(struct work_struct *work)
 	unsigned long irqflags;
 	int abort = 0, count = 0;
 
-	pr_warn("@@@@@@@@@@@@@@@@@@@@@@@\n@@@__early_suspend__@@@\n@@@@@@@@@@@@@@@@@@@@@@@\n");
-
 	mutex_lock(&early_suspend_lock);
 	spin_lock_irqsave(&state_lock, irqflags);
 	if (state == SUSPEND_REQUESTED)
@@ -119,21 +115,14 @@ static void early_suspend(struct work_struct *work)
 	spin_unlock_irqrestore(&state_lock, irqflags);
 
 	if (abort) {
-		if (earlysuspend_debug_mask & DEBUG_SUSPEND)
-			pm_warn("abort, state %d\n", state);
 		mutex_unlock(&early_suspend_lock);
 		goto abort;
 	}
 
-	pr_warn("early_suspend_count = %d, forbid_id = 0x%x\n", early_suspend_count, forbid_id);
-	if (earlysuspend_debug_mask & DEBUG_SUSPEND)
-		pm_warn("call handlers\n");
 	list_for_each_entry(pos, &early_suspend_handlers, link) {
 		if (pos->suspend != NULL) {
 			if (!(forbid_id & (0x1 << count))) {
 				/* if (earlysuspend_debug_mask & DEBUG_VERBOSE) */
-				pr_warn("ES handlers %d: [%pf], level: %d\n", count, pos->suspend,
-					pos->level);
 				pos->suspend(pos);
 			}
 			count++;
@@ -148,7 +137,6 @@ static void early_suspend(struct work_struct *work)
 		/* wake_unlock(&main_wake_lock); */
 #ifdef CONFIG_MTK_HIBERNATION
 		suspend_state_t susp_state = get_suspend_state();
-		pm_warn("calling pm_autosleep_set_state() with parameter: %d\n", susp_state);
 		pm_autosleep_set_state(susp_state);
 #else
 		pm_autosleep_set_state(PM_SUSPEND_MEM);
@@ -163,8 +151,6 @@ static void late_resume(struct work_struct *work)
 	int abort = 0;
 	int completed = 0, count = 0;
 
-	pr_warn("@@@@@@@@@@@@@@@@@@@@@@@\n@@@__late_resume__@@@\n@@@@@@@@@@@@@@@@@@@@@@@\n");
-
 	pm_autosleep_set_state(PM_SUSPEND_ON);
 
 	mutex_lock(&early_suspend_lock);
@@ -176,13 +162,8 @@ static void late_resume(struct work_struct *work)
 	spin_unlock_irqrestore(&state_lock, irqflags);
 
 	if (abort) {
-		if (earlysuspend_debug_mask & DEBUG_SUSPEND)
-			pm_warn("abort, state %d\n", state);
 		goto abort;
 	}
-	pr_warn("early_suspend_count = %d, forbid_id = 0x%x\n", early_suspend_count, forbid_id);
-	if (earlysuspend_debug_mask & DEBUG_SUSPEND)
-		pm_warn("call handlers\n");
 	list_for_each_entry_reverse(pos, &early_suspend_handlers, link) {
 		if (!completed && pos->level < EARLY_SUSPEND_LEVEL_STOP_DRAWING) {
 			complete(&fb_drv_ready);
@@ -191,15 +172,11 @@ static void late_resume(struct work_struct *work)
 		if (pos->resume != NULL) {
 			if (!(forbid_id & (0x1 << (early_suspend_count - count - 1)))) {
 				/* if (earlysuspend_debug_mask & DEBUG_VERBOSE) */
-				pr_warn("LR handlers %d: [%pf], level: %d\n", count, pos->resume,
-					pos->level);
 				pos->resume(pos);
 			}
 			count++;
 		}
 	}
-	if (earlysuspend_debug_mask & DEBUG_SUSPEND)
-		pm_warn("done\n");
  abort:
 	if (!completed)
 		complete(&fb_drv_ready);
@@ -219,19 +196,10 @@ void request_suspend_state(suspend_state_t new_state)
 		struct rtc_time tm;
 		getnstimeofday(&ts);
 		rtc_time_to_tm(ts.tv_sec, &tm);
-		pm_warn("%s (%d->%d) at %lld "
-			"(%d-%02d-%02d %02d:%02d:%02d.%09lu UTC)\n",
-			new_state != PM_SUSPEND_ON ? "sleep" : "wakeup",
-			requested_suspend_state, new_state,
-			ktime_to_ns(ktime_get()),
-			tm.tm_year + 1900, tm.tm_mon + 1, tm.tm_mday,
-			tm.tm_hour, tm.tm_min, tm.tm_sec, ts.tv_nsec);
 	}
 	if (!old_sleep && new_state != PM_SUSPEND_ON) {
 		state |= SUSPEND_REQUESTED;
-		pm_warn("sys_sync_work_queue early_sys_sync_work\n");
 		queue_work(sys_sync_work_queue, &early_sys_sync_work);
-		pm_warn("suspend_work_queue early_suspend_work\n");
 		queue_work(suspend_work_queue, &early_suspend_work);
 	} else if (old_sleep && new_state == PM_SUSPEND_ON) {
 		state &= ~SUSPEND_REQUESTED;
@@ -250,7 +218,6 @@ void request_suspend_state(suspend_state_t new_state)
 	spin_unlock_irqrestore(&state_lock, irqflags);
 	if (wait_flag == 1) {
 		wait_for_completion(&fb_drv_ready);
-		pr_warn("wait done\n");
 	}
 }
 
diff --git a/kernel/power/main.c b/kernel/power/main.c
index e2a243d3d..f8a85dbcd 100644
--- a/kernel/power/main.c
+++ b/kernel/power/main.c
@@ -18,7 +18,7 @@
 
 #include "power.h"
 
-#define HIB_PM_DEBUG 1
+#define HIB_PM_DEBUG 0
 #define _TAG_HIB_M "HIB/PM"
 #if (HIB_PM_DEBUG)
 #undef hib_log
@@ -74,7 +74,6 @@ int pm_notifier_call_chain(unsigned long val)
 #ifdef CONFIG_HAS_EARLYSUSPEND
 	//<20130327> <marc.huang> add pm_notifier_count
 	int ret;
-	pr_debug("[%s] pm_notifier_count: %u, event = %lu\n", __func__, pm_notifier_count, val);
 
 	ret = blocking_notifier_call_chain(&pm_chain_head, val, NULL);
 
@@ -428,12 +427,10 @@ static ssize_t state_store(struct kobject *kobj, struct kobj_attribute *attr,
 
 #ifdef CONFIG_MTK_HIBERNATION
     state = decode_state(buf, n);
-    hib_log("entry (%d)\n", state);
 #endif
 
 #ifdef CONFIG_MTK_HIBERNATION
     if (len == 8 && !strncmp(buf, "hibabort", len)) {
-        hib_log("abort hibernation...\n");
         error = mtk_hibernate_abort();
         goto Exit;
     }
@@ -442,10 +439,8 @@ static ssize_t state_store(struct kobject *kobj, struct kobj_attribute *attr,
     /* First, check if we are requested to hibernate */
     if (len == 4 && !strncmp(buf, "disk", len)) {
 #ifdef CONFIG_MTK_HIBERNATION
-        hib_log("trigger hibernation...\n");
 #ifdef CONFIG_EARLYSUSPEND
         if (PM_SUSPEND_ON == get_suspend_state()) {
-            hib_warn("\"on\" to \"disk\" (i.e., 0->4) is not supported !!!\n");
             error = -EINVAL;
             goto Exit;
         }
@@ -511,20 +506,15 @@ static ssize_t state_store(struct kobject *kobj, struct kobj_attribute *attr,
     p = memchr(buf, '\n', n);
     len = p ? p - buf : n;
     if (len == 8 && !strncmp(buf, "hibabort", len)) {
-        hib_log("abort hibernation...\n");
         error = mtk_hibernate_abort();
         goto out;
     }
 #endif
 
-	pr_warn("[%s]: state = (%d)\n", __func__, state);
-
 	if (state < PM_SUSPEND_MAX) {
 		error = pm_suspend(state);
-		pr_warn("[%s]: pm_suspend() return (%d)\n", __func__, error);
 	} else if (state == PM_SUSPEND_MAX) {
 #ifdef CONFIG_MTK_HIBERNATION
-        hib_log("trigger hibernation...\n");
         if (!pre_hibernate()) {
             error = 0;
             error = mtk_hibernate();
@@ -648,7 +638,6 @@ static ssize_t autosleep_store(struct kobject *kobj,
 	int error;
 
 #ifdef CONFIG_HAS_EARLYSUSPEND
-    hib_log("store autosleep_state(%d)\n", state);
 #endif
 	if (state == PM_SUSPEND_ON
 	    && strcmp(buf, "off") && strcmp(buf, "off\n"))
diff --git a/kernel/power/process.c b/kernel/power/process.c
index d268f8748..7366d3d7c 100644
--- a/kernel/power/process.c
+++ b/kernel/power/process.c
@@ -91,11 +91,7 @@ static int try_to_freeze_tasks(bool user_only)
 	elapsed_msecs = elapsed_msecs64;
 
 	if (wakeup) {
-		printk("\n");
-		printk(KERN_ERR "Freezing of tasks aborted after %d.%03d seconds",
-		       elapsed_msecs / 1000, elapsed_msecs % 1000);
 	} else if (todo) {
-		printk("\n");
 		printk(KERN_ERR "Freezing of tasks failed after %d.%03d seconds"
 		       " (%d tasks refusing to freeze, wq_busy=%d):\n",
 		       elapsed_msecs / 1000, elapsed_msecs % 1000,
@@ -109,8 +105,6 @@ static int try_to_freeze_tasks(bool user_only)
 		} while_each_thread(g, p);
 		read_unlock(&tasklist_lock);
 	} else {
-		printk("(elapsed %d.%03d seconds) ", elapsed_msecs / 1000,
-			elapsed_msecs % 1000);
 	}
 
 	return todo ? -EBUSY : 0;
@@ -155,7 +149,6 @@ int freeze_processes(void)
 	if (!pm_freezing)
 		atomic_inc(&system_freezing_cnt);
 
-	printk("Freezing user space processes ... ");
 	pm_freezing = true;
 	oom_kills_saved = oom_kills_count();
 	error = try_to_freeze_tasks(true);
@@ -171,14 +164,11 @@ int freeze_processes(void)
 		if (oom_kills_count() != oom_kills_saved &&
 				!check_frozen_processes()) {
 			__usermodehelper_set_disable_depth(UMH_ENABLED);
-			printk("OOM in progress.");
 			error = -EBUSY;
 			goto done;
 		}
-		printk("done.");
 	}
 done:
-	printk("\n");
 	BUG_ON(in_atomic());
 
 	if (error)
@@ -199,13 +189,9 @@ int freeze_kernel_threads(void)
 {
 	int error;
 
-	printk("Freezing remaining freezable tasks ... ");
 	pm_nosig_freezing = true;
 	error = try_to_freeze_tasks(false);
-	if (!error)
-		printk("done.");
 
-	printk("\n");
 	BUG_ON(in_atomic());
 
 	if (error)
@@ -225,8 +211,6 @@ void thaw_processes(void)
 
 	oom_killer_enable();
 
-	printk("Restarting tasks ... ");
-
 	__usermodehelper_set_disable_depth(UMH_FREEZING);
 	thaw_workqueues();
 
@@ -240,7 +224,6 @@ void thaw_processes(void)
 	usermodehelper_enable();
 
 	schedule();
-	printk("done.\n");
 }
 EXPORT_SYMBOL_GPL(thaw_processes);
 
@@ -249,7 +232,6 @@ void thaw_kernel_threads(void)
 	struct task_struct *g, *p;
 
 	pm_nosig_freezing = false;
-	printk("Restarting kernel threads ... ");
 
 	thaw_workqueues();
 
@@ -261,6 +243,5 @@ void thaw_kernel_threads(void)
 	read_unlock(&tasklist_lock);
 
 	schedule();
-	printk("done.\n");
 }
 EXPORT_SYMBOL_GPL(thaw_kernel_threads);
diff --git a/kernel/power/sbsuspend.c b/kernel/power/sbsuspend.c
index 3a1753c53..1d76c0c09 100644
--- a/kernel/power/sbsuspend.c
+++ b/kernel/power/sbsuspend.c
@@ -99,29 +99,21 @@ void sb_enable(void)
     struct sb_handler *pos;
     int count = 0;
 
-    pr_warn("@@@@@@@@@@@@@@@@@@@\n@@@__sb_enable__@@@\n@@@@@@@@@@@@@@@@@@@\n");
-
     mutex_lock(&sb_mutex);
 
     //pm_warn("turn backlight off\n");
     //mt65xx_leds_brightness_set(MT65XX_LED_TYPE_BUTTON, 0);
     //mt65xx_leds_brightness_set(MT65XX_LED_TYPE_LCD, 0);
     
-    pm_warn("sb_handler_count = %d, sb_handler_forbid_id = 0x%x\n", sb_handler_count, sb_handler_forbid_id);
     list_for_each_entry(pos, &sb_handlers, link) {
         if (pos->enable != NULL) {
             if (!(sb_handler_forbid_id & (0x1 << count))) {
-                if (sbsuspend_debug_mask & DEBUG_SUSPEND)
-                    pm_warn("sb enable handler %d: [%pf], level: %d\n", count, pos->enable, pos->level);
                 pos->enable(pos);
             }
             count++; 
         }
     }
 
-    if (sbsuspend_debug_mask & DEBUG_SUSPEND)
-        pm_warn("sb enable handler done\n");
-
     mutex_unlock(&sb_mutex);
 
 }
@@ -132,25 +124,18 @@ void sb_disable(void)
     struct sb_handler *pos;
     int count = 0;
 
-    pr_warn("@@@@@@@@@@@@@@@@@@@@\n@@@__sb_disable__@@@\n@@@@@@@@@@@@@@@@@@@@\n");
-
     mutex_lock(&sb_mutex);
 
-    pm_warn("sb_handler_count = %d, sb_handler_forbid_id = 0x%x\n", sb_handler_count, sb_handler_forbid_id);
     list_for_each_entry_reverse(pos, &sb_handlers, link) {
         if (pos->disable != NULL) {
             if (!(sb_handler_forbid_id & (0x1 << (sb_handler_count - 1 - count)))) {
                 if (sbsuspend_debug_mask & DEBUG_SUSPEND)
-                    pm_warn("sb disable handler %d: [%pf], level: %d\n", count, pos->disable, pos->level);
                 pos->disable(pos);
             }
             count++; 
         }
     }
 
-    if (sbsuspend_debug_mask & DEBUG_SUSPEND)
-        pm_warn("sb disable handler done\n");
-
     //pm_warn("turn backlight on\n");
     //mt65xx_leds_brightness_set(MT65XX_LED_TYPE_LCD, 255);
     //we don't need to turn keypad light on when SmartBook plug-out
@@ -165,25 +150,17 @@ void sb_suspend(void)
     struct sb_handler *pos;
     int count = 0;
 
-    pr_warn("@@@@@@@@@@@@@@@@@@@\n@@@__sb_suspend__@@@\n@@@@@@@@@@@@@@@@@@@\n");
-
     mutex_lock(&sb_mutex);
 
-    pm_warn("sb_handler_count = %d, sb_handler_forbid_id = 0x%x\n", sb_handler_count, sb_handler_forbid_id);
     list_for_each_entry(pos, &sb_handlers, link) {
         if (pos->suspend != NULL) {
             if (!(sb_handler_forbid_id & (0x1 << count))) {
-                if (sbsuspend_debug_mask & DEBUG_SUSPEND)
-                    pm_warn("sb enable handler %d: [%pf], level: %d\n", count, pos->suspend, pos->level);
                 pos->suspend(pos);
             }
             count++; 
         }
     }
 
-    if (sbsuspend_debug_mask & DEBUG_SUSPEND)
-        pm_warn("sb enable handler done\n");
-
     mutex_unlock(&sb_mutex);
 
 }
@@ -194,25 +171,17 @@ void sb_resume(void)
     struct sb_handler *pos;
     int count = 0;
 
-    pr_warn("@@@@@@@@@@@@@@@@@@@@\n@@@__sb_resume__@@@\n@@@@@@@@@@@@@@@@@@@@\n");
-
     mutex_lock(&sb_mutex);
 
-    pm_warn("sb_handler_count = %d, sb_handler_forbid_id = 0x%x\n", sb_handler_count, sb_handler_forbid_id);
     list_for_each_entry_reverse(pos, &sb_handlers, link) {
         if (pos->resume != NULL) {
             if (!(sb_handler_forbid_id & (0x1 << (sb_handler_count - 1 - count)))) {
-                if (sbsuspend_debug_mask & DEBUG_SUSPEND)
-                    pm_warn("sb disable handler %d: [%pf], level: %d\n", count, pos->resume, pos->level);
                 pos->resume(pos);
             }
             count++; 
         }
     }
 
-    if (sbsuspend_debug_mask & DEBUG_SUSPEND)
-        pm_warn("sb disable handler done\n");
-
     mutex_unlock(&sb_mutex);
 }
 EXPORT_SYMBOL(sb_resume);
@@ -225,25 +194,17 @@ void sb_plug_in(void)
     if (sb_bypass)
         return;
 
-    pr_warn("@@@@@@@@@@@@@@@@@@@\n@@@__sb_plug_in__@@@\n@@@@@@@@@@@@@@@@@@@\n");
-
     mutex_lock(&sb_mutex);
 
-    pm_warn("sb_handler_count = %d, sb_handler_forbid_id = 0x%x\n", sb_handler_count, sb_handler_forbid_id);
     list_for_each_entry(pos, &sb_handlers, link) {
         if (pos->plug_in != NULL) {
             if (!(sb_handler_forbid_id & (0x1 << count))) {
-                if (sbsuspend_debug_mask & DEBUG_SUSPEND)
-                    pm_warn("sb plug_in handler %d: [%pf], level: %d\n", count, pos->plug_in, pos->level);
                 pos->plug_in(pos);
             }
             count++; 
         }
     }
 
-    if (sbsuspend_debug_mask & DEBUG_SUSPEND)
-        pm_warn("sb plug_in handler done\n");
-
     mutex_unlock(&sb_mutex);
 
 }
@@ -257,25 +218,17 @@ void sb_plug_out(void)
     if (sb_bypass)
         return;
 
-    pr_warn("@@@@@@@@@@@@@@@@@@@@\n@@@__sb_plug_out__@@@\n@@@@@@@@@@@@@@@@@@@@\n");
-
     mutex_lock(&sb_mutex);
 
-    pm_warn("sb_handler_count = %d, sb_handler_forbid_id = 0x%x\n", sb_handler_count, sb_handler_forbid_id);
     list_for_each_entry_reverse(pos, &sb_handlers, link) {
         if (pos->plug_out != NULL) {
             if (!(sb_handler_forbid_id & (0x1 << (sb_handler_count - 1 - count)))) {
-                if (sbsuspend_debug_mask & DEBUG_SUSPEND)
-                    pm_warn("sb plug_out handler %d: [%pf], level: %d\n", count, pos->plug_out, pos->level);
                 pos->plug_out(pos);
             }
             count++; 
         }
     }
 
-    if (sbsuspend_debug_mask & DEBUG_SUSPEND)
-        pm_warn("sb plug_out handler done\n");
-
     mutex_unlock(&sb_mutex);
 }
 EXPORT_SYMBOL(sb_plug_out);
diff --git a/kernel/power/suspend.c b/kernel/power/suspend.c
index c95f3df42..0dcfbf795 100644
--- a/kernel/power/suspend.c
+++ b/kernel/power/suspend.c
@@ -164,7 +164,6 @@ static int suspend_test(int level)
 {
 #ifdef CONFIG_PM_DEBUG
 	if (pm_test_level == level) {
-		printk(KERN_INFO "suspend debug: Waiting for 5 seconds.\n");
 		mdelay(5000);
 		return 1;
 	}
@@ -378,10 +377,8 @@ DECLARE_WORK(suspend_sys_sync_work, suspend_sys_sync);
 
 static void suspend_sys_sync(struct work_struct *work)
 {
-	printk("++\n");
 	sys_sync();
 	sys_sync_ongoing = 0;
-	printk("--\n");
 }
 
 int suspend_syssync_enqueue(void)
@@ -451,24 +448,15 @@ int enter_state(suspend_state_t state)
 	if (state == PM_SUSPEND_FREEZE)
 		freeze_begin();
 
-	printk(KERN_INFO "PM: Syncing filesystems ... ");
 #if MTK_SOLUTION
 	error = suspend_syssync_enqueue();
 	if (error) {
-		printk("sys_sync timeout.\n");
 		goto Unlock;
 	}
 #else
 	sys_sync();
 #endif
-	printk("done.\n");
 
-
-#ifdef CONFIG_EARLYSUSPEND_LEGACY
-	pr_debug("PM: Preparing system for %s sleep\n", pm_states[state].label);
-#else
-	pr_debug("PM: Preparing system for %s sleep\n", pm_states[state]);
-#endif
 	error = suspend_prepare(state);
 	if (error)
 		goto Unlock;
@@ -476,17 +464,11 @@ int enter_state(suspend_state_t state)
 	if (suspend_test(TEST_FREEZER))
 		goto Finish;
 
-#ifdef CONFIG_EARLYSUSPEND_LEGACY
-	pr_debug("PM: Entering %s sleep\n", pm_states[state].label);
-#else
-	pr_debug("PM: Entering %s sleep\n", pm_states[state]);
-#endif
 	pm_restrict_gfp_mask();
 	error = suspend_devices_and_enter(state);
 	pm_restore_gfp_mask();
 
  Finish:
-	pr_debug("PM: Finishing wakeup.\n");
 	suspend_finish();
  Unlock:
 	mutex_unlock(&pm_mutex);
diff --git a/kernel/power/tuxonice_bio_core.c b/kernel/power/tuxonice_bio_core.c
index 1b581db62..3f38f74f8 100644
--- a/kernel/power/tuxonice_bio_core.c
+++ b/kernel/power/tuxonice_bio_core.c
@@ -1589,12 +1589,10 @@ static int try_to_open_resume_device(char *commandline, int quiet)
 	char *uuid = uuid_from_commandline(commandline);
 	int waited_for_device_probe = 0;
 
-	hib_log("commandline=\"%s\"\n", commandline);
 	resume_dev_t = MKDEV(0, 0);
 
 	if (!strlen(commandline)) {
 #ifdef CONFIG_TOI_FIXUP
-		hib_warn("skip scanning for image...\n");
 #else
 		retry_if_fails(toi_bio_scan_for_image(quiet));
 #endif
diff --git a/kernel/power/tuxonice_highlevel.c b/kernel/power/tuxonice_highlevel.c
index 4679a4b15..560b499ff 100644
--- a/kernel/power/tuxonice_highlevel.c
+++ b/kernel/power/tuxonice_highlevel.c
@@ -152,7 +152,6 @@ static char *result_strings[] = {
  **/
 void toi_finish_anything(int hibernate_or_resume)
 {
-	hib_log("hibernate_or_resume(%d)\n", hibernate_or_resume);
 	toi_cleanup_modules(hibernate_or_resume);
 	toi_put_modules();
 	if (hibernate_or_resume) {
@@ -207,8 +206,6 @@ int toi_start_anything(int hibernate_or_resume)
 		goto early_init_err;
 
 	if (!toiActiveAllocator) {
-		hib_log("hibernate_or_resume(0x%08x), resume_file=\"%s\"\n", hibernate_or_resume,
-			resume_file);
 		toi_attempt_to_parse_resume_device(!hibernate_or_resume);
 	}
 
@@ -626,8 +623,6 @@ static int can_hibernate(void)
 		}
 	}
 
-	hib_log("passed!\n");
-
 	return 1;
 }
 
@@ -691,7 +686,6 @@ static int __save_image(void)
 	if (toi_go_atomic(PMSG_FREEZE, 1))
 		goto Failed;
 
-	hib_log("calling toi_hibernate()\n");
 	temp_result = toi_hibernate();
 
 #ifdef CONFIG_KGDB
@@ -702,8 +696,6 @@ static int __save_image(void)
 	if (!temp_result)
 		did_copy = 1;
 
-	hib_log("calling toi_end_atomic() toi_in_hibernate(%d) temp_result(%d)\n", toi_in_hibernate,
-		temp_result);
 	/* We return here at resume time too! */
 	toi_end_atomic(ATOMIC_ALL_STEPS, toi_in_hibernate, temp_result);
 
@@ -713,7 +705,6 @@ static int __save_image(void)
 
 	/* Resume time? */
 	if (!toi_in_hibernate) {
-		hib_log("last resume here ...\n");
 		copyback_post();
 		return 0;
 	}
@@ -727,7 +718,6 @@ static int __save_image(void)
 			return 1;
 	}
 
-	hib_log("@line:%d\n", __LINE__);
 	toi_update_status(pagedir2.size, pagedir1.size + pagedir2.size, NULL);
 
 	if (test_result_state(TOI_ABORTED))
@@ -807,7 +797,6 @@ static int do_prepare_image(void)
 	if (!restarting && toi_activate_storage(0))
 		return 1;
 
-	hib_log("step 1 @line:%d\n", __LINE__);
 	/*
 	 * If kept image and still keeping image and hibernating to RAM, we will
 	 * return 1 after hibernating and resuming (provided the power doesn't
@@ -817,13 +806,9 @@ static int do_prepare_image(void)
 	if (!can_hibernate() || (test_result_state(TOI_KEPT_IMAGE) && check_still_keeping_image()))
 		return 1;
 
-	hib_log("step 2 @line:%d\n", __LINE__);
-
 	if (toi_init(restarting) || toi_prepare_image() || test_result_state(TOI_ABORTED))
 		return 1;
 
-	hib_log("step 3 @line:%d\n", __LINE__);
-
 	trap_non_toi_io = 1;
 
 	return 0;
@@ -1009,7 +994,6 @@ void toi_try_resume(void)
 {
 	int num_threaded;
 
-	hib_log("entering...\n");
 	set_toi_state(TOI_TRYING_TO_RESUME);
 	resume_attempted = 1;
 
@@ -1103,7 +1087,6 @@ int toi_try_hibernate(void)
 
  prepare:
 	result = do_toi_step(STEP_HIBERNATE_PREPARE_IMAGE);
-	hib_log("after calling do_toi_step(STEP_HIBERNATE_PREPARE_IMAGE), result(%d)\n", result);
 
 	if (result)
 		goto out;
@@ -1326,8 +1309,6 @@ static __init int core_load(void)
 {
 	int i, numfiles = sizeof(sysfs_params) / sizeof(struct toi_sysfs_data);
 
-	printk(KERN_INFO "TuxOnIce " TOI_CORE_VERSION " (http://tuxonice.net)\n");
-
 	if (toi_sysfs_init())
 		return 1;
 
diff --git a/kernel/power/wakelock.c b/kernel/power/wakelock.c
index a55d33892..1f758c3ab 100644
--- a/kernel/power/wakelock.c
+++ b/kernel/power/wakelock.c
@@ -18,8 +18,7 @@
 #include <linux/rbtree.h>
 #include <linux/slab.h>
 
-//<20130327> <marc.huang> add wakelock dubug log
-int wakelock_debug = 1;
+int wakelock_debug = 0;
 #define _TAG_WAKELOCK "WAKELOCK"
 #define wakelock_log(fmt, ...)    do { if (wakelock_debug) pr_debug("[%s][%s]" fmt, _TAG_WAKELOCK, __func__, ##__VA_ARGS__); } while (0)
 #define wakelock_warn(fmt, ...)   do { if (wakelock_debug) pr_warn("[%s][%s]" fmt, _TAG_WAKELOCK, __func__, ##__VA_ARGS__); } while (0)
@@ -216,9 +215,6 @@ int pm_wake_lock(const char *buf)
 			return -EINVAL;
 	}
 
-	//<20130327> <marc.huang> add wakelock dubug log
-	wakelock_log("%s\n", buf);
-
 	mutex_lock(&wakelocks_lock);
 
 	wl = wakelock_lookup_add(buf, len, true);
@@ -265,9 +261,6 @@ int pm_wake_unlock(const char *buf)
 	if (!len)
 		return -EINVAL;
 
-	//<20130327> <marc.huang> add wakelock dubug log
-	wakelock_log("%s\n", buf);
-
 	mutex_lock(&wakelocks_lock);
 
 	wl = wakelock_lookup_add(buf, len, false);
diff --git a/kernel/printk.c b/kernel/printk.c
index 919c714c6..104f968d7 100644
--- a/kernel/printk.c
+++ b/kernel/printk.c
@@ -2554,15 +2554,10 @@ void register_console(struct console *newcon)
 		/* we need to iterate through twice, to make sure we print
 		 * everything out, before we unregister the console(s)
 		 */
-		printk(KERN_INFO "console [%s%d] enabled, bootconsole disabled\n",
-			newcon->name, newcon->index);
 		for_each_console(bcon)
 			if (bcon->flags & CON_BOOT)
 				unregister_console(bcon);
 	} else {
-		printk(KERN_INFO "%sconsole [%s%d] enabled\n",
-			(newcon->flags & CON_BOOT) ? "boot" : "" ,
-			newcon->name, newcon->index);
 	}
 }
 EXPORT_SYMBOL(register_console);
@@ -2640,9 +2635,6 @@ static void wake_up_klogd_work_func(struct irq_work *irq_work)
 
 	if (pending & PRINTK_PENDING_SCHED) {
 		char *buf = __get_cpu_var(printk_sched_buf);
-		printk(KERN_WARNING "[printk_delayed:start]\n");
-		printk(KERN_WARNING "%s", buf);
-		printk(KERN_WARNING "[printk_delayed:done]\n");
     __get_cpu_var(printk_sched_length) = 0;
 	}
 
diff --git a/kernel/sched/core.c b/kernel/sched/core.c
index 75d15ae19..5aa737759 100644
--- a/kernel/sched/core.c
+++ b/kernel/sched/core.c
@@ -4258,7 +4258,6 @@ recheck:
 
 	if(rt_policy(policy)){                                                                                
 		if (!check_mt_allow_rt((struct sched_param *)param)){
-			printk("[RT_MONITOR]WARNNING [%d:%s] SET NOT ALLOW RT Prio [%d] for proc [%d:%s]\n", current->pid, current->comm, param->sched_priority, p->pid, p->comm);
 			//dump_stack();
 		}
 	}
diff --git a/kernel/signal.c b/kernel/signal.c
index 6217aa47d..ecfc4bd47 100644
--- a/kernel/signal.c
+++ b/kernel/signal.c
@@ -862,7 +862,6 @@ static bool prepare_signal(int sig, struct task_struct *p, bool force)
 
 	if (signal->flags & (SIGNAL_GROUP_EXIT | SIGNAL_GROUP_COREDUMP)) {
 		if (signal->flags & SIGNAL_GROUP_COREDUMP) {
-			printk(KERN_DEBUG "[%d:%s] is in the middle of dying so skip sig %d\n",p->pid, p->comm, sig);
 		}
 		return 0;
 		/*
@@ -1057,9 +1056,6 @@ static int __send_signal(int sig, struct siginfo *info, struct task_struct *t,
 	unsigned state;
 
 	state = t->state ? __ffs(t->state) + 1 : 0;
-	printk(KERN_DEBUG "[%d:%s] sig %d to [%d:%s] stat=%c\n",
-	       current->pid, current->comm, sig, t->pid, t->comm,
-	       state < sizeof(stat_nam) - 1 ? stat_nam[state] : '?');
 	assert_spin_locked(&t->sighand->siglock);
 
 	result = TRACE_SIGNAL_IGNORED;
diff --git a/kernel/time/clocksource.c b/kernel/time/clocksource.c
index c95833821..d1ff2f793 100644
--- a/kernel/time/clocksource.c
+++ b/kernel/time/clocksource.c
@@ -216,8 +216,6 @@ static void __clocksource_unstable(struct clocksource *cs)
 
 static void clocksource_unstable(struct clocksource *cs, int64_t delta)
 {
-	printk(KERN_WARNING "Clocksource %s unstable (delta = %Ld ns)\n",
-	       cs->name, delta);
 	__clocksource_unstable(cs);
 }
 
@@ -591,7 +589,6 @@ static void clocksource_select(void)
 		break;
 	}
 	if (curr_clocksource != best) {
-		printk(KERN_INFO "Switching to clocksource %s\n", best->name);
 		curr_clocksource = best;
 		timekeeping_notify(curr_clocksource);
 	}
diff --git a/kernel/time/sched_clock.c b/kernel/time/sched_clock.c
index 6c46d6c0f..4d3a51d56 100644
--- a/kernel/time/sched_clock.c
+++ b/kernel/time/sched_clock.c
@@ -182,9 +182,6 @@ void __init sched_clock_register(u64 (*read)(void), int bits,
 	/* calculate the ns resolution of this counter */
 	res = cyc_to_ns(1ULL, new_mult, new_shift);
 
-	pr_info("sched_clock: %u bits at %lu%cHz, resolution %lluns, wraps every %lluns\n",
-		bits, r, r_unit, res, wrap);
-
 	/* Enable IRQ time accounting if we have a fast enough sched_clock */
 	if (irqtime > 0 || (irqtime == -1 && rate >= 1000000))
 		enable_sched_clock_irqtime();
diff --git a/kernel/workqueue.c b/kernel/workqueue.c
index 9e5453be6..2c7149dc3 100644
--- a/kernel/workqueue.c
+++ b/kernel/workqueue.c
@@ -2211,9 +2211,6 @@ __acquires(&pool->lock)
 	mttrace_workqueue_execute_end(work);
 #endif //CONFIG_MTK_WQ_DEBUG
 
-	if ((sched_clock() - exec_start)> 1000000000) // dump log if execute more than 1 sec
-		pr_warning("WQ warning! work (%s, %p) execute more than 1 sec, time: %llu ns\n", func, work, sched_clock() - exec_start);
-	
 	lock_map_release(&lockdep_map);
 	lock_map_release(&pwq->wq->lockdep_map);
 
diff --git a/lib/lz4k/lz4k_init.c b/lib/lz4k/lz4k_init.c
index a18f8d751..7e727bb36 100644
--- a/lib/lz4k/lz4k_init.c
+++ b/lib/lz4k/lz4k_init.c
@@ -21,7 +21,6 @@ static int __init lz4k_init(void)
 
 static void __exit lz4k_exit(void)
 {
-	printk(KERN_INFO "Bye LZ4K!\n");
 }
 module_init(lz4k_init);
 module_exit(lz4k_exit);
diff --git a/lib/swiotlb.c b/lib/swiotlb.c
index 5966ff1b0..a0f1fe210 100644
--- a/lib/swiotlb.c
+++ b/lib/swiotlb.c
@@ -154,11 +154,6 @@ void swiotlb_print_info(void)
 
 	vstart = phys_to_virt(io_tlb_start);
 	vend = phys_to_virt(io_tlb_end);
-
-	MTK_MEMCFG_LOG_AND_PRINTK(KERN_ALERT"software IO TLB [mem %#010llx-%#010llx] (%luMB) mapped at [%p-%p]\n",
-	       (unsigned long long)io_tlb_start,
-	       (unsigned long long)io_tlb_end,
-	       bytes >> 20, vstart, vend - 1);
 }
 
 int __init swiotlb_init_with_tbl(char *tlb, unsigned long nslabs, int verbose)
diff --git a/mm/memblock.c b/mm/memblock.c
index e641d2cbf..d350a9871 100644
--- a/mm/memblock.c
+++ b/mm/memblock.c
@@ -571,24 +571,12 @@ int __init_memblock memblock_reserve(phys_addr_t base, phys_addr_t size)
 			(!strcmp(symname, "__alloc_memory_core_early")) ||
 			(!strcmp(symname, "arm_memblock_init"))) {
 		} else {
-			MTK_MEMCFG_LOG_AND_PRINTK(KERN_ALERT"[memblock]%pf: "
-					"0x%08llx - 0x%08llx (0x%08llx)\n",
-				(void *)_RET_IP_,
-				(unsigned long long)base,
-				(unsigned long long)base + size - 1,
-				(unsigned long long)size);
 		}
 	}
 
 	if (memblock_is_region_reserved(base, size)) {
 		/* trap memory reserve conflict */
 		mtk_memcfg_late_warning(WARN_MEMBLOCK_CONFLICT);
-		MTK_MEMCFG_LOG_AND_PRINTK("[rsv conflict]%pS: "
-			"0x%08llx - 0x%08llx (0x%08llx)\n",
-			__builtin_return_address(0),
-			(unsigned long long)base,
-			(unsigned long long)base + size,
-			(unsigned long long)size);
 	} 
 
 	return memblock_add_region(_rgn, base, size, MAX_NUMNODES);
diff --git a/mm/page_alloc.c b/mm/page_alloc.c
index 80eeec13f..95a14169d 100755
--- a/mm/page_alloc.c
+++ b/mm/page_alloc.c
@@ -5081,11 +5081,6 @@ void __paginginit free_area_init_node(int nid, unsigned long *zones_size,
 	calculate_node_totalpages(pgdat, zones_size, zholes_size);
 
 	alloc_node_mem_map(pgdat);
-#ifdef CONFIG_FLAT_NODE_MEM_MAP
-	printk(KERN_DEBUG "free_area_init_node: node %d, pgdat %08lx, node_mem_map %08lx\n",
-		nid, (unsigned long)pgdat,
-		(unsigned long)pgdat->node_mem_map);
-#endif
 
 	free_area_init_core(pgdat, zones_size, zholes_size);
 }
diff --git a/mm/percpu.c b/mm/percpu.c
index 25e2ea52d..a7f2a47fd 100644
--- a/mm/percpu.c
+++ b/mm/percpu.c
@@ -1120,32 +1120,12 @@ static void pcpu_dump_alloc_info(const char *lvl,
 	width = upa * (cpu_width + 1) + group_width + 3;
 	apl = rounddown_pow_of_two(max(60 / width, 1));
 
-	printk("%spcpu-alloc: s%zu r%zu d%zu u%zu alloc=%zu*%zu",
-	       lvl, ai->static_size, ai->reserved_size, ai->dyn_size,
-	       ai->unit_size, ai->alloc_size / ai->atom_size, ai->atom_size);
-
 	for (group = 0; group < ai->nr_groups; group++) {
 		const struct pcpu_group_info *gi = &ai->groups[group];
 		int unit = 0, unit_end = 0;
 
 		BUG_ON(gi->nr_units % upa);
-		for (alloc_end += gi->nr_units / upa;
-		     alloc < alloc_end; alloc++) {
-			if (!(alloc % apl)) {
-				printk(KERN_CONT "\n");
-				printk("%spcpu-alloc: ", lvl);
-			}
-			printk(KERN_CONT "[%0*d] ", group_width, group);
-
-			for (unit_end += upa; unit < unit_end; unit++)
-				if (gi->cpu_map[unit] != NR_CPUS)
-					printk(KERN_CONT "%0*d ", cpu_width,
-					       gi->cpu_map[unit]);
-				else
-					printk(KERN_CONT "%s ", empty_str);
-		}
 	}
-	printk(KERN_CONT "\n");
 }
 
 /**
@@ -1697,10 +1677,6 @@ int __init pcpu_embed_first_chunk(size_t reserved_size, size_t dyn_size,
 #endif
 	}
 
-	pr_info("PERCPU: Embedded %zu pages/cpu @%p s%zu r%zu d%zu u%zu\n",
-		PFN_DOWN(size_sum), base, ai->static_size, ai->reserved_size,
-		ai->dyn_size, ai->unit_size);
-
 	rc = pcpu_setup_first_chunk(ai, base);
 	goto out_free;
 
@@ -1810,9 +1786,6 @@ int __init pcpu_page_first_chunk(size_t reserved_size,
 	}
 
 	/* we're ready, commit */
-	pr_info("PERCPU: %d %s pages/cpu @%p s%zu r%zu d%zu\n",
-		unit_pages, psize_str, vm.addr, ai->static_size,
-		ai->reserved_size, ai->dyn_size);
 
 	rc = pcpu_setup_first_chunk(ai, vm.addr);
 	goto out_free_ar;
diff --git a/mm/slub.c b/mm/slub.c
index 3657e2a4d..f24e421ad 100644
--- a/mm/slub.c
+++ b/mm/slub.c
@@ -3769,13 +3769,6 @@ void __init kmem_cache_init(void)
 #ifdef CONFIG_SMP
 	register_cpu_notifier(&slab_notifier);
 #endif
-
-	printk(KERN_INFO
-		"SLUB: HWalign=%d, Order=%d-%d, MinObjects=%d,"
-		" CPUs=%d, Nodes=%d\n",
-		cache_line_size(),
-		slub_min_order, slub_max_order, slub_min_objects,
-		nr_cpu_ids, nr_node_ids);
 }
 
 void __init kmem_cache_init_late(void)
diff --git a/net/ipv6/addrconf.c b/net/ipv6/addrconf.c
index 862e2c2cf..84dea8cc1 100644
--- a/net/ipv6/addrconf.c
+++ b/net/ipv6/addrconf.c
@@ -3268,7 +3268,6 @@ static void addrconf_rs_timer(unsigned long data)
 		 * Note: we do not support deprecated "all on-link"
 		 * assumption any longer.
 		 */
-		printk("%s: no IPv6 routers present\n", idev->dev->name);
 	}
 
 out:
@@ -3732,9 +3731,6 @@ restart:
 	if (time_before(next_sched, jiffies + ADDRCONF_TIMER_FUZZ_MAX))
 		next_sched = jiffies + ADDRCONF_TIMER_FUZZ_MAX;
 
-	ADBG((KERN_DEBUG "now = %lu, schedule = %lu, rounded schedule = %lu => %lu\n",
-	      now, next, next_sec, next_sched));
-
 	addr_chk_timer.expires = next_sched;
 	add_timer(&addr_chk_timer);
 	spin_unlock(&addrconf_verify_lock);
diff --git a/net/sched/act_mirred.c b/net/sched/act_mirred.c
index 5d676edc2..cc63229d1 100644
--- a/net/sched/act_mirred.c
+++ b/net/sched/act_mirred.c
@@ -286,7 +286,6 @@ static int __init mirred_init_module(void)
 	if (err)
 		return err;
 
-	pr_info("Mirror/redirect action on\n");
 	return tcf_register_action(&act_mirred_ops);
 }
 
diff --git a/net/sched/cls_u32.c b/net/sched/cls_u32.c
index eb07a1e53..1f3caaf10 100644
--- a/net/sched/cls_u32.c
+++ b/net/sched/cls_u32.c
@@ -803,15 +803,11 @@ static struct tcf_proto_ops cls_u32_ops __read_mostly = {
 
 static int __init init_u32(void)
 {
-	pr_info("u32 classifier\n");
 #ifdef CONFIG_CLS_U32_PERF
-	pr_info("    Performance counters on\n");
 #endif
 #ifdef CONFIG_NET_CLS_IND
-	pr_info("    input device check on\n");
 #endif
 #ifdef CONFIG_NET_CLS_ACT
-	pr_info("    Actions configured\n");
 #endif
 	return register_tcf_proto_ops(&cls_u32_ops);
 }
diff --git a/net/sched/sch_generic.c b/net/sched/sch_generic.c
index 1cdc95839..f717c91f8 100644
--- a/net/sched/sch_generic.c
+++ b/net/sched/sch_generic.c
@@ -780,8 +780,6 @@ void dev_activate(struct net_device *dev)
 	   virtual interfaces
 	 */
 	 
-	printk(KERN_INFO "[mtk_net][sched]dev_activate dev = %s \n", dev->name);
-
 	if (dev->qdisc == &noop_qdisc)
 		attach_default_qdiscs(dev);
 
@@ -896,7 +894,6 @@ void dev_deactivate(struct net_device *dev)
 	LIST_HEAD(single);
 
 	list_add(&dev->unreg_list, &single);
-	printk(KERN_INFO "[mtk_net][sched]dev_deactivate dev = %s \n", dev->name);
 	dev_deactivate_many(&single);
 	list_del(&single);
 }
diff --git a/sound/soc/mediatek/mt_soc_audio_6580/AudDrv_Clk.c b/sound/soc/mediatek/mt_soc_audio_6580/AudDrv_Clk.c
index 65fc19ad8..47ae3c407 100644
--- a/sound/soc/mediatek/mt_soc_audio_6580/AudDrv_Clk.c
+++ b/sound/soc/mediatek/mt_soc_audio_6580/AudDrv_Clk.c
@@ -95,7 +95,6 @@ extern void enable_soidle_by_bit(int id);
 void AudDrv_Clk_AllOn(void)
 {
     unsigned long flags;
-    printk("AudDrv_Clk_AllOn \n");
     spin_lock_irqsave(&auddrv_Clk_lock, flags);
     Afe_Set_Reg(AUDIO_TOP_CON0, 0x00004000, 0xffffffff);
     spin_unlock_irqrestore(&auddrv_Clk_lock, flags);
@@ -104,7 +103,6 @@ void AudDrv_Clk_AllOn(void)
 void Auddrv_Bus_Init(void)
 {
     unsigned long flags;
-    printk("%s  \n", __func__);
     spin_lock_irqsave(&auddrv_Clk_lock, flags);
     Afe_Set_Reg(AUDIO_TOP_CON0, 0x00004000, 0x00004000); //must set, system will default set bit14 to 0    
     spin_unlock_irqrestore(&auddrv_Clk_lock, flags);
@@ -125,7 +123,6 @@ void AudDrv_Clk_Power_On(void)
 #if 0   //82 no need
     volatile uint32 *AFE_Register = (volatile uint32 *)Get_Afe_Powertop_Pointer();
     volatile uint32 val_tmp;
-    printk("%s", __func__);
     val_tmp = 0xd;
     mt_reg_sync_writel(val_tmp, AFE_Register);
 #endif
@@ -148,11 +145,9 @@ void AudDrv_Clk_Power_Off(void)
 void AudDrv_Clk_On(void)
 {
     unsigned long flags;
-    PRINTK_AUD_CLK("+AudDrv_Clk_On, Aud_AFE_Clk_cntr:%d \n",Aud_AFE_Clk_cntr);
     spin_lock_irqsave(&auddrv_Clk_lock, flags);
     if (Aud_AFE_Clk_cntr == 0)
     {
-        printk("-----------AudDrv_Clk_On, Aud_AFE_Clk_cntr:%d \n", Aud_AFE_Clk_cntr);
 #ifdef PM_MANAGER_API
 
         //for Infra power
@@ -176,33 +171,27 @@ void AudDrv_Clk_On(void)
         }
         //printk("is MT_CG_AUD_PDN_DAC_EN on:%x, AUDIO_TOP_CON0=%x \n",clock_is_on(MT_CG_AUD_PDN_DAC_EN), Afe_Get_Reg(AUDIO_TOP_CON0));
         
-        printk("AudDrv_Clk_On, in  PM_MANAGER_API\n");
         Afe_Set_Reg(AUDIO_TOP_CON0, 0x60004000, 0x60004000);    //for bringup test, need to modify
-        printk(" AudDrv_Clk_On done, AUDIO_TOP_CON0=%x \n",Afe_Get_Reg(AUDIO_TOP_CON0));
 #else
 #if 0   //Rainier no need
         SetInfraCfg(AUDIO_CG_CLR, 0x2000000, 0x2000000); //bit 25=0, without 133m master and 66m slave bus clock cg gating
 #endif
         Afe_Set_Reg(AUDIO_TOP_CON0, 0x4000, 0x06004044);
-        printk("AudDrv_Clk_On, not in PM_MANAGER_API\n");
         Afe_Set_Reg(AUDIO_TOP_CON0, 0x60004000, 0x60004000);
 #endif
     }
     Aud_AFE_Clk_cntr++;
     spin_unlock_irqrestore(&auddrv_Clk_lock, flags);
-    PRINTK_AUD_CLK("-AudDrv_Clk_On, Aud_AFE_Clk_cntr:%d \n",Aud_AFE_Clk_cntr);
 }
 
 void AudDrv_Clk_Off(void)
 {
     unsigned long flags;
-    PRINTK_AUD_CLK("+!! AudDrv_Clk_Off, Aud_AFE_Clk_cntr:%d \n",Aud_AFE_Clk_cntr);
     spin_lock_irqsave(&auddrv_Clk_lock, flags);
 
     Aud_AFE_Clk_cntr--;
     if (Aud_AFE_Clk_cntr == 0)
     {
-        printk("------------AudDrv_Clk_Off, Aud_AFE_Clk_cntr:%d \n", Aud_AFE_Clk_cntr);
         {
             // Disable AFE clock
 #ifdef PM_MANAGER_API
@@ -225,7 +214,6 @@ void AudDrv_Clk_Off(void)
             }
             //printk("AudDrv_Clk_Off is MT_CG_AUDIO_SW_CG on:%x, AUDIO_TOP_CON0=%x  \n",clock_is_on(MT_CG_AUDIO_SW_CG),Afe_Get_Reg(AUDIO_TOP_CON0));
             
-            printk("AudDrv_Clk_Off, in PM_MANAGER_API \n");
             Afe_Set_Reg(AUDIO_TOP_CON0, 0x80004000, 0xf0004000);    //for bringup test, need to modify
 #else
             Afe_Set_Reg(AUDIO_TOP_CON0, 0x06000044, 0x06000044);
@@ -358,17 +346,14 @@ void AudDrv_ADC_Clk_Off(void)
 
 void AudDrv_ADC2_Clk_On(void)
 {
-    PRINTK_AUD_CLK("+%s %d \n", __func__, Aud_ADC2_Clk_cntr);
     mutex_lock(&auddrv_pmic_mutex);
 
     if (Aud_ADC2_Clk_cntr == 0)
     {
-        PRINTK_AUDDRV("+%s  enable_clock ADC clk(%x)\n", __func__, Aud_ADC2_Clk_cntr);
 #if 0
 #ifdef PM_MANAGER_API
         if (enable_clock(MT_CG_AUDIO_ADDA2, "AUDIO"))
         {
-            PRINTK_AUD_CLK("%s fail", __func__);
         }
 #else
         Afe_Set_Reg(AUDIO_TOP_CON0, 0 << 23 , 1 << 23); //temp hard code setting, after confirm with enable clock usage, this could be removed.
@@ -381,17 +366,14 @@ void AudDrv_ADC2_Clk_On(void)
 
 void AudDrv_ADC2_Clk_Off(void)
 {
-    //PRINTK_AUDDRV("+%s %d \n", __func__,Aud_ADC2_Clk_cntr);
     mutex_lock(&auddrv_pmic_mutex);
     Aud_ADC2_Clk_cntr--;
     if (Aud_ADC2_Clk_cntr == 0)
     {
-        PRINTK_AUDDRV("+%s disable_clock ADC clk(%x)\n", __func__, Aud_ADC2_Clk_cntr);
 #if 0	
 #ifdef PM_MANAGER_API
         if (disable_clock(MT_CG_AUDIO_ADDA2, "AUDIO"))
         {
-            PRINTK_AUD_CLK("%s fail", __func__);
         }
 #else
         Afe_Set_Reg(AUDIO_TOP_CON0, 1 << 23 , 1 << 23); //temp hard code setting, after confirm with enable clock usage, this could be removed.
@@ -400,7 +382,6 @@ void AudDrv_ADC2_Clk_Off(void)
     }
     if (Aud_ADC2_Clk_cntr < 0)
     {
-        PRINTK_AUDDRV("%s  <0 (%d) \n", __func__, Aud_ADC2_Clk_cntr);
         Aud_ADC2_Clk_cntr = 0;
     }
     mutex_unlock(&auddrv_pmic_mutex);
@@ -419,17 +400,14 @@ void AudDrv_ADC2_Clk_Off(void)
 
 void AudDrv_ADC3_Clk_On(void)
 {
-    PRINTK_AUD_CLK("+%s %d \n", __func__, Aud_ADC3_Clk_cntr);
     mutex_lock(&auddrv_pmic_mutex);
 
     if (Aud_ADC3_Clk_cntr == 0)
     {
-        PRINTK_AUDDRV("+%s  enable_clock ADC clk(%x)\n", __func__, Aud_ADC3_Clk_cntr);
 #if 0
 #ifdef PM_MANAGER_API
         if (enable_clock(MT_CG_AUDIO_ADDA3, "AUDIO"))
         {
-            PRINTK_AUD_CLK("%s fail", __func__);
         }
 #endif
 #endif
@@ -440,24 +418,20 @@ void AudDrv_ADC3_Clk_On(void)
 
 void AudDrv_ADC3_Clk_Off(void)
 {
-    //PRINTK_AUDDRV("+%s %d \n", __func__,Aud_ADC2_Clk_cntr);
     mutex_lock(&auddrv_pmic_mutex);
     Aud_ADC3_Clk_cntr--;
     if (Aud_ADC3_Clk_cntr == 0)
     {
-        PRINTK_AUDDRV("+%s disable_clock ADC clk(%x)\n", __func__, Aud_ADC3_Clk_cntr);
 #if 0
 #ifdef PM_MANAGER_API
         if (disable_clock(MT_CG_AUDIO_ADDA3, "AUDIO"))
         {
-            PRINTK_AUD_CLK("%s fail", __func__);
         }
 #endif
 #endif
     }
     if (Aud_ADC3_Clk_cntr < 0)
     {
-        PRINTK_AUDDRV("%s  <0 (%d) \n", __func__, Aud_ADC3_Clk_cntr);
         Aud_ADC3_Clk_cntr = 0;
     }
     mutex_unlock(&auddrv_pmic_mutex);
@@ -477,23 +451,19 @@ void AudDrv_ADC3_Clk_Off(void)
 void AudDrv_APLL22M_Clk_On(void)
 {
 #if 0   //82 no need
-    PRINTK_AUD_CLK("+%s %d \n", __func__, Aud_APLL22M_Clk_cntr);
     mutex_lock(&auddrv_pmic_mutex);
 
     if (Aud_APLL22M_Clk_cntr == 0)
     {
-        PRINTK_AUDDRV("+%s  enable_clock ADC clk(%x)\n", __func__, Aud_APLL22M_Clk_cntr);
 #ifdef PM_MANAGER_API
         enable_mux(MT_MUX_AUD1, "AUDIO");
         clkmux_sel(MT_MUX_AUD1, 1 , "AUDIO"); //select APLL1
 
         if (enable_clock(MT_CG_AUDIO_22M, "AUDIO"))
         {
-            PRINTK_AUD_CLK("%s fail", __func__);
         }
         if (enable_clock(MT_CG_AUDIO_APLL_TUNER, "AUDIO"))
         {
-            PRINTK_AUD_CLK("%s fail", __func__);
         }
 #endif
     }
@@ -509,15 +479,12 @@ void AudDrv_APLL22M_Clk_Off(void)
     Aud_APLL22M_Clk_cntr--;
     if (Aud_APLL22M_Clk_cntr == 0)
     {
-        PRINTK_AUDDRV("+%s disable_clock ADC clk(%x)\n", __func__, Aud_APLL22M_Clk_cntr);
 #ifdef PM_MANAGER_API
         if (disable_clock(MT_CG_AUDIO_22M, "AUDIO"))
         {
-            PRINTK_AUD_CLK("%s fail", __func__);
         }
         if (disable_clock(MT_CG_AUDIO_APLL_TUNER, "AUDIO"))
         {
-            PRINTK_AUD_CLK("%s fail", __func__);
         }
         clkmux_sel(MT_MUX_AUD1, 0, "AUDIO"); //select 26M
         disable_mux(MT_MUX_AUD1, "AUDIO");
@@ -525,7 +492,6 @@ void AudDrv_APLL22M_Clk_Off(void)
     }
     if (Aud_APLL22M_Clk_cntr < 0)
     {
-        PRINTK_AUDDRV("%s  <0 (%d) \n", __func__, Aud_APLL22M_Clk_cntr);
         Aud_APLL22M_Clk_cntr = 0;
     }
     mutex_unlock(&auddrv_pmic_mutex);
@@ -546,21 +512,17 @@ void AudDrv_APLL24M_Clk_On(void)
 {
 #if 0   //82 no need
 
-    PRINTK_AUD_CLK("+%s %d \n", __func__, Aud_APLL24M_Clk_cntr);
     mutex_lock(&auddrv_pmic_mutex);
     if (Aud_APLL24M_Clk_cntr == 0)
     {
-        PRINTK_AUDDRV("+%s  enable_clock ADC clk(%x)\n", __func__, Aud_APLL24M_Clk_cntr);
 #ifdef PM_MANAGER_API
         enable_mux(MT_MUX_AUD2, "AUDIO");
         clkmux_sel(MT_MUX_AUD2, 1, "AUDIO"); //APLL2
         if (enable_clock(MT_CG_AUDIO_24M, "AUDIO"))
         {
-            PRINTK_AUD_CLK("%s fail", __func__);
         }
         if (enable_clock(MT_CG_AUDIO_APLL2_TUNER, "AUDIO"))
         {
-            PRINTK_AUD_CLK("%s fail", __func__);
         }
 #endif
     }
@@ -577,15 +539,12 @@ void AudDrv_APLL24M_Clk_Off(void)
     Aud_APLL24M_Clk_cntr--;
     if (Aud_APLL24M_Clk_cntr == 0)
     {
-        PRINTK_AUDDRV("+%s disable_clock ADC clk(%x)\n", __func__, Aud_APLL24M_Clk_cntr);
 #ifdef PM_MANAGER_API
         if (disable_clock(MT_CG_AUDIO_24M, "AUDIO"))
         {
-            PRINTK_AUD_CLK("%s fail", __func__);
         }
         if (disable_clock(MT_CG_AUDIO_APLL2_TUNER, "AUDIO"))
         {
-            PRINTK_AUD_CLK("%s fail", __func__);
         }
 
         clkmux_sel(MT_MUX_AUD2, 0, "AUDIO"); //select 26M
@@ -594,7 +553,6 @@ void AudDrv_APLL24M_Clk_Off(void)
     }
     if (Aud_APLL24M_Clk_cntr < 0)
     {
-        PRINTK_AUDDRV("%s  <0 (%d) \n", __func__, Aud_APLL24M_Clk_cntr);
         Aud_APLL24M_Clk_cntr = 0;
     }
     mutex_unlock(&auddrv_pmic_mutex);
@@ -870,7 +828,6 @@ void AudDrv_Suspend_Clk_Off(void)
         	#if 0
             if (disable_clock(MT_CG_AUDIO_ADDA2, "AUDIO"))
             {
-                PRINTK_AUD_CLK("%s fail", __func__);
             }
 			#endif
         }
@@ -879,7 +836,6 @@ void AudDrv_Suspend_Clk_Off(void)
             #if 0
             if (disable_clock(MT_CG_AUDIO_ADDA3, "AUDIO"))
             {
-                PRINTK_AUD_CLK("%s fail", __func__);
             }
 			#endif
         }
@@ -934,7 +890,6 @@ void AudDrv_Suspend_Clk_On(void)
         	#if 0
             if (enable_clock(MT_CG_AUDIO_ADDA2, "AUDIO"))
             {
-                PRINTK_AUD_CLK("%s fail", __func__);
             }
 			#endif
         }
@@ -943,7 +898,6 @@ void AudDrv_Suspend_Clk_On(void)
         	#if 0
             if (enable_clock(MT_CG_AUDIO_ADDA3, "AUDIO"))
             {
-                PRINTK_AUD_CLK("%s fail", __func__);
             }
 			#endif
         }
diff --git a/sound/soc/mediatek/mt_soc_audio_6580/mt_soc_afe_control.c b/sound/soc/mediatek/mt_soc_audio_6580/mt_soc_afe_control.c
index 3320e3f9a..5f6c6ef93 100644
--- a/sound/soc/mediatek/mt_soc_audio_6580/mt_soc_afe_control.c
+++ b/sound/soc/mediatek/mt_soc_audio_6580/mt_soc_afe_control.c
@@ -196,7 +196,6 @@ static bool CheckSize(uint32 size)
 {
     if (size == 0)
     {
-        printk("CheckSize size = 0\n");
         return true;
     }
     return false;
@@ -230,13 +229,11 @@ unsigned int GetSramState(void)
 
 void SetSramState(unsigned int State)
 {
-    printk("%s state= %d\n", __func__, State);
     mAudioSramManager.mMemoryState |= State;
 }
 
 void ClearSramState(unsigned int State)
 {
-    printk("%s state= %d\n", __func__, State);
     mAudioSramManager.mMemoryState &= (~State);
 }
 
@@ -296,17 +293,14 @@ bool get_internalmd_status(void)
 void DumpMemifSubStream(void)
 {
     int i = 0;
-    //printk("+%s \n ", __func__);
     for (i = 0 ; i <= Soc_Aud_Digital_Block_MEM_HDMI ; i++)
     {
         substreamList *head = AFE_Mem_Control_context[i]->substreamL;
         while (head != NULL)
         {
-            //printk("%s AFE_Mem_Control_context[%d] head = %p head->substream = %p \n ", __func__,i, head,head->substream);
             head  = head->next;
         }
     }
-    //printk("-%s \n ", __func__);
 }
 #endif
 
@@ -333,11 +327,8 @@ static void SetDL1BufferwithBuf(void)
 
     AudDrv_Allocate_mem_Buffer(NULL, Soc_Aud_Digital_Block_MEM_DL1,  Dl1_MAX_BUFFER_SIZE);
     Dl1_Playback_dma_buf = Get_Mem_Buffer(Soc_Aud_Digital_Block_MEM_DL1);
-    printk("%s, Dl1_Playback_dma_buf->addr = %x\n", __func__,Dl1_Playback_dma_buf->addr);
     Afe_Set_Reg(AFE_DL1_BASE , Dl1_Playback_dma_buf->addr, 0xffffffff);
-    printk("%s, after base \n", __func__);
     Afe_Set_Reg(AFE_DL1_END  , Dl1_Playback_dma_buf->addr + (Dl1_MAX_BUFFER_SIZE - 1), 0xffffffff);
-    printk("%s--- \n", __func__);
 }
 
 
@@ -387,7 +378,6 @@ void OpenAfeDigitaldl1(bool bEnable)
 
 void SetExternalModemStatus(const bool bEnable)
 {
-    printk("%s(), mExternalModemStatus : %d => %d\n", __func__, mExternalModemStatus, bEnable);
     mExternalModemStatus = bEnable;
 }
 
@@ -405,12 +395,10 @@ void SetExternalModemStatus(const bool bEnable)
 bool InitAfeControl(void)
 {
     int i = 0;
-    printk("InitAfeControl \n");
     // first time to init , reg init.
     Auddrv_Reg_map();
     AudDrv_Clk_Power_On();
-    Auddrv_Bus_Init();
-
+    Auddrv_Bus_Init(); 
     //Auddrv_Read_Efuse_HPOffset(); //Todo 
 
     AfeControlMutexLock();
@@ -466,7 +454,6 @@ bool InitAfeControl(void)
 bool ResetAfeControl(void)
 {
     int i = 0;
-    printk("ResetAfeControl \n");
     AfeControlMutexLock();
     mAudioInit = false;
     memset((void *)(mAudioMrg), 0, sizeof(AudioMrgIf));
@@ -508,7 +495,6 @@ bool Register_Aud_Irq(void *dev, uint32 afe_irq_number)
         printk("Register_Aud_Irq AFE IRQ register fail!!!\n");
     }
 #else
-    printk("%s dev name =%s \n", __func__, dev_name(dev));
     ret = request_irq(MT6580_AFE_MCU_IRQ_LINE, AudDrv_IRQ_handler, IRQF_TRIGGER_LOW/*IRQF_TRIGGER_FALLING*/, "Afe_ISR_Handle", dev);
 #endif
     return ret;
@@ -629,7 +615,6 @@ void SetckSel(uint32 I2snum, uint32 SampleRate)
             Afe_Set_Reg(AUDIO_CLK_AUDDIV_0, ApllSource << 7, 1 << 7);
             break;
     }
-    printk("%s I2snum = %d ApllSource = %d \n", __func__, I2snum, ApllSource);
 #endif
 }
 
@@ -672,7 +657,6 @@ uint32  SetCLkMclk(uint32 I2snum, uint32 SampleRate)
             Afe_Set_Reg(AUDIO_CLK_AUDDIV_2, I2s_ck_div << 24, 0xff000000);
             break;
     }
-    printk("%s I2snum = %d I2s_ck_div = %d I2S_APll = %d\n", __func__, I2snum, I2s_ck_div, I2S_APll);
 #endif
     return I2s_ck_div;
 }
@@ -682,7 +666,6 @@ void  SetCLkBclk(uint32 MckDiv, uint32 SampleRate, uint32 Channels , uint32 Wlen
     uint32  I2S_APll = 0;
     uint32  I2S_Bclk = 0;
     uint32 I2s_Bck_div = 0;
-    printk("%s MckDiv = %dv SampleRate = %d  Channels = %d Wlength = %d\n", __func__, MckDiv, SampleRate, Channels, Wlength);
 #if 0 //  not support
 
     MckDiv++;
@@ -698,7 +681,6 @@ void  SetCLkBclk(uint32 MckDiv, uint32 SampleRate, uint32 Channels , uint32 Wlen
     I2S_Bclk = SampleRate * Channels * (Wlength + 1) * 16;
     I2s_Bck_div = (I2S_APll / MckDiv) / I2S_Bclk;
 
-    printk("%s I2S_APll = %dv I2S_Bclk = %d  I2s_Bck_div = %d\n", __func__, I2S_APll, I2S_Bclk, I2s_Bck_div);
     I2s_Bck_div--;
     // bclk dived is not in AUDDIV_3
     //Afe_Set_Reg(AUDIO_CLK_AUDDIV_3, I2s_Bck_div, 0x0000000f);
@@ -790,7 +772,6 @@ void SetVOWStatus(bool bEnable)
     {
         spin_lock_irqsave(&afe_control_lock, flags);
         mVOWStatus = bEnable;
-        printk("SetVOWStatus, mVOWStatus= %d\n", mVOWStatus);
         spin_unlock_irqrestore(&afe_control_lock, flags);
     }
 }
@@ -956,7 +937,6 @@ uint32 SGENSampleRateTransform(uint32 SampleRate)
 
 bool SetSampleRate(uint32 Aud_block, uint32 SampleRate)
 {
-    //printk("%s Aud_block = %d SampleRate = %d\n", __func__, Aud_block, SampleRate);
     SampleRate = SampleRateTransform(SampleRate);
     switch (Aud_block)
     {
@@ -1054,7 +1034,6 @@ bool SetChannels(uint32 Memory_Interface, uint32 channel)
         }
 
         default:
-            printk("SetChannels  Memory_Interface = %d, channel = %d, bMono = %d\n", Memory_Interface, channel, bMono);
             return false;
     }
     return true;
@@ -1063,7 +1042,6 @@ bool SetChannels(uint32 Memory_Interface, uint32 channel)
 
 bool Set2ndI2SOutAttribute(uint32_t sampleRate)
 {
-    printk("+%s(), sampleRate = %d\n", __FUNCTION__, sampleRate);
     m2ndI2Sout->mLR_SWAP = Soc_Aud_LR_SWAP_NO_SWAP;
     m2ndI2Sout->mI2S_SLAVE = Soc_Aud_I2S_SRC_MASTER_MODE;
     m2ndI2Sout->mINV_LRCK = Soc_Aud_INV_LRCK_NO_INVERSE;
@@ -1116,7 +1094,6 @@ bool SetDaiBt(AudioDigitalDAIBT *mAudioDaiBt)
 
 bool SetDaiBtEnable(bool bEanble)
 {
-    printk("%s bEanble = %d\n", __func__, bEanble);
 #if 0   //  not support
     if (bEanble == true)  // turn on dai bt
     {
@@ -1169,7 +1146,6 @@ bool GetMrgI2SEnable()
 
 bool SetMrgI2SEnable(bool bEnable, unsigned int sampleRate)
 {
-    printk("%s bEnable = %d\n", __func__, bEnable);
 #if 0   //  not support
     if (bEnable == true)
     {
@@ -1290,7 +1266,6 @@ bool SetI2SAdcIn(AudioDigtalI2S *DigtalI2S)
         Audio_I2S_Adc |= (SampleRateTransform(AudioAdcI2S->mI2S_SAMPLERATE) << 8);
         Audio_I2S_Adc |= (AudioAdcI2S->mI2S_FMT << 3);
         Audio_I2S_Adc |= (AudioAdcI2S->mI2S_WLEN << 1);
-        printk("%s Audio_I2S_Adc = 0x%x", __FUNCTION__, Audio_I2S_Adc);
         Afe_Set_Reg(AFE_I2S_CON2, Audio_I2S_Adc, MASK_ALL);
     }
     return true;
@@ -1298,7 +1273,6 @@ bool SetI2SAdcIn(AudioDigtalI2S *DigtalI2S)
 
 bool EnableSideGenHw(uint32 connection , bool direction  , bool  Enable)
 {
-    printk("+%s(), connection = %d, direction = %d, Enable= %d\n", __FUNCTION__, connection, direction, Enable);
     if (Enable && direction)
     {
         switch (connection)
@@ -1332,7 +1306,6 @@ bool EnableSideGenHw(uint32 connection , bool direction  , bool  Enable)
                 Afe_Set_Reg(AFE_SGEN_CON0, 0x64662662, 0xffffffff);
                 break;
             default:
-                printk("+%s(), no corresponding input SGEN\n", __FUNCTION__);
                 break;
         }
     }
@@ -1383,7 +1356,6 @@ bool EnableSideGenHw(uint32 connection , bool direction  , bool  Enable)
                 }
                 break;
             default:
-                printk("+%s(), no corresponding output SGEN\n", __FUNCTION__);
                 break;
         }
     }
@@ -1401,8 +1373,6 @@ bool SetSideGenSampleRate(uint32 SampleRate)
     uint32 sine_mode_ch1 = 0;
     uint32 sine_mode_ch2 = 0;
 
-    printk("+%s(), SampleRate = %d\n", __FUNCTION__, SampleRate);
-
     sine_mode_ch1 = SGENSampleRateTransform(SampleRate) << 8;
     sine_mode_ch2 = SGENSampleRateTransform(SampleRate) << 20;
 
@@ -1512,7 +1482,6 @@ bool SetDLSrc2(uint32 SampleRate)
 bool SetI2SDacOut(uint32 SampleRate , bool lowjitter, bool I2SWLen)
 {
     uint32 Audio_I2S_Dac = 0;
-    printk("SetI2SDacOut SampleRate %d, lowjitter %d, I2SWLen %d\n", SampleRate, lowjitter, I2SWLen);
     CleanPreDistortion();
     SetDLSrc2(SampleRate);
     Audio_I2S_Dac |= (Soc_Aud_LR_SWAP_NO_SWAP << 31);
@@ -1548,7 +1517,6 @@ bool SetHwDigitalGainMode(uint32 GainType, uint32 SampleRate, uint32 SamplePerSt
 
 bool SetHwDigitalGainEnable(int GainType, bool Enable)
 {
-    printk("+%s(), GainType = %d, Enable = %d\n", __FUNCTION__, GainType, Enable);
     switch (GainType)
     {
         case Soc_Aud_Hw_Digital_Gain_HW_DIGITAL_GAIN1:
@@ -1566,7 +1534,6 @@ bool SetHwDigitalGainEnable(int GainType, bool Enable)
             Afe_Set_Reg(AFE_GAIN2_CON0, Enable, 0x1);
             break;
         default:
-            printk("%s with no match type\n", __func__);
             return false;
     }
     return true;
@@ -1574,7 +1541,6 @@ bool SetHwDigitalGainEnable(int GainType, bool Enable)
 
 bool  SetHwDigitalGain(uint32 Gain , int GainType)
 {
-    printk("+%s(), Gain = 0x%x, gain type = %d\n", __func__, Gain, GainType);
     switch (GainType)
     {
         case Soc_Aud_Hw_Digital_Gain_HW_DIGITAL_GAIN1:
@@ -1584,7 +1550,6 @@ bool  SetHwDigitalGain(uint32 Gain , int GainType)
             Afe_Set_Reg(AFE_GAIN2_CON1, Gain, 0xffffffff);
             break;
         default:
-            printk("%s with no match type\n", __func__);
             return false;
     }
     return true;
@@ -1594,7 +1559,6 @@ bool SetModemPcmConfig(int modem_index , AudioDigitalPCM p_modem_pcm_attribute)
 {
     uint32 reg_pcm2_intf_con = 0;
     uint32 reg_pcm_intf_con1 = 0;
-    printk("+%s()\n", __func__);
     if (modem_index == MODEM_1)
     {
         reg_pcm2_intf_con |= (p_modem_pcm_attribute.mTxLchRepeatSel     & 0x1) << 13;
@@ -1604,7 +1568,6 @@ bool SetModemPcmConfig(int modem_index , AudioDigitalPCM p_modem_pcm_attribute)
         reg_pcm2_intf_con |= (p_modem_pcm_attribute.mPcmWordLength      & 0x1) << 5;
         reg_pcm2_intf_con |= (p_modem_pcm_attribute.mPcmModeWidebandSel & 0x3) << 3;
         reg_pcm2_intf_con |= (p_modem_pcm_attribute.mPcmFormat          & 0x3) << 1;
-        printk("%s(), PCM2_INTF_CON(0x%lx) = 0x%x\n", __FUNCTION__, PCM2_INTF_CON, reg_pcm2_intf_con);
         Afe_Set_Reg(PCM2_INTF_CON, reg_pcm2_intf_con, MASK_ALL);
         if (p_modem_pcm_attribute.mPcmModeWidebandSel == Soc_Aud_PCM_MODE_PCM_MODE_8K)
         {
@@ -1692,7 +1655,6 @@ bool SetModemPcmConfig(int modem_index , AudioDigitalPCM p_modem_pcm_attribute)
         reg_pcm_intf_con1 |= (p_modem_pcm_attribute.mPcmModeWidebandSel    & 0x03) << 3;
         reg_pcm_intf_con1 |= (p_modem_pcm_attribute.mPcmFormat             & 0x03) << 1;
 
-        printk("%s(), PCM_INTF_CON1(0x%lx) = 0x%x", __FUNCTION__, PCM_INTF_CON, reg_pcm_intf_con1);
         Afe_Set_Reg(PCM_INTF_CON, reg_pcm_intf_con1, MASK_ALL);
 
     }
@@ -1702,7 +1664,6 @@ bool SetModemPcmConfig(int modem_index , AudioDigitalPCM p_modem_pcm_attribute)
 bool SetModemPcmEnable(int modem_index, bool modem_pcm_on)
 {
     uint32 dNeedDisableASM = 0, mPcm1AsyncFifo;
-    printk("+%s(), modem_index = %d, modem_pcm_on = %d\n", __FUNCTION__, modem_index, modem_pcm_on);
 
     if (modem_index == MODEM_1) // MODEM_1 use PCM2_INTF_CON (0x53C) !!!
     {
@@ -1756,7 +1717,6 @@ bool EnableSideToneFilter(bool stf_on)
 
     // MD max support 16K sampling rate
     const uint8_t kSideToneHalfTapNum = sizeof(kSideToneCoefficientTable16k) / sizeof(uint16_t);
-    printk("+%s(), stf_on = %d\n", __func__, stf_on);
     AudDrv_Clk_On();
 
     if (stf_on == false)
@@ -1765,11 +1725,9 @@ bool EnableSideToneFilter(bool stf_on)
         const bool bypass_stf_on = true;
         uint32_t reg_value = (bypass_stf_on << 31) | (stf_on << 8);
         Afe_Set_Reg(AFE_SIDETONE_CON1, reg_value, MASK_ALL);
-        printk("%s(), AFE_SIDETONE_CON1[0x%lx] = 0x%x\n", __FUNCTION__, AFE_SIDETONE_CON1, reg_value);
 
         // set side tone gain = 0
         Afe_Set_Reg(AFE_SIDETONE_GAIN, 0, MASK_ALL);
-        printk("%s(), AFE_SIDETONE_GAIN[0x%lx] = 0x%x\n", __FUNCTION__, AFE_SIDETONE_GAIN, 0);
     }
     else
     {
@@ -1784,11 +1742,9 @@ bool EnableSideToneFilter(bool stf_on)
         uint32_t   read_reg_value = Afe_Get_Reg(AFE_SIDETONE_CON0);
         size_t coef_addr = 0;
 
-        printk("%s(), AFE_SIDETONE_GAIN[0x%lx] = 0x%x\n", __FUNCTION__, AFE_SIDETONE_GAIN, 0);
         // set side tone gain
         Afe_Set_Reg(AFE_SIDETONE_GAIN, 0, MASK_ALL);
         Afe_Set_Reg(AFE_SIDETONE_CON1, write_reg_value, MASK_ALL);
-        printk("%s(), AFE_SIDETONE_CON1[0x%lx] = 0x%x\n", __FUNCTION__, AFE_SIDETONE_CON1, write_reg_value);
 
 #if 0 // no need to set sidetone coeffecient. spend too much time during incall
         for (coef_addr = 0; coef_addr < kSideToneHalfTapNum; coef_addr++)
@@ -1809,8 +1765,7 @@ bool EnableSideToneFilter(bool stf_on)
             {
                 msleep(3);
                 read_reg_value = Afe_Get_Reg(AFE_SIDETONE_CON0);
-                new_write_ready = (read_reg_value >> 29) & 0x1;
-                if (new_write_ready != old_write_ready) // flip => ok
+                new_write_ready = (read_reg_value >> 29) & 0x1; if (new_write_ready != old_write_ready) // flip => ok
                 {
                     break;
                 }
@@ -1824,14 +1779,12 @@ bool EnableSideToneFilter(bool stf_on)
 #endif
     }
     AudDrv_Clk_Off();
-    printk("-%s(), stf_on = %d\n", __FUNCTION__, stf_on);
     return true;
 }
 
 
 bool SetMemoryPathEnable(uint32 Aud_block, bool bEnable)
 {
-    printk("%s Aud_block = %d bEnable = %d \n", __func__, Aud_block, bEnable);
     if (Aud_block >= Soc_Aud_Digital_Block_NUM_OF_DIGITAL_BLOCK)
     {
         return false;
@@ -1858,7 +1811,6 @@ bool SetMemoryPathEnable(uint32 Aud_block, bool bEnable)
             printk("warning , user count <0 \n");
         }
     }
-    printk("%s Aud_block = %d mAudioMEMIF[Aud_block]->mUserCount = %d \n", __func__, Aud_block, mAudioMEMIF[Aud_block]->mUserCount);
 
     if (Aud_block  > Soc_Aud_Digital_Block_NUM_OF_MEM_INTERFACE)
     {
@@ -1888,7 +1840,6 @@ bool GetMemoryPathEnable(uint32 Aud_block)
 
 bool SetI2SDacEnable(bool bEnable)
 {
-    printk("%s bEnable = %d", __func__, bEnable);
     if (bEnable)
     {
         Afe_Set_Reg(AFE_ADDA_DL_SRC2_CON0, bEnable, 0x01);
@@ -1931,13 +1882,11 @@ bool checkUplinkMEMIfStatus()
 
 bool SetHDMIChannels(uint32 Channels)
 {
-    printk("+%s(), not supported!!!\n", __func__);
     return true;
 }
 
 bool SetHDMIEnable(bool bEnable)
 {
-    printk("+%s(), not supported!!!\n", __func__);
     return true;
 }
 
@@ -1998,7 +1947,6 @@ bool SetIrqMcuSampleRate(uint32  Irqmode, uint32 SampleRate)
 
 bool SetIrqMcuCounter(uint32 Irqmode, uint32 Counter)
 {
-    //printk(" %s Irqmode = %d Counter = %d ", __func__, Irqmode, Counter);
     uint32 CurrentCount = 0;
     switch (Irqmode)
     {
@@ -2016,7 +1964,6 @@ bool SetIrqMcuCounter(uint32 Irqmode, uint32 Counter)
             }
             else if ((Counter < CurrentCount))
             {
-                printk("update counter latency CurrentCount = %d Counter = %d", CurrentCount, Counter);
                 Afe_Set_Reg(AFE_IRQ_MCU_CNT2, Counter, 0xffffffff);
             }
             else
@@ -2085,7 +2032,6 @@ bool Set2ndI2SIn(AudioDigtalI2S *mDigitalI2S)
     Audio_I2S_Adc |= (m2ndI2S->mI2S_WLEN << 1);
     Audio_I2S_Adc |= (m2ndI2S->mI2S_IN_PAD_SEL << 28);
     Audio_I2S_Adc |= 1 << 31;//Default enable phase_shift_fix for better quality
-    printk("Set2ndI2SIn Audio_I2S_Adc= 0x%x", Audio_I2S_Adc);
     Afe_Set_Reg(AFE_I2S_CON, Audio_I2S_Adc, 0xfffffffe);
     if (!m2ndI2S->mI2S_SLAVE)
     {
@@ -2100,7 +2046,6 @@ bool Set2ndI2SIn(AudioDigtalI2S *mDigitalI2S)
 
 bool Set2ndI2SInEnable(bool bEnable)
 {
-    printk("Set2ndI2SInEnable bEnable = %d", bEnable);
     m2ndI2S->mI2S_EN = bEnable;
     Afe_Set_Reg(AFE_I2S_CON, bEnable, 0x1);
     mAudioMEMIF[Soc_Aud_Digital_Block_I2S_IN_2]->mState = bEnable;
@@ -2109,7 +2054,6 @@ bool Set2ndI2SInEnable(bool bEnable)
 
 bool SetI2SASRCConfig(bool bIsUseASRC, unsigned int dToSampleRate)
 {
-    printk("+%s() bIsUseASRC [%d] dToSampleRate [%d]\n", __FUNCTION__, bIsUseASRC, dToSampleRate);
     if (true == bIsUseASRC)
     {
         BUG_ON(!(dToSampleRate == 44100 || dToSampleRate == 48000));
@@ -2234,7 +2178,6 @@ bool SetHDMIMCLK()
     uint32 mclksamplerate = mHDMIOutput->mSampleRate * 256;
     uint32 hdmi_APll = GetHDMIApLLSource();
     uint32 hdmi_mclk_div = 0;
-    printk("%s \n", __func__);
     if (hdmi_APll == APLL_SOURCE_24576)
     {
         hdmi_APll = 24576000;
@@ -2243,10 +2186,8 @@ bool SetHDMIMCLK()
     {
         hdmi_APll = 22579200;
     }
-    printk("%s hdmi_mclk_div = %d mclksamplerate = %d\n", __func__, hdmi_mclk_div, mclksamplerate);
     hdmi_mclk_div = (hdmi_APll / mclksamplerate / 2) - 1;
     mHDMIOutput->mHdmiMckDiv = hdmi_mclk_div;
-    printk("%s hdmi_mclk_div = %d\n", __func__, hdmi_mclk_div);
     Afe_Set_Reg(FPGA_CFG1, hdmi_mclk_div << 24, 0x3f000000);
 
     SetCLkMclk(Soc_Aud_I2S3, mHDMIOutput->mSampleRate);
@@ -2256,24 +2197,19 @@ bool SetHDMIMCLK()
 bool SetHDMIBCLK()
 {
     mHDMIOutput->mBckSamplerate = mHDMIOutput->mSampleRate * mHDMIOutput->mChannels;
-    printk("%s mBckSamplerate = %d mSampleRate = %d mChannels = %d\n", __func__, mHDMIOutput->mBckSamplerate, mHDMIOutput->mSampleRate , mHDMIOutput->mChannels);
     mHDMIOutput->mBckSamplerate *= (mHDMIOutput->mI2S_WLEN + 1) * 16;
-    printk("%s mBckSamplerate = %d mApllSamplerate = %d\n", __func__, mHDMIOutput->mBckSamplerate, mHDMIOutput->mApllSamplerate);
     mHDMIOutput->mHdmiBckDiv = (mHDMIOutput->mApllSamplerate / mHDMIOutput->mBckSamplerate / 2) - 1;
-    printk("%s mHdmiBckDiv = %d\n", __func__, mHDMIOutput->mHdmiBckDiv);
     Afe_Set_Reg(FPGA_CFG1, (mHDMIOutput->mHdmiBckDiv) << 16, 0x00ff0000);
     return true;
 }
 
 uint32 GetHDMIApLLSource()
 {
-    printk("%s ApllSource = %d \n", __func__, mHDMIOutput->mApllSource);
     return mHDMIOutput->mApllSource ;
 }
 
 bool SetHDMIApLL(uint32 ApllSource)
 {
-    printk("%s ApllSource = %d", __func__, ApllSource);
     if (ApllSource == APLL_SOURCE_24576)
     {
         Afe_Set_Reg(FPGA_CFG1, 0 << 31, 1 << 31);
@@ -2291,7 +2227,6 @@ bool SetHDMIApLL(uint32 ApllSource)
 
 bool SetHDMIdatalength(uint32 length)
 {
-    printk("%s length = %d\n ", __func__, length);
     mHDMIOutput->mI2S_WLEN = length;
     return true;
 }
@@ -2300,7 +2235,6 @@ bool SetHDMIsamplerate(uint32 samplerate)
 {
     uint32 SampleRateinedx = SampleRateTransform(samplerate);
     mHDMIOutput->mSampleRate = samplerate;
-    printk("%s samplerate = %d \n", __func__, samplerate);
     switch (SampleRateinedx)
     {
         case Soc_Aud_I2S_SAMPLERATE_I2S_8K:
@@ -2344,47 +2278,39 @@ bool SetHDMIsamplerate(uint32 samplerate)
 
 bool SetTDMLrckWidth(uint32 cycles)
 {
-    printk("%s mt6572 not support!!!\n", __func__);
     return true;
 }
 
 bool SetTDMbckcycle(uint32 cycles)
 {
-    printk("%s mt6572 not support!!!\n", __func__);
     return true;
 }
 
 bool SetTDMChannelsSdata(uint32 channels)
 {
-    printk("%s mt6572 not support!!!\n", __func__);
     return true;
 }
 
 bool SetTDMDatalength(uint32 length)
 {
-    printk("%s mt6572 not support!!!\n", __func__);
     return true;
 }
 
 bool SetTDMI2Smode(uint32 mode)
 {
-    printk("%s mt6572 not support!!!\n", __func__);
     return true;
 }
 
 bool SetTDMLrckInverse(bool enable)
 {
-    printk("%s mt6572 not support!!!\n", __func__);
     return true;
 }
 bool SetTDMBckInverse(bool enable)
 {
-    printk("%s mt6572 not support!!!\n", __func__);
     return true;
 }
 bool SetTDMEnable(bool enable)
 {
-    printk("%s mt6572 not support!!!\n", __func__);
     return true;
 }
 
@@ -2403,7 +2329,6 @@ int AudDrv_Allocate_DL1_Buffer(struct device *pDev, kal_uint32 Afe_Buf_Length)
     kal_uint32 u4PhyAddr = 0;
 #endif
     AFE_BLOCK_T *pblock;
-    printk("%s Afe_Buf_Length = %d \n ", __func__, Afe_Buf_Length);
 
     pblock = &(AFE_Mem_Control_context[Soc_Aud_Digital_Block_MEM_DL1]->rBlock);
     pblock->u4BufferSize = Afe_Buf_Length;
@@ -2411,7 +2336,6 @@ int AudDrv_Allocate_DL1_Buffer(struct device *pDev, kal_uint32 Afe_Buf_Length)
 #ifdef AUDIO_MEMORY_SRAM
     if (Afe_Buf_Length > AFE_INTERNAL_SRAM_SIZE)
     {
-        PRINTK_AUDDRV("Afe_Buf_Length > AUDDRV_DL1_MAX_BUFFER_LENGTH \n");
         return -1;
     }
 #endif
@@ -2423,24 +2347,19 @@ int AudDrv_Allocate_DL1_Buffer(struct device *pDev, kal_uint32 Afe_Buf_Length)
         pblock->pucPhysBufAddr = u4PhyAddr;
 
 #ifdef AUDIO_MEM_IOREMAP
-        PRINTK_AUDDRV("AudDrv_Allocate_DL1_Buffer length AUDIO_MEM_IOREMAP  = %d\n",
-                      Afe_Buf_Length);
         pblock->pucVirtBufAddr = (kal_uint8 *)Get_Afe_SramBase_Pointer();
 #else
         pblock->pucVirtBufAddr = AFE_INTERNAL_SRAM_VIR_BASE;
 #endif
 
 #else
-        PRINTK_AUDDRV("AudDrv_Allocate_DL1_Buffer use dram");
         pblock->pucVirtBufAddr = dma_alloc_coherent(pDev, pblock->u4BufferSize, &pblock->pucPhysBufAddr, GFP_KERNEL);
 #endif
     }
-    PRINTK_AUDDRV("AudDrv_Allocate_DL1_Buffer Afe_Buf_Length = %dpucVirtBufAddr = %p\n", Afe_Buf_Length, pblock->pucVirtBufAddr);
 
     // check 32 bytes align
     if ((pblock->pucPhysBufAddr & 0x1f) != 0)
     {
-        PRINTK_AUDDRV("[Auddrv] AudDrv_Allocate_DL1_Buffer is not aligned (0x%x) \n", pblock->pucPhysBufAddr);
     }
 
     pblock->u4SampleNumMask = 0x001f;  // 32 byte align
@@ -2470,13 +2389,10 @@ int AudDrv_Allocate_mem_Buffer(struct device *pDev, Soc_Aud_Digital_Block  MemBl
         case Soc_Aud_Digital_Block_MEM_VUL_DATA2:
         case Soc_Aud_Digital_Block_MEM_HDMI:
         {
-            printk("%s MemBlock =%d Buffer_length = %d\n ", __func__, MemBlock, Buffer_length);
             if (Audio_dma_buf[MemBlock]  != NULL)
             {
-                printk("AudDrv_Allocate_mem_Buffer MemBlock = %d dma_alloc_coherent\n", MemBlock);
                 if (Audio_dma_buf[MemBlock] ->area == NULL)
                 {
-                    printk("dma_alloc_coherent\n");
                     Audio_dma_buf[MemBlock] ->area = dma_alloc_coherent(pDev, Buffer_length,
                                                                         &Audio_dma_buf[MemBlock] ->addr, GFP_KERNEL);
                     if (Audio_dma_buf[MemBlock] ->area)
@@ -2484,19 +2400,15 @@ int AudDrv_Allocate_mem_Buffer(struct device *pDev, Soc_Aud_Digital_Block  MemBl
                         Audio_dma_buf[MemBlock] ->bytes = Buffer_length;
                     }
                 }
-                printk("area = %p \n", Audio_dma_buf[MemBlock] ->area);
             }
         }
         break;
         case Soc_Aud_Digital_Block_MEM_VUL:
         {
-            printk("%s MemBlock =%d Buffer_length = %d\n ", __func__, MemBlock, Buffer_length);
             if (Audio_dma_buf[MemBlock]  != NULL)
             {
-                printk("AudDrv_Allocate_mem_Buffer MemBlock = %d dma_alloc_coherent\n", MemBlock);
                 if (Audio_dma_buf[MemBlock] ->area == NULL)
                 {
-                    printk("dma_alloc_coherent\n");
                     Audio_dma_buf[MemBlock] ->area = dma_alloc_coherent(pDev, Buffer_length,
                                                                         &Audio_dma_buf[MemBlock] ->addr, GFP_KERNEL);
                     if (Audio_dma_buf[MemBlock] ->area)
@@ -2504,14 +2416,12 @@ int AudDrv_Allocate_mem_Buffer(struct device *pDev, Soc_Aud_Digital_Block  MemBl
                         Audio_dma_buf[MemBlock] ->bytes = Buffer_length;
                     }
                 }
-                printk("area = %p \n", Audio_dma_buf[MemBlock] ->area);
             }
             break;
         }
         case Soc_Aud_Digital_Block_MEM_I2S:
-            printk("currently not support \n");
         default:
-            printk("%s not support \n", __func__);
+         break;
     }
     return true;
 }
@@ -2524,7 +2434,6 @@ AFE_MEM_CONTROL_T  *Get_Mem_ControlT(Soc_Aud_Digital_Block MemBlock)
     }
     else
     {
-        printk("%s error \n", __func__);
         return NULL;
     }
 }
@@ -2534,12 +2443,10 @@ bool SetMemifSubStream(Soc_Aud_Digital_Block MemBlock , struct snd_pcm_substream
     substreamList *head;
     substreamList *temp = NULL;
     unsigned long flags;
-    printk("+%s MemBlock = %d substream = %p \n ", __func__, MemBlock, substream);
     spin_lock_irqsave(&AFE_Mem_Control_context[MemBlock]->substream_lock, flags);
     head = AFE_Mem_Control_context[MemBlock]->substreamL;
     if (head == NULL) // frst item is NULL
     {
-        //printk("%s head == NULL\n ", __func__);
         temp = kzalloc(sizeof(substreamList), GFP_ATOMIC);
         temp->substream = substream;
         temp->next = NULL;
@@ -2561,7 +2468,6 @@ bool SetMemifSubStream(Soc_Aud_Digital_Block MemBlock , struct snd_pcm_substream
     AFE_Mem_Control_context[MemBlock]->MemIfNum++;
 
     spin_unlock_irqrestore(&AFE_Mem_Control_context[MemBlock]->substream_lock, flags);
-    printk("-%s MemBlock = %d \n ", __func__, MemBlock);
     //DumpMemifSubStream();
     return true;
 }
@@ -2580,7 +2486,6 @@ bool ClearMemBlock(Soc_Aud_Digital_Block MemBlock)
     }
     else
     {
-        printk("%s error \n", __func__);
         return NULL;
     }
     return true;
@@ -2595,7 +2500,6 @@ bool RemoveMemifSubStream(Soc_Aud_Digital_Block MemBlock, struct snd_pcm_substre
 
     if (AFE_Mem_Control_context[MemBlock]->MemIfNum == 0)
     {
-        printk("%s AFE_Mem_Control_context[%d]->MemIfNum == 0 \n ", __func__, MemBlock);
     }
     else
     {
@@ -2603,7 +2507,6 @@ bool RemoveMemifSubStream(Soc_Aud_Digital_Block MemBlock, struct snd_pcm_substre
     }
 
     head = AFE_Mem_Control_context[MemBlock]->substreamL;
-    printk("+ %s MemBlock = %d substream = %p \n ", __func__, MemBlock, substream);
     if (head == NULL) // no object
     {
         // do nothing
@@ -2613,7 +2516,6 @@ bool RemoveMemifSubStream(Soc_Aud_Digital_Block MemBlock, struct snd_pcm_substre
         // condition for first item hit
         if (head->substream == substream)
         {
-            //printk("%s head->substream = %p \n ", __func__, head->substream);
             AFE_Mem_Control_context[MemBlock]->substreamL = head->next;
 
             head->substream = NULL;
@@ -2648,11 +2550,9 @@ bool RemoveMemifSubStream(Soc_Aud_Digital_Block MemBlock, struct snd_pcm_substre
     }
     else
     {
-        printk("%s substreram is not NULL MemBlock = %d \n", __func__, MemBlock);
     }
 
     spin_unlock_irqrestore(&AFE_Mem_Control_context[MemBlock]->substream_lock, flags);
-    printk("- %s MemBlock = %d \n ", __func__, MemBlock);
     return true;
 }
 
@@ -2695,7 +2595,6 @@ void Auddrv_AWB_Interrupt_Handler(void)
 
     if (Mem_Block == NULL)
     {
-        printk("-%s()Mem_Block == NULL  \n ", __func__);
         return;
     }
 
@@ -2703,9 +2602,7 @@ void Auddrv_AWB_Interrupt_Handler(void)
 
     if (GetMemoryPathEnable(Soc_Aud_Digital_Block_MEM_AWB) == false)
     {
-        //printk("%s(), GetMemoryPathEnable(Soc_Aud_Digital_Block_MEM_AWB) == false, return\n ", __func__);
         spin_unlock_irqrestore(&Mem_Block->substream_lock, flags);
-        printk("-%s(), GetMemoryPathEnable(Soc_Aud_Digital_Block_MEM_AWB) = %d\n ", __func__, GetMemoryPathEnable(Soc_Aud_Digital_Block_MEM_AWB));
         return;
     }
 
@@ -2716,8 +2613,6 @@ void Auddrv_AWB_Interrupt_Handler(void)
     HW_Cur_ReadIdx = Afe_Get_Reg(AFE_AWB_CUR);
     #endif
     
-    PRINTK_AUD_AWB("+Auddrv_AWB_Interrupt_Handler HW_Cur_ReadIdx = 0x%x\n ", HW_Cur_ReadIdx);
-
     if (CheckSize(HW_Cur_ReadIdx))
     {
         spin_unlock_irqrestore(&Mem_Block->substream_lock, flags);
@@ -2730,7 +2625,6 @@ void Auddrv_AWB_Interrupt_Handler(void)
     }
 
     MaxCopySize = Get_Mem_MaxCopySize(Soc_Aud_Digital_Block_MEM_AWB);
-    PRINTK_AUD_AWB("1  mBlock = %p MaxCopySize = 0x%x u4BufferSize = 0x%x \n", mBlock, MaxCopySize, mBlock->u4BufferSize);
     if (MaxCopySize)
     {
         if (MaxCopySize > mBlock->u4BufferSize)
@@ -2741,8 +2635,6 @@ void Auddrv_AWB_Interrupt_Handler(void)
         mBlock->u4DMAReadIdx +=  MaxCopySize;
         mBlock->u4DMAReadIdx %=  mBlock->u4BufferSize;
         Clear_Mem_CopySize(Soc_Aud_Digital_Block_MEM_AWB);
-        PRINTK_AUD_AWB("Auddrv_AWB_Interrupt_Handler update read pointer u4DMAReadIdx:0x%x, u4WriteIdx:0x%x, pucPhysBufAddr:0x%x mBlock->u4MaxCopySize =0x%x\n",
-                       mBlock->u4DMAReadIdx, mBlock->u4WriteIdx, mBlock->pucPhysBufAddr, mBlock->u4MaxCopySize);
     }
 
     // HW already fill in
@@ -2752,17 +2644,12 @@ void Auddrv_AWB_Interrupt_Handler(void)
         Hw_Get_bytes += mBlock->u4BufferSize;
     }
 
-    PRINTK_AUD_AWB("Auddrv_AWB_Interrupt_Handler Hw_Get_bytes:0x%x, HW_Cur_ReadIdx:0x%x, u4DMAReadIdx:0x%x, u4WriteIdx:0x%x, pucPhysBufAddr:0x%x mBlock->u4MaxCopySize =0x%x mBlock->u4DataRemained = 0x%x\n",
-                   Hw_Get_bytes, HW_Cur_ReadIdx, mBlock->u4DMAReadIdx, mBlock->u4WriteIdx, mBlock->pucPhysBufAddr, mBlock->u4MaxCopySize, mBlock->u4DataRemained);
-
     mBlock->u4WriteIdx  += Hw_Get_bytes;
     mBlock->u4WriteIdx  %= mBlock->u4BufferSize;
     mBlock->u4DataRemained += Hw_Get_bytes;
     // buffer overflow
     if (mBlock->u4DataRemained > mBlock->u4BufferSize)
     {
-        printk("Auddrv_AWB_Interrupt_Handler buffer overflow u4DMAReadIdx:%x, u4WriteIdx:%x, u4DataRemained:%x, u4BufferSize:%x \n",
-               mBlock->u4DMAReadIdx, mBlock->u4WriteIdx, mBlock->u4DataRemained, mBlock->u4BufferSize);
         mBlock->u4DataRemained %= mBlock->u4BufferSize;
     }
     Mem_Block->interruptTrigger = 1;
@@ -2780,7 +2667,6 @@ void Auddrv_AWB_Interrupt_Handler(void)
 
             if (temp_cnt != Mem_Block->MemIfNum)
             {
-                printk("%s() temp_cnt = %u, Mem_Block->MemIfNum = %u\n", __func__, temp_cnt, Mem_Block->MemIfNum);
                 temp = Mem_Block->substreamL;
             }
         }
@@ -2790,7 +2676,6 @@ void Auddrv_AWB_Interrupt_Handler(void)
         }
     }
 
-    PRINTK_AUD_AWB("-Auddrv_AWB_Interrupt_Handler u4DMAReadIdx:0x%x, u4WriteIdx:0x%x mBlock->u4DataRemained = 0x%x \n", mBlock->u4DMAReadIdx, mBlock->u4WriteIdx, mBlock->u4DataRemained);
     spin_unlock_irqrestore(&Mem_Block->substream_lock, flags);
 }
 
@@ -2812,7 +2697,6 @@ void Auddrv_DAI_Interrupt_Handler(void)
     spin_lock_irqsave(&Mem_Block->substream_lock, flags);
     if (GetMemoryPathEnable(Soc_Aud_Digital_Block_MEM_DAI) == false)
     {
-        //printk("%s(), GetMemoryPathEnable(Soc_Aud_Digital_Block_MEM_DAI) == false, return\n ", __func__);
         spin_unlock_irqrestore(&Mem_Block->substream_lock, flags);
         return;
     }
@@ -2892,7 +2776,6 @@ void Auddrv_DL1_Interrupt_Handler(void)  // irq1 ISR handler
     spin_lock_irqsave(&Mem_Block->substream_lock, flags);
     if (GetMemoryPathEnable(Soc_Aud_Digital_Block_MEM_DL1) == false)
     {
-        //printk("%s(), GetMemoryPathEnable(Soc_Aud_Digital_Block_MEM_DL1) == false, return\n ", __func__);
         spin_unlock_irqrestore(&Mem_Block->substream_lock, flags);
         return;
     }
@@ -2900,14 +2783,10 @@ void Auddrv_DL1_Interrupt_Handler(void)  // irq1 ISR handler
     HW_Cur_ReadIdx = Afe_Get_Reg(AFE_DL1_CUR);
     if (HW_Cur_ReadIdx == 0)
     {
-        PRINTK_AUDDRV("[Auddrv] HW_Cur_ReadIdx ==0 \n");
         HW_Cur_ReadIdx = Afe_Block->pucPhysBufAddr;
     }
     HW_memory_index = (HW_Cur_ReadIdx - Afe_Block->pucPhysBufAddr);
 
-    PRINTK_AUD_DL1("[Auddrv] HW_Cur_ReadIdx=0x%x HW_memory_index = 0x%x Afe_Block->pucPhysBufAddr = 0x%x\n",
-                   HW_Cur_ReadIdx, HW_memory_index, Afe_Block->pucPhysBufAddr);
-
 
     // get hw consume bytes
     if (HW_memory_index > Afe_Block->u4DMAReadIdx)
@@ -2928,25 +2807,17 @@ void Auddrv_DL1_Interrupt_Handler(void)  // irq1 ISR handler
         printk("[Auddrv] DMA address is not aligned 32 bytes \n");
     }*/
 
-    PRINTK_AUD_DL1("+Auddrv_DL1_Interrupt_Handler ReadIdx:%x WriteIdx:%x, DataRemained:%x, Afe_consumed_bytes:%x HW_memory_index = %x \n",
-                   Afe_Block->u4DMAReadIdx, Afe_Block->u4WriteIdx, Afe_Block->u4DataRemained, Afe_consumed_bytes, HW_memory_index);
-
     if (Afe_Block->u4DataRemained < Afe_consumed_bytes || Afe_Block->u4DataRemained <= 0 || Afe_Block->u4DataRemained  > Afe_Block->u4BufferSize)
     {
-        printk("DL_Handling underflow \n");
     }
     else
     {
 
-        PRINTK_AUD_DL1("+DL_Handling normal ReadIdx:%x ,DataRemained:%x, WriteIdx:%x \n",
-                       Afe_Block->u4DMAReadIdx, Afe_Block->u4DataRemained, Afe_Block->u4WriteIdx);
         Afe_Block->u4DataRemained -= Afe_consumed_bytes;
         Afe_Block->u4DMAReadIdx += Afe_consumed_bytes;
         Afe_Block->u4DMAReadIdx %= Afe_Block->u4BufferSize;
     }
     AFE_Mem_Control_context[Soc_Aud_Digital_Block_MEM_DL1]->interruptTrigger = 1 ;
-    PRINTK_AUD_DL1("-DL_Handling normal ReadIdx:%x ,DataRemained:%x, WriteIdx:%x \n",
-                   Afe_Block->u4DMAReadIdx, Afe_Block->u4DataRemained, Afe_Block->u4WriteIdx);
 
     if (Mem_Block->substreamL != NULL)
     {
@@ -2975,7 +2846,6 @@ void Auddrv_DL2_Interrupt_Handler(void)  // irq2 ISR handler
     spin_lock_irqsave(&Mem_Block->substream_lock, flags);
     if (GetMemoryPathEnable(Soc_Aud_Digital_Block_MEM_DL2) == false)
     {
-        PRINTK_AUD_DL2("%s(), GetMemoryPathEnable(Soc_Aud_Digital_Block_MEM_DL2) == false, return\n ", __func__);
         spin_unlock_irqrestore(&Mem_Block->substream_lock, flags);
         return;
     }
@@ -2983,15 +2853,10 @@ void Auddrv_DL2_Interrupt_Handler(void)  // irq2 ISR handler
     HW_Cur_ReadIdx = Afe_Get_Reg(AFE_DL2_CUR);
     if (HW_Cur_ReadIdx == 0)
     {
-        PRINTK_AUD_DL2("[Auddrv] DL2 HW_Cur_ReadIdx ==0 \n");
         HW_Cur_ReadIdx = Afe_Block->pucPhysBufAddr;
     }
     HW_memory_index = (HW_Cur_ReadIdx - Afe_Block->pucPhysBufAddr);
 
-    PRINTK_AUD_DL2("[Auddrv] DL2 HW_Cur_ReadIdx=0x%x HW_memory_index = 0x%x Afe_Block->pucPhysBufAddr = 0x%x\n",
-                   HW_Cur_ReadIdx, HW_memory_index, Afe_Block->pucPhysBufAddr);
-
-
     // get hw consume bytes
     if (HW_memory_index > Afe_Block->u4DMAReadIdx)
     {
@@ -3012,25 +2877,16 @@ void Auddrv_DL2_Interrupt_Handler(void)  // irq2 ISR handler
         printk("[Auddrv] DMA address is not aligned 32 bytes \n");
     }*/
 
-    PRINTK_AUD_DL2("+Auddrv_DL2_Interrupt_Handler ReadIdx:%x WriteIdx:%x, DataRemained:%x, Afe_consumed_bytes:%x HW_memory_index = %x \n",
-                   Afe_Block->u4DMAReadIdx, Afe_Block->u4WriteIdx, Afe_Block->u4DataRemained, Afe_consumed_bytes, HW_memory_index);
-
     if (Afe_Block->u4DataRemained < Afe_consumed_bytes || Afe_Block->u4DataRemained <= 0 || Afe_Block->u4DataRemained  > Afe_Block->u4BufferSize)
     {
-        printk("DL2_Handling underflow \n");
     }
     else
     {
-
-        PRINTK_AUD_DL2("+DL2_Handling normal ReadIdx:%x ,DataRemained:%x, WriteIdx:%x \n",
-                       Afe_Block->u4DMAReadIdx, Afe_Block->u4DataRemained, Afe_Block->u4WriteIdx);
         Afe_Block->u4DataRemained -= Afe_consumed_bytes;
         Afe_Block->u4DMAReadIdx += Afe_consumed_bytes;
         Afe_Block->u4DMAReadIdx %= Afe_Block->u4BufferSize;
     }
     AFE_Mem_Control_context[Soc_Aud_Digital_Block_MEM_DL2]->interruptTrigger = 1 ;
-    PRINTK_AUD_DL2("-DL2_Handling normal ReadIdx:%x ,DataRemained:%x, WriteIdx:%x \n",
-                   Afe_Block->u4DMAReadIdx, Afe_Block->u4DataRemained, Afe_Block->u4WriteIdx);
 
     if (Mem_Block->substreamL != NULL)
     {
@@ -3047,7 +2903,6 @@ void Auddrv_DL2_Interrupt_Handler(void)  // irq2 ISR handler
 
 struct snd_dma_buffer *Get_Mem_Buffer(Soc_Aud_Digital_Block MemBlock)
 {
-    printk("%s MemBlock = %d\n", __func__, MemBlock);
     switch (MemBlock)
     {
         case Soc_Aud_Digital_Block_MEM_DL1:
@@ -3069,7 +2924,6 @@ struct snd_dma_buffer *Get_Mem_Buffer(Soc_Aud_Digital_Block MemBlock)
         case Soc_Aud_Digital_Block_MEM_HDMI:
             return Audio_dma_buf[MemBlock];
         case Soc_Aud_Digital_Block_MEM_I2S:
-            printk("currently not support \n");
             break;
         default:
             break;
@@ -3088,14 +2942,12 @@ void Auddrv_UL1_Interrupt_Handler(void)
 
     if (Mem_Block == NULL)
     {
-        printk("Mem_Block == NULL  \n ");
         return;
     }
 
     spin_lock_irqsave(&Mem_Block->substream_lock, flags);
     if (GetMemoryPathEnable(Soc_Aud_Digital_Block_MEM_VUL) == false)
     {
-        //printk("%s(), GetMemoryPathEnable(Soc_Aud_Digital_Block_MEM_VUL) == false, return\n ", __func__);
         spin_unlock_irqrestore(&Mem_Block->substream_lock, flags);
         return;
     }
@@ -3108,7 +2960,6 @@ void Auddrv_UL1_Interrupt_Handler(void)
     HW_Cur_ReadIdx = Afe_Get_Reg(AFE_VUL_CUR);
     #endif
 
-    PRINTK_AUD_UL1("+Auddrv_UL1_Interrupt_Handler HW_Cur_ReadIdx = 0x%x\n ", HW_Cur_ReadIdx);
     if (CheckSize(HW_Cur_ReadIdx))
     {
         spin_unlock_irqrestore(&Mem_Block->substream_lock, flags);
@@ -3127,9 +2978,6 @@ void Auddrv_UL1_Interrupt_Handler(void)
         Hw_Get_bytes += mBlock->u4BufferSize;
     }
 
-    PRINTK_AUD_UL1("Auddrv_UL1_Interrupt_Handler Hw_Get_bytes:%x, HW_Cur_ReadIdx:%x, u4DMAReadIdx:%x, u4WriteIdx:0x%x, pucPhysBufAddr:%x Mem_Block->MemIfNum = %d \n",
-                   Hw_Get_bytes, HW_Cur_ReadIdx, mBlock->u4DMAReadIdx, mBlock->u4WriteIdx, mBlock->pucPhysBufAddr, Mem_Block->MemIfNum);
-
     mBlock->u4WriteIdx  += Hw_Get_bytes;
     mBlock->u4WriteIdx  %= mBlock->u4BufferSize;
     mBlock->u4DataRemained += Hw_Get_bytes;
@@ -3137,8 +2985,6 @@ void Auddrv_UL1_Interrupt_Handler(void)
     // buffer overflow
     if (mBlock->u4DataRemained > mBlock->u4BufferSize)
     {
-        printk("Auddrv_UL1_Interrupt_Handler buffer overflow u4DMAReadIdx:%x, u4WriteIdx:%x, u4DataRemained:%x, u4BufferSize:%x \n",
-               mBlock->u4DMAReadIdx, mBlock->u4WriteIdx, mBlock->u4DataRemained, mBlock->u4BufferSize);
     }
     AFE_Mem_Control_context[Soc_Aud_Digital_Block_MEM_VUL]->interruptTrigger = 1;
 
@@ -3152,7 +2998,6 @@ void Auddrv_UL1_Interrupt_Handler(void)
         }
     }
     
-    PRINTK_AUD_UL1("-Auddrv_UL1_Interrupt_Handler u4DMAReadIdx:0x%x, u4WriteIdx:0x%x mBlock->u4DataRemained = 0x%x \n", mBlock->u4DMAReadIdx, mBlock->u4WriteIdx, mBlock->u4DataRemained);
     spin_unlock_irqrestore(&Mem_Block->substream_lock, flags);
 }
 
@@ -3162,14 +3007,12 @@ void Clear_Mem_CopySize(Soc_Aud_Digital_Block MemBlock)
     //unsigned long flags;
     //spin_lock_irqsave(&AFE_Mem_Control_context[MemBlock]->substream_lock, flags);
     head = AFE_Mem_Control_context[MemBlock]->substreamL;
-    //printk("+%s MemBlock = %d \n ", __func__, MemBlock);
     while (head != NULL) // frst item is NULL
     {
         head->u4MaxCopySize = 0;
         head = head->next;
     }
     //spin_unlock_irqrestore(&AFE_Mem_Control_context[MemBlock]->substream_lock, flags);
-    //printk("-%s MemBlock = %d \n ", __func__, MemBlock);
 }
 
 kal_uint32 Get_Mem_CopySizeByStream(Soc_Aud_Digital_Block MemBlock, struct snd_pcm_substream *substream)
@@ -3179,7 +3022,6 @@ kal_uint32 Get_Mem_CopySizeByStream(Soc_Aud_Digital_Block MemBlock, struct snd_p
     kal_uint32 MaxCopySize;
     spin_lock_irqsave(&AFE_Mem_Control_context[MemBlock]->substream_lock, flags);
     head = AFE_Mem_Control_context[MemBlock]->substreamL;
-    //printk("+%s MemBlock = %d \n ", __func__, MemBlock);
     while (head != NULL) // frst item is NULL
     {
         if (head->substream == substream)
@@ -3191,7 +3033,6 @@ kal_uint32 Get_Mem_CopySizeByStream(Soc_Aud_Digital_Block MemBlock, struct snd_p
         head = head->next;
     }
     spin_unlock_irqrestore(&AFE_Mem_Control_context[MemBlock]->substream_lock, flags);
-    //printk("-%s MemBlock = %d \n ", __func__, MemBlock);
     return 0;
 }
 
@@ -3203,7 +3044,6 @@ kal_uint32 Get_Mem_MaxCopySize(Soc_Aud_Digital_Block MemBlock)
     //spin_lock_irqsave(&AFE_Mem_Control_context[MemBlock]->substream_lock, flags);
     head = AFE_Mem_Control_context[MemBlock]->substreamL;
     MaxCopySize = 0;
-    //printk("+%s MemBlock = %d \n ", __func__, MemBlock);
     while (head != NULL) // frst item is NULL
     {
         if (MaxCopySize < head->u4MaxCopySize)
@@ -3213,7 +3053,6 @@ kal_uint32 Get_Mem_MaxCopySize(Soc_Aud_Digital_Block MemBlock)
         head = head->next;
     }
     //spin_unlock_irqrestore(&AFE_Mem_Control_context[MemBlock]->substream_lock, flags);
-    //printk("-%s MemBlock = %d \n ", __func__, MemBlock);
     return MaxCopySize;
 }
 
@@ -3223,7 +3062,6 @@ void Set_Mem_CopySizeByStream(Soc_Aud_Digital_Block MemBlock, struct snd_pcm_sub
     unsigned long flags;
     spin_lock_irqsave(&AFE_Mem_Control_context[MemBlock]->substream_lock, flags);
     head = AFE_Mem_Control_context[MemBlock]->substreamL;
-    //printk("+%s MemBlock = %d \n ", __func__, MemBlock);
     while (head != NULL) // frst item is NULL
     {
         if (head->substream == substream)
@@ -3234,7 +3072,6 @@ void Set_Mem_CopySizeByStream(Soc_Aud_Digital_Block MemBlock, struct snd_pcm_sub
         head = head->next;
     }
     spin_unlock_irqrestore(&AFE_Mem_Control_context[MemBlock]->substream_lock, flags);
-    //printk("-%s MemBlock = %d \n ", __func__, MemBlock);
 }
 
 void Auddrv_UL2_Interrupt_Handler(void)
@@ -3257,7 +3094,6 @@ void Auddrv_UL2_Interrupt_Handler(void)
     spin_lock_irqsave(&Mem_Block->substream_lock, flags);
     if (GetMemoryPathEnable(Soc_Aud_Digital_Block_MEM_VUL_DATA2) == false)
     {
-        //printk("%s(), GetMemoryPathEnable(Soc_Aud_Digital_Block_MEM_VUL_DATA2) == false, return\n ", __func__);
         spin_unlock_irqrestore(&Mem_Block->substream_lock, flags);
         return;
     }
@@ -3316,7 +3152,6 @@ void Auddrv_UL2_Interrupt_Handler(void)
     }
     spin_unlock_irqrestore(&Mem_Block->substream_lock, flags);
 #else
-    printk("%s,82 no this \n ", __func__);
 #endif    
 }
 
diff --git a/sound/soc/mediatek/mt_soc_audio_6580/mt_soc_codec_63xx.c b/sound/soc/mediatek/mt_soc_audio_6580/mt_soc_codec_63xx.c
index 1d111dc2b..16594fbe4 100755
--- a/sound/soc/mediatek/mt_soc_audio_6580/mt_soc_codec_63xx.c
+++ b/sound/soc/mediatek/mt_soc_audio_6580/mt_soc_codec_63xx.c
@@ -204,10 +204,8 @@ static bool GetULStatus(void)
 static bool mAnaSuspend = false;
 void SetAnalogSuspend(bool bEnable)
 {
-    printk("%s bEnable ==%d mAnaSuspend = %d \n", __func__, bEnable, mAnaSuspend);
     if ((bEnable == true) && (mAnaSuspend == false))
     {
-        Ana_Log_Print();
         SavePowerState();
         if (mCodec_data->mAudio_Ana_DevicePower[AUDIO_ANALOG_DEVICE_OUT_HEADSETL] == true)
         {
@@ -229,12 +227,10 @@ void SetAnalogSuspend(bool bEnable)
             mCodec_data->mAudio_Ana_DevicePower[AUDIO_ANALOG_DEVICE_OUT_SPEAKERL] = false;
             Speaker_Amp_Change(false);
         }
-        Ana_Log_Print();
         mAnaSuspend = true;
     }
     else if ((bEnable == false) && (mAnaSuspend == true))
     {
-        Ana_Log_Print();
         if (mCodec_data->mAudio_BackUpAna_DevicePower[AUDIO_ANALOG_DEVICE_OUT_HEADSETL] == true)
         {
             Audio_Amp_Change(AUDIO_ANALOG_CHANNELS_LEFT1 , true);
@@ -256,7 +252,6 @@ void SetAnalogSuspend(bool bEnable)
             mCodec_data->mAudio_Ana_DevicePower[AUDIO_ANALOG_DEVICE_OUT_SPEAKERL] = false;
         }
         RestorePowerState();
-        Ana_Log_Print();
         mAnaSuspend = false;
     }
 }
@@ -264,7 +259,6 @@ void SetAnalogSuspend(bool bEnable)
 static int audck_buf_Count = 0;
 void audckbufEnable(bool enable)
 {
-    printk("audckbufEnable audck_buf_Count = %d enable = %d\n", audck_buf_Count, enable);
     mutex_lock(&Ana_buf_Ctrl_Mutex);
     if (enable)
     {
@@ -273,10 +267,8 @@ void audckbufEnable(bool enable)
         #ifdef CONFIG_MTK_FPGA
             printk("fpga bypass clk_buf_ctrl(CLK_BUF_AUDIO,true)\n");
         #else
-            printk("+clk_buf_ctrl(CLK_BUF_AUDIO,true)\n");   
             //system 26M clk from RF
             clk_buf_ctrl(CLK_BUF_AUDIO, true);
-            printk("-clk_buf_ctrl(CLK_BUF_AUDIO,true)\n");
         #endif
         }
         audck_buf_Count++;
@@ -289,14 +281,11 @@ void audckbufEnable(bool enable)
             #ifdef CONFIG_MTK_FPGA
             printk("fpga bypass clk_buf_ctrl(CLK_BUF_AUDIO,false)\n");
             #else
-            printk("+clk_buf_ctrl(CLK_BUF_AUDIO,false)\n");
             clk_buf_ctrl(CLK_BUF_AUDIO, false);
-            printk("-clk_buf_ctrl(CLK_BUF_AUDIO,false)\n");
             #endif
         }
         if (audck_buf_Count < 0)
         {
-            printk("audck_buf_Count count <0 \n");
             audck_buf_Count = 0;
         }
     }
@@ -306,14 +295,11 @@ void audckbufEnable(bool enable)
 static int ClsqCount = 0;
 static void ClsqEnable(bool enable)
 {
-    printk("ClsqEnable not support ClsqCount = %d enable = %d \n", ClsqCount, enable);
 }
 
 static int TopCkCount = 0;
 static void Topck_Enable(bool enable)
 {
-    printk("Topck_Enable enable = %d TopCkCount = %d \n", enable, TopCkCount);
-
     mutex_lock(&Ana_Clk_Mutex);
     if (enable == true)
     {
@@ -332,27 +318,21 @@ static void Topck_Enable(bool enable)
         }
         if (TopCkCount <= 0)
         {
-            printk("TopCkCount <0 =%d\n ", TopCkCount);
             TopCkCount = 0;
         }
     }
     mutex_unlock(&Ana_Clk_Mutex);
 
-    printk("Topck_Enable enable-\n");
-
 }
 
 static int NvRegCount = 0;
 static void NvregEnable(bool enable)
 {
-    printk("NvregEnable not support NvRegCount == %d enable = %d \n", NvRegCount, enable);
 }
 
 static int VOW12MCKCount = 0;
 static void VOW12MCK_Enable(bool enable)
 {
-    printk("VOW12MCK_Enable VOW12MCKCount == %d enable = %d \n", VOW12MCKCount, enable);
-    printk("VOW12MCK_Enable enable 82 no this\n");
 }
 
 static void TopCtlChangeTrigger(void)
@@ -377,7 +357,6 @@ void Auddrv_Read_Efuse_HPOffset(void)
     int i = 0, j = 0;
     U32 efusevalue[3];
 
-    printk("Auddrv_Read_Efuse_HPOffset(+)\n");
 #ifdef RAINIER_NEED_CHECK
 
     //1. enable efuse ctrl engine clock
@@ -415,14 +394,12 @@ void Auddrv_Read_Efuse_HPOffset(void)
         while (reg_val == 1)
         {
             ret = pmic_read_interface(0xC1A, &reg_val, 0x1, 0);
-            printk("Auddrv_Read_Efuse_HPOffset polling 0xC1A=0x%x\n", reg_val);
         }
 
         udelay(1000);//Need to delay at least 1ms for 0xC1A and than can read 0xC18
 
         //6. read data
         efusevalue[j] = upmu_get_reg_value(0x0C18);
-        printk("HPoffset : efuse[%d]=0x%x\n", j, efusevalue[j]);
         j++;
     }
 
@@ -439,18 +416,8 @@ void Auddrv_Read_Efuse_HPOffset(void)
     RG_AUDHPLFINETRIM_VAUDP15_SPKHP = ((efusevalue[1] >> 15) & 0x1) + ((efusevalue[2] & 0x1) << 1);
     RG_AUDHPRFINETRIM_VAUDP15_SPKHP = ((efusevalue[2] >> 1) & 0x3);
 
-    printk("RG_AUDHPLTRIM_VAUDP15 = %x\n", RG_AUDHPLTRIM_VAUDP15);
-    printk("RG_AUDHPRTRIM_VAUDP15 = %x\n", RG_AUDHPRTRIM_VAUDP15);
-    printk("RG_AUDHPLFINETRIM_VAUDP15 = %x\n", RG_AUDHPLFINETRIM_VAUDP15);
-    printk("RG_AUDHPRFINETRIM_VAUDP15 = %x\n", RG_AUDHPRFINETRIM_VAUDP15);
-    printk("RG_AUDHPLTRIM_VAUDP15_SPKHP = %x\n", RG_AUDHPLTRIM_VAUDP15_SPKHP);
-    printk("RG_AUDHPRTRIM_VAUDP15_SPKHP = %x\n", RG_AUDHPRTRIM_VAUDP15_SPKHP);
-    printk("RG_AUDHPLFINETRIM_VAUDP15_SPKHP = %x\n", RG_AUDHPLFINETRIM_VAUDP15_SPKHP);
-    printk("RG_AUDHPRFINETRIM_VAUDP15_SPKHP = %x\n", RG_AUDHPRFINETRIM_VAUDP15_SPKHP);
 #else
-    printk("Auddrv_Read_Efuse_HPOffset not support\n");
 #endif
-    printk("Auddrv_Read_Efuse_HPOffset(-)\n");
 }
 
 EXPORT_SYMBOL(Auddrv_Read_Efuse_HPOffset);
@@ -458,7 +425,6 @@ EXPORT_SYMBOL(Auddrv_Read_Efuse_HPOffset);
 #ifdef CONFIG_MTK_SPEAKER
 static void Apply_Speaker_Gain(void)
 {
-    printk("%s Speaker_pga_gain= %d\n", __func__, Speaker_pga_gain);
     int index = Speaker_pga_gain;
     uint32 currentIdx, i;
     
@@ -473,7 +439,6 @@ static void Apply_Speaker_Gain(void)
     }
     
     currentIdx = (Ana_Get_Reg(SPK_CON9) >> 8) & 0xF;
-    printk("%s(), index = %d, currentIdx=%d\n", __func__, index,currentIdx);
     
     if(index > currentIdx)
     {
@@ -493,7 +458,6 @@ static void Apply_Speaker_Gain(void)
             mdelay(3);
         }
     }
-    printk("%s--\n", __func__);
 }
 #else
 static void Apply_Speaker_Gain(void)
@@ -504,7 +468,6 @@ static void Apply_Speaker_Gain(void)
 
 void setHpDcCalibration(unsigned int type, int dc_cali_value)
 {
-    printk("%s ,type=%d, dc_cali_value = %d\n", __func__, type, dc_cali_value);
     if (type == AUDIO_ANALOG_DEVICE_OUT_HEADSETR)
     {
     	/* ABB_AFE_CON3, 1 step is (1/32768) * 1800mV = 0.0549 */
@@ -517,7 +480,6 @@ void setHpDcCalibration(unsigned int type, int dc_cali_value)
     }
     else
     {
-        printk("%s, wrong type, invalid operation\n", __func__);
     }
 }
 
@@ -525,7 +487,6 @@ void setOffsetTrimMux(unsigned int Mux)
 {
 #if 0 //Todo Sam
 
-    printk("%s Mux = %d\n", __func__, Mux);
     Ana_Set_Reg(AUDDEC_ANA_CON3 , Mux << 1, 0xf << 1); // Audio offset trimming buffer mux selection
 #endif
 }
@@ -543,37 +504,31 @@ static int mHprTrimOffset = 2048;
 
 void SetHplTrimOffset(int Offset)
 {
-    printk("%s Offset = %d\n", __func__, Offset);
     /* transform to 1.8V scale */
     setHpDcCalibration(AUDIO_ANALOG_DEVICE_OUT_HEADSETL, (Offset * 18) / 10);
 }
 
 void SetHprTrimOffset(int Offset)
 {
-    printk("%s Offset = %d\n", __func__, Offset);
     /* transform to 1.8V scale */
     setHpDcCalibration(AUDIO_ANALOG_DEVICE_OUT_HEADSETR, (Offset * 18) / 10);
 }
 
 void EnableTrimbuffer(bool benable)
 {
-    printk("%s , no this\n", __func__);
 }
 
 
 void OpenTrimBufferHardware(bool enable) //
 {
-    printk("%s , no this\n", __func__);
 }
 
 void OpenAnalogTrimHardware(bool enable)
 {
-    printk("%s , no this\n", __func__);
 }
 
 void setHpDcCalibrationGain(unsigned int type, int gain_value)
 {
-    printk("%s ,type=%d, gain_value = %d\n", __func__, type, gain_value);
     // this will base on hw spec.
     uint32 index = 7;
     //const int HWgain[] = {-5, -3, -1, 1, 3, 5, 7, 9};
@@ -593,14 +548,12 @@ void setHpDcCalibrationGain(unsigned int type, int gain_value)
     }
     else
     {
-        printk("%s, wrong type, invalid operation\n", __func__);
     }
 }
 
 
 void OpenAnalogHeadphone(bool bEnable)
 {
-    printk("OpenAnalogHeadphone bEnable = %d", bEnable);
     if (bEnable)
     {
         //SetHplTrimOffset(2048);
@@ -622,13 +575,11 @@ void OpenAnalogHeadphone(bool bEnable)
 
 bool OpenHeadPhoneImpedanceSetting(bool bEnable)
 {
-    printk("%s, not support  benable = %d\n", __func__, bEnable);
     return true;
 }
 
 void setHpGainZero(void)
 {
-    printk("%s , no this\n", __func__);
 }
 
 void SetSdmLevel(unsigned int level)
@@ -644,15 +595,11 @@ static void SetHprOffset(int OffsetTrimming)
     short Dccompsentation = 0;
     int DCoffsetValue = 0;
     unsigned short RegValue = 0;
-    printk("%s OffsetTrimming = %d \n", __func__, OffsetTrimming);
     DCoffsetValue = OffsetTrimming *  1000000;
     DCoffsetValue = (DCoffsetValue / DC1devider);  // in uv
-    printk("%s DCoffsetValue = %d \n", __func__, DCoffsetValue);
     DCoffsetValue = (DCoffsetValue / DC1unit_in_uv);
-    printk("%s DCoffsetValue = %d \n", __func__, DCoffsetValue);
     Dccompsentation = DCoffsetValue;
     RegValue = Dccompsentation;
-    printk("%s RegValue = 0x%x\n", __func__, RegValue);
 #if 0 //Todo Sam
 
     Ana_Set_Reg(AFE_DL_DC_COMP_CFG1, RegValue , 0xffff);
@@ -664,15 +611,11 @@ static void SetHplOffset(int OffsetTrimming)
     short Dccompsentation = 0;
     int DCoffsetValue = 0;
     unsigned short RegValue = 0;
-    printk("%s OffsetTrimming = %d \n", __func__, OffsetTrimming);
     DCoffsetValue = OffsetTrimming * 1000000;
     DCoffsetValue = (DCoffsetValue / DC1devider);  // in uv
-    printk("%s DCoffsetValue = %d \n", __func__, DCoffsetValue);
     DCoffsetValue = (DCoffsetValue / DC1unit_in_uv);
-    printk("%s DCoffsetValue = %d \n", __func__, DCoffsetValue);
     Dccompsentation = DCoffsetValue;
     RegValue = Dccompsentation;
-    printk("%s RegValue = 0x%x\n", __func__, RegValue);
 #if 0 //Todo Sam
 
     Ana_Set_Reg(AFE_DL_DC_COMP_CFG0, RegValue  , 0xffff);
@@ -692,14 +635,12 @@ static void EnableDcCompensation(bool bEnable)
 static void SetHprOffsetTrim(void)
 {
     int OffsetTrimming = mHprTrimOffset - TrimOffset;
-    printk("%s mHprTrimOffset = %d TrimOffset = %d \n", __func__, mHprTrimOffset, TrimOffset);
     SetHprOffset(OffsetTrimming);
 }
 
 static void SetHpLOffsetTrim(void)
 {
     int OffsetTrimming = mHplTrimOffset - TrimOffset;
-    printk("%s mHprTrimOffset = %d TrimOffset = %d \n", __func__, mHplTrimOffset, TrimOffset);
     SetHplOffset(OffsetTrimming);
 }
 
@@ -737,7 +678,6 @@ static void SetDcCompenSation_SPKHP(void)
 
 static void SetDCcoupleNP(int MicBias, int mode)
 {
-    printk("%s MicBias= %d mode = %d\n", __func__, MicBias, mode);
 #if 0 //Todo Sam
 
     switch (mode)
@@ -789,7 +729,6 @@ static void SetDCcoupleNP(int MicBias, int mode)
 uint32 GetULFrequency(uint32 frequency)
 {
     uint32 Reg_value = 0;
-    printk("%s frequency =%d\n", __func__, frequency);
     switch (frequency)
     {
         case 8000:
@@ -808,7 +747,6 @@ uint32 GetULFrequency(uint32 frequency)
 
 uint32 GetDLFrequency(uint32 frequency)
 {
-    printk("%s frequency =%d\n", __func__, frequency);
     uint32 Reg_value = 0;
     switch (frequency)
     {
@@ -838,8 +776,6 @@ uint32 GetDLFrequency(uint32 frequency)
             break;
         case 48000:
             Reg_value = 10;
-        default:
-            printk("GetDLFrequency with frequency = %d", frequency);
     }
     return Reg_value;
 }
@@ -886,13 +822,11 @@ static int mt63xx_codec_prepare(struct snd_pcm_substream *substream , struct snd
 {
     if (substream->stream == SNDRV_PCM_STREAM_CAPTURE)
     {
-        printk("mt63xx_codec_prepare set up SNDRV_PCM_STREAM_CAPTURE rate = %d\n", substream->runtime->rate);
         mBlockSampleRate[AUDIO_ANALOG_DEVICE_IN_ADC] = substream->runtime->rate;
 
     }
     else if (substream->stream == SNDRV_PCM_STREAM_PLAYBACK)
     {
-        printk("mt63xx_codec_prepare set up SNDRV_PCM_STREAM_PLAYBACK rate = %d\n", substream->runtime->rate);
         mBlockSampleRate[AUDIO_ANALOG_DEVICE_OUT_DAC] = substream->runtime->rate;
     }
     return 0;
@@ -1162,8 +1096,6 @@ uint32 GetDLNewIFFrequency(unsigned int frequency)
             break;
         case 48000:
             Reg_value = 8;
-        default:
-            printk("ApplyDLNewIFFrequency with frequency = %d", frequency);
     }
     return Reg_value;
 }
@@ -1180,16 +1112,12 @@ uint32 GetULNewIFFrequency(unsigned int frequency)
             break;
         case 48000:
             Reg_value = 3;
-        default:
-            printk("GetULNewIFFrequency with frequency = %d", frequency);
     }
-    printk("GetULNewIFFrequency Reg_value = %d", Reg_value);
     return Reg_value;
 }
 
 static void TurnOnDacPower(void)
 {
-    printk("TurnOnDacPower\n");
     uint32 dlFreq;
     audckbufEnable(true);
     ClsqEnable(true);
@@ -1223,8 +1151,6 @@ static void TurnOnDacPower(void)
 
 static void TurnOffDacPower(void)
 {
-    printk("TurnOffDacPower\n");
-
     if (GetAdcStatus() == false)
     {
 #if 0 // todo     
@@ -1248,7 +1174,6 @@ static void TurnOffDacPower(void)
 static void HeadsetVoloumeRestore(void)
 {
     int index = 0, oldindex = 0, offset = 0, count = 1;
-    printk("%s\n", __func__);
 #if 0 // todo     
     index =   8 ;
     oldindex = mCodec_data->mAudio_Ana_Volume[AUDIO_ANALOG_VOLUME_HPOUTR];
@@ -1278,7 +1203,6 @@ static void HeadsetVoloumeRestore(void)
     }
     Ana_Set_Reg(ZCD_CON2, 0x0489, 0xf9f);
 #else
-    printk("%s 82 no this\n", __func__);
 #endif
 }
 
@@ -1288,8 +1212,6 @@ static void HeadsetVolumeSet(void)
     int index = mCodec_data->mAudio_Ana_Volume[AUDIO_ANALOG_VOLUME_HPOUTL];
     int index2 = 7;
     
-    printk("%s(), Lindex = %d\n", __func__, index);
-    
     //gain[] = {-5, -3, -1, 1, 3, 5, 7, 9};
 
     if (index > index2)
@@ -1298,8 +1220,6 @@ static void HeadsetVolumeSet(void)
     }
     index2 -= index;
     
-    printk("%s(), Lindex = %d, Lindex2 = %d \n", __func__, index,index2);
-
     Ana_Set_Reg(AUDTOP_CON5, index2 << 12, 0x00007000);
 
     //right channel
@@ -1307,15 +1227,12 @@ static void HeadsetVolumeSet(void)
     index2 = 7;
     //gain[] = {-5, -3, -1, 1, 3, 5, 7, 9};
     
-    printk("%s(), Rindex = %d\n", __func__, index);
-    
     if (index > index2)
     {
         index = index2;
     }
     index2 -= index;
     
-    //printk("%s(), Rindex = %d, Rindex2 = %d \n", __func__, index,index2);
 
     Ana_Set_Reg(AUDTOP_CON5, index2 << 8, 0x000000700);
 
@@ -1334,11 +1251,8 @@ static void Audio_Amp_Change(int channels , bool enable)
         if (mCodec_data->mAudio_Ana_DevicePower[AUDIO_ANALOG_DEVICE_OUT_HEADSETL] == false &&
             mCodec_data->mAudio_Ana_DevicePower[AUDIO_ANALOG_DEVICE_OUT_HEADSETR] == false)
         {
-            printk("%s \n", __func__);
-
             //need to modify sequence
             //DC compensation setting
-            printk("%s, mHpRightDcCalibration [%d] mHpLeftDcCalibration [%d], mIsExtSPKUse=%x\n",__func__, mHpRightDcCalibration, mHpLeftDcCalibration,mIsExtSPKUse);
             Ana_Set_Reg(ABB_AFE_CON3, mHpLeftDcCalibration, 0xffff); // LCH cpmpensation value
             Ana_Set_Reg(ABB_AFE_CON4, mHpRightDcCalibration, 0xffff); // RCH cpmpensation value
             Ana_Set_Reg(ABB_AFE_CON10, 0x0001, 0x0001); // enable DC cpmpensation
@@ -1374,7 +1288,6 @@ static void Audio_Amp_Change(int channels , bool enable)
         if (mCodec_data->mAudio_Ana_DevicePower[AUDIO_ANALOG_DEVICE_OUT_HEADSETL] == false &&
             mCodec_data->mAudio_Ana_DevicePower[AUDIO_ANALOG_DEVICE_OUT_HEADSETR] == false)
         {
-            printk("Audio_Amp_Change off amp\n");
             HeadsetVoloumeRestore();// Set HPR/HPL gain as -1dB, step by step
             //Ana_Set_Reg(ZCD_CON2, 0x0F9F, 0xffff); //Set HPR/HPL gain as minimum (~ -40dB)
 #if 0 // todo            
@@ -1424,7 +1337,6 @@ static void Audio_Amp_Change(int channels , bool enable)
 static int Audio_AmpL_Get(struct snd_kcontrol *kcontrol,
                           struct snd_ctl_elem_value *ucontrol)
 {
-    printk("Audio_AmpL_Get = %d\n", mCodec_data->mAudio_Ana_DevicePower[AUDIO_ANALOG_DEVICE_OUT_HEADSETL]);
     ucontrol->value.integer.value[0] = mCodec_data->mAudio_Ana_DevicePower[AUDIO_ANALOG_DEVICE_OUT_HEADSETL];
     return 0;
 }
@@ -1433,7 +1345,6 @@ static int Audio_AmpL_Set(struct snd_kcontrol *kcontrol, struct snd_ctl_elem_val
 {
     mutex_lock(&Ana_Ctrl_Mutex);
 
-    printk("%s() gain = %ld \n ", __func__, ucontrol->value.integer.value[0]);
     if ((ucontrol->value.integer.value[0]  == true) && (mCodec_data->mAudio_Ana_DevicePower[AUDIO_ANALOG_DEVICE_OUT_HEADSETL]  == false))
     {
         Audio_Amp_Change(AUDIO_ANALOG_CHANNELS_LEFT1 , true);
@@ -1451,7 +1362,6 @@ static int Audio_AmpL_Set(struct snd_kcontrol *kcontrol, struct snd_ctl_elem_val
 static int Audio_AmpR_Get(struct snd_kcontrol *kcontrol,
                           struct snd_ctl_elem_value *ucontrol)
 {
-    printk("Audio_AmpR_Get = %d\n", mCodec_data->mAudio_Ana_DevicePower[AUDIO_ANALOG_DEVICE_OUT_HEADSETR]);
     ucontrol->value.integer.value[0] = mCodec_data->mAudio_Ana_DevicePower[AUDIO_ANALOG_DEVICE_OUT_HEADSETR];
     return 0;
 }
@@ -1460,7 +1370,6 @@ static int Audio_AmpR_Set(struct snd_kcontrol *kcontrol, struct snd_ctl_elem_val
 {
     mutex_lock(&Ana_Ctrl_Mutex);
 
-    printk("%s()\n", __func__);
     if ((ucontrol->value.integer.value[0]  == true) && (mCodec_data->mAudio_Ana_DevicePower[AUDIO_ANALOG_DEVICE_OUT_HEADSETR]  == false))
     {
         Audio_Amp_Change(AUDIO_ANALOG_CHANNELS_RIGHT1 , true);
@@ -1477,9 +1386,7 @@ static int Audio_AmpR_Set(struct snd_kcontrol *kcontrol, struct snd_ctl_elem_val
 
 static int PMIC_REG_CLEAR_Set(struct snd_kcontrol *kcontrol, struct snd_ctl_elem_value *ucontrol)
 {
-    printk("%s()\n", __func__);
 #ifdef PMIC_RESET_WORKAROUND
-    printk("%s(), do PMIC_REG_CLEAR_Set\n", __func__);
     Ana_Set_Reg(ABB_AFE_CON2,0,0xffff);
     Ana_Set_Reg(ABB_AFE_CON4,0,0xffff);
     Ana_Set_Reg(ABB_AFE_CON5,0x28,0xffff);
@@ -1495,8 +1402,6 @@ static int PMIC_REG_CLEAR_Set(struct snd_kcontrol *kcontrol, struct snd_ctl_elem
 
 static int PMIC_REG_CLEAR_Get(struct snd_kcontrol *kcontrol, struct snd_ctl_elem_value *ucontrol)
 {
-    printk("%s(), not support\n", __func__);
-    
     return 0;
 }
 
@@ -1504,7 +1409,6 @@ static int PMIC_REG_CLEAR_Get(struct snd_kcontrol *kcontrol, struct snd_ctl_elem
 static void  SetVoiceAmpVolume(void)
 {
     int index;
-    printk("%s\n", __func__);
     index =  mCodec_data->mAudio_Ana_Volume[AUDIO_ANALOG_VOLUME_HSOUTL];
     Ana_Set_Reg(ZCD_CON3, index , 0x001f);
 }
@@ -1515,11 +1419,9 @@ static void Voice_Amp_Change(bool enable)
     uint16 i = 3;
     if (enable)
     {
-        printk("%s \n", __func__);
         if (GetDLStatus() == false)
         {
             TurnOnDacPower();
-            printk("Voice_Amp_Change on amp\n");
             //set analog part (voice HS playback)
             Ana_Set_Reg(AUDTOP_CON7, 0x2430, 0xffff); // Set voice buffer to smallest -22dB.
             Ana_Set_Reg(AUDTOP_CON6, 0xB7F6, 0xffff); // enable input short of HP to prevent voice signal leakage . Enable 2.4V.
@@ -1537,7 +1439,6 @@ static void Voice_Amp_Change(bool enable)
     }
     else
     {
-        printk("Voice_Amp_Change turn off \n");
         uint16 i;
         i = (Ana_Get_Reg(AUDTOP_CON7) & 0xf0) >> 4;
         i = (i < 4) ? 4 : i;
@@ -1566,7 +1467,6 @@ static void Voice_Amp_Change(bool enable)
 static int Voice_Amp_Get(struct snd_kcontrol *kcontrol,
                          struct snd_ctl_elem_value *ucontrol)
 {
-    printk("Voice_Amp_Get = %d\n", mCodec_data->mAudio_Ana_DevicePower[AUDIO_ANALOG_DEVICE_OUT_EARPIECEL]);
     ucontrol->value.integer.value[0] = mCodec_data->mAudio_Ana_DevicePower[AUDIO_ANALOG_DEVICE_OUT_EARPIECEL];
     return 0;
 }
@@ -1574,7 +1474,6 @@ static int Voice_Amp_Get(struct snd_kcontrol *kcontrol,
 static int Voice_Amp_Set(struct snd_kcontrol *kcontrol, struct snd_ctl_elem_value *ucontrol)
 {
     mutex_lock(&Ana_Ctrl_Mutex);
-    printk("%s()\n", __func__);
     if ((ucontrol->value.integer.value[0]  == true) && (mCodec_data->mAudio_Ana_DevicePower[AUDIO_ANALOG_DEVICE_OUT_EARPIECEL]  == false))
     {
         Voice_Amp_Change(true);
@@ -1598,7 +1497,6 @@ static void Speaker_Amp_Change(bool enable)
         {
             TurnOnDacPower();
         }
-        printk("%s \n", __func__);
 
         Ana_Set_Reg(AUDTOP_CON7, 0x2400, 0xffff); // Set voice buffer to smallest -22dB.
         Ana_Set_Reg(AUDTOP_CON6, 0xB7F6, 0xffff); // enable input short of HP to prevent voice signal leakage . Enable 2.4V.
@@ -1646,7 +1544,6 @@ static void Speaker_Amp_Change(bool enable)
     }
     else
     {
-        printk("turn off Speaker_Amp_Change \n");
         if (Speaker_mode != AUDIO_SPEAKER_MODE_RECEIVER)    //2in1 speaker do not need this
         {
             #if 0
@@ -1663,7 +1560,6 @@ static void Speaker_Amp_Change(bool enable)
 
                 index = 4;
                 currentIdx = (Ana_Get_Reg(SPK_CON9) >> 8) & 0xF;
-                printk("%s, SPK_CON9 index= %d Cur = %d \n", __func__,index, currentIdx);
                 if(index > currentIdx)
                 {
                     for(i = (currentIdx+1); i <= index; i++)
@@ -1687,7 +1583,6 @@ static void Speaker_Amp_Change(bool enable)
                  // Add voice buffer ramp function
                 index = 0xB;
                 currentIdx = (Ana_Get_Reg(AUDTOP_CON7) >> 4) & 0xF;
-                printk("%s, AUDTOP_CON7 index= %d Cur = %d \n",__func__, index, currentIdx);
                 if(index > currentIdx)
                 {
                     for(i = (currentIdx+1); i <= index; i++)
@@ -1750,14 +1645,12 @@ static void Speaker_Amp_Change(bool enable)
 static int Speaker_Amp_Get(struct snd_kcontrol *kcontrol,
                            struct snd_ctl_elem_value *ucontrol)
 {
-    printk("%s()\n", __func__);
     ucontrol->value.integer.value[0] = mCodec_data->mAudio_Ana_DevicePower[AUDIO_ANALOG_DEVICE_OUT_SPEAKERL] ;
     return 0;
 }
 
 static int Speaker_Amp_Set(struct snd_kcontrol *kcontrol, struct snd_ctl_elem_value *ucontrol)
 {
-    printk("%s() value = %ld \n ", __func__, ucontrol->value.integer.value[0]);
     if ((ucontrol->value.integer.value[0] == true) && (mCodec_data->mAudio_Ana_DevicePower[AUDIO_ANALOG_DEVICE_OUT_SPEAKERL]  == false))
     {
         Speaker_Amp_Change(true);
@@ -1801,9 +1694,7 @@ static void Ext_Speaker_Amp_Change(bool enable)
 
     if (enable)
     {
-        printk("Ext_Speaker_Amp_Change ON+ \n");
 #ifndef CONFIG_MTK_SPEAKER
-        printk("Ext_Speaker_Amp_Change ON set GPIO \n");
         mt_set_gpio_mode(pin_extspkamp, GPIO_MODE_00); //GPIO117: DPI_D3, mode 0
         mt_set_gpio_pull_enable(pin_extspkamp, GPIO_PULL_ENABLE);
         mt_set_gpio_dir(pin_extspkamp, GPIO_DIR_OUT); // output
@@ -1819,18 +1710,15 @@ static void Ext_Speaker_Amp_Change(bool enable)
         //msleep(SPK_WARM_UP_TIME);
         mdelay(SPK_WARM_UP_TIME);
 #endif
-        printk("Ext_Speaker_Amp_Change ON- \n");
     }
     else
     {
-        printk("Ext_Speaker_Amp_Change OFF+ \n");
 #ifndef CONFIG_MTK_SPEAKER
         //mt_set_gpio_mode(pin_extspkamp, GPIO_MODE_00); //GPIO117: DPI_D3, mode 0
         mt_set_gpio_dir(pin_extspkamp, GPIO_DIR_OUT); // output
         mt_set_gpio_out(pin_extspkamp, GPIO_OUT_ZERO); // low disbale
         udelay(500);
 #endif
-        printk("Ext_Speaker_Amp_Change OFF- \n");
     }
 }
 
@@ -1883,9 +1771,7 @@ static void Ext_Speaker_Amp_Change(bool enable)
 
     if (enable)
     {
-        printk("Ext_Speaker_Amp_Change ON+ \n");
 #ifndef CONFIG_MTK_SPEAKER
-        printk("Ext_Speaker_Amp_Change ON set GPIO \n");
         mt_set_gpio_mode(GPIO_EXT_SPKAMP_EN_PIN, GPIO_MODE_00); //GPIO117: DPI_D3, mode 0
         mt_set_gpio_pull_enable(GPIO_EXT_SPKAMP_EN_PIN, GPIO_PULL_ENABLE);
         mt_set_gpio_dir(GPIO_EXT_SPKAMP_EN_PIN, GPIO_DIR_OUT); // output
@@ -1901,18 +1787,15 @@ static void Ext_Speaker_Amp_Change(bool enable)
         //msleep(SPK_WARM_UP_TIME);
         mdelay(SPK_WARM_UP_TIME);
 #endif
-        printk("Ext_Speaker_Amp_Change ON- \n");
     }
     else
     {
-        printk("Ext_Speaker_Amp_Change OFF+ \n");
 #ifndef CONFIG_MTK_SPEAKER
         //mt_set_gpio_mode(GPIO_EXT_SPKAMP_EN_PIN, GPIO_MODE_00); //GPIO117: DPI_D3, mode 0
         mt_set_gpio_dir(GPIO_EXT_SPKAMP_EN_PIN, GPIO_DIR_OUT); // output
         mt_set_gpio_out(GPIO_EXT_SPKAMP_EN_PIN, GPIO_OUT_ZERO); // low disbale
         udelay(500);
 #endif
-        printk("Ext_Speaker_Amp_Change OFF- \n");
     }
 }
 #endif
@@ -1920,7 +1803,6 @@ static void Ext_Speaker_Amp_Change(bool enable)
 static int Ext_Speaker_Amp_Get(struct snd_kcontrol *kcontrol,
                                struct snd_ctl_elem_value *ucontrol)
 {
-    printk("%s()\n", __func__);
     ucontrol->value.integer.value[0] = mCodec_data->mAudio_Ana_DevicePower[AUDIO_ANALOG_DEVICE_OUT_EXTSPKAMP] ;
     return 0;
 }
@@ -1928,7 +1810,6 @@ static int Ext_Speaker_Amp_Get(struct snd_kcontrol *kcontrol,
 static int Ext_Speaker_Amp_Set(struct snd_kcontrol *kcontrol, struct snd_ctl_elem_value *ucontrol)
 {
 
-    printk("%s() gain = %ld \n ", __func__, ucontrol->value.integer.value[0]);
     if (ucontrol->value.integer.value[0])
     {
         Ext_Speaker_Amp_Change(true);
@@ -1946,7 +1827,6 @@ static int Ext_Speaker_Amp_Set(struct snd_kcontrol *kcontrol, struct snd_ctl_ele
 static int Ext_Speaker_Use_Get(struct snd_kcontrol *kcontrol,
                                struct snd_ctl_elem_value *ucontrol)
 {
-    printk("%s()\n", __func__);
     ucontrol->value.integer.value[0] = mIsExtSPKUse;
     return 0;
 }
@@ -1954,7 +1834,6 @@ static int Ext_Speaker_Use_Get(struct snd_kcontrol *kcontrol,
 static int Ext_Speaker_Use_Set(struct snd_kcontrol *kcontrol, struct snd_ctl_elem_value *ucontrol)
 {
 
-    printk("%s() set = %ld \n ", __func__, ucontrol->value.integer.value[0]);
     if (ucontrol->value.integer.value[0])
     {
         mIsExtSPKUse = true;
@@ -1968,17 +1847,14 @@ static int Ext_Speaker_Use_Set(struct snd_kcontrol *kcontrol, struct snd_ctl_ele
 
 static void Headset_Speaker_Amp_Change(bool enable)
 {
-    printk("%s() 82\n ", __func__);
     if (enable)
     {
         if (GetDLStatus() == false)
         {
             TurnOnDacPower();
         }
-        printk("turn on Speaker_Amp_Change \n");
 
         //DC compensation setting
-        printk("%s, mHpRightDcCalibration [%d] mHpLeftDcCalibration [%d]", __func__,mHpRightDcCalibration, mHpLeftDcCalibration);
         Ana_Set_Reg(ABB_AFE_CON3, mHpLeftDcCalibration, 0xffff); // LCH cpmpensation value
         Ana_Set_Reg(ABB_AFE_CON4, mHpRightDcCalibration, 0xffff); // RCH cpmpensation value
         Ana_Set_Reg(ABB_AFE_CON10, 0x0001, 0x0001); // enable DC cpmpensation
@@ -2073,7 +1949,6 @@ static void Headset_Speaker_Amp_Change(bool enable)
 static int Headset_Speaker_Amp_Get(struct snd_kcontrol *kcontrol,
                                    struct snd_ctl_elem_value *ucontrol)
 {
-    printk("%s()\n", __func__);
     ucontrol->value.integer.value[0] = mCodec_data->mAudio_Ana_DevicePower[AUDIO_ANALOG_DEVICE_OUT_SPEAKER_HEADSET_R] ;
     return 0;
 }
@@ -2082,7 +1957,6 @@ static int Headset_Speaker_Amp_Set(struct snd_kcontrol *kcontrol, struct snd_ctl
 {
     //struct snd_soc_codec *codec = snd_kcontrol_chip(kcontrol);
 
-    printk("%s() gain = %lu \n ", __func__, ucontrol->value.integer.value[0]);
     if ((ucontrol->value.integer.value[0]  == true) && (mCodec_data->mAudio_Ana_DevicePower[AUDIO_ANALOG_DEVICE_OUT_SPEAKER_HEADSET_R]  == false))
     {
         Headset_Speaker_Amp_Change(true);
@@ -2124,7 +1998,6 @@ static int Audio_Speaker_Pga_Gain_Set(struct snd_kcontrol *kcontrol, struct snd_
 {
     Speaker_pga_gain = ucontrol->value.integer.value[0];
 
-    printk("%s Speaker_pga_gain= %d\n", __func__, Speaker_pga_gain);
     //    struct snd_soc_codec *codec = snd_kcontrol_chip(kcontrol);
     int index = 0;
     // this will base on hw spec, use 15dB for
@@ -2133,7 +2006,6 @@ static int Audio_Speaker_Pga_Gain_Set(struct snd_kcontrol *kcontrol, struct snd_
 
     if (ucontrol->value.enumerated.item[0] > ARRAY_SIZE(speaker_PGA_function))
     {
-        printk("return -EINVAL\n");
         return -EINVAL;
     }
     #if 0
@@ -2149,7 +2021,6 @@ static int Audio_Speaker_Pga_Gain_Set(struct snd_kcontrol *kcontrol, struct snd_
         index = 1;    // min to 0dB
     }
     
-    printk("%s(), index = %d\n", __func__, index);
 
     Ana_Set_Reg(SPK_CON9, index << 8, 0x00000f00);
     #else
@@ -2170,7 +2041,6 @@ static int Audio_Speaker_OcFlag_Get(struct snd_kcontrol *kcontrol,
 
 static int Audio_Speaker_OcFlag_Set(struct snd_kcontrol *kcontrol, struct snd_ctl_elem_value *ucontrol)
 {
-    printk("%s is not support setting \n", __func__);
     return 0;
 }
 
@@ -2248,10 +2118,8 @@ int Audio_AuxAdcData_Get_ext(void)
 #ifdef RAINIER_NEED_CHECK // todo    
     //int dRetValue = PMIC_IMM_GetOneChannelValue(AUX_ICLASSAB_AP, 1, 0);
     //int dRetValue = PMIC_IMM_GetOneChannelValue(MT6350_AUX_CH9, 1, 0);
-    printk("%s dRetValue 0x%x \n", __func__, dRetValue);
     return dRetValue;
 #else
-    printk("%s , 82 todo\n", __func__);
 #endif
     return 0;
 }
@@ -2268,7 +2136,6 @@ static int Audio_AuxAdcData_Get(struct snd_kcontrol *kcontrol,
 #else
     ucontrol->value.integer.value[0] = 0;
 #endif
-    printk("%s dMax = 0x%lx \n", __func__, ucontrol->value.integer.value[0]);
     return 0;
 
 }
@@ -2276,7 +2143,6 @@ static int Audio_AuxAdcData_Get(struct snd_kcontrol *kcontrol,
 static int Audio_AuxAdcData_Set(struct snd_kcontrol *kcontrol, struct snd_ctl_elem_value *ucontrol)
 {
     dAuxAdcChannel = ucontrol->value.integer.value[0];
-    printk("%s dAuxAdcChannel = 0x%x \n", __func__, dAuxAdcChannel);
     return 0;
 }
 
@@ -2305,7 +2171,6 @@ static const char *DAC_DL_PGA_Speaker_GAIN[] = {"8Db", "7Db", "6Db", "5Db", "4Db
 static int Lineout_PGAL_Get(struct snd_kcontrol *kcontrol,
                             struct snd_ctl_elem_value *ucontrol)
 {
-    printk("Speaker_PGA_Get = %d\n", mCodec_data->mAudio_Ana_Volume[AUDIO_ANALOG_VOLUME_SPKL]);
     ucontrol->value.integer.value[0] = mCodec_data->mAudio_Ana_Volume[AUDIO_ANALOG_VOLUME_SPKL];
     return 0;
 }
@@ -2313,11 +2178,9 @@ static int Lineout_PGAL_Get(struct snd_kcontrol *kcontrol,
 static int Lineout_PGAL_Set(struct snd_kcontrol *kcontrol, struct snd_ctl_elem_value *ucontrol)
 {
     int index = 0;
-    printk("%s(), index = %d\n", __func__, ucontrol->value.enumerated.item[0]);
 
     if (ucontrol->value.enumerated.item[0] > ARRAY_SIZE(DAC_DL_PGA_Speaker_GAIN))
     {
-        printk("return -EINVAL\n");
         return -EINVAL;
     }
     index = ucontrol->value.integer.value[0];
@@ -2335,7 +2198,6 @@ static int Lineout_PGAL_Set(struct snd_kcontrol *kcontrol, struct snd_ctl_elem_v
 static int Lineout_PGAR_Get(struct snd_kcontrol *kcontrol,
                             struct snd_ctl_elem_value *ucontrol)
 {
-    printk("%s  = %d\n", __func__, mCodec_data->mAudio_Ana_Volume[AUDIO_ANALOG_VOLUME_SPKR]);
     ucontrol->value.integer.value[0] = mCodec_data->mAudio_Ana_Volume[AUDIO_ANALOG_VOLUME_SPKR];
     return 0;
 }
@@ -2344,11 +2206,9 @@ static int Lineout_PGAR_Set(struct snd_kcontrol *kcontrol, struct snd_ctl_elem_v
 {
     //    struct snd_soc_codec *codec = snd_kcontrol_chip(kcontrol);
     int index = 0;
-    printk("%s(), index = %d\n", __func__, ucontrol->value.enumerated.item[0]);
 
     if (ucontrol->value.enumerated.item[0] > ARRAY_SIZE(DAC_DL_PGA_Speaker_GAIN))
     {
-        printk("return -EINVAL\n");
         return -EINVAL;
     }
     index = ucontrol->value.integer.value[0];
@@ -2366,7 +2226,6 @@ static int Lineout_PGAR_Set(struct snd_kcontrol *kcontrol, struct snd_ctl_elem_v
 static int Handset_PGA_Get(struct snd_kcontrol *kcontrol,
                            struct snd_ctl_elem_value *ucontrol)
 {
-    printk("Handset_PGA_Get = %d\n", mCodec_data->mAudio_Ana_Volume[AUDIO_ANALOG_VOLUME_HSOUTL]);
     ucontrol->value.integer.value[0] = mCodec_data->mAudio_Ana_Volume[AUDIO_ANALOG_VOLUME_HSOUTL];
     return 0;
 }
@@ -2377,11 +2236,9 @@ static int Handset_PGA_Set(struct snd_kcontrol *kcontrol, struct snd_ctl_elem_va
     int index = 0;
     int index2 = 15;
     //gain[] =  {-21, -19, -17, -15, -13, -11, -9, -7, -5, -3, -1, 1, 3, 5, 7, 9};
-    printk("%s(), index = %d\n", __func__, ucontrol->value.enumerated.item[0]);
 
     if (ucontrol->value.enumerated.item[0] > ARRAY_SIZE(DAC_DL_PGA_Handset_GAIN))
     {
-        printk("return -EINVAL\n");
         return -EINVAL;
     }
     index = ucontrol->value.integer.value[0];
@@ -2391,7 +2248,6 @@ static int Handset_PGA_Set(struct snd_kcontrol *kcontrol, struct snd_ctl_elem_va
         index = index2;
     }
     
-    printk("%s(), index = %d, index2 = %d \n", __func__, index,index2);
 
     Ana_Set_Reg(AUDTOP_CON7, index << 4, 0x000000f0);
 
@@ -2402,7 +2258,6 @@ static int Handset_PGA_Set(struct snd_kcontrol *kcontrol, struct snd_ctl_elem_va
 static int Headset_PGAL_Get(struct snd_kcontrol *kcontrol,
                             struct snd_ctl_elem_value *ucontrol)
 {
-    printk("Headset_PGAL_Get = %d\n", mCodec_data->mAudio_Ana_Volume[AUDIO_ANALOG_VOLUME_HPOUTL]);
     ucontrol->value.integer.value[0] = mCodec_data->mAudio_Ana_Volume[AUDIO_ANALOG_VOLUME_HPOUTL];
     return 0;
 }
@@ -2413,11 +2268,9 @@ static int Headset_PGAL_Set(struct snd_kcontrol *kcontrol, struct snd_ctl_elem_v
     int index = 0;
     int index2 = 7;
     //gain[] = {-5, -3, -1, 1, 3, 5, 7, 9};
-    //printk("%s(), index = %d arraysize = %d \n", __func__, ucontrol->value.enumerated.item[0], ARRAY_SIZE(DAC_DL_PGA_Headset_GAIN)); //mark for 64bit build fail
 
     if (ucontrol->value.enumerated.item[0] > ARRAY_SIZE(DAC_DL_PGA_Headset_GAIN))
     {
-        printk("return -EINVAL\n");
         return -EINVAL;
     }
     index = ucontrol->value.integer.value[0];
@@ -2427,7 +2280,6 @@ static int Headset_PGAL_Set(struct snd_kcontrol *kcontrol, struct snd_ctl_elem_v
     }
     index2 -= index;
     
-    printk("%s(), index = %d, index2 = %d \n", __func__, index,index2);
 
     Ana_Set_Reg(AUDTOP_CON5, index2 << 12, 0x00007000);
 
@@ -2438,7 +2290,6 @@ static int Headset_PGAL_Set(struct snd_kcontrol *kcontrol, struct snd_ctl_elem_v
 static int Headset_PGAR_Get(struct snd_kcontrol *kcontrol,
                             struct snd_ctl_elem_value *ucontrol)
 {
-    printk("Headset_PGAR_Get = %d\n", mCodec_data->mAudio_Ana_Volume[AUDIO_ANALOG_VOLUME_HPOUTR]);
     ucontrol->value.integer.value[0] = mCodec_data->mAudio_Ana_Volume[AUDIO_ANALOG_VOLUME_HPOUTR];
     return 0;
 }
@@ -2451,11 +2302,9 @@ static int Headset_PGAR_Set(struct snd_kcontrol *kcontrol, struct snd_ctl_elem_v
     int index2 = 7;
     //gain[] = {-5, -3, -1, 1, 3, 5, 7, 9};
     
-    printk("%s(), index = %d\n", __func__, ucontrol->value.enumerated.item[0]);
 
     if (ucontrol->value.enumerated.item[0] > ARRAY_SIZE(DAC_DL_PGA_Headset_GAIN))
     {
-        printk("return -EINVAL\n");
         return -EINVAL;
     }
     index = ucontrol->value.integer.value[0];
@@ -2465,7 +2314,6 @@ static int Headset_PGAR_Set(struct snd_kcontrol *kcontrol, struct snd_ctl_elem_v
     }
     index2 -= index;
     
-    printk("%s(), index = %d, index2 = %d \n", __func__, index,index2);
 
     Ana_Set_Reg(AUDTOP_CON5, index2 << 8, 0x000000700);
 
@@ -2478,7 +2326,6 @@ static uint32 mHp_Impedance = 32;
 static int Audio_Hp_Impedance_Get(struct snd_kcontrol *kcontrol,
                                   struct snd_ctl_elem_value *ucontrol)
 {
-    printk("Audio_Hp_Impedance_Get = %d\n", mHp_Impedance);
     ucontrol->value.integer.value[0] = mHp_Impedance;
     return 0;
 
@@ -2487,21 +2334,18 @@ static int Audio_Hp_Impedance_Get(struct snd_kcontrol *kcontrol,
 static int Audio_Hp_Impedance_Set(struct snd_kcontrol *kcontrol, struct snd_ctl_elem_value *ucontrol)
 {
     mHp_Impedance = ucontrol->value.integer.value[0];
-    printk("%s Audio_Hp_Impedance_Set = 0x%x \n", __func__, mHp_Impedance);
     return 0;
 }
 
 static int Aud_Clk_Buf_Get(struct snd_kcontrol *kcontrol,
                            struct snd_ctl_elem_value *ucontrol)
 {
-    printk("\%s n", __func__);
     ucontrol->value.integer.value[0] = audck_buf_Count;
     return 0;
 }
 
 static int Aud_Clk_Buf_Set(struct snd_kcontrol *kcontrol, struct snd_ctl_elem_value *ucontrol)
 {
-    printk("%s(), value = %d\n", __func__, ucontrol->value.enumerated.item[0]);
     if (ucontrol->value.integer.value[0])
     {
         audckbufEnable(true);
@@ -2564,7 +2408,6 @@ void SetMicPGAGain(void)
 
     //set mic1 PGA gain
     index = mCodec_data->mAudio_Ana_Volume[AUDIO_ANALOG_VOLUME_MICAMP1];
-    printk("%s(),mic1 index=%d,index2=%d\n", __func__,index,index2);
     if (index > index2)
     {
         index = index2;
@@ -2575,7 +2418,6 @@ void SetMicPGAGain(void)
 
     //set mic2 PGA gain
     index = mCodec_data->mAudio_Ana_Volume[AUDIO_ANALOG_VOLUME_MICAMP2];
-    printk("%s(),mic2 index=%d,index2=%d\n", __func__,index,index2);
     if (index > index2)
     {
         index = index2;
@@ -2614,7 +2456,6 @@ static bool GetDacStatus(void)
 static bool TurnOnADcPowerACC(int ADCType, bool enable)
 {
     bool refmic_using_ADC_L;
-    printk("%s, ADCType=%d, enable=%x,AdcStatus=%x ,DLStatus=%x \n", __func__, ADCType,enable,GetAdcStatus(),GetDLStatus());
     if (enable)
     {
         uint32 SampleRate_VUL1 = mBlockSampleRate[AUDIO_ANALOG_DEVICE_IN_ADC];
@@ -2630,7 +2471,6 @@ static bool TurnOnADcPowerACC(int ADCType, bool enable)
             Ana_Set_Reg(ABB_AFE_CON1, GetULFrequency(SampleRate_VUL1) << 4, 0x0010); // UL sampling rate
 
 			#ifdef PMIC_RESET_WORKAROUND
-			printk("%s ,PMIC_RESET_WORKAROUND reset ABB_AFE_CON2/ABB_AFE_CON4 \n", __func__);
 			Ana_Set_Reg(ABB_AFE_CON2, 0x0, 0xffff); // reset to default value
 			Ana_Set_Reg(ABB_AFE_CON4, 0x0, 0xffff); // reset to default value
 			#endif
@@ -2733,7 +2573,6 @@ static bool TurnOnADcPowerACC(int ADCType, bool enable)
 
 static bool TurnOnADcPowerDmic(int ADCType, bool enable)
 {
-    printk("%s ADCType = %d enable = %d, AdcStatus=%x \n", __func__, ADCType, enable, GetAdcStatus());
 
     if (enable)
     {
@@ -2749,7 +2588,6 @@ static bool TurnOnADcPowerDmic(int ADCType, bool enable)
             Ana_Set_Reg(ABB_AFE_CON1, GetULFrequency(SampleRate_VUL1) << 4, 0x0010); // UL sampling rate
 
 			#ifdef PMIC_RESET_WORKAROUND
-			printk("%s ,PMIC_RESET_WORKAROUND reset ABB_AFE_CON2/ABB_AFE_CON4 \n", __func__);
 			Ana_Set_Reg(ABB_AFE_CON2, 0x0, 0xffff); // reset to default value
 			Ana_Set_Reg(ABB_AFE_CON4, 0x0, 0xffff); // reset to default value
 			#endif
@@ -2781,8 +2619,6 @@ static bool TurnOnADcPowerDmic(int ADCType, bool enable)
 
 static bool TurnOnADcPowerDCC(int ADCType, bool enable)
 {
-    printk("%s ADCType = %d enable = %d, not support \n", __func__, ADCType, enable);
-
     return true;
 }
 
@@ -2796,14 +2632,12 @@ static bool TurnOnADcPowerDCCECM(int ADCType, bool enable)
 
 static bool TurnOnVOWDigitalHW(bool enable)
 {
-    printk("%s enable = %d 82 no this\n", __func__, enable);
 
     return true;
 }
 
 static bool TurnOnVOWADcPowerACC(int MicType, bool enable)
 {
-    printk("%s, MicType=%d, enable = %d 82 no this\n", __func__, MicType,enable);
     return true;
 }
 
@@ -2855,14 +2689,12 @@ static const struct soc_enum Audio_UL_Enum[] =
 static int Audio_ADC1_Get(struct snd_kcontrol *kcontrol,
                           struct snd_ctl_elem_value *ucontrol)
 {
-    printk("Audio_ADC1_Get = %d\n", mCodec_data->mAudio_Ana_DevicePower[AUDIO_ANALOG_DEVICE_IN_ADC1]);
     ucontrol->value.integer.value[0] = mCodec_data->mAudio_Ana_DevicePower[AUDIO_ANALOG_DEVICE_IN_ADC1];
     return 0;
 }
 
 static int Audio_ADC1_Set(struct snd_kcontrol *kcontrol, struct snd_ctl_elem_value *ucontrol)
 {
-    printk("%s()\n", __func__);
     mutex_lock(&Ana_Power_Mutex);
     if (ucontrol->value.integer.value[0])
     {
@@ -2911,14 +2743,12 @@ static int Audio_ADC1_Set(struct snd_kcontrol *kcontrol, struct snd_ctl_elem_val
 static int Audio_ADC2_Get(struct snd_kcontrol *kcontrol,
                           struct snd_ctl_elem_value *ucontrol)
 {
-    printk("Audio_ADC2_Get = %d\n", mCodec_data->mAudio_Ana_DevicePower[AUDIO_ANALOG_DEVICE_IN_ADC2]);
     ucontrol->value.integer.value[0] = mCodec_data->mAudio_Ana_DevicePower[AUDIO_ANALOG_DEVICE_IN_ADC2];
     return 0;
 }
 
 static int Audio_ADC2_Set(struct snd_kcontrol *kcontrol, struct snd_ctl_elem_value *ucontrol)
 {
-    printk("%s()\n", __func__);
     mutex_lock(&Ana_Power_Mutex);
     if (ucontrol->value.integer.value[0])
     {
@@ -2989,18 +2819,15 @@ static int Audio_ADC4_Set(struct snd_kcontrol *kcontrol, struct snd_ctl_elem_val
 static int Audio_ADC1_Sel_Get(struct snd_kcontrol *kcontrol,
                               struct snd_ctl_elem_value *ucontrol)
 {
-    printk("%s() = %d\n", __func__, mCodec_data->mAudio_Ana_Mux[AUDIO_ANALOG_MUX_IN_MIC1]);
     ucontrol->value.integer.value[0] = mCodec_data->mAudio_Ana_Mux[AUDIO_ANALOG_MUX_IN_MIC1];
     return 0;
 }
 
 static int Audio_ADC1_Sel_Set(struct snd_kcontrol *kcontrol, struct snd_ctl_elem_value *ucontrol)
 {
-    printk("%s()\n", __func__);
 
     if (ucontrol->value.enumerated.item[0] > ARRAY_SIZE(Adc_Input_Sel))
     {
-        printk("return -EINVAL\n");
         return -EINVAL;
     }
 #if 0 //todo    
@@ -3019,10 +2846,8 @@ static int Audio_ADC1_Sel_Set(struct snd_kcontrol *kcontrol, struct snd_ctl_elem
     }
     else
     {
-        printk("%s() warning \n ", __func__);
     }
 #endif
-    printk("%s() done \n", __func__);
     mCodec_data->mAudio_Ana_Mux[AUDIO_ANALOG_MUX_IN_MIC1] = ucontrol->value.integer.value[0];
     return 0;
 }
@@ -3030,17 +2855,14 @@ static int Audio_ADC1_Sel_Set(struct snd_kcontrol *kcontrol, struct snd_ctl_elem
 static int Audio_ADC2_Sel_Get(struct snd_kcontrol *kcontrol,
                               struct snd_ctl_elem_value *ucontrol)
 {
-    printk("%s() = %d\n", __func__, mCodec_data->mAudio_Ana_Mux[AUDIO_ANALOG_MUX_IN_MIC2]);
     ucontrol->value.integer.value[0] = mCodec_data->mAudio_Ana_Mux[AUDIO_ANALOG_MUX_IN_MIC2];
     return 0;
 }
 
 static int Audio_ADC2_Sel_Set(struct snd_kcontrol *kcontrol, struct snd_ctl_elem_value *ucontrol)
 {
-    printk("%s()\n", __func__);
     if (ucontrol->value.enumerated.item[0] > ARRAY_SIZE(Adc_Input_Sel))
     {
-        printk("return -EINVAL\n");
         return -EINVAL;
     }
 #if 0 //todo    
@@ -3058,10 +2880,8 @@ static int Audio_ADC2_Sel_Set(struct snd_kcontrol *kcontrol, struct snd_ctl_elem
     }
     else
     {
-        printk("%s() warning \n ", __func__);
     }
 #endif
-    printk("%s() done \n", __func__);
     mCodec_data->mAudio_Ana_Mux[AUDIO_ANALOG_MUX_IN_MIC2] = ucontrol->value.integer.value[0];
     return 0;
 }
@@ -3091,7 +2911,6 @@ static int Audio_ADC4_Sel_Set(struct snd_kcontrol *kcontrol, struct snd_ctl_elem
 
 static bool AudioPreAmp1_Sel(int Mul_Sel)
 {
-    printk("%s Mul_Sel = %d ", __func__, Mul_Sel);
 #if 0 //todo    
     if (Mul_Sel == 0)
     {
@@ -3121,29 +2940,23 @@ static bool AudioPreAmp1_Sel(int Mul_Sel)
 static int Audio_PreAmp1_Get(struct snd_kcontrol *kcontrol,
                              struct snd_ctl_elem_value *ucontrol)
 {
-    printk("%s() mCodec_data->mAudio_Ana_Mux[AUDIO_ANALOG_MUX_IN_PREAMP_1]; = %d\n", __func__, mCodec_data->mAudio_Ana_Mux[AUDIO_ANALOG_MUX_IN_PREAMP_1]);
     ucontrol->value.integer.value[0] = mCodec_data->mAudio_Ana_Mux[AUDIO_ANALOG_MUX_IN_PREAMP_1];
     return 0;
 }
 
 static int Audio_PreAmp1_Set(struct snd_kcontrol *kcontrol, struct snd_ctl_elem_value *ucontrol)
 {
-    printk("%s()\n", __func__);
-
     if (ucontrol->value.enumerated.item[0] > ARRAY_SIZE(PreAmp_Mux_function))
     {
-        printk("return -EINVAL\n");
         return -EINVAL;
     }
     mCodec_data->mAudio_Ana_Mux[AUDIO_ANALOG_MUX_IN_PREAMP_1] = ucontrol->value.integer.value[0];
     AudioPreAmp1_Sel(mCodec_data->mAudio_Ana_Mux[AUDIO_ANALOG_MUX_IN_PREAMP_1]);
-    printk("%s() done \n", __func__);
     return 0;
 }
 
 static bool AudioPreAmp2_Sel(int Mul_Sel)
 {
-    printk("%s Mul_Sel = %d ", __func__, Mul_Sel);
 #if 0 //todo    
     if (Mul_Sel == 0)
     {
@@ -3173,23 +2986,19 @@ static bool AudioPreAmp2_Sel(int Mul_Sel)
 static int Audio_PreAmp2_Get(struct snd_kcontrol *kcontrol,
                              struct snd_ctl_elem_value *ucontrol)
 {
-    printk("%s() mCodec_data->mAudio_Ana_Mux[AUDIO_ANALOG_MUX_IN_PREAMP_2]; = %d\n", __func__, mCodec_data->mAudio_Ana_Mux[AUDIO_ANALOG_MUX_IN_PREAMP_2]);
     ucontrol->value.integer.value[0] = mCodec_data->mAudio_Ana_Mux[AUDIO_ANALOG_MUX_IN_PREAMP_2];
     return 0;
 }
 
 static int Audio_PreAmp2_Set(struct snd_kcontrol *kcontrol, struct snd_ctl_elem_value *ucontrol)
 {
-    printk("%s()\n", __func__);
 
     if (ucontrol->value.enumerated.item[0] > ARRAY_SIZE(PreAmp_Mux_function))
     {
-        printk("return -EINVAL\n");
         return -EINVAL;
     }
     mCodec_data->mAudio_Ana_Mux[AUDIO_ANALOG_MUX_IN_PREAMP_2] = ucontrol->value.integer.value[0];
     AudioPreAmp2_Sel(mCodec_data->mAudio_Ana_Mux[AUDIO_ANALOG_MUX_IN_PREAMP_2]);
-    printk("%s() done \n", __func__);
     return 0;
 }
 
@@ -3197,7 +3006,6 @@ static int Audio_PreAmp2_Set(struct snd_kcontrol *kcontrol, struct snd_ctl_elem_
 static int Audio_PGA1_Get(struct snd_kcontrol *kcontrol,
                           struct snd_ctl_elem_value *ucontrol)
 {
-    printk("Audio_PGA1_Get = %d\n", mCodec_data->mAudio_Ana_Volume[AUDIO_ANALOG_VOLUME_MICAMP1]);
     ucontrol->value.integer.value[0] = mCodec_data->mAudio_Ana_Volume[AUDIO_ANALOG_VOLUME_MICAMP1];
     return 0;
 }
@@ -3206,14 +3014,11 @@ static int Audio_PGA1_Set(struct snd_kcontrol *kcontrol, struct snd_ctl_elem_val
 {
     int index = 0;
     int index2 = 5;
-    printk("%s()\n", __func__);
     if (ucontrol->value.enumerated.item[0] > ARRAY_SIZE(ADC_UL_PGA_GAIN))
     {
-        printk("return -EINVAL\n");
         return -EINVAL;
     }
     index = ucontrol->value.integer.value[0];
-    printk("%s(),index=%d\n", __func__,index);
     //index = index / 6;
     if (index > index2)
     {
@@ -3221,7 +3026,6 @@ static int Audio_PGA1_Set(struct snd_kcontrol *kcontrol, struct snd_ctl_elem_val
     }
     //const int PreAmpGain[] = {-6, 0, 6, 12, 18, 24};
     //index2 -= index;
-    printk("%s(),index=%d,index2=%d\n", __func__,index,index2);
 
     Ana_Set_Reg(AUDTOP_CON0, index << 4, 0x00000070);
 
@@ -3233,7 +3037,6 @@ static int Audio_PGA1_Set(struct snd_kcontrol *kcontrol, struct snd_ctl_elem_val
 static int Audio_PGA2_Get(struct snd_kcontrol *kcontrol,
                           struct snd_ctl_elem_value *ucontrol)
 {
-    printk("Audio_PGA2_Get = %d\n", mCodec_data->mAudio_Ana_Volume[AUDIO_ANALOG_VOLUME_MICAMP2]);
     ucontrol->value.integer.value[0] = mCodec_data->mAudio_Ana_Volume[AUDIO_ANALOG_VOLUME_MICAMP2];
     return 0;
 }
@@ -3242,14 +3045,11 @@ static int Audio_PGA2_Set(struct snd_kcontrol *kcontrol, struct snd_ctl_elem_val
 {
     int index = 0;
     int index2 = 5;
-    printk("%s()\n", __func__);
     if (ucontrol->value.enumerated.item[0] > ARRAY_SIZE(ADC_UL_PGA_GAIN))
     {
-        printk("return -EINVAL\n");
         return -EINVAL;
     }
     index = ucontrol->value.integer.value[0];
-    printk("%s(),index=%d\n", __func__,index);
 
     if (index > index2)
     {
@@ -3257,8 +3057,6 @@ static int Audio_PGA2_Set(struct snd_kcontrol *kcontrol, struct snd_ctl_elem_val
     }
     //const int PreAmpGain[] = {-6, 0, 6, 12, 18, 24};
 
-    printk("%s(),index=%d\n", __func__,index);
-
     Ana_Set_Reg(AUDTOP_CON1, index << 8, 0x00000700);
 
     mCodec_data->mAudio_Ana_Volume[AUDIO_ANALOG_VOLUME_MICAMP2] = ucontrol->value.integer.value[0];
@@ -3290,7 +3088,6 @@ static int Audio_PGA4_Set(struct snd_kcontrol *kcontrol, struct snd_ctl_elem_val
 static int Audio_MicSource1_Get(struct snd_kcontrol *kcontrol,
                                 struct snd_ctl_elem_value *ucontrol)
 {
-    printk("Audio_MicSource1_Get = %d\n", mCodec_data->mAudio_Ana_Mux[AUDIO_MICSOURCE_MUX_IN_1]);
     ucontrol->value.integer.value[0] = mCodec_data->mAudio_Ana_Mux[AUDIO_MICSOURCE_MUX_IN_1];
     return 0;
 }
@@ -3299,14 +3096,11 @@ static int Audio_MicSource1_Set(struct snd_kcontrol *kcontrol, struct snd_ctl_el
 {
     //80 used for ADC1 Mic source selection, "ADC1" is main_mic, "ADC2" is headset_mic, "ADC3" is ref main
     int index = 0;
-    printk("%s()\n", __func__);
     if (ucontrol->value.enumerated.item[0] > ARRAY_SIZE(Pmic_Digital_Mux))
     {
-        printk("return -EINVAL\n");
         return -EINVAL;
     }
     index = ucontrol->value.integer.value[0];
-    printk("%s() index = %d done \n", __func__, index);
     mCodec_data->mAudio_Ana_Mux[AUDIO_MICSOURCE_MUX_IN_1] = ucontrol->value.integer.value[0];
 
     return 0;
@@ -3315,7 +3109,6 @@ static int Audio_MicSource1_Set(struct snd_kcontrol *kcontrol, struct snd_ctl_el
 static int Audio_MicSource2_Get(struct snd_kcontrol *kcontrol,
                                 struct snd_ctl_elem_value *ucontrol)
 {
-    printk("Audio_MicSource2_Get = %d\n", mCodec_data->mAudio_Ana_Mux[AUDIO_MICSOURCE_MUX_IN_2]);
     ucontrol->value.integer.value[0] = mCodec_data->mAudio_Ana_Mux[AUDIO_MICSOURCE_MUX_IN_2];
     return 0;
 }
@@ -3323,14 +3116,11 @@ static int Audio_MicSource2_Get(struct snd_kcontrol *kcontrol,
 static int Audio_MicSource2_Set(struct snd_kcontrol *kcontrol, struct snd_ctl_elem_value *ucontrol)
 {
     int index = 0;
-    printk("%s()\n", __func__);
     if (ucontrol->value.enumerated.item[0] > ARRAY_SIZE(Pmic_Digital_Mux))
     {
-        printk("return -EINVAL\n");
         return -EINVAL;
     }
     index = ucontrol->value.integer.value[0];
-    printk("%s() index = %d done \n", __func__, index);
     mCodec_data->mAudio_Ana_Mux[AUDIO_MICSOURCE_MUX_IN_2] = ucontrol->value.integer.value[0];
     
     return 0;
@@ -3363,42 +3153,34 @@ static int Audio_MicSource4_Set(struct snd_kcontrol *kcontrol, struct snd_ctl_el
 static int Audio_Mic1_Mode_Select_Get(struct snd_kcontrol *kcontrol,
                                       struct snd_ctl_elem_value *ucontrol)
 {
-    printk("%s() mAudio_Analog_Mic1_mode = %d\n", __func__, mAudio_Analog_Mic1_mode);
     ucontrol->value.integer.value[0] = mAudio_Analog_Mic1_mode;
     return 0;
 }
 
 static int Audio_Mic1_Mode_Select_Set(struct snd_kcontrol *kcontrol, struct snd_ctl_elem_value *ucontrol)
 {
-    printk("%s()\n", __func__);
     if (ucontrol->value.enumerated.item[0] > ARRAY_SIZE(Audio_AnalogMic_Mode))
     {
-        printk("return -EINVAL\n");
         return -EINVAL;
     }
     mAudio_Analog_Mic1_mode = ucontrol->value.integer.value[0];
-    printk("%s() mAudio_Analog_Mic1_mode = %d \n", __func__, mAudio_Analog_Mic1_mode);
     return 0;
 }
 
 static int Audio_Mic2_Mode_Select_Get(struct snd_kcontrol *kcontrol,
                                       struct snd_ctl_elem_value *ucontrol)
 {
-    printk("%s()  = %d\n", __func__, mAudio_Analog_Mic2_mode);
     ucontrol->value.integer.value[0] = mAudio_Analog_Mic2_mode;
     return 0;
 }
 
 static int Audio_Mic2_Mode_Select_Set(struct snd_kcontrol *kcontrol, struct snd_ctl_elem_value *ucontrol)
 {
-    printk("%s()\n", __func__);
     if (ucontrol->value.enumerated.item[0] > ARRAY_SIZE(Audio_AnalogMic_Mode))
     {
-        printk("return -EINVAL\n");
         return -EINVAL;
     }
     mAudio_Analog_Mic2_mode = ucontrol->value.integer.value[0];
-    printk("%s() mAudio_Analog_Mic2_mode = %d \n", __func__, mAudio_Analog_Mic2_mode);
     return 0;
 }
 
@@ -3406,63 +3188,51 @@ static int Audio_Mic2_Mode_Select_Set(struct snd_kcontrol *kcontrol, struct snd_
 static int Audio_Mic3_Mode_Select_Get(struct snd_kcontrol *kcontrol,
                                       struct snd_ctl_elem_value *ucontrol)
 {
-    printk("%s()  = %d\n", __func__, mAudio_Analog_Mic3_mode);
     ucontrol->value.integer.value[0] = mAudio_Analog_Mic3_mode;
     return 0;
 }
 
 static int Audio_Mic3_Mode_Select_Set(struct snd_kcontrol *kcontrol, struct snd_ctl_elem_value *ucontrol)
 {
-    printk("%s()\n", __func__);
     if (ucontrol->value.enumerated.item[0] > ARRAY_SIZE(Audio_AnalogMic_Mode))
     {
-        printk("return -EINVAL\n");
         return -EINVAL;
     }
     mAudio_Analog_Mic3_mode = ucontrol->value.integer.value[0];
-    printk("%s() mAudio_Analog_Mic3_mode = %d \n", __func__, mAudio_Analog_Mic3_mode);
     return 0;
 }
 
 static int Audio_Mic4_Mode_Select_Get(struct snd_kcontrol *kcontrol,
                                       struct snd_ctl_elem_value *ucontrol)
 {
-    printk("%s()  = %d\n", __func__, mAudio_Analog_Mic4_mode);
     ucontrol->value.integer.value[0] = mAudio_Analog_Mic4_mode;
     return 0;
 }
 
 static int Audio_Mic4_Mode_Select_Set(struct snd_kcontrol *kcontrol, struct snd_ctl_elem_value *ucontrol)
 {
-    printk("%s()\n", __func__);
     if (ucontrol->value.enumerated.item[0] > ARRAY_SIZE(Audio_AnalogMic_Mode))
     {
-        printk("return -EINVAL\n");
         return -EINVAL;
     }
     mAudio_Analog_Mic4_mode = ucontrol->value.integer.value[0];
-    printk("%s() mAudio_Analog_Mic4_mode = %d \n", __func__, mAudio_Analog_Mic4_mode);
     return 0;
 }
 
 static int Audio_Adc_Power_Mode_Get(struct snd_kcontrol *kcontrol,
                                     struct snd_ctl_elem_value *ucontrol)
 {
-    printk("%s()  = %d\n", __func__, mAdc_Power_Mode);
     ucontrol->value.integer.value[0] = mAdc_Power_Mode;
     return 0;
 }
 
 static int Audio_Adc_Power_Mode_Set(struct snd_kcontrol *kcontrol, struct snd_ctl_elem_value *ucontrol)
 {
-    printk("%s()\n", __func__);
     if (ucontrol->value.enumerated.item[0] > ARRAY_SIZE(ADC_power_mode))
     {
-        printk("return -EINVAL\n");
         return -EINVAL;
     }
     mAdc_Power_Mode = ucontrol->value.integer.value[0];
-    printk("%s() mAdc_Power_Mode = %d \n", __func__, mAdc_Power_Mode);
     return 0;
 }
 
@@ -3470,17 +3240,14 @@ static int Audio_Adc_Power_Mode_Set(struct snd_kcontrol *kcontrol, struct snd_ct
 static int Audio_Vow_ADC_Func_Switch_Get(struct snd_kcontrol *kcontrol,
                                          struct snd_ctl_elem_value *ucontrol)
 {
-    printk("%s()  = %d\n", __func__, mAudio_Vow_Analog_Func_Enable);
     ucontrol->value.integer.value[0] = mAudio_Vow_Analog_Func_Enable;
     return 0;
 }
 
 static int Audio_Vow_ADC_Func_Switch_Set(struct snd_kcontrol *kcontrol, struct snd_ctl_elem_value *ucontrol)
 {
-    printk("%s()\n", __func__);
     if (ucontrol->value.enumerated.item[0] > ARRAY_SIZE(Audio_VOW_ADC_Function))
     {
-        printk("return -EINVAL\n");
         return -EINVAL;
     }
 
@@ -3494,24 +3261,20 @@ static int Audio_Vow_ADC_Func_Switch_Set(struct snd_kcontrol *kcontrol, struct s
     }
 
     mAudio_Vow_Analog_Func_Enable = ucontrol->value.integer.value[0];
-    printk("%s() mAudio_Vow_Analog_Func_Enable = %d \n", __func__, mAudio_Vow_Analog_Func_Enable);
     return 0;
 }
 
 static int Audio_Vow_Digital_Func_Switch_Get(struct snd_kcontrol *kcontrol,
                                              struct snd_ctl_elem_value *ucontrol)
 {
-    printk("%s()  = %d\n", __func__, mAudio_Vow_Digital_Func_Enable);
     ucontrol->value.integer.value[0] = mAudio_Vow_Digital_Func_Enable;
     return 0;
 }
 
 static int Audio_Vow_Digital_Func_Switch_Set(struct snd_kcontrol *kcontrol, struct snd_ctl_elem_value *ucontrol)
 {
-    printk("%s()\n", __func__);
     if (ucontrol->value.enumerated.item[0] > ARRAY_SIZE(Audio_VOW_Digital_Function))
     {
-        printk("return -EINVAL\n");
         return -EINVAL;
     }
 
@@ -3525,7 +3288,6 @@ static int Audio_Vow_Digital_Func_Switch_Set(struct snd_kcontrol *kcontrol, stru
     }
 
     mAudio_Vow_Digital_Func_Enable = ucontrol->value.integer.value[0];
-    printk("%s() mAudio_Vow_Digital_Func_Enable = %d \n", __func__, mAudio_Vow_Digital_Func_Enable);
     return 0;
 }
 
@@ -3533,21 +3295,17 @@ static int Audio_Vow_Digital_Func_Switch_Set(struct snd_kcontrol *kcontrol, stru
 static int Audio_Vow_MIC_Type_Select_Get(struct snd_kcontrol *kcontrol,
                                          struct snd_ctl_elem_value *ucontrol)
 {
-    printk("%s()  = %d\n", __func__, mAudio_VOW_Mic_type);
     ucontrol->value.integer.value[0] = mAudio_VOW_Mic_type;
     return 0;
 }
 
 static int Audio_Vow_MIC_Type_Select_Set(struct snd_kcontrol *kcontrol, struct snd_ctl_elem_value *ucontrol)
 {
-    printk("%s()\n", __func__);
     if (ucontrol->value.enumerated.item[0] > ARRAY_SIZE(Audio_VOW_MIC_Type))
     {
-        printk("return -EINVAL\n");
         return -EINVAL;
     }
     mAudio_VOW_Mic_type = ucontrol->value.integer.value[0];
-    printk("%s() mAudio_VOW_Mic_type = %d \n", __func__, mAudio_VOW_Mic_type);
     return 0;
 }
 
@@ -3556,7 +3314,6 @@ static int Audio_Vow_Cfg0_Get(struct snd_kcontrol *kcontrol,
                               struct snd_ctl_elem_value *ucontrol)
 {
     int value = /*Ana_Get_Reg(AFE_VOW_CFG0)*/reg_AFE_VOW_CFG0;
-    printk("%s()  = %d\n", __func__, value);
     ucontrol->value.integer.value[0] = value;
     return 0;
 }
@@ -3564,7 +3321,6 @@ static int Audio_Vow_Cfg0_Get(struct snd_kcontrol *kcontrol,
 static int Audio_Vow_Cfg0_Set(struct snd_kcontrol *kcontrol,
                               struct snd_ctl_elem_value *ucontrol)
 {
-    printk("%s()  = %d\n", __func__, (int)(ucontrol->value.integer.value[0]));
     //Ana_Set_Reg(AFE_VOW_CFG0, ucontrol->value.integer.value[0], 0xffff);
     reg_AFE_VOW_CFG0 = ucontrol->value.integer.value[0];
     return 0;
@@ -3574,7 +3330,6 @@ static int Audio_Vow_Cfg1_Get(struct snd_kcontrol *kcontrol,
                               struct snd_ctl_elem_value *ucontrol)
 {
     int value = /*Ana_Get_Reg(AFE_VOW_CFG1)*/reg_AFE_VOW_CFG1;
-    printk("%s()  = %d\n", __func__, value);
     ucontrol->value.integer.value[0] = value;
     return 0;
 }
@@ -3582,7 +3337,6 @@ static int Audio_Vow_Cfg1_Get(struct snd_kcontrol *kcontrol,
 static int Audio_Vow_Cfg1_Set(struct snd_kcontrol *kcontrol,
                               struct snd_ctl_elem_value *ucontrol)
 {
-    printk("%s()  = %ld\n", __func__, ucontrol->value.integer.value[0]);
     //Ana_Set_Reg(AFE_VOW_CFG1, ucontrol->value.integer.value[0], 0xffff);
     reg_AFE_VOW_CFG1 = ucontrol->value.integer.value[0];
     return 0;
@@ -3592,7 +3346,6 @@ static int Audio_Vow_Cfg2_Get(struct snd_kcontrol *kcontrol,
                               struct snd_ctl_elem_value *ucontrol)
 {
     int value = /*Ana_Get_Reg(AFE_VOW_CFG2)*/reg_AFE_VOW_CFG2;
-    printk("%s()  = %d\n", __func__, value);
     ucontrol->value.integer.value[0] = value;
     return 0;
 }
@@ -3600,7 +3353,6 @@ static int Audio_Vow_Cfg2_Get(struct snd_kcontrol *kcontrol,
 static int Audio_Vow_Cfg2_Set(struct snd_kcontrol *kcontrol,
                               struct snd_ctl_elem_value *ucontrol)
 {
-    printk("%s()  = %ld\n", __func__, ucontrol->value.integer.value[0]);
     //Ana_Set_Reg(AFE_VOW_CFG2, ucontrol->value.integer.value[0], 0xffff);
     reg_AFE_VOW_CFG2 = ucontrol->value.integer.value[0];
     return 0;
@@ -3610,7 +3362,6 @@ static int Audio_Vow_Cfg3_Get(struct snd_kcontrol *kcontrol,
                               struct snd_ctl_elem_value *ucontrol)
 {
     int value = /*Ana_Get_Reg(AFE_VOW_CFG3)*/reg_AFE_VOW_CFG3;
-    printk("%s()  = %d\n", __func__, value);
     ucontrol->value.integer.value[0] = value;
     return 0;
 }
@@ -3618,7 +3369,6 @@ static int Audio_Vow_Cfg3_Get(struct snd_kcontrol *kcontrol,
 static int Audio_Vow_Cfg3_Set(struct snd_kcontrol *kcontrol,
                               struct snd_ctl_elem_value *ucontrol)
 {
-    printk("%s()  = %ld\n", __func__, ucontrol->value.integer.value[0]);
     //Ana_Set_Reg(AFE_VOW_CFG3, ucontrol->value.integer.value[0], 0xffff);
     reg_AFE_VOW_CFG3 = ucontrol->value.integer.value[0];
     return 0;
@@ -3628,7 +3378,6 @@ static int Audio_Vow_Cfg4_Get(struct snd_kcontrol *kcontrol,
                               struct snd_ctl_elem_value *ucontrol)
 {
     int value = /*Ana_Get_Reg(AFE_VOW_CFG4)*/reg_AFE_VOW_CFG4;
-    printk("%s()  = %d\n", __func__, value);
     ucontrol->value.integer.value[0] = value;
     return 0;
 }
@@ -3636,7 +3385,6 @@ static int Audio_Vow_Cfg4_Get(struct snd_kcontrol *kcontrol,
 static int Audio_Vow_Cfg4_Set(struct snd_kcontrol *kcontrol,
                               struct snd_ctl_elem_value *ucontrol)
 {
-    printk("%s()  = %ld\n", __func__, ucontrol->value.integer.value[0]);
     //Ana_Set_Reg(AFE_VOW_CFG4, ucontrol->value.integer.value[0], 0xffff);
     reg_AFE_VOW_CFG4 = ucontrol->value.integer.value[0];
     return 0;
@@ -3646,7 +3394,6 @@ static int Audio_Vow_Cfg5_Get(struct snd_kcontrol *kcontrol,
                               struct snd_ctl_elem_value *ucontrol)
 {
     int value = /*Ana_Get_Reg(AFE_VOW_CFG5)*/reg_AFE_VOW_CFG5;
-    printk("%s()  = %d\n", __func__, value);
     ucontrol->value.integer.value[0] = value;
     return 0;
 }
@@ -3654,7 +3401,6 @@ static int Audio_Vow_Cfg5_Get(struct snd_kcontrol *kcontrol,
 static int Audio_Vow_Cfg5_Set(struct snd_kcontrol *kcontrol,
                               struct snd_ctl_elem_value *ucontrol)
 {
-    printk("%s()  = %ld\n", __func__, ucontrol->value.integer.value[0]);
     //Ana_Set_Reg(AFE_VOW_CFG5, ucontrol->value.integer.value[0], 0xffff);
     reg_AFE_VOW_CFG5 = ucontrol->value.integer.value[0];
     return 0;
@@ -3664,7 +3410,6 @@ static int Audio_Vow_State_Get(struct snd_kcontrol *kcontrol,
                                struct snd_ctl_elem_value *ucontrol)
 {
     int value = mIsVOWOn;
-    printk("%s()  = %d\n", __func__, value);
     ucontrol->value.integer.value[0] = value;
     return 0;
 }
@@ -3672,7 +3417,6 @@ static int Audio_Vow_State_Get(struct snd_kcontrol *kcontrol,
 static int Audio_Vow_State_Set(struct snd_kcontrol *kcontrol,
                                struct snd_ctl_elem_value *ucontrol)
 {
-    //printk("%s()  = %ld\n", __func__, ucontrol->value.integer.value[0]);
     //reg_AFE_VOW_CFG5 = ucontrol->value.integer.value[0];
     return 0;
 }
@@ -3703,7 +3447,6 @@ static int SineTable_UL2_Set(struct snd_kcontrol *kcontrol, struct snd_ctl_elem_
 static int SineTable_UL2_Get(struct snd_kcontrol *kcontrol,
                              struct snd_ctl_elem_value *ucontrol)
 {
-    printk("%s()\n", __func__);
     ucontrol->value.integer.value[0] = SineTable_UL2_flag;
     return 0;
 }
@@ -3711,7 +3454,6 @@ static int SineTable_UL2_Get(struct snd_kcontrol *kcontrol,
 static int SineTable_DAC_HP_Get(struct snd_kcontrol *kcontrol,
                                 struct snd_ctl_elem_value *ucontrol)
 {
-    printk("%s()\n", __func__);
     ucontrol->value.integer.value[0] = SineTable_DAC_HP_flag;
     return 0;
 }
@@ -3719,7 +3461,6 @@ static int SineTable_DAC_HP_Get(struct snd_kcontrol *kcontrol,
 static int SineTable_DAC_HP_Set(struct snd_kcontrol *kcontrol, struct snd_ctl_elem_value *ucontrol)
 {
     //TODO?
-    printk("%s()\n", __func__);
     return 0;
 }
 
@@ -3732,14 +3473,12 @@ static bool DAC_LOOP_DAC_HS_flag = false;
 static int ADC_LOOP_DAC_HS_Get(struct snd_kcontrol *kcontrol,
                                struct snd_ctl_elem_value *ucontrol)
 {
-    printk("%s()\n", __func__);
     ucontrol->value.integer.value[0] = DAC_LOOP_DAC_HS_flag;
     return 0;
 }
 
 static int ADC_LOOP_DAC_HS_Set(struct snd_kcontrol *kcontrol, struct snd_ctl_elem_value *ucontrol)
 {
-    printk("%s()\n", __func__);
     if (ucontrol->value.integer.value[0])
     {
         DAC_LOOP_DAC_HS_flag = ucontrol->value.integer.value[0];
@@ -3757,7 +3496,6 @@ static bool DAC_LOOP_DAC_HP_flag = false;
 static int ADC_LOOP_DAC_HP_Get(struct snd_kcontrol *kcontrol,
                                struct snd_ctl_elem_value *ucontrol)
 {
-    printk("%s()\n", __func__);
     ucontrol->value.integer.value[0] = DAC_LOOP_DAC_HP_flag;
     return 0;
 }
@@ -3765,7 +3503,6 @@ static int ADC_LOOP_DAC_HP_Get(struct snd_kcontrol *kcontrol,
 static int ADC_LOOP_DAC_HP_Set(struct snd_kcontrol *kcontrol, struct snd_ctl_elem_value *ucontrol)
 {
 
-    printk("%s()\n", __func__);
     if (ucontrol->value.integer.value[0])
     {
         DAC_LOOP_DAC_HP_flag = ucontrol->value.integer.value[0];
@@ -3783,14 +3520,12 @@ static bool Voice_Call_DAC_DAC_HS_flag = false;
 static int Voice_Call_DAC_DAC_HS_Get(struct snd_kcontrol *kcontrol,
                                      struct snd_ctl_elem_value *ucontrol)
 {
-    printk("%s()\n", __func__);
     ucontrol->value.integer.value[0] = Voice_Call_DAC_DAC_HS_flag;
     return 0;
 }
 
 static int Voice_Call_DAC_DAC_HS_Set(struct snd_kcontrol *kcontrol, struct snd_ctl_elem_value *ucontrol)
 {
-    printk("%s()\n", __func__);
     return 0;
 }
 
@@ -3873,7 +3608,6 @@ static const struct snd_soc_dapm_route mtk_audio_map[] =
 
 static void mt6350_codec_init_reg(struct snd_soc_codec *codec)
 {
-    printk("%s  \n", __func__);
 #if 0 //todo    
     Ana_Set_Reg(TOP_CLKSQ, 0x0 , 0x0001); //Disable CLKSQ 26MHz
     Ana_Set_Reg(AUDDEC_ANA_CON8, 0x0002, 0x0002); // disable AUDGLB
@@ -3883,16 +3617,13 @@ static void mt6350_codec_init_reg(struct snd_soc_codec *codec)
     //need to set this when boot up
     AudDrv_Clk_On();
     audckbufEnable(true);
-    printk("%s, reset pmic  \n", __func__);
     Ana_Set_Reg(TOP_RST_CON_SET, 0x4, 0x0004);
     Ana_Set_Reg(TOP_RST_CON_CLR, 0x4, 0x0004);
-    printk("%s, reset pmic  done\n", __func__);
     Ana_Set_Reg(AUDTOP_CON0, 0x0002, 0x000F); // Set UL PGA L MUX as open
     Ana_Set_Reg(AUDTOP_CON1, 0x0020, 0x00F0); // Set UL PGA R MUX as open
     Ana_Set_Reg(AUDTOP_CON5, 0x1114, 0xFFFF); // Set audio DAC Bias to 50%
     Ana_Set_Reg(AUDTOP_CON6, 0x37A2, 0xFFFF);
     Ana_Set_Reg(AUDTOP_CON6, 0x37E2, 0xFFFF); // Enable the depop MUX of HP drivers
-    printk("%s, inverse pmic clk gpio\n", __func__);
     pmic_config_interface(0xc060,0x1,0x1, 7); // [7:7]: GPIO_inv, inverse the PMIC gpio clk, ALPS02247074
     audckbufEnable(false);
     AudDrv_Clk_Off();
@@ -3901,7 +3632,6 @@ static void mt6350_codec_init_reg(struct snd_soc_codec *codec)
 
 void InitCodecDefault(void)
 {
-    printk("%s\n", __func__);
     mCodec_data->mAudio_Ana_Volume[AUDIO_ANALOG_VOLUME_MICAMP1] = 3;
     mCodec_data->mAudio_Ana_Volume[AUDIO_ANALOG_VOLUME_MICAMP2] = 3;
     mCodec_data->mAudio_Ana_Volume[AUDIO_ANALOG_VOLUME_MICAMP3] = 3;
@@ -3918,7 +3648,6 @@ void InitCodecDefault(void)
 static int mt6350_codec_probe(struct snd_soc_codec *codec)
 {
     struct snd_soc_dapm_context *dapm = &codec->dapm;
-    printk("%s()\n", __func__);
     if (mInitCodec == true)
     {
         return 0;
@@ -3951,7 +3680,6 @@ static int mt6350_codec_probe(struct snd_soc_codec *codec)
     mCodec_data = kzalloc(sizeof(mt6350_Codec_Data_Priv), GFP_KERNEL);
     if (!mCodec_data)
     {
-        printk("Failed to allocate private data\n");
         return -ENOMEM;
     }
     snd_soc_codec_set_drvdata(codec, mCodec_data);
@@ -3966,14 +3694,12 @@ static int mt6350_codec_probe(struct snd_soc_codec *codec)
 
 static int mt6350_codec_remove(struct snd_soc_codec *codec)
 {
-    printk("%s()\n", __func__);
     return 0;
 }
 
 static unsigned int mt6350_read(struct snd_soc_codec *codec,
                                 unsigned int reg)
 {
-    printk("mt6350_read reg = 0x%x", reg);
     Ana_Get_Reg(reg);
     return 0;
 }
@@ -3981,7 +3707,6 @@ static unsigned int mt6350_read(struct snd_soc_codec *codec,
 static int mt6350_write(struct snd_soc_codec *codec, unsigned int reg,
                         unsigned int value)
 {
-    printk("mt6350_write reg = 0x%x  value= 0x%x\n", reg, value);
     Ana_Set_Reg(reg , value , 0xffffffff);
     return 0;
 }
@@ -4033,15 +3758,12 @@ static int mtk_mt6350_codec_dev_probe(struct platform_device *pdev)
         dev_set_name(&pdev->dev, "%s", MT_SOC_CODEC_NAME);
     }
 
-    printk("%s: dev name %s\n", __func__, dev_name(&pdev->dev));
     return snd_soc_register_codec(&pdev->dev,
                                   &soc_mtk_codec, mtk_6350_dai_codecs, ARRAY_SIZE(mtk_6350_dai_codecs));
 }
 
 static int mtk_mt6350_codec_dev_remove(struct platform_device *pdev)
 {
-    printk("%s:\n", __func__);
-
     snd_soc_unregister_codec(&pdev->dev);
     return 0;
 
@@ -4131,7 +3853,6 @@ static struct platform_device *soc_mtk_codec6350_dev;
 static int __init mtk_mt6350_codec_init(void)
 {
     int ret = 0;
-    printk("%s:\n", __func__);
 #ifdef CONFIG_OF
     //Auddrv_getGPIO_info();
 #else
@@ -4155,8 +3876,6 @@ module_init(mtk_mt6350_codec_init);
 
 static void __exit mtk_mt6350_codec_exit(void)
 {
-    printk("%s:\n", __func__);
-
     platform_driver_unregister(&mtk_codec_6350_driver);
 }
 
diff --git a/sound/soc/mediatek/mt_soc_audio_6580/mt_soc_codec_dummy.c b/sound/soc/mediatek/mt_soc_audio_6580/mt_soc_codec_dummy.c
index e7aed1fde..75d26c72a 100644
--- a/sound/soc/mediatek/mt_soc_audio_6580/mt_soc_codec_dummy.c
+++ b/sound/soc/mediatek/mt_soc_audio_6580/mt_soc_codec_dummy.c
@@ -500,13 +500,11 @@ static struct snd_soc_dai_driver dummy_6323_dai_codecs[] =
 
 static int dummy_codec_probe(struct snd_soc_codec *codec)
 {
-    printk("%s()\n", __func__);
     return 0;
 }
 
 static int dummy_codec_remove(struct snd_soc_codec *codec)
 {
-    printk("%s()\n", __func__);
     return 0;
 }
 
@@ -530,14 +528,12 @@ static int mtk_dummy_codec_dev_probe(struct platform_device *pdev)
         dev_set_name(&pdev->dev, "%s", MT_SOC_CODEC_DUMMY_NAME);
     }
 
-    printk("%s: dev name %s\n", __func__, dev_name(&pdev->dev));
     return snd_soc_register_codec(&pdev->dev,
                                   &soc_mtk_codec, dummy_6323_dai_codecs, ARRAY_SIZE(dummy_6323_dai_codecs));
 }
 
 static int mtk_dummy_codec_dev_remove(struct platform_device *pdev)
 {
-    printk("%s:\n", __func__);
 
     snd_soc_unregister_codec(&pdev->dev);
     return 0;
@@ -571,7 +567,6 @@ static struct platform_device *soc_mtk_codec_dummy_dev;
 static int __init mtk_dummy_codec_init(void)
 {
     int ret = 0;
-    printk("%s:\n", __func__);
     #ifndef CONFIG_OF		
     soc_mtk_codec_dummy_dev = platform_device_alloc(MT_SOC_CODEC_DUMMY_NAME, -1);
     if (!soc_mtk_codec_dummy_dev)
@@ -593,7 +588,6 @@ module_init(mtk_dummy_codec_init);
 
 static void __exit mtk_codec_dummy_exit(void)
 {
-    printk("%s:\n", __func__);
 
     platform_driver_unregister(&mtk_codec_dummy_driver);
 }
diff --git a/sound/soc/mediatek/mt_soc_audio_6580/mt_soc_codec_speaker_63xx.c b/sound/soc/mediatek/mt_soc_audio_6580/mt_soc_codec_speaker_63xx.c
index faa12dace..939e9b5ba 100644
--- a/sound/soc/mediatek/mt_soc_audio_6580/mt_soc_codec_speaker_63xx.c
+++ b/sound/soc/mediatek/mt_soc_audio_6580/mt_soc_codec_speaker_63xx.c
@@ -79,7 +79,6 @@ void Speaker_ClassD_Open(void)
     uint32 retyrcount = 10;
     uint32 WaitforReady = 0;
     
-    printk("%s\n", __func__);
 
     Ana_Set_Reg(SPK_CON2, 0x0214, 0xffff); // enable classAB OC function            
     //Ana_Set_Reg(SPK_CON9, 0x0400, 0xffff); // Set Spk 6dB gain
@@ -88,7 +87,6 @@ void Speaker_ClassD_Open(void)
     Ana_Set_Reg(SPK_CON0, 0x3008, 0xffff); // enable SPK-Amp with 0dB gain, enable SPK amp offset triming, select class D mode
     Ana_Set_Reg(SPK_CON0, 0x3009, 0xffff); // Enable Class ABD
 
-    printk("%s, SpkTrim Stage 0 SPK_CON1 %x\n", __func__, Ana_Get_Reg(SPK_CON1));
     do
     {
         //msleep(5);
@@ -96,22 +94,18 @@ void Speaker_ClassD_Open(void)
         WaitforReady = Ana_Get_Reg(SPK_CON1);
         WaitforReady = (WaitforReady & 0x8000);
         retyrcount--;
-        printk("%s, SpkTrim Stage 0.5 SPK_CON1 %x %d \n", __func__, WaitforReady, retyrcount);
     }
     while ((WaitforReady == 0) && (retyrcount > 0));
-    printk("%s, SpkTrim Stage 1 SPK_CON1 %x\n", __func__, Ana_Get_Reg(SPK_CON1));
 
 
     Ana_Set_Reg(SPK_CON9,0x0000,0x0018); // Set Spk 6dB gain. VCM fast.
     Ana_Set_Reg(SPK_CON0,0x3001,0xffff); // enable SPK AMP with 0dB gain, select Class D. enable Amp.
     
-    printk("%s, SpkTrim Stage 2 SPK_CON1 %x\n", __func__, Ana_Get_Reg(SPK_CON1));
     
 }
 
 void Speaker_ClassD_close(void)
 {
-    printk("%s\n", __func__);
 
     Ana_Set_Reg(SPK_CON0, 0x0004, 0xffff); // Mute Spk amp, select to original class AB mode. disable class-D Amp
 }
@@ -123,7 +117,6 @@ void Speaker_ClassAB_Open(void)
     uint32 retyrcount = 10;
     uint32 WaitforReady = 0;
     
-    printk("%s\n", __func__);
 
     Ana_Set_Reg(SPK_CON2, 0x0214, 0xffff); // enable classAB OC function
     //Ana_Set_Reg(SPK_CON9, 0x0400, 0xffff); // Set Spk 6dB gain
@@ -132,7 +125,6 @@ void Speaker_ClassAB_Open(void)
     Ana_Set_Reg(SPK_CON0, 0x3008, 0xffff); // enable SPK-Amp with 0dB gain, enable SPK amp offset triming, select class D mode
     Ana_Set_Reg(SPK_CON0, 0x3009, 0xffff); // Enable Class ABD
 
-    printk("%s, SpkTrim Stage 0 SPK_CON1 %x\n", __func__, Ana_Get_Reg(SPK_CON1));
     do
     {
         //msleep(5);
@@ -140,29 +132,24 @@ void Speaker_ClassAB_Open(void)
         WaitforReady = Ana_Get_Reg(SPK_CON1);
         WaitforReady = (WaitforReady & 0x8000);
         retyrcount--;
-        printk("%s, SpkTrim Stage 0.5 SPK_CON1 %x %d \n", __func__, WaitforReady, retyrcount);
     }
     while ((WaitforReady == 0) && (retyrcount > 0));
-    printk("%s, SpkTrim Stage 1 SPK_CON1 %x\n", __func__, Ana_Get_Reg(SPK_CON1));
 
     Ana_Set_Reg(SPK_CON0, 0x3008, 0xffff);
     Ana_Set_Reg(SPK_CON0, 0x3004, 0xffff); 
     Ana_Set_Reg(SPK_CON9, 0x0000, 0x0018); // Set Spk 6dB gain. VCM fast.
     Ana_Set_Reg(SPK_CON0, 0x3005, 0xffff); // enable SPK AMP with 0dB gain, select Class AB. enable Amp.
-    printk("%s, SpkTrim Stage 2 SPK_CON1 %x\n", __func__, Ana_Get_Reg(SPK_CON1));
 
 }
 
 void Speaker_ClassAB_close(void)
 {
-    printk("%s\n", __func__);
 
     Ana_Set_Reg(SPK_CON0,0x0000,0xffff); // Mute Spk amp, select to original class D mode. disable class-AB Amp
 }
 
 void Speaker_ReveiverMode_Open(void)
 {
-    printk("%s\n", __func__);
 
     Ana_Set_Reg(SPK_CON2, 0x0614, 0xffff); // enable classAB OC function, enable speaker L receiver mode[6]            
     Ana_Set_Reg(SPK_CON9, 0x0100, 0xffff); 
diff --git a/sound/soc/mediatek/mt_soc_audio_6580/mt_soc_dai_routing.c b/sound/soc/mediatek/mt_soc_audio_6580/mt_soc_dai_routing.c
index f0611046e..a3e6ac152 100644
--- a/sound/soc/mediatek/mt_soc_audio_6580/mt_soc_dai_routing.c
+++ b/sound/soc/mediatek/mt_soc_audio_6580/mt_soc_dai_routing.c
@@ -145,7 +145,6 @@ static int mtk_routing_dev_probe(struct platform_device *pdev)
     {
         dev_set_name(&pdev->dev, "%s", MT_SOC_ROUTING_DAI_NAME);
     }
-    printk("%s: dev name %s\n", __func__, dev_name(&pdev->dev));
 
     rc = snd_soc_register_component(&pdev->dev, &dai_routing_component,
 					  mtk_routing_dai, ARRAY_SIZE(mtk_routing_dai));
@@ -154,7 +153,6 @@ static int mtk_routing_dev_probe(struct platform_device *pdev)
 
 static int mtk_routing_dev_remove(struct platform_device *pdev)
 {
-    printk("%s:\n", __func__);
 
     snd_soc_unregister_component(&pdev->dev);
 
@@ -189,7 +187,6 @@ static struct platform_device *soc_routing_dev;
 static int __init mtk_routing_init(void)
 {
     int ret = 0;
-    printk("%s:\n", __func__);
     #ifndef CONFIG_OF	
     soc_routing_dev = platform_device_alloc(MT_SOC_ROUTING_DAI_NAME, -1);
     if (!soc_routing_dev)
@@ -211,7 +208,6 @@ module_init(mtk_routing_init);
 
 static void __exit mtk_routing_exit(void)
 {
-    printk("%s:\n", __func__);
 
     platform_driver_unregister(&mtk_routing_driver);
 }
diff --git a/sound/soc/mediatek/mt_soc_audio_6580/mt_soc_dai_stub.c b/sound/soc/mediatek/mt_soc_audio_6580/mt_soc_dai_stub.c
index 7c4e5d6f3..277f0c0e9 100644
--- a/sound/soc/mediatek/mt_soc_audio_6580/mt_soc_dai_stub.c
+++ b/sound/soc/mediatek/mt_soc_audio_6580/mt_soc_dai_stub.c
@@ -544,8 +544,6 @@ static int mtk_dai_stub_dev_probe(struct platform_device *pdev)
 {
     int rc = 0;
 
-    printk("mtk_dai_stub_dev_probe  name %s\n", dev_name(&pdev->dev));
-
     pdev->dev.coherent_dma_mask = DMA_BIT_MASK(64);
     if (pdev->dev.dma_mask == NULL)
     {
@@ -556,18 +554,15 @@ static int mtk_dai_stub_dev_probe(struct platform_device *pdev)
     {
         dev_set_name(&pdev->dev, "%s", MT_SOC_DAI_NAME);
     }
-    printk("%s: dev name %s\n", __func__, dev_name(&pdev->dev));
 
     rc = snd_soc_register_component(&pdev->dev, &mt_dai_component,
                                     mtk_dai_stub_dai, ARRAY_SIZE(mtk_dai_stub_dai));
 
-    printk("%s: rc  = %d\n", __func__, rc);
     return rc;
 }
 
 static int mtk_dai_stub_dev_remove(struct platform_device *pdev)
 {
-    printk("%s:\n", __func__);
 
     snd_soc_unregister_component(&pdev->dev);
 
@@ -602,7 +597,6 @@ static struct platform_device *soc_mtk_dai_dev;
 static int __init mtk_dai_stub_init(void)
 {
     int ret = 0;
-    printk("%s:\n", __func__);
     #ifndef CONFIG_OF	
     soc_mtk_dai_dev = platform_device_alloc(MT_SOC_DAI_NAME , -1);
     if (!soc_mtk_dai_dev)
@@ -622,7 +616,6 @@ static int __init mtk_dai_stub_init(void)
 
 static void __exit mtk_dai_stub_exit(void)
 {
-    printk("%s:\n", __func__);
 
     platform_driver_unregister(&mtk_dai_stub_driver);
 }
diff --git a/sound/soc/mediatek/mt_soc_audio_6580/mt_soc_machine.c b/sound/soc/mediatek/mt_soc_audio_6580/mt_soc_machine.c
index d1dca62fc..b10be69f3 100644
--- a/sound/soc/mediatek/mt_soc_audio_6580/mt_soc_machine.c
+++ b/sound/soc/mediatek/mt_soc_audio_6580/mt_soc_machine.c
@@ -165,19 +165,16 @@ static struct snd_soc_ops mtmachine_audio_ops2 =
 
 static int mt_soc_audio_init(struct snd_soc_pcm_runtime *rtd)
 {
-    printk("mt_soc_audio_init\n");
     return 0;
 }
 
 static int mt_soc_audio_init2(struct snd_soc_pcm_runtime *rtd)
 {
-    printk("mt_soc_audio_init2\n");
     return 0;
 }
 
 static int mt_soc_ana_debug_open(struct inode *inode, struct file *file)
 {
-    printk("mt_soc_ana_debug_open \n");
     return 0;
 }
 
@@ -187,7 +184,6 @@ static ssize_t mt_soc_ana_debug_read(struct file *file, char __user *buf,
     const int size = 4096;
     char buffer[size];
     int n = 0;
-    printk("mt_soc_ana_debug_read count = %zu\n", count);
     AudDrv_Clk_On();
     audckbufEnable(true);
 
@@ -248,8 +244,6 @@ static ssize_t mt_soc_ana_debug_read(struct file *file, char __user *buf,
     n += scnprintf(buffer + n ,size - n, "AUDTOP_CON8  = 0x%x\n", Ana_Get_Reg(AUDTOP_CON8));
     n += scnprintf(buffer + n ,size - n, "AUDTOP_CON9  = 0x%x\n", Ana_Get_Reg(AUDTOP_CON9));
 
-    printk("mt_soc_ana_debug_read len = %d\n", n);
-
     audckbufEnable(false);
     AudDrv_Clk_Off();
 
@@ -259,7 +253,6 @@ static ssize_t mt_soc_ana_debug_read(struct file *file, char __user *buf,
 
 static int mt_soc_debug_open(struct inode *inode, struct file *file)
 {
-    printk("mt_soc_debug_open \n");
     return 0;
 }
 
@@ -271,7 +264,6 @@ static ssize_t mt_soc_debug_read(struct file *file, char __user *buf,
     int n = 0;
     AudDrv_Clk_On();
 
-    printk("mt_soc_debug_read\n");
     n = scnprintf(buffer + n, size - n, "AUDIO_TOP_CON0  = 0x%x\n", Afe_Get_Reg(AUDIO_TOP_CON0));
     n += scnprintf(buffer + n, size - n, "AUDIO_TOP_CON1  = 0x%x\n", Afe_Get_Reg(AUDIO_TOP_CON1));
     n += scnprintf(buffer + n, size - n, "AUDIO_TOP_CON2  = 0x%x\n", Afe_Get_Reg(AUDIO_TOP_CON2));
@@ -416,7 +408,6 @@ static ssize_t mt_soc_debug_read(struct file *file, char __user *buf,
     n += scnprintf(buffer + n, size - n, "AFE_ASRC_CON20  = 0x%x\n", Afe_Get_Reg(AFE_ASRC_CON20));
     n += scnprintf(buffer + n, size - n, "AFE_ASRC_CON21  = 0x%x\n", Afe_Get_Reg(AFE_ASRC_CON21));
 
-    printk("mt_soc_debug_read len = %d\n", n);
     AudDrv_Clk_Off();
 
     return  simple_read_from_buffer(buf, count, pos, buffer, n);
@@ -449,55 +440,39 @@ static ssize_t mt_soc_debug_write(struct file *f, const char __user *buf,
     memset((void *)InputString, 0, 256);
     if (copy_from_user((InputString), buf, count))
     {
-        printk("copy_from_user mt_soc_debug_write count = %zu temp = %s\n", count, InputString);
     }
     temp = kstrdup(InputString, GFP_KERNEL);
-    printk("copy_from_user mt_soc_debug_write count = %zu temp = %s pointer = %p\n", count, InputString, InputString);
     token1 = strsep(&temp, delim);
-    printk("token1 \n");
-    printk("token1 = %s\n", token1);
     token2 = strsep(&temp, delim);
-    printk("token2 = %s\n", token2);
     token3 = strsep(&temp, delim);
-    printk("token3 = %s\n", token3);
     token4 = strsep(&temp, delim);
-    printk("token4 = %s\n", token4);
     token5 = strsep(&temp, delim);
-    printk("token5 = %s\n", token5);
 
     AudDrv_Clk_On();
     audckbufEnable(true);
     
     if (strcmp(token1, ParSetkeyAfe) == 0)
     {
-        printk("strcmp (token1,ParSetkeyAfe) \n");
         ret = strict_strtoul(token3, 16, &regaddr);
         ret = strict_strtoul(token5, 16, &regvalue);
-        printk("%s regaddr = 0x%lu regvalue = 0x%lu\n", ParSetkeyAfe, regaddr, regvalue);
         Afe_Set_Reg(regaddr,  regvalue, 0xffffffff);
         regvalue = Afe_Get_Reg(regaddr);
-        printk("%s regaddr = 0x%lu regvalue = 0x%lu\n", ParSetkeyAfe, regaddr, regvalue);
     }
     if (strcmp(token1, ParSetkeyAna) == 0)
     {
-        printk("strcmp (token1,ParSetkeyAna)\n");
         ret = strict_strtoul(token3, 16, &regaddr);
         ret =  strict_strtoul(token5, 16, &regvalue);
-        printk("%s regaddr = 0x%lu regvalue = 0x%lu\n", ParSetkeyAna, regaddr, regvalue);
         //AudDrv_Clk_On();
         //audckbufEnable(true);
         Ana_Set_Reg(regaddr,  regvalue, 0xffffffff);
         regvalue = Ana_Get_Reg(regaddr);
         //audckbufEnable(false);
         //AudDrv_Clk_Off();
-        printk("%s regaddr = 0x%lu regvalue = 0x%lu\n", ParSetkeyAna, regaddr, regvalue);
     }
     if (strcmp(token1, ParSetkeyCfg) == 0)
     {
-        printk("strcmp (token1,ParSetkeyCfg)\n");
         ret =  strict_strtoul(token3, 16, &regaddr);
         ret =  strict_strtoul(token5, 16, &regvalue);
-        printk("%s regaddr = 0x%lu regvalue = 0x%lu, not support on 82\n", ParSetkeyCfg, regaddr, regvalue);
 #if 0   //82 no need
         SetClkCfg(regaddr,  regvalue, 0xffffffff);
         regvalue = GetClkCfg(regaddr);
@@ -507,17 +482,13 @@ static ssize_t mt_soc_debug_write(struct file *f, const char __user *buf,
     }
     if (strcmp(token1, PareGetkeyAfe) == 0)
     {
-        printk("strcmp (token1,PareGetkeyAfe)\n");
         ret =  strict_strtoul(token3, 16, &regaddr);
         regvalue = Afe_Get_Reg(regaddr);
-        printk("%s regaddr = 0x%lu regvalue = 0x%lu\n", PareGetkeyAfe, regaddr, regvalue);
     }
     if (strcmp(token1, PareGetkeyAna) == 0)
     {
-        printk("strcmp (token1,PareGetkeyAna)\n");
         ret =  strict_strtoul(token3, 16, &regaddr);
         regvalue = Ana_Get_Reg(regaddr);
-        printk("%s regaddr = 0x%lu regvalue = 0x%lu\n", PareGetkeyAna, regaddr, regvalue);
     }
     audckbufEnable(false);
     AudDrv_Clk_Off();
@@ -787,14 +758,12 @@ static const struct soc_enum mt_soc_machine_enum[] =
 static int mt6595_get_lowjitter(struct snd_kcontrol *kcontrol,
                                 struct snd_ctl_elem_value *ucontrol)
 {
-    printk("%s:  mt_soc_lowjitter_control = %d\n", __func__, mt_soc_lowjitter_control);
     ucontrol->value.integer.value[0] = mt_soc_lowjitter_control;
     return 0;
 }
 
 static int mt6595_set_lowjitter(struct snd_kcontrol *kcontrol, struct snd_ctl_elem_value *ucontrol)
 {
-    printk("%s()\n", __func__);
     if (mt_soc_lowjitter_control == ucontrol->value.integer.value[0])
     {
     }
@@ -826,7 +795,6 @@ static int __init mt_soc_snd_init(void)
 {
     int ret;
     struct snd_soc_card *card = &snd_soc_card_mt;
-    printk("mt_soc_snd_init card addr = %p \n", card);
 
     mt_snd_device = platform_device_alloc("soc-audio", -1);
     if (!mt_snd_device)
@@ -843,8 +811,6 @@ static int __init mt_soc_snd_init(void)
         goto put_device;
     }
 
-    printk("mt_soc_snd_init dai_link = %p \n", snd_soc_card_mt.dai_link);
-
     // create debug file
     mt_sco_audio_debugfs = debugfs_create_file(DEBUG_FS_NAME,
                                                S_IFREG | S_IRUGO, NULL, (void *) DEBUG_FS_NAME, &mtaudio_debug_ops);
diff --git a/sound/soc/mediatek/mt_soc_audio_6580/mt_soc_pcm_bt_dai.c b/sound/soc/mediatek/mt_soc_audio_6580/mt_soc_pcm_bt_dai.c
index d498d11ff..62078f22d 100644
--- a/sound/soc/mediatek/mt_soc_audio_6580/mt_soc_pcm_bt_dai.c
+++ b/sound/soc/mediatek/mt_soc_audio_6580/mt_soc_pcm_bt_dai.c
@@ -86,8 +86,6 @@ static struct snd_pcm_hardware mtk_btdai_hardware =
 
 static void StopAudioBtDaiHardware(struct snd_pcm_substream *substream)
 {
-    printk("StopAudioBtDaiHardware \n");
-
     // here to set interrupt
     SetIrqEnable(Soc_Aud_IRQ_MCU_MODE_IRQ2_MCU_MODE, false);
 
@@ -121,7 +119,6 @@ static bool SetVoipDAIBTAttribute(int sample_rate)
 
 static void StartAudioBtDaiHardware(struct snd_pcm_substream *substream)
 {
-    printk("StartAudioBtDaiHardware period_size = %d\n",(unsigned int)(substream->runtime->period_size));
 
     // here to set interrupt
     SetIrqMcuCounter(Soc_Aud_IRQ_MCU_MODE_IRQ2_MCU_MODE, substream->runtime->period_size>>1);
@@ -150,14 +147,12 @@ static void StartAudioBtDaiHardware(struct snd_pcm_substream *substream)
 
 static int mtk_bt_dai_pcm_prepare(struct snd_pcm_substream *substream)
 {
-    printk("mtk_bt_dai_pcm_prepare substream->rate = %d  substream->channels = %d \n", substream->runtime->rate, substream->runtime->channels);
     return 0;
 }
 
 static int mtk_bt_dai_alsa_stop(struct snd_pcm_substream *substream)
 {
     //AFE_BLOCK_T *Dai_Block = &(Bt_Dai_Control_context->rBlock);
-    printk("mtk_bt_dai_alsa_stop \n");
 
     SetMemoryPathEnable(Soc_Aud_Digital_Block_MEM_DAI, false);
 
@@ -178,7 +173,6 @@ static snd_pcm_uframes_t mtk_bt_dai_pcm_pointer(struct snd_pcm_substream *substr
     kal_int32 HW_Cur_ReadIdx = 0;
     AFE_BLOCK_T *Dai_Block = &(Bt_Dai_Control_context->rBlock);
     kal_uint32 Frameidx =0;
-    PRINTK_AUD_DAI("mtk_bt_dai_pcm_pointer Dai_Block->u4DMAReadIdx;= 0x%x \n", Dai_Block->u4WriteIdx);
     // get total bytes to copy
     Frameidx =audio_bytes_to_frame(substream , Dai_Block->u4WriteIdx);
     return Frameidx;
@@ -195,12 +189,10 @@ static snd_pcm_uframes_t mtk_bt_dai_pcm_pointer(struct snd_pcm_substream *substr
 #endif
         if (HW_Cur_ReadIdx == 0)
         {
-            printk("[Auddrv] mtk_bt_dai_pcm_pointer  HW_Cur_ReadIdx ==0 \n");
             HW_Cur_ReadIdx = Dai_Block->pucPhysBufAddr;
         }
         HW_memory_index = (HW_Cur_ReadIdx - Dai_Block->pucPhysBufAddr);
         Previous_Hw_cur = HW_memory_index;
-        printk("[Auddrv] mtk_bt_dai_pcm_pointer =0x%x HW_memory_index = 0x%x\n", HW_Cur_ReadIdx, HW_memory_index);
         Bt_Dai_Control_context->interruptTrigger = 0;
         return (HW_memory_index / substream->runtime->channels);
     }
@@ -213,7 +205,6 @@ static void SetDAIBuffer(struct snd_pcm_substream *substream,
 {
     AFE_BLOCK_T *pblock = &Bt_Dai_Control_context->rBlock;
     struct snd_pcm_runtime *runtime = substream->runtime;
-    PRINTK_AUD_DAI("SetDAIBuffer\n");
     pblock->pucPhysBufAddr =  runtime->dma_addr;
     pblock->pucVirtBufAddr =  runtime->dma_area;
     pblock->u4BufferSize = runtime->dma_bytes;
@@ -223,14 +214,11 @@ static void SetDAIBuffer(struct snd_pcm_substream *substream,
     pblock->u4DataRemained  = 0;
     pblock->u4fsyncflag     = false;
     pblock->uResetFlag      = true;
-    printk("dma_bytes = %d dma_area = %p dma_addr = 0x%x\n",
-           pblock->u4BufferSize, pblock->pucVirtBufAddr, pblock->pucPhysBufAddr);
     // set sram address top hardware
 #if 0   //Rainier no    
     Afe_Set_Reg(AFE_DAI_BASE , pblock->pucPhysBufAddr , 0xffffffff);
     Afe_Set_Reg(AFE_DAI_END  , pblock->pucPhysBufAddr + (pblock->u4BufferSize - 1), 0xffffffff);
 #else
-    printk("SetDAIBuffer Rainier no this\n");
 #endif
 
 }
@@ -242,38 +230,26 @@ static int mtk_bt_dai_pcm_hw_params(struct snd_pcm_substream *substream,
     struct snd_dma_buffer *dma_buf = &substream->dma_buffer;
     int ret = 0;
 
-    printk("mtk_bt_dai_pcm_hw_params \n");
-
     dma_buf->dev.type = SNDRV_DMA_TYPE_DEV;
     dma_buf->dev.dev = substream->pcm->card->dev;
     dma_buf->private_data = NULL;
 
     if (Bt_Dai_Capture_dma_buf->area)
     {
-        printk("mtk_bt_dai_pcm_hw_params Bt_Dai_Capture_dma_buf->area\n");
         runtime->dma_bytes = params_buffer_bytes(hw_params);
         runtime->dma_area = Bt_Dai_Capture_dma_buf->area;
         runtime->dma_addr = Bt_Dai_Capture_dma_buf->addr;
     }
     else
     {
-        printk("mtk_bt_dai_pcm_hw_params snd_pcm_lib_malloc_pages\n");
-        ret =  snd_pcm_lib_malloc_pages(substream, params_buffer_bytes(hw_params));
     }
-    printk("mtk_bt_dai_pcm_hw_params dma_bytes = %zu dma_area = %p dma_addr = 0x%lx\n",
-           runtime->dma_bytes, runtime->dma_area, (long)runtime->dma_addr);
-
-    printk("runtime->hw.buffer_bytes_max = %zu \n", runtime->hw.buffer_bytes_max);
     SetDAIBuffer(substream, hw_params);
 
-    printk("dma_bytes = %zu dma_area = %p dma_addr = 0x%lx\n",
-           substream->runtime->dma_bytes, substream->runtime->dma_area, (long)substream->runtime->dma_addr);
     return ret;
 }
 
 static int mtk_bt_dai_capture_pcm_hw_free(struct snd_pcm_substream *substream)
 {
-    printk("mtk_bt_dai_capture_pcm_hw_free \n");
     if (Bt_Dai_Capture_dma_buf->area)
     {
         return 0;
@@ -296,29 +272,21 @@ static int mtk_bt_dai_pcm_open(struct snd_pcm_substream *substream)
     struct snd_pcm_runtime *runtime = substream->runtime;
     int ret = 0;
 
-    printk("mtk_bt_dai_pcm_open\n");
-
     Bt_Dai_Control_context = Get_Mem_ControlT(Soc_Aud_Digital_Block_MEM_DAI);
     runtime->hw = mtk_btdai_hardware;
     memcpy((void *)(&(runtime->hw)), (void *)&mtk_btdai_hardware , sizeof(struct snd_pcm_hardware));
     ret = snd_pcm_hw_constraint_list(runtime, 0, SNDRV_PCM_HW_PARAM_RATE,
                                      &bt_dai_constraints_sample_rates);
     ret = snd_pcm_hw_constraint_integer(runtime, SNDRV_PCM_HW_PARAM_PERIODS);
-    if (ret < 0)
-    {
-        printk("snd_pcm_hw_constraint_integer failed\n");
-    }
 
     AudDrv_Clk_On();
 
     //print for hw pcm information
-    printk("mtk_bt_dai_pcm_open runtime rate = %d channels = %d \n", runtime->rate, runtime->channels);
     runtime->hw.info |= SNDRV_PCM_INFO_INTERLEAVED;
     runtime->hw.info |= SNDRV_PCM_INFO_NONINTERLEAVED;
 
     if (substream->stream == SNDRV_PCM_STREAM_CAPTURE)
     {
-        printk("SNDRV_PCM_STREAM_CAPTURE \n");
     }
     else
     {
@@ -327,11 +295,9 @@ static int mtk_bt_dai_pcm_open(struct snd_pcm_substream *substream)
 
     if (ret < 0)
     {
-        printk("mtk_bt_dai_pcm_close\n");
         mtk_bt_dai_pcm_close(substream);
         return ret;
     }
-    printk("mtk_bt_dai_pcm_open return\n");
     return 0;
 }
 
@@ -343,7 +309,6 @@ static int mtk_bt_dai_pcm_close(struct snd_pcm_substream *substream)
 
 static int mtk_bt_dai_alsa_start(struct snd_pcm_substream *substream)
 {
-    printk("mtk_bt_dai_alsa_start \n");
     SetMemifSubStream(Soc_Aud_Digital_Block_MEM_DAI, substream);
     StartAudioBtDaiHardware(substream);
     return 0;
@@ -351,8 +316,6 @@ static int mtk_bt_dai_alsa_start(struct snd_pcm_substream *substream)
 
 static int mtk_bt_dai_pcm_trigger(struct snd_pcm_substream *substream, int cmd)
 {
-    printk("mtk_bt_dai_pcm_trigger cmd = %d\n", cmd);
-
     switch (cmd)
     {
         case SNDRV_PCM_TRIGGER_START:
@@ -369,7 +332,6 @@ static bool CheckNullPointer(void *pointer)
 {
     if (pointer == NULL)
     {
-        printk("CheckNullPointer pointer = NULL");
         return true;
     }
     return false;
@@ -384,7 +346,6 @@ static int mtk_bt_dai_pcm_copy(struct snd_pcm_substream *substream,
     char *Read_Data_Ptr = (char *)dst;
     ssize_t DMA_Read_Ptr = 0 , read_size = 0, read_count = 0;
     unsigned long flags;
-    printk("%s  pos = %lu count = %lu\n ", __func__, pos, count);
 
     // get total bytes to copy
     count =audio_frame_to_bytes(substream , count);
@@ -408,14 +369,12 @@ static int mtk_bt_dai_pcm_copy(struct snd_pcm_substream *substream,
 
     if (CheckNullPointer((void *)Dai_Block->pucVirtBufAddr))
     {
-        printk("CheckNullPointer  pucVirtBufAddr = %p\n", Dai_Block->pucVirtBufAddr);
         return 0;
     }
 
     spin_lock_irqsave(&auddrv_BTDaiInCtl_lock, flags);
     if (Dai_Block->u4DataRemained >  Dai_Block->u4BufferSize)
     {
-        PRINTK_AUD_DAI("!!!!!!!!!!!!mtk_bt_dai_pcm_copy u4DataRemained=%x > u4BufferSize=%x" , Dai_Block->u4DataRemained, Dai_Block->u4BufferSize);
         Dai_Block->u4DataRemained = 0;
         Dai_Block->u4DMAReadIdx   = Dai_Block->u4WriteIdx;
     }
@@ -431,17 +390,8 @@ static int mtk_bt_dai_pcm_copy(struct snd_pcm_substream *substream,
     DMA_Read_Ptr = Dai_Block->u4DMAReadIdx;
     spin_unlock_irqrestore(&auddrv_BTDaiInCtl_lock, flags);
 
-    PRINTK_AUD_DAI("mtk_bt_dai_pcm_copy finish0, read_count:0x%x, read_size:0x%x, u4DataRemained:0x%x, u4DMAReadIdx:0x%x, u4WriteIdx:0x%x \r\n",
-           read_count, read_size, Dai_Block->u4DataRemained, Dai_Block->u4DMAReadIdx, Dai_Block->u4WriteIdx);
-
     if (DMA_Read_Ptr + read_size < Dai_Block->u4BufferSize)
     {
-        if (DMA_Read_Ptr != Dai_Block->u4DMAReadIdx)
-        {
-            printk("mtk_bt_dai_pcm_copy 1, read_size:%zu, DataRemained:0x%x, DMA_Read_Ptr:%zu, DMAReadIdx:0x%x \r\n",
-                   read_size, Dai_Block->u4DataRemained, DMA_Read_Ptr, Dai_Block->u4DMAReadIdx);
-        }
-
         if (copy_to_user((void __user *)Read_Data_Ptr, (Dai_Block->pucVirtBufAddr + DMA_Read_Ptr), read_size))
         {
 
@@ -459,9 +409,6 @@ static int mtk_bt_dai_pcm_copy(struct snd_pcm_substream *substream,
 
         Read_Data_Ptr += read_size;
         count -= read_size;
-
-        PRINTK_AUD_DAI("mtk_bt_dai_pcm_copy finish1, copy size:0x%x, u4DMAReadIdx:0x%x, u4WriteIdx:0x%x, u4DataRemained:0x%x \r\n",
-               read_size, Dai_Block->u4DMAReadIdx, Dai_Block->u4WriteIdx, Dai_Block->u4DataRemained);
     }
 
     else
@@ -469,12 +416,6 @@ static int mtk_bt_dai_pcm_copy(struct snd_pcm_substream *substream,
         uint32 size_1 = Dai_Block->u4BufferSize - DMA_Read_Ptr;
         uint32 size_2 = read_size - size_1;
 
-        if (DMA_Read_Ptr != Dai_Block->u4DMAReadIdx)
-        {
-
-            printk("mtk_bt_dai_pcm_copy 2, read_size1:0x%x, DataRemained:0x%x, DMA_Read_Ptr:%zu, DMAReadIdx:0x%x \r\n",
-                   size_1, Dai_Block->u4DataRemained, DMA_Read_Ptr, Dai_Block->u4DMAReadIdx);
-        }
         if (copy_to_user((void __user *)Read_Data_Ptr, (Dai_Block->pucVirtBufAddr + DMA_Read_Ptr), size_1))
         {
 
@@ -491,15 +432,6 @@ static int mtk_bt_dai_pcm_copy(struct snd_pcm_substream *substream,
         DMA_Read_Ptr = Dai_Block->u4DMAReadIdx;
         spin_unlock(&auddrv_BTDaiInCtl_lock);
 
-        PRINTK_AUD_DAI("mtk_bt_dai_pcm_copy finish2, copy size_1:0x%x, u4DMAReadIdx:0x%x, u4WriteIdx:0x%x, u4DataRemained:0x%x \r\n",
-               size_1, Dai_Block->u4DMAReadIdx, Dai_Block->u4WriteIdx, Dai_Block->u4DataRemained);
-
-        if (DMA_Read_Ptr != Dai_Block->u4DMAReadIdx)
-        {
-
-            printk("mtk_bt_dai_pcm_copy 3, read_size2:%x, DataRemained:%x, DMA_Read_Ptr:%zu, DMAReadIdx:%x \r\n",
-                   size_2, Dai_Block->u4DataRemained, DMA_Read_Ptr, Dai_Block->u4DMAReadIdx);
-        }
         if (copy_to_user((void __user *)(Read_Data_Ptr + size_1), (Dai_Block->pucVirtBufAddr + DMA_Read_Ptr), size_2))
         {
 
@@ -516,9 +448,6 @@ static int mtk_bt_dai_pcm_copy(struct snd_pcm_substream *substream,
 
         count -= read_size;
         Read_Data_Ptr += read_size;
-
-        PRINTK_AUD_DAI("mtk_bt_dai_pcm_copy finish3, copy size_2:0x%x, u4DMAReadIdx:0x%x, u4WriteIdx:0x%x u4DataRemained:0x%x \r\n",
-               size_2, Dai_Block->u4DMAReadIdx, Dai_Block->u4WriteIdx, Dai_Block->u4DataRemained);
     }
 
     return audio_bytes_to_frame(substream,count);
@@ -528,7 +457,6 @@ static int mtk_bt_dai_capture_pcm_silence(struct snd_pcm_substream *substream,
                                           int channel, snd_pcm_uframes_t pos,
                                           snd_pcm_uframes_t count)
 {
-    printk("dummy_pcm_silence \n");
     return 0; /* do nothing */
 }
 
@@ -538,7 +466,6 @@ static void *dummy_page[2];
 static struct page *mtk_bt_dai_capture_pcm_page(struct snd_pcm_substream *substream,
                                                 unsigned long offset)
 {
-    printk("dummy_pcm_page \n");
     return virt_to_page(dummy_page[substream->stream]); /* the same page */
 }
 
@@ -567,8 +494,6 @@ static struct snd_soc_platform_driver mtk_bt_dai_soc_platform =
 
 static int mtk_bt_dai_probe(struct platform_device *pdev)
 {
-    printk("mtk_bt_dai_probe\n");
-
     pdev->dev.coherent_dma_mask = DMA_BIT_MASK(64);
     if (!pdev->dev.dma_mask)
     {
@@ -580,20 +505,17 @@ static int mtk_bt_dai_probe(struct platform_device *pdev)
         dev_set_name(&pdev->dev, "%s", MT_SOC_VOIP_BT_IN);
     }
 
-    printk("%s: dev name %s\n", __func__, dev_name(&pdev->dev));
     return snd_soc_register_platform(&pdev->dev,
                                      &mtk_bt_dai_soc_platform);
 }
 
 static int mtk_asoc_bt_dai_pcm_new(struct snd_soc_pcm_runtime *rtd)
 {
-    printk("mtk_asoc_bt_dai_pcm_new \n");
     return 0;
 }
 
 static int mtk_asoc_bt_dai_probe(struct snd_soc_platform *platform)
 {
-    printk("mtk_asoc_bt_dai_probe\n");
     AudDrv_Allocate_mem_Buffer(platform->dev, Soc_Aud_Digital_Block_MEM_DAI, BT_DAI_MAX_BUFFER_SIZE);
     Bt_Dai_Capture_dma_buf =  Get_Mem_Buffer(Soc_Aud_Digital_Block_MEM_DAI);
     return 0;
@@ -601,7 +523,6 @@ static int mtk_asoc_bt_dai_probe(struct snd_soc_platform *platform)
 
 static int mtk_bt_dai_remove(struct platform_device *pdev)
 {
-    pr_debug("%s\n", __func__);
     snd_soc_unregister_platform(&pdev->dev);
     return 0;
 }
@@ -634,7 +555,6 @@ static struct platform_device *soc_bt_dai_capture_dev;
 static int __init mtk_soc_bt_dai_platform_init(void)
 {
     int ret = 0;
-    printk("%s\n", __func__);
 	#ifndef CONFIG_OF
     soc_bt_dai_capture_dev = platform_device_alloc(MT_SOC_VOIP_BT_IN, -1);
     if (!soc_bt_dai_capture_dev)
@@ -655,7 +575,6 @@ static int __init mtk_soc_bt_dai_platform_init(void)
 
 static void __exit mtk_soc_bt_dai_platform_exit(void)
 {
-    printk("%s\n", __func__);
     platform_driver_unregister(&mtk_bt_dai_capture_driver);
 }
 
diff --git a/sound/soc/mediatek/mt_soc_audio_6580/mt_soc_pcm_capture.c b/sound/soc/mediatek/mt_soc_audio_6580/mt_soc_pcm_capture.c
index a25df93ee..551ea173f 100644
--- a/sound/soc/mediatek/mt_soc_audio_6580/mt_soc_pcm_capture.c
+++ b/sound/soc/mediatek/mt_soc_audio_6580/mt_soc_pcm_capture.c
@@ -101,8 +101,6 @@ static struct snd_pcm_hardware mtk_capture_hardware =
 
 static void StopAudioCaptureHardware(struct snd_pcm_substream *substream)
 {
-    printk("StopAudioCaptureHardware \n");
-
     // here to set interrupt
 
     SetMemoryPathEnable(Soc_Aud_Digital_Block_I2S_IN_ADC, false);
@@ -137,8 +135,6 @@ static void ConfigAdcI2S(struct snd_pcm_substream *substream)
 
 static void StartAudioCaptureHardware(struct snd_pcm_substream *substream)
 {
-    printk("StartAudioCaptureHardware \n");
-
     ConfigAdcI2S(substream);
     SetI2SAdcIn(mAudioDigitalI2S);
 
@@ -190,7 +186,6 @@ static int mtk_capture_pcm_prepare(struct snd_pcm_substream *substream)
 static int mtk_capture_alsa_stop(struct snd_pcm_substream *substream)
 {
     //AFE_BLOCK_T *Vul_Block = &(VUL_Control_context->rBlock);
-    printk("mtk_capture_alsa_stop \n");
     StopAudioCaptureHardware(substream);
     RemoveMemifSubStream(Soc_Aud_Digital_Block_MEM_VUL,substream);
     return 0;
@@ -207,7 +202,6 @@ static snd_pcm_uframes_t mtk_capture_pcm_pointer(struct snd_pcm_substream *subst
     AFE_BLOCK_T *UL1_Block = &(VUL_Control_context->rBlock);
     Auddrv_UL1_Spinlock_lock();
 	spin_lock_irqsave(&VUL_Control_context->substream_lock, flags);
-    PRINTK_AUD_UL1("mtk_capture_pcm_pointer UL1_Block->u4WriteIdx= 0x%x, u4DataRemained=0x%x \n", UL1_Block->u4WriteIdx,UL1_Block->u4DataRemained);
     
     if (GetMemoryPathEnable(Soc_Aud_Digital_Block_MEM_VUL) == true)
     {
@@ -219,7 +213,6 @@ static snd_pcm_uframes_t mtk_capture_pcm_pointer(struct snd_pcm_substream *subst
         
         if (HW_Cur_ReadIdx == 0)
         {
-            PRINTK_AUD_UL1("[Auddrv] mtk_capture_pcm_pointer  HW_Cur_ReadIdx ==0 \n");
             HW_Cur_ReadIdx = UL1_Block->pucPhysBufAddr;
         }
         HW_memory_index = (HW_Cur_ReadIdx - UL1_Block->pucPhysBufAddr);
@@ -234,16 +227,11 @@ static snd_pcm_uframes_t mtk_capture_pcm_pointer(struct snd_pcm_substream *subst
         UL1_Block->u4WriteIdx	%= UL1_Block->u4BufferSize;
         UL1_Block->u4DataRemained += Hw_Get_bytes;
         
-
-        printk("mtk_capture_pcm_pointer u4DMAReadIdx=0x%x u4WriteIdx = 0x%x u4DataRemained = 0x%x u4BufferSize= 0x%x,Hw_Get_bytes= 0x%x\n", UL1_Block->u4DMAReadIdx, UL1_Block->u4WriteIdx,UL1_Block->u4DataRemained,UL1_Block->u4BufferSize,Hw_Get_bytes);
         if (UL1_Block->u4DataRemained > UL1_Block->u4BufferSize)
         {
             bIsOverflow = true;
-            printk("mtk_capture_pcm_pointer buffer overflow u4DMAReadIdx:%x, u4WriteIdx:%x, u4DataRemained:%x, u4BufferSize:%x \n",
-                   UL1_Block->u4DMAReadIdx, UL1_Block->u4WriteIdx, UL1_Block->u4DataRemained, UL1_Block->u4BufferSize);
         }
         
-        PRINTK_AUD_UL1("[Auddrv] mtk_capture_pcm_pointer =0x%x HW_memory_index = 0x%x\n", HW_Cur_ReadIdx, HW_memory_index);
         
         spin_unlock_irqrestore(&VUL_Control_context->substream_lock, flags);
         Auddrv_UL1_Spinlock_unlock();
@@ -265,7 +253,6 @@ static void SetVULBuffer(struct snd_pcm_substream *substream,
 {
     struct snd_pcm_runtime *runtime = substream->runtime;
     AFE_BLOCK_T *pblock = &VUL_Control_context->rBlock;
-    printk("SetVULBuffer\n");
     pblock->pucPhysBufAddr =  runtime->dma_addr;
     pblock->pucVirtBufAddr =  runtime->dma_area;
     pblock->u4BufferSize = runtime->dma_bytes;
@@ -275,8 +262,6 @@ static void SetVULBuffer(struct snd_pcm_substream *substream,
     pblock->u4DataRemained  = 0;
     pblock->u4fsyncflag     = false;
     pblock->uResetFlag      = true;
-    printk("u4BufferSize = %d pucVirtBufAddr = %p pucPhysBufAddr = 0x%x\n",
-           pblock->u4BufferSize, pblock->pucVirtBufAddr, pblock->pucPhysBufAddr);
     // set dram address top hardware
     Afe_Set_Reg(AFE_VUL_BASE , pblock->pucPhysBufAddr , 0xffffffff);
     Afe_Set_Reg(AFE_VUL_END  , pblock->pucPhysBufAddr + (pblock->u4BufferSize - 1), 0xffffffff);
@@ -289,7 +274,6 @@ static int mtk_capture_pcm_hw_params(struct snd_pcm_substream *substream,
     struct snd_pcm_runtime *runtime = substream->runtime;
     struct snd_dma_buffer *dma_buf = &substream->dma_buffer;
     int ret = 0;
-    printk("mtk_capture_pcm_hw_params \n");
 
     dma_buf->dev.type = SNDRV_DMA_TYPE_DEV;
     dma_buf->dev.dev = substream->pcm->card->dev;
@@ -298,34 +282,27 @@ static int mtk_capture_pcm_hw_params(struct snd_pcm_substream *substream,
     if (mCaptureUseSram == true)
     {
         runtime->dma_bytes = params_buffer_bytes(hw_params);
-        printk("mtk_capture_pcm_hw_params mCaptureUseSram dma_bytes = %zu \n", runtime->dma_bytes);
         substream->runtime->dma_area = (unsigned char *)Get_Afe_SramBase_Pointer();
         substream->runtime->dma_addr = Get_Afe_Sram_Phys_Addr();
     }
     else if (Capture_dma_buf->area)
     {
-        printk("Capture_dma_buf = %p Capture_dma_buf->area = %p apture_dma_buf->addr = 0x%lx\n",
-            Capture_dma_buf, Capture_dma_buf->area, (long) Capture_dma_buf->addr);
         runtime->dma_bytes = params_buffer_bytes(hw_params);
         runtime->dma_area = Capture_dma_buf->area;
         runtime->dma_addr = Capture_dma_buf->addr;
     }
     else
     {
-        printk("mtk_capture_pcm_hw_params snd_pcm_lib_malloc_pages\n");
         ret =  snd_pcm_lib_malloc_pages(substream, params_buffer_bytes(hw_params));
     }
 
     SetVULBuffer(substream, hw_params);
 
-    printk("dma_bytes = %zu dma_area = %p dma_addr = 0x%lx\n",
-           substream->runtime->dma_bytes, substream->runtime->dma_area, (long)substream->runtime->dma_addr);
     return ret;
 }
 
 static int mtk_capture_pcm_hw_free(struct snd_pcm_substream *substream)
 {
-    printk("mtk_capture_pcm_hw_free \n");
     if (Capture_dma_buf->area)
     {
         return 0;
@@ -359,14 +336,12 @@ static int mtk_capture_pcm_open(struct snd_pcm_substream *substream)
     if (0)
     #endif
     {
-        printk("mtk_capture_pcm_open use sram \n");
         mtk_capture_hardware.buffer_bytes_max = GetCaptureSramSize();
         SetSramState(SRAM_STATE_CAPTURE);
         mCaptureUseSram = true;
     }
     else
     {
-        printk("mtk_capture_pcm_open use dram \n");
         mtk_capture_hardware.buffer_bytes_max = UL1_MAX_BUFFER_SIZE;
     }
     AfeControlSramUnLock();
@@ -393,7 +368,6 @@ static int mtk_capture_pcm_open(struct snd_pcm_substream *substream)
 
     if (ret < 0)
     {
-        printk("mtk_capture_pcm_close\n");
         mtk_capture_pcm_close(substream);
         return ret;
     }
@@ -401,7 +375,6 @@ static int mtk_capture_pcm_open(struct snd_pcm_substream *substream)
     {
         AudDrv_Emi_Clk_On();
     }
-    printk("mtk_capture_pcm_open return\n");
     return 0;
 }
 
@@ -423,7 +396,6 @@ static int mtk_capture_pcm_close(struct snd_pcm_substream *substream)
 
 static int mtk_capture_alsa_start(struct snd_pcm_substream *substream)
 {
-    printk("mtk_capture_alsa_start \n");
     SetMemifSubStream(Soc_Aud_Digital_Block_MEM_VUL, substream);
     StartAudioCaptureHardware(substream);
     return 0;
@@ -431,8 +403,6 @@ static int mtk_capture_alsa_start(struct snd_pcm_substream *substream)
 
 static int mtk_capture_pcm_trigger(struct snd_pcm_substream *substream, int cmd)
 {
-    printk("mtk_capture_pcm_trigger cmd = %d\n", cmd);
-
     switch (cmd)
     {
         case SNDRV_PCM_TRIGGER_START:
@@ -449,7 +419,6 @@ static bool CheckNullPointer(void *pointer)
 {
     if (pointer == NULL)
     {
-        printk("CheckNullPointer pointer = NULL");
         return true;
     }
     return false;
@@ -467,7 +436,6 @@ static int mtk_capture_pcm_copy(struct snd_pcm_substream *substream,
     //struct snd_pcm_runtime *runtime = substream->runtime;
     unsigned long flags;
 
-    PRINTK_AUD_UL1("mtk_capture_pcm_copy pos = %lucount = %lu \n ", pos, count);
     // get total bytes to copy
     #ifdef AUDIO_64BYTE_ALIGN
     count = Align64ByteSize(audio_frame_to_bytes(substream , count));
@@ -481,7 +449,6 @@ static int mtk_capture_pcm_copy(struct snd_pcm_substream *substream,
 
     if (pVUL_MEM_ConTrol == NULL)
     {
-        printk("cannot find MEM control !!!!!!!\n");
         msleep(50);
         return 0;
     }
@@ -489,20 +456,17 @@ static int mtk_capture_pcm_copy(struct snd_pcm_substream *substream,
     if (Vul_Block->u4BufferSize <= 0)
     {
         msleep(50);
-        printk("Vul_Block->u4BufferSize <= 0  =%d\n", Vul_Block->u4BufferSize);
         return 0;
     }
 
     if (CheckNullPointer((void *)Vul_Block->pucVirtBufAddr))
     {
-        printk("CheckNullPointer  pucVirtBufAddr = %p\n", Vul_Block->pucVirtBufAddr);
         return 0;
     }
 
     spin_lock_irqsave(&auddrv_ULInCtl_lock, flags);
     if (Vul_Block->u4DataRemained >  Vul_Block->u4BufferSize)
     {
-        PRINTK_AUD_UL1("mtk_capture_pcm_copy u4DataRemained=%x > u4BufferSize=%x" , Vul_Block->u4DataRemained, Vul_Block->u4BufferSize);
         Vul_Block->u4DataRemained = 0;
         Vul_Block->u4DMAReadIdx   = Vul_Block->u4WriteIdx;
     }
@@ -518,20 +482,14 @@ static int mtk_capture_pcm_copy(struct snd_pcm_substream *substream,
     DMA_Read_Ptr = Vul_Block->u4DMAReadIdx;
     spin_unlock_irqrestore(&auddrv_ULInCtl_lock, flags);
 
-    PRINTK_AUD_UL1("mtk_capture_pcm_copy finish0, read_count:%lx, read_size:%lx, u4DataRemained:%x, u4DMAReadIdx:0x%x, u4WriteIdx:%x \r\n",
-                   (unsigned int)read_count, (unsigned int)read_size, Vul_Block->u4DataRemained, Vul_Block->u4DMAReadIdx, Vul_Block->u4WriteIdx);
-
     if (DMA_Read_Ptr + read_size < Vul_Block->u4BufferSize)
     {
         if (DMA_Read_Ptr != Vul_Block->u4DMAReadIdx)
         {
-            printk("mtk_capture_pcm_copy 1, read_size:%zu, DataRemained:%x, DMA_Read_Ptr:0x%zu, DMAReadIdx:%x \r\n",
-                   read_size, Vul_Block->u4DataRemained, DMA_Read_Ptr, Vul_Block->u4DMAReadIdx);
         }
 
         if (copy_to_user((void __user *)Read_Data_Ptr, (Vul_Block->pucVirtBufAddr + DMA_Read_Ptr), read_size))
         {
-
             printk("mtk_capture_pcm_copy Fail 1 copy to user Read_Data_Ptr:%p, pucVirtBufAddr:%p, u4DMAReadIdx:0x%x, DMA_Read_Ptr:%zu, read_size:%zu", Read_Data_Ptr, Vul_Block->pucVirtBufAddr, Vul_Block->u4DMAReadIdx, DMA_Read_Ptr, read_size);
             return 0;
         }
@@ -546,9 +504,6 @@ static int mtk_capture_pcm_copy(struct snd_pcm_substream *substream,
 
         Read_Data_Ptr += read_size;
         count -= read_size;
-
-        PRINTK_AUD_UL1("mtk_capture_pcm_copy finish1, copy size:%x, u4DMAReadIdx:0x%x, u4WriteIdx:%x, u4DataRemained:%x \r\n",
-                       (unsigned int)read_size, Vul_Block->u4DMAReadIdx, Vul_Block->u4WriteIdx, Vul_Block->u4DataRemained);
     }
 
     else
@@ -558,9 +513,6 @@ static int mtk_capture_pcm_copy(struct snd_pcm_substream *substream,
 
         if (DMA_Read_Ptr != Vul_Block->u4DMAReadIdx)
         {
-
-            printk("mtk_capture_pcm_copy 2, read_size1:%x, DataRemained:%x, DMA_Read_Ptr:%zu, DMAReadIdx:%x \r\n",
-                   size_1, Vul_Block->u4DataRemained, DMA_Read_Ptr, Vul_Block->u4DMAReadIdx);
         }
         if (copy_to_user((void __user *)Read_Data_Ptr, (Vul_Block->pucVirtBufAddr + DMA_Read_Ptr), (unsigned int)size_1))
         {
@@ -578,20 +530,12 @@ static int mtk_capture_pcm_copy(struct snd_pcm_substream *substream,
         DMA_Read_Ptr = Vul_Block->u4DMAReadIdx;
         spin_unlock(&auddrv_ULInCtl_lock);
 
-
-        PRINTK_AUD_UL1("mtk_capture_pcm_copy finish2, copy size_1:%x, u4DMAReadIdx:0x%x, u4WriteIdx:0x%x, u4DataRemained:%x \r\n",
-                       size_1, Vul_Block->u4DMAReadIdx, Vul_Block->u4WriteIdx, Vul_Block->u4DataRemained);
-
         if (DMA_Read_Ptr != Vul_Block->u4DMAReadIdx)
         {
 
-            printk("mtk_capture_pcm_copy 3, read_size2:%x, DataRemained:%x, DMA_Read_Ptr:%zu, DMAReadIdx:%x \r\n",
-                   size_2, Vul_Block->u4DataRemained, DMA_Read_Ptr, Vul_Block->u4DMAReadIdx);
         }
         if (copy_to_user((void __user *)(Read_Data_Ptr + size_1), (Vul_Block->pucVirtBufAddr + DMA_Read_Ptr), size_2))
         {
-
-            printk("mtk_capture_pcm_copy Fail 3 copy to user Read_Data_Ptr:%p, pucVirtBufAddr:%p, u4DMAReadIdx:0x%x , DMA_Read_Ptr:%zu, read_size:%zu", Read_Data_Ptr, Vul_Block->pucVirtBufAddr, Vul_Block->u4DMAReadIdx, DMA_Read_Ptr, read_size);
             return read_count << 2;
         }
 
@@ -604,9 +548,6 @@ static int mtk_capture_pcm_copy(struct snd_pcm_substream *substream,
 
         count -= read_size;
         Read_Data_Ptr += read_size;
-
-        PRINTK_AUD_UL1("mtk_capture_pcm_copy finish3, copy size_2:%x, u4DMAReadIdx:0x%x, u4WriteIdx:0x%x u4DataRemained:%x \r\n",
-                       size_2, Vul_Block->u4DMAReadIdx, Vul_Block->u4WriteIdx, Vul_Block->u4DataRemained);
     }
 
     return read_count >> 2;
@@ -616,7 +557,6 @@ static int mtk_capture_pcm_silence(struct snd_pcm_substream *substream,
                                    int channel, snd_pcm_uframes_t pos,
                                    snd_pcm_uframes_t count)
 {
-    printk("dummy_pcm_silence \n");
     return 0; /* do nothing */
 }
 
@@ -626,7 +566,6 @@ static void *dummy_page[2];
 static struct page *mtk_capture_pcm_page(struct snd_pcm_substream *substream,
                                          unsigned long offset)
 {
-    printk("%s \n", __func__);
     return virt_to_page(dummy_page[substream->stream]); /* the same page */
 }
 
@@ -655,8 +594,6 @@ static struct snd_soc_platform_driver mtk_soc_platform =
 
 static int mtk_capture_probe(struct platform_device *pdev)
 {
-    printk("mtk_capture_probe\n");
-
     pdev->dev.coherent_dma_mask = DMA_BIT_MASK(64);
     if (pdev->dev.dma_mask == NULL)
     {
@@ -668,21 +605,18 @@ static int mtk_capture_probe(struct platform_device *pdev)
         dev_set_name(&pdev->dev, "%s", MT_SOC_UL1_PCM);
     }
 
-    printk("%s: dev name %s\n", __func__, dev_name(&pdev->dev));
     return snd_soc_register_platform(&pdev->dev,
                                      &mtk_soc_platform);
 }
 
 static int mtk_asoc_capture_pcm_new(struct snd_soc_pcm_runtime *rtd)
 {
-    printk("mtk_asoc_capture_pcm_new \n");
     return 0;
 }
 
 
 static int mtk_afe_capture_probe(struct snd_soc_platform *platform)
 {
-    printk("mtk_afe_capture_probe\n");
     AudDrv_Allocate_mem_Buffer(platform->dev, Soc_Aud_Digital_Block_MEM_VUL, UL1_MAX_BUFFER_SIZE);
     Capture_dma_buf =  Get_Mem_Buffer(Soc_Aud_Digital_Block_MEM_VUL);
     mAudioDigitalI2S =  kzalloc(sizeof(AudioDigtalI2S), GFP_KERNEL);
@@ -692,7 +626,6 @@ static int mtk_afe_capture_probe(struct snd_soc_platform *platform)
 
 static int mtk_capture_remove(struct platform_device *pdev)
 {
-    pr_debug("%s\n", __func__);
     snd_soc_unregister_platform(&pdev->dev);
     return 0;
 }
@@ -725,7 +658,6 @@ static struct platform_device *soc_mtkafe_capture_dev;
 static int __init mtk_soc_capture_platform_init(void)
 {
     int ret = 0;
-    printk("%s\n", __func__);
 	#ifndef CONFIG_OF
     soc_mtkafe_capture_dev = platform_device_alloc(MT_SOC_UL1_PCM, -1);
     if (!soc_mtkafe_capture_dev)
@@ -748,7 +680,6 @@ module_init(mtk_soc_capture_platform_init);
 static void __exit mtk_soc_platform_exit(void)
 {
 
-    printk("%s\n", __func__);
     platform_driver_unregister(&mtk_afe_capture_driver);
 }
 
diff --git a/sound/soc/mediatek/mt_soc_audio_6580/mt_soc_pcm_capture2.c b/sound/soc/mediatek/mt_soc_audio_6580/mt_soc_pcm_capture2.c
index 2d954e89f..92f6f9090 100644
--- a/sound/soc/mediatek/mt_soc_audio_6580/mt_soc_pcm_capture2.c
+++ b/sound/soc/mediatek/mt_soc_audio_6580/mt_soc_pcm_capture2.c
@@ -98,8 +98,6 @@ static struct snd_pcm_hardware mtk_capture2_hardware =
 
 static void StopAudioCaptureHardware(struct snd_pcm_substream *substream)
 {
-    printk("StopAudioCaptureHardware \n");
-
     // here to set interrupt
     SetIrqEnable(Soc_Aud_IRQ_MCU_MODE_IRQ2_MCU_MODE, false);
 
@@ -133,8 +131,6 @@ static void ConfigAdcI2S(struct snd_pcm_substream *substream)
 
 static void StartAudioCaptureHardware(struct snd_pcm_substream *substream)
 {
-    printk("StartAudioCaptureHardware \n");
-
     ConfigAdcI2S(substream);
     Set2ndI2SAdcIn(mAudioDigitalI2S);//To do, JY
 
@@ -168,14 +164,12 @@ static void StartAudioCaptureHardware(struct snd_pcm_substream *substream)
 
 static int mtk_capture2_pcm_prepare(struct snd_pcm_substream *substream)
 {
-    printk("mtk_capture2_pcm_prepare substream->rate = %d  substream->channels = %d \n", substream->runtime->rate, substream->runtime->channels);
     return 0;
 }
 
 static int mtk_capture2_alsa_stop(struct snd_pcm_substream *substream)
 {
     AFE_BLOCK_T *Vul_Block = &(VUL2_Control_context->rBlock);
-    printk("mtk_capture2_alsa_stop \n");
     StopAudioCaptureHardware(substream);
     Vul_Block->u4DMAReadIdx  = 0;
     Vul_Block->u4WriteIdx  = 0;
@@ -191,7 +185,6 @@ static snd_pcm_uframes_t mtk_capture2_pcm_pointer(struct snd_pcm_substream *subs
     kal_int32 HW_Cur_ReadIdx = 0;
     kal_uint32 Frameidx =0;
     AFE_BLOCK_T *vul2_Block = &(VUL2_Control_context->rBlock);
-    PRINTK_AUD_UL2("mtk_capture2_pcm_pointer vul2_Block->u4WriteIdx;= 0x%x \n", vul2_Block->u4WriteIdx);
     if (VUL2_Control_context->interruptTrigger == 1)
     {
         // get total bytes to copysinewavetohdmi
@@ -202,12 +195,10 @@ static snd_pcm_uframes_t mtk_capture2_pcm_pointer(struct snd_pcm_substream *subs
 #endif
         if (HW_Cur_ReadIdx == 0)
         {
-            PRINTK_AUD_UL2("[Auddrv] mtk_capture2_pcm_pointer  HW_Cur_ReadIdx ==0 \n");
             HW_Cur_ReadIdx = vul2_Block->pucPhysBufAddr;
         }
         HW_memory_index = (HW_Cur_ReadIdx - vul2_Block->pucPhysBufAddr);
         Previous_Hw_cur = HW_memory_index;
-        PRINTK_AUD_UL2("[Auddrv] mtk_capture2_pcm_pointer =0x%x HW_memory_index = 0x%x\n", HW_Cur_ReadIdx, HW_memory_index);
         VUL2_Control_context->interruptTrigger = 0;
         return (HW_memory_index >> 2);
     }
@@ -220,7 +211,6 @@ static void SetVULBuffer(struct snd_pcm_substream *substream,
 {
     struct snd_pcm_runtime *runtime = substream->runtime;
     AFE_BLOCK_T *pblock = &VUL2_Control_context->rBlock;
-    printk("SetVULBuffer capture2 not support\n");
     pblock->pucPhysBufAddr =  runtime->dma_addr;
     pblock->pucVirtBufAddr =  runtime->dma_area;
     pblock->u4BufferSize = runtime->dma_bytes;
@@ -230,8 +220,6 @@ static void SetVULBuffer(struct snd_pcm_substream *substream,
     pblock->u4DataRemained  = 0;
     pblock->u4fsyncflag     = false;
     pblock->uResetFlag      = true;
-    printk("u4BufferSize = %d pucVirtBufAddr = %p pucPhysBufAddr = 0x%x\n",
-           pblock->u4BufferSize, pblock->pucVirtBufAddr, pblock->pucPhysBufAddr);
     // set dram address top hardware
 #if 0 //Rainier no need
     Afe_Set_Reg(AFE_VUL_D2_BASE , pblock->pucPhysBufAddr , 0xffffffff);
@@ -245,16 +233,13 @@ static int mtk_capture2_pcm_hw_params(struct snd_pcm_substream *substream,
     struct snd_pcm_runtime *runtime = substream->runtime;
     struct snd_dma_buffer *dma_buf = &substream->dma_buffer;
     int ret = 0;
-    printk("mtk_capture2_pcm_hw_params \n");
 
     dma_buf->dev.type = SNDRV_DMA_TYPE_DEV;
     dma_buf->dev.dev = substream->pcm->card->dev;
     dma_buf->private_data = NULL;
-    printk("Capture2_dma_buf = %p Capture2_dma_buf->area = %p\n", Capture_dma_buf, Capture_dma_buf->area);
 
     if (Capture_dma_buf->area)
     {
-        printk("mtk_capture2_pcm_hw_params Capture_dma_buf->area\n");
         runtime->dma_bytes = Capture_dma_buf->bytes;
         runtime->dma_area = Capture_dma_buf->area;
         runtime->dma_addr = Capture_dma_buf->addr;
@@ -262,23 +247,15 @@ static int mtk_capture2_pcm_hw_params(struct snd_pcm_substream *substream,
     }
     else
     {
-        printk("mtk_capture2_pcm_hw_params snd_pcm_lib_malloc_pages\n");
         ret =  snd_pcm_lib_malloc_pages(substream, params_buffer_bytes(hw_params));
     }
-    printk("mtk_capture2_pcm_hw_params dma_bytes = %zu dma_area = %p dma_addr = 0x%lx\n",
-           runtime->dma_bytes, runtime->dma_area, (long)runtime->dma_addr);
-
-    printk("runtime->hw.buffer_bytes_max = %zu \n", runtime->hw.buffer_bytes_max);
     SetVULBuffer(substream, hw_params);
 
-    printk("dma_bytes = %zu dma_area = %p dma_addr = 0x%lx\n",
-           substream->runtime->dma_bytes, substream->runtime->dma_area, (long)substream->runtime->dma_addr);
     return ret;
 }
 
 static int mtk_capture2_pcm_hw_free(struct snd_pcm_substream *substream)
 {
-    printk("mtk_capture2_pcm_hw_free \n");
     if (Capture_dma_buf->area)
     {
         return 0;
@@ -302,12 +279,10 @@ static int mtk_capture2_pcm_open(struct snd_pcm_substream *substream)
     AudDrv_Clk_On();
     AudDrv_ADC2_Clk_On();
 
-    printk("%s \n", __func__);
     VUL2_Control_context = Get_Mem_ControlT(Soc_Aud_Digital_Block_MEM_VUL_DATA2);
 
     runtime->hw = mtk_capture2_hardware;
     memcpy((void *)(&(runtime->hw)), (void *)&mtk_capture2_hardware , sizeof(struct snd_pcm_hardware));
-    printk("runtime->hw->rates = 0x%x \n ", runtime->hw.rates);
 
     ret = snd_pcm_hw_constraint_list(runtime, 0, SNDRV_PCM_HW_PARAM_RATE,
                                      &constraints_sample_rates);
@@ -317,10 +292,8 @@ static int mtk_capture2_pcm_open(struct snd_pcm_substream *substream)
         printk("snd_pcm_hw_constraint_integer failed\n");
     }
 
-    printk("mtk_capture2_pcm_open runtime rate = %d channels = %d \n", runtime->rate, runtime->channels);
     if (substream->stream == SNDRV_PCM_STREAM_CAPTURE)
     {
-        printk("SNDRV_PCM_STREAM_CAPTURE mtkalsa_capture_constraints\n");
     }
     else
     {
@@ -329,11 +302,9 @@ static int mtk_capture2_pcm_open(struct snd_pcm_substream *substream)
 
     if (ret < 0)
     {
-        printk("mtk_capture2_pcm_close\n");
         mtk_capture2_pcm_close(substream);
         return ret;
     }
-    printk("mtk_capture2_pcm_open return\n");
     return 0;
 }
 
@@ -346,7 +317,6 @@ static int mtk_capture2_pcm_close(struct snd_pcm_substream *substream)
 
 static int mtk_capture2_alsa_start(struct snd_pcm_substream *substream)
 {
-    printk("mtk_capture2_alsa_start \n");
     SetMemifSubStream(Soc_Aud_Digital_Block_MEM_VUL_DATA2, substream);
     StartAudioCaptureHardware(substream);
     return 0;
@@ -354,7 +324,6 @@ static int mtk_capture2_alsa_start(struct snd_pcm_substream *substream)
 
 static int mtk_capture2_pcm_trigger(struct snd_pcm_substream *substream, int cmd)
 {
-    printk("mtk_capture2_pcm_trigger cmd = %d\n", cmd);
 
     switch (cmd)
     {
@@ -372,7 +341,6 @@ static bool CheckNullPointer(void *pointer)
 {
     if (pointer == NULL)
     {
-        printk("CheckNullPointer pointer = NULL");
         return true;
     }
     return false;
@@ -389,8 +357,6 @@ static int mtk_capture2_pcm_copy(struct snd_pcm_substream *substream,
     ssize_t DMA_Read_Ptr = 0 , read_size = 0, read_count = 0;
     unsigned long flags;
 
-    PRINTK_AUD_UL2("mtk_capture2_pcm_copy pos = %lucount = %lu \n ", pos, count);
-
     count =audio_frame_to_bytes(substream , count);    // get total bytes to copy
 
     // check which memif nned to be write
@@ -413,14 +379,12 @@ static int mtk_capture2_pcm_copy(struct snd_pcm_substream *substream,
 
     if (CheckNullPointer((void *)Vul_Block->pucVirtBufAddr))
     {
-        printk("CheckNullPointer  pucVirtBufAddr = %p\n", Vul_Block->pucVirtBufAddr);
         return 0;
     }
 
     spin_lock_irqsave(&auddrv_ULInCtl_lock, flags);
     if (Vul_Block->u4DataRemained >  Vul_Block->u4BufferSize)
     {
-        PRINTK_AUD_UL2("mtk_capture2_pcm_copy u4DataRemained=%x > u4BufferSize=%x" , Vul_Block->u4DataRemained, Vul_Block->u4BufferSize);
         Vul_Block->u4DataRemained = 0;
         Vul_Block->u4DMAReadIdx   = Vul_Block->u4WriteIdx;
     }
@@ -436,15 +400,10 @@ static int mtk_capture2_pcm_copy(struct snd_pcm_substream *substream,
     DMA_Read_Ptr = Vul_Block->u4DMAReadIdx;
     spin_unlock_irqrestore(&auddrv_ULInCtl_lock, flags);
 
-    PRINTK_AUD_UL2("mtk_capture2_pcm_copy finish0, read_count:%zu, read_size:%zu, u4DataRemained:%x, u4DMAReadIdx:0x%x, u4WriteIdx:%x \r\n",
-                   read_count, read_size, Vul_Block->u4DataRemained, Vul_Block->u4DMAReadIdx, Vul_Block->u4WriteIdx);
-
     if (DMA_Read_Ptr + read_size < Vul_Block->u4BufferSize)
     {
         if (DMA_Read_Ptr != Vul_Block->u4DMAReadIdx)
         {
-            printk("mtk_capture2_pcm_copy 1, read_size:%zu, DataRemained:0x%x, DMA_Read_Ptr:%zu, DMAReadIdx:%x \r\n",
-                   read_size, Vul_Block->u4DataRemained, DMA_Read_Ptr, Vul_Block->u4DMAReadIdx);
         }
 
         if (copy_to_user((void __user *)Read_Data_Ptr, (Vul_Block->pucVirtBufAddr + DMA_Read_Ptr), read_size))
@@ -464,9 +423,6 @@ static int mtk_capture2_pcm_copy(struct snd_pcm_substream *substream,
 
         Read_Data_Ptr += read_size;
         count -= read_size;
-
-        PRINTK_AUD_UL2("mtk_capture2_pcm_copy finish1, copy size:%zu, u4DMAReadIdx:0x%x, u4WriteIdx:%x, u4DataRemained:%x \r\n",
-                       read_size, Vul_Block->u4DMAReadIdx, Vul_Block->u4WriteIdx, Vul_Block->u4DataRemained);
     }
 
     else
@@ -476,9 +432,6 @@ static int mtk_capture2_pcm_copy(struct snd_pcm_substream *substream,
 
         if (DMA_Read_Ptr != Vul_Block->u4DMAReadIdx)
         {
-
-            printk("mtk_capture2_pcm_copy 2, read_size1:%x, DataRemained:%x, DMA_Read_Ptr:0x%zu, DMAReadIdx:%x \r\n",
-                   size_1, Vul_Block->u4DataRemained, DMA_Read_Ptr, Vul_Block->u4DMAReadIdx);
         }
         if (copy_to_user((void __user *)Read_Data_Ptr, (Vul_Block->pucVirtBufAddr + DMA_Read_Ptr), size_1))
         {
@@ -497,14 +450,9 @@ static int mtk_capture2_pcm_copy(struct snd_pcm_substream *substream,
         spin_unlock(&auddrv_ULInCtl_lock);
 
 
-        PRINTK_AUD_UL2("mtk_capture2_pcm_copy finish2, copy size_1:%x, u4DMAReadIdx:0x%x, u4WriteIdx:0x%x, u4DataRemained:%x \r\n",
-                       size_1, Vul_Block->u4DMAReadIdx, Vul_Block->u4WriteIdx, Vul_Block->u4DataRemained);
-
         if (DMA_Read_Ptr != Vul_Block->u4DMAReadIdx)
         {
 
-            printk("mtk_capture2_pcm_copy 3, read_size2:%x, DataRemained:%x, DMA_Read_Ptr:0x%zu, DMAReadIdx:%x \r\n",
-                   size_2, Vul_Block->u4DataRemained, DMA_Read_Ptr, Vul_Block->u4DMAReadIdx);
         }
         if (copy_to_user((void __user *)(Read_Data_Ptr + size_1), (Vul_Block->pucVirtBufAddr + DMA_Read_Ptr), size_2))
         {
@@ -522,9 +470,6 @@ static int mtk_capture2_pcm_copy(struct snd_pcm_substream *substream,
 
         count -= read_size;
         Read_Data_Ptr += read_size;
-
-        PRINTK_AUD_UL2("mtk_capture2_pcm_copy finish3, copy size_2:%x, u4DMAReadIdx:0x%x, u4WriteIdx:0x%x u4DataRemained:%x \r\n",
-                       size_2, Vul_Block->u4DMAReadIdx, Vul_Block->u4WriteIdx, Vul_Block->u4DataRemained);
     }
 
     return read_count >> 2;
@@ -534,7 +479,6 @@ static int mtk_capture2_pcm_silence(struct snd_pcm_substream *substream,
                                    int channel, snd_pcm_uframes_t pos,
                                    snd_pcm_uframes_t count)
 {
-    printk("dummy_pcm_silence \n");
     return 0; /* do nothing */
 }
 
@@ -544,7 +488,6 @@ static void *dummy_page[2];
 static struct page *mtk_capture2_pcm_page(struct snd_pcm_substream *substream,
                                          unsigned long offset)
 {
-    printk("%s \n", __func__);
     return virt_to_page(dummy_page[substream->stream]); /* the same page */
 }
 
@@ -573,8 +516,6 @@ static struct snd_soc_platform_driver mtk_soc_platform =
 
 static int mtk_capture2_probe(struct platform_device *pdev)
 {
-    printk("mtk_capture2_probe\n");
-
     pdev->dev.coherent_dma_mask = DMA_BIT_MASK(64);
     if (pdev->dev.dma_mask == NULL)
     {
@@ -586,21 +527,18 @@ static int mtk_capture2_probe(struct platform_device *pdev)
         dev_set_name(&pdev->dev, "%s", MT_SOC_UL2_PCM);
     }
 
-    printk("%s: dev name %s\n", __func__, dev_name(&pdev->dev));
     return snd_soc_register_platform(&pdev->dev,
                                      &mtk_soc_platform);
 }
 
 static int mtk_asoc_capture2_pcm_new(struct snd_soc_pcm_runtime *rtd)
 {
-    printk("mtk_asoc_capture2_pcm_new \n");
     return 0;
 }
 
 
 static int mtk_afe_capture2_probe(struct snd_soc_platform *platform)
 {
-    printk("mtk_afe_capture2_probe\n");
     AudDrv_Allocate_mem_Buffer(platform->dev, Soc_Aud_Digital_Block_MEM_VUL_DATA2, UL2_MAX_BUFFER_SIZE);
     Capture_dma_buf =  Get_Mem_Buffer(Soc_Aud_Digital_Block_MEM_VUL_DATA2);
     mAudioDigitalI2S =  kzalloc(sizeof(AudioDigtalI2S), GFP_KERNEL);
@@ -610,7 +548,6 @@ static int mtk_afe_capture2_probe(struct snd_soc_platform *platform)
 
 static int mtk_capture2_remove(struct platform_device *pdev)
 {
-    pr_debug("%s\n", __func__);
     snd_soc_unregister_platform(&pdev->dev);
     return 0;
 }
@@ -643,7 +580,6 @@ static struct platform_device *soc_mtkafe_capture2_dev;
 static int __init mtk_soc_capture2_platform_init(void)
 {
     int ret = 0;
-    printk("%s\n", __func__);
 	#ifndef CONFIG_OF
     soc_mtkafe_capture2_dev = platform_device_alloc(MT_SOC_UL2_PCM, -1);
     if (!soc_mtkafe_capture2_dev)
@@ -667,7 +603,6 @@ module_init(mtk_soc_capture2_platform_init);
 static void __exit mtk_soc_capture2_platform_exit(void)
 {
 
-    printk("%s\n", __func__);
     platform_driver_unregister(&mtk_afe_capture2_driver);
 }
 
diff --git a/sound/soc/mediatek/mt_soc_audio_6580/mt_soc_pcm_common.c b/sound/soc/mediatek/mt_soc_audio_6580/mt_soc_pcm_common.c
index 99647d02e..337167727 100644
--- a/sound/soc/mediatek/mt_soc_audio_6580/mt_soc_pcm_common.c
+++ b/sound/soc/mediatek/mt_soc_audio_6580/mt_soc_pcm_common.c
@@ -46,7 +46,6 @@ unsigned long audio_frame_to_bytes(struct snd_pcm_substream *substream,unsigned
     {
         bytes = bytes << 1;
     }
-    //printk("%s bytes = %d count = %d\n",__func__,bytes,count);
     return bytes;
 }
 
@@ -67,7 +66,6 @@ unsigned long audio_bytes_to_frame(struct snd_pcm_substream *substream,unsigned
     {
         count = count >>1;
     }
-    //printk("%s bytes = %d count = %d\n",__func__,bytes,count);
     return count;
 }
 
diff --git a/sound/soc/mediatek/mt_soc_audio_6580/mt_soc_pcm_dl1.c b/sound/soc/mediatek/mt_soc_audio_6580/mt_soc_pcm_dl1.c
index 447d25076..19b10cf75 100644
--- a/sound/soc/mediatek/mt_soc_audio_6580/mt_soc_pcm_dl1.c
+++ b/sound/soc/mediatek/mt_soc_audio_6580/mt_soc_pcm_dl1.c
@@ -164,7 +164,6 @@ static struct snd_pcm_hardware mtk_pcm_dl1_hardware =
 
 static int mtk_pcm_dl1_stop(struct snd_pcm_substream *substream)
 {
-    printk("%s \n", __func__);
 
     SetIrqEnable(Soc_Aud_IRQ_MCU_MODE_IRQ1_MCU_MODE, false);
     SetMemoryPathEnable(Soc_Aud_Digital_Block_MEM_DL1, false);
@@ -185,7 +184,6 @@ static snd_pcm_uframes_t mtk_pcm_pointer(struct snd_pcm_substream *substream)
     kal_int32 Afe_consumed_bytes = 0;
     AFE_BLOCK_T *Afe_Block = &pMemControl->rBlock;
     //struct snd_pcm_runtime *runtime = substream->runtime;
-    PRINTK_AUD_DL1(" %s Afe_Block->u4DMAReadIdx = 0x%x\n", __func__, Afe_Block->u4DMAReadIdx);
 
     Auddrv_Dl1_Spinlock_lock();
 
@@ -198,7 +196,6 @@ static snd_pcm_uframes_t mtk_pcm_pointer(struct snd_pcm_substream *substream)
         HW_Cur_ReadIdx = Afe_Get_Reg(AFE_DL1_CUR);
         if (HW_Cur_ReadIdx == 0)
         {
-            PRINTK_AUDDRV("[Auddrv] HW_Cur_ReadIdx ==0 \n");
             HW_Cur_ReadIdx = Afe_Block->pucPhysBufAddr;
         }
 
@@ -219,7 +216,6 @@ static snd_pcm_uframes_t mtk_pcm_pointer(struct snd_pcm_substream *substream)
         Afe_Block->u4DataRemained -= Afe_consumed_bytes;
         Afe_Block->u4DMAReadIdx += Afe_consumed_bytes;
         Afe_Block->u4DMAReadIdx %= Afe_Block->u4BufferSize;
-        PRINTK_AUD_DL1("[Auddrv] HW_Cur_ReadIdx =0x%x HW_memory_index = 0x%x Afe_consumed_bytes  = 0x%x\n", HW_Cur_ReadIdx, HW_memory_index, Afe_consumed_bytes);
         Auddrv_Dl1_Spinlock_unlock();
 
         return audio_bytes_to_frame(substream , Afe_Block->u4DMAReadIdx);
@@ -246,8 +242,6 @@ static void SetDL1Buffer(struct snd_pcm_substream *substream,
     pblock->u4DataRemained  = 0;
     pblock->u4fsyncflag     = false;
     pblock->uResetFlag      = true;
-    printk("SetDL1Buffer u4BufferSize = %d pucVirtBufAddr = %p pucPhysBufAddr = 0x%x\n",
-           pblock->u4BufferSize, pblock->pucVirtBufAddr, pblock->pucPhysBufAddr);
     // set dram address top hardware
     Afe_Set_Reg(AFE_DL1_BASE , pblock->pucPhysBufAddr , 0xffffffff);
     Afe_Set_Reg(AFE_DL1_END  , pblock->pucPhysBufAddr + (pblock->u4BufferSize - 1), 0xffffffff);
@@ -260,7 +254,6 @@ static int mtk_pcm_dl1_params(struct snd_pcm_substream *substream,
 {
     //struct snd_dma_buffer *dma_buf = &substream->dma_buffer;
     int ret = 0;
-    PRINTK_AUDDRV("mtk_pcm_dl1_params \n");
 
     /* runtime->dma_bytes has to be set manually to allow mmap */
     substream->runtime->dma_bytes = params_buffer_bytes(hw_params);
@@ -280,14 +273,11 @@ static int mtk_pcm_dl1_params(struct snd_pcm_substream *substream,
         SetDL1Buffer(substream, hw_params);
     }
 
-    PRINTK_AUDDRV("dma_bytes = %zu dma_area = %p dma_addr = 0x%lx\n",
-                  substream->runtime->dma_bytes, substream->runtime->dma_area, (long)substream->runtime->dma_addr);
     return ret;
 }
 
 static int mtk_pcm_dl1_hw_free(struct snd_pcm_substream *substream)
 {
-    PRINTK_AUDDRV("mtk_pcm_dl1_hw_free \n");
     return 0;
 }
 
@@ -303,7 +293,6 @@ static int mtk_pcm_dl1_open(struct snd_pcm_substream *substream)
 {
     int ret = 0;
     struct snd_pcm_runtime *runtime = substream->runtime;
-    PRINTK_AUDDRV("mtk_pcm_dl1_open\n");
 
     AfeControlSramLock();
     if (GetSramState() == SRAM_STATE_FREE)
@@ -323,7 +312,6 @@ static int mtk_pcm_dl1_open(struct snd_pcm_substream *substream)
         AudDrv_Emi_Clk_On();
     }
 
-    printk("mtk_pcm_dl1_hardware.buffer_bytes_max = %zu mPlaybackSramState = %d\n", mtk_pcm_dl1_hardware.buffer_bytes_max, mPlaybackSramState);
     runtime->hw = mtk_pcm_dl1_hardware;
 
     AudDrv_Clk_On();
@@ -338,18 +326,8 @@ static int mtk_pcm_dl1_open(struct snd_pcm_substream *substream)
         printk("snd_pcm_hw_constraint_integer failed\n");
     }
 
-    if (substream->stream == SNDRV_PCM_STREAM_PLAYBACK)
-    {
-        printk("SNDRV_PCM_STREAM_PLAYBACK mtkalsa_dl1playback_constraints\n");
-    }
-    else
-    {
-        printk("SNDRV_PCM_STREAM_CAPTURE mtkalsa_dl1playback_constraints\n");
-    }
-
     if (ret < 0)
     {
-        printk("ret < 0 mtk_soc_pcm_dl1_close\n");
         mtk_soc_pcm_dl1_close(substream);
         return ret;
     }
@@ -360,7 +338,6 @@ static int mtk_pcm_dl1_open(struct snd_pcm_substream *substream)
 
 static int mtk_soc_pcm_dl1_close(struct snd_pcm_substream *substream)
 {
-    printk("%s \n", __func__);
     if (mPrepareDone == true)
     {
         // stop DAC output
@@ -394,7 +371,6 @@ static int mtk_pcm_prepare(struct snd_pcm_substream *substream)
     struct snd_pcm_runtime *runtime = substream->runtime;
     if (mPrepareDone == false)
     {
-        printk("%s format = %d SNDRV_PCM_FORMAT_S32_LE = %d SNDRV_PCM_FORMAT_U32_LE = %d \n", __func__, runtime->format, SNDRV_PCM_FORMAT_S32_LE, SNDRV_PCM_FORMAT_U32_LE);
         SetMemifSubStream(Soc_Aud_Digital_Block_MEM_DL1, substream);
 
         if (runtime->format == SNDRV_PCM_FORMAT_S32_LE || runtime->format == SNDRV_PCM_FORMAT_U32_LE)
@@ -445,7 +421,6 @@ static int mtk_pcm_prepare(struct snd_pcm_substream *substream)
 static int mtk_pcm_dl1_start(struct snd_pcm_substream *substream)
 {
     struct snd_pcm_runtime *runtime = substream->runtime;
-    printk("%s\n", __func__);
     // here start digital part
 
     SetConnection(Soc_Aud_InterCon_Connection, Soc_Aud_InterConnectionInput_I05, Soc_Aud_InterConnectionOutput_O03);
@@ -469,7 +444,6 @@ static int mtk_pcm_dl1_start(struct snd_pcm_substream *substream)
 
 static int mtk_pcm_trigger(struct snd_pcm_substream *substream, int cmd)
 {
-    PRINTK_AUDDRV("mtk_pcm_trigger cmd = %d\n", cmd);
     switch (cmd)
     {
         case SNDRV_PCM_TRIGGER_START:
@@ -491,16 +465,12 @@ static int mtk_pcm_copy(struct snd_pcm_substream *substream,
     unsigned long flags;
     //struct snd_pcm_runtime *runtime = substream->runtime;
     char *data_w_ptr = (char *)dst;
-    PRINTK_AUD_DL1("mtk_pcm_copy pos = %lu count = %lu\n ", pos, count);
     // get total bytes to copy
     count = audio_frame_to_bytes(substream , count);
 
     // check which memif nned to be write
     Afe_Block = &pMemControl->rBlock;
 
-    PRINTK_AUD_DL1("AudDrv_write WriteIdx=0x%x, ReadIdx=0x%x, DataRemained=0x%x \n",
-                   Afe_Block->u4WriteIdx, Afe_Block->u4DMAReadIdx, Afe_Block->u4DataRemained);
-
     if (Afe_Block->u4BufferSize == 0)
     {
         printk("AudDrv_write: u4BufferSize=0 Error");
@@ -525,8 +495,6 @@ static int mtk_pcm_copy(struct snd_pcm_substream *substream,
     #ifdef AUDIO_64BYTE_ALIGN   //no need to do 64byte align
     copy_size = Align64ByteSize(copy_size);
     #endif
-    PRINTK_AUD_DL1("copy_size=0x%x, count=0x%x \n", copy_size,(unsigned int) count);
-
     if (copy_size != 0)
     {
         spin_lock_irqsave(&auddrv_DLCtl_lock, flags);
@@ -537,13 +505,9 @@ static int mtk_pcm_copy(struct snd_pcm_substream *substream,
         {
             if (!access_ok(VERIFY_READ, data_w_ptr, copy_size))
             {
-                PRINTK_AUDDRV("AudDrv_write 0ptr invalid data_w_ptr=%p, size=%d", data_w_ptr, copy_size);
-                PRINTK_AUDDRV("AudDrv_write u4BufferSize=%d, u4DataRemained=%d", Afe_Block->u4BufferSize, Afe_Block->u4DataRemained);
             }
             else
             {
-                PRINTK_AUD_DL1("memcpy Afe_Block->pucVirtBufAddr+Afe_WriteIdx= %p data_w_ptr = %p copy_size = 0x%x\n",
-                               Afe_Block->pucVirtBufAddr + Afe_WriteIdx_tmp, data_w_ptr, copy_size);
                 if (copy_from_user((Afe_Block->pucVirtBufAddr + Afe_WriteIdx_tmp), data_w_ptr, copy_size))
                 {
                     PRINTK_AUDDRV("AudDrv_write Fail copy from user \n");
@@ -558,10 +522,6 @@ static int mtk_pcm_copy(struct snd_pcm_substream *substream,
             spin_unlock_irqrestore(&auddrv_DLCtl_lock, flags);
             data_w_ptr += copy_size;
             count -= copy_size;
-
-            PRINTK_AUD_DL1("AudDrv_write finish1, copy_size:%x, WriteIdx:%x, ReadIdx=%x, DataRemained:%x, count=%d \r\n",
-                           copy_size, Afe_Block->u4WriteIdx, Afe_Block->u4DMAReadIdx, Afe_Block->u4DataRemained, (int)count);
-
         }
         else  // copy twice
         {
@@ -573,17 +533,12 @@ static int mtk_pcm_copy(struct snd_pcm_substream *substream,
             size_1 = Afe_Block->u4BufferSize - Afe_WriteIdx_tmp;
             size_2 = copy_size - size_1;
             #endif
-            PRINTK_AUD_DL1("size_1=0x%x, size_2=0x%x \n", size_1, size_2);
             if (!access_ok(VERIFY_READ, data_w_ptr, size_1))
             {
-                printk("AudDrv_write 1ptr invalid data_w_ptr=%p, size_1=%d", data_w_ptr, size_1);
-                printk("AudDrv_write u4BufferSize=%d, u4DataRemained=%d", Afe_Block->u4BufferSize, Afe_Block->u4DataRemained);
             }
             else
             {
 
-                PRINTK_AUD_DL1("mcmcpy Afe_Block->pucVirtBufAddr+Afe_WriteIdx= %p data_w_ptr = %p size_1 = %x\n",
-                              Afe_Block->pucVirtBufAddr + Afe_WriteIdx_tmp, data_w_ptr, size_1);
                 if ((copy_from_user((Afe_Block->pucVirtBufAddr + Afe_WriteIdx_tmp), data_w_ptr , (unsigned int)size_1)))
                 {
                     PRINTK_AUDDRV("AudDrv_write Fail 1 copy from user");
@@ -599,14 +554,10 @@ static int mtk_pcm_copy(struct snd_pcm_substream *substream,
 
             if (!access_ok(VERIFY_READ, data_w_ptr + size_1, size_2))
             {
-                PRINTK_AUDDRV("AudDrv_write 2ptr invalid data_w_ptr=%p, size_1=%d, size_2=%d", data_w_ptr, size_1, size_2);
-                PRINTK_AUDDRV("AudDrv_write u4BufferSize=%d, u4DataRemained=%d", Afe_Block->u4BufferSize, Afe_Block->u4DataRemained);
             }
             else
             {
 
-                PRINTK_AUD_DL1("mcmcpy Afe_Block->pucVirtBufAddr+Afe_WriteIdx= %p data_w_ptr+size_1 = %p size_2 = %x\n",
-                               Afe_Block->pucVirtBufAddr + Afe_WriteIdx_tmp, data_w_ptr + size_1, (unsigned int)size_2);
                 if ((copy_from_user((Afe_Block->pucVirtBufAddr + Afe_WriteIdx_tmp), (data_w_ptr + size_1), size_2)))
                 {
                     PRINTK_AUDDRV("AudDrv_write Fail 2  copy from user");
@@ -622,8 +573,6 @@ static int mtk_pcm_copy(struct snd_pcm_substream *substream,
             count -= copy_size;
             data_w_ptr += copy_size;
 
-            PRINTK_AUD_DL1("AudDrv_write finish2, copy size:%x, WriteIdx:%x,ReadIdx=%x DataRemained:%x \r\n",
-                           copy_size, Afe_Block->u4WriteIdx, Afe_Block->u4DMAReadIdx, Afe_Block->u4DataRemained);
         }
     }
     return 0;
@@ -633,7 +582,6 @@ static int mtk_pcm_silence(struct snd_pcm_substream *substream,
                            int channel, snd_pcm_uframes_t pos,
                            snd_pcm_uframes_t count)
 {
-    PRINTK_AUDDRV("%s \n", __func__);
     return 0; /* do nothing */
 }
 
@@ -642,7 +590,6 @@ static void *dummy_page[2];
 static struct page *mtk_pcm_page(struct snd_pcm_substream *substream,
                                  unsigned long offset)
 {
-    PRINTK_AUDDRV("%s \n", __func__);
     return virt_to_page(dummy_page[substream->stream]); /* the same page */
 }
 
@@ -671,7 +618,6 @@ static struct snd_soc_platform_driver mtk_soc_platform =
 static int mtk_soc_dl1_probe(struct platform_device *pdev)
 {
     int ret = 0;
-    PRINTK_AUDDRV("%s \n", __func__);
 
     pdev->dev.coherent_dma_mask = DMA_BIT_MASK(64);
     if (!pdev->dev.dma_mask)
@@ -684,7 +630,6 @@ static int mtk_soc_dl1_probe(struct platform_device *pdev)
         dev_set_name(&pdev->dev, "%s", MT_SOC_DL1_PCM);
     }
 
-    PRINTK_AUDDRV("%s: dev name %s\n", __func__, dev_name(&pdev->dev));
     InitAfeControl();
 #ifndef CONFIG_OF
     ret = Register_Aud_Irq(&pdev->dev, MT6580_AFE_MCU_IRQ_LINE);
@@ -699,14 +644,12 @@ static int mtk_soc_dl1_probe(struct platform_device *pdev)
 static int mtk_asoc_pcm_dl1_new(struct snd_soc_pcm_runtime *rtd)
 {
     int ret = 0;
-    PRINTK_AUDDRV("%s\n", __func__);
     return ret;
 }
 
 
 static int mtk_asoc_dl1_probe(struct snd_soc_platform *platform)
 {
-    PRINTK_AUDDRV("mtk_asoc_dl1_probe\n");
     // allocate dram
     AudDrv_Allocate_mem_Buffer(platform->dev, Soc_Aud_Digital_Block_MEM_DL1, Dl1_MAX_BUFFER_SIZE);
     Dl1_Playback_dma_buf =  Get_Mem_Buffer(Soc_Aud_Digital_Block_MEM_DL1);
@@ -715,7 +658,6 @@ static int mtk_asoc_dl1_probe(struct snd_soc_platform *platform)
 
 static int mtk_afe_remove(struct platform_device *pdev)
 {
-    PRINTK_AUDDRV("%s \n", __func__);
     snd_soc_unregister_platform(&pdev->dev);
     return 0;
 }
@@ -740,18 +682,15 @@ static int Auddrv_Reg_map_new(void)
     {
         /* Setup IO addresses */
         AFE_BASE_ADDRESS = of_iomap(node, 0);
-        printk("[mt_soc_pcm_dl1] AFE_BASE_ADDRESS=0x%p\n", AFE_BASE_ADDRESS);
     }
     else
     {
         printk("[mt_soc_pcm_dl1] node NULL, can't iomap AFE_BASE!!!\n");
     }
     of_property_read_u32(node, "reg", &AFE_BASE_PHY);
-    printk("[mt_soc_pcm_dl1] AFE_BASE_PHY=0x%x\n", AFE_BASE_PHY);
 
     /*get afe irq num*/
     afe_irq_number = irq_of_parse_and_map(node, 0);
-    printk("[mt_soc_pcm_dl1] afe_irq_number=0x%x\n", afe_irq_number);
     if (!afe_irq_number)
     {
         printk("[mt_soc_pcm_dl1] get afe_irq_number failed!!!\n");
@@ -780,105 +719,83 @@ static int Auddrv_OF_ParseGPIO(void)
         if (of_property_read_u32_index(node, "audclk-gpio", 0, &pin_audclk))
         {
             if_config1 = 0;
-            printk("audclk-gpio get pin fail!!!\n");
         }
         if (of_property_read_u32_index(node, "audclk-gpio", 1, &pin_mode_audclk))
         {
             if_config1 = 0;
-            printk("audclk-gpio get pin_mode fail!!!\n");
         }
 
         if (of_property_read_u32_index(node, "audmiso-gpio", 0, &pin_audmiso))
         {
             if_config2 = 0;
-            printk("audmiso-gpio get pin fail!!!\n");
         }
         if (of_property_read_u32_index(node, "audmiso-gpio", 1, &pin_mode_audmiso))
         {
             if_config2 = 0;
-            printk("audmiso-gpio get pin_mode fail!!!\n");
         }
 
         if (of_property_read_u32_index(node, "audmosi-gpio", 0, &pin_audmosi))
         {
             if_config3 = 0;
-            printk("audmosi-gpio get pin fail!!!\n");
         }
         if (of_property_read_u32_index(node, "audmosi-gpio", 1, &pin_mode_audmosi))
         {
             if_config3 = 0;
-            printk("audmosi-gpio get pin_mode fail!!!\n");
         }
 
         if (of_property_read_u32_index(node, "vowclk-gpio", 0, &pin_vowclk))
         {
             if_config4 = 0;
-            printk("vowclk-gpio get pin fail!!!\n");
         }
         if (of_property_read_u32_index(node, "vowclk-gpio", 1, &pin_mode_vowclk))
         {
             if_config4 = 0;
-            printk("vowclk-gpio get pin_mode fail!!!\n");
         }
 
         if (of_property_read_u32_index(node, "extspkamp-gpio", 0, &pin_extspkamp))
         {
             if_config5 = 0;
-            printk("extspkamp-gpio get pin fail!!!\n");
         }
         if (of_property_read_u32_index(node, "extspkamp-gpio", 1, &pin_mode_extspkamp))
         {
             if_config5 = 0;
-            printk("extspkamp-gpio get pin_mode fail!!!\n");
         }
 
         if (of_property_read_u32_index(node, "i2s1clk-gpio", 0, &pin_i2s1clk))
         {
             if_config6 = 0;
-            printk("i2s1clk-gpio get pin fail!!!\n");
         }
         if (of_property_read_u32_index(node, "i2s1clk-gpio", 1, &pin_mode_i2s1clk))
         {
             if_config6 = 0;
-            printk("i2s1clk-gpio get pin_mode fail!!!\n");
         }
 
         if (of_property_read_u32_index(node, "i2s1dat-gpio", 0, &pin_i2s1dat))
         {
             if_config7 = 0;
-            printk("i2s1dat-gpio get pin fail!!!\n");
         }
         if (of_property_read_u32_index(node, "i2s1dat-gpio", 1, &pin_mode_i2s1dat))
         {
             if_config7 = 0;
-            printk("i2s1dat-gpio get pin_mode fail!!!\n");
         }
 
         if (of_property_read_u32_index(node, "i2s1mclk-gpio", 0, &pin_i2s1mclk))
         {
             if_config8 = 0;
-            printk("i2s1mclk-gpio get pin fail!!!\n");
         }
         if (of_property_read_u32_index(node, "i2s1mclk-gpio", 1, &pin_mode_i2s1mclk))
         {
             if_config8 = 0;
-            printk("i2s1mclk-gpio get pin_mode fail!!!\n");
         }
 
         if (of_property_read_u32_index(node, "i2s1ws-gpio", 0, &pin_i2s1ws))
         {
             if_config9 = 0;
-            printk("i2s1ws-gpio get pin fail!!!\n");
         }
         if (of_property_read_u32_index(node, "i2s1ws-gpio", 1, &pin_mode_i2s1ws))
         {
             if_config9 = 0;
-            printk("i2s1ws-gpio get pin_mode fail!!!\n");
         }
-
-        printk("Auddrv_OF_ParseGPIO pin_audclk=%d, pin_audmiso=%d, pin_audmosi=%d \n", pin_audclk, pin_audmiso, pin_audmosi);
-        printk("Auddrv_OF_ParseGPIO pin_vowclk=%d, pin_extspkamp=%d \n", pin_vowclk, pin_extspkamp);
-        printk("Auddrv_OF_ParseGPIO pin_i2s1clk=%d, pin_i2s1dat=%d, pin_i2s1mclk=%d, pin_i2s1ws=%d \n", pin_i2s1clk, pin_i2s1dat, pin_i2s1mclk, pin_i2s1ws);
     }
     else
     {
@@ -900,7 +817,6 @@ int GetGPIO_Info(int type, int *pin, int *pinmode)
             }
             else
             {
-                printk("GetGPIO_Info type %d fail!!!\n", type);
                 *pin = -1;
                 *pinmode = -1;
             }
@@ -914,7 +830,6 @@ int GetGPIO_Info(int type, int *pin, int *pinmode)
             }
             else
             {
-                printk("GetGPIO_Info type %d fail!!!\n", type);
                 *pin = -1;
                 *pinmode = -1;
             }
@@ -928,7 +843,6 @@ int GetGPIO_Info(int type, int *pin, int *pinmode)
             }
             else
             {
-                printk("GetGPIO_Info type %d fail!!!\n", type);
                 *pin = -1;
                 *pinmode = -1;
             }
@@ -942,7 +856,6 @@ int GetGPIO_Info(int type, int *pin, int *pinmode)
             }
             else
             {
-                printk("GetGPIO_Info type %d fail!!!\n", type);
                 *pin = -1;
                 *pinmode = -1;
             }
@@ -956,7 +869,6 @@ int GetGPIO_Info(int type, int *pin, int *pinmode)
             }
             else
             {
-                printk("GetGPIO_Info type %d fail!!!\n", type);
                 *pin = -1;
                 *pinmode = -1;
             }
@@ -970,7 +882,6 @@ int GetGPIO_Info(int type, int *pin, int *pinmode)
             }
             else
             {
-                printk("GetGPIO_Info type %d fail!!!\n", type);
                 *pin = -1;
                 *pinmode = -1;
             }
@@ -984,7 +895,6 @@ int GetGPIO_Info(int type, int *pin, int *pinmode)
             }
             else
             {
-                printk("GetGPIO_Info type %d fail!!!\n", type);
                 *pin = -1;
                 *pinmode = -1;
             }
@@ -998,7 +908,6 @@ int GetGPIO_Info(int type, int *pin, int *pinmode)
             }
             else
             {
-                printk("GetGPIO_Info type %d fail!!!\n", type);
                 *pin = -1;
                 *pinmode = -1;
             }
@@ -1012,7 +921,6 @@ int GetGPIO_Info(int type, int *pin, int *pinmode)
             }
             else
             {
-                printk("GetGPIO_Info type %d fail!!!\n", type);
                 *pin = -1;
                 *pinmode = -1;
             }
@@ -1049,7 +957,6 @@ static struct platform_device *soc_mtkafe_dev;
 static int __init mtk_soc_platform_init(void)
 {
     int ret;
-    PRINTK_AUDDRV("%s \n", __func__);
 #ifdef CONFIG_OF
     Auddrv_Reg_map_new();
     ret = Register_Aud_Irq(NULL, afe_irq_number);
@@ -1076,7 +983,6 @@ module_init(mtk_soc_platform_init);
 
 static void __exit mtk_soc_platform_exit(void)
 {
-    PRINTK_AUDDRV("%s \n", __func__);
 
     platform_driver_unregister(&mtk_afe_driver);
 }
diff --git a/sound/soc/mediatek/mt_soc_audio_6580/mt_soc_pcm_dl1_awb.c b/sound/soc/mediatek/mt_soc_audio_6580/mt_soc_pcm_dl1_awb.c
index b46df04ed..e97fc85dc 100644
--- a/sound/soc/mediatek/mt_soc_audio_6580/mt_soc_pcm_dl1_awb.c
+++ b/sound/soc/mediatek/mt_soc_audio_6580/mt_soc_pcm_dl1_awb.c
@@ -98,8 +98,6 @@ static struct snd_pcm_hardware mtk_dl1_awb_hardware =
 
 static void StopAudioDl1AWBHardware(struct snd_pcm_substream *substream)
 {
-    printk("StopAudioDl1AWBHardware \n");
-
     SetMemoryPathEnable(Soc_Aud_Digital_Block_MEM_AWB, false);
 
     // here to set interrupt
@@ -114,8 +112,6 @@ static void StopAudioDl1AWBHardware(struct snd_pcm_substream *substream)
 
 static void StartAudioDl1AWBHardware(struct snd_pcm_substream *substream)
 {
-    printk("StartAudioDl1AWBHardware \n");
-
     // here to set interrupt
     SetIrqMcuCounter(Soc_Aud_IRQ_MCU_MODE_IRQ2_MCU_MODE, substream->runtime->period_size >> 1);
     SetIrqMcuSampleRate(Soc_Aud_IRQ_MCU_MODE_IRQ2_MCU_MODE, substream->runtime->rate);
@@ -133,13 +129,11 @@ static void StartAudioDl1AWBHardware(struct snd_pcm_substream *substream)
 
 static int mtk_dl1_awb_pcm_prepare(struct snd_pcm_substream *substream)
 {
-    printk("mtk_dl1_awb_pcm_prepare substream->rate = %d  substream->channels = %d \n", substream->runtime->rate, substream->runtime->channels);
     return 0;
 }
 
 static int mtk_dl1_awb_alsa_stop(struct snd_pcm_substream *substream)
 {
-    printk("mtk_dl1_awb_alsa_stop \n");
     StopAudioDl1AWBHardware(substream);
     RemoveMemifSubStream(Soc_Aud_Digital_Block_MEM_AWB, substream);
     return 0;
@@ -152,7 +146,6 @@ static snd_pcm_uframes_t mtk_dl1_awb_pcm_pointer(struct snd_pcm_substream *subst
     kal_int32 HW_Cur_ReadIdx = 0;
     kal_uint32 Frameidx = 0;
     AFE_BLOCK_T *Awb_Block = &(Dl1_AWB_Control_context->rBlock);
-    PRINTK_AUD_AWB("mtk_dl1_awb_pcm_pointer Awb_Block->u4WriteIdx;= 0x%x \n", Awb_Block->u4WriteIdx);
     if (GetMemoryPathEnable(Soc_Aud_Digital_Block_MEM_AWB) == true)
     {
         // get total bytes to copysinewavetohdmi
@@ -171,12 +164,10 @@ static snd_pcm_uframes_t mtk_dl1_awb_pcm_pointer(struct snd_pcm_substream *subst
         #endif
         if (HW_Cur_ReadIdx == 0)
         {
-            printk("[Auddrv] mtk_dl1_awb_pcm_pointer  HW_Cur_ReadIdx ==0 \n");
             HW_Cur_ReadIdx = Awb_Block->pucPhysBufAddr;
         }
         HW_memory_index = (HW_Cur_ReadIdx - Awb_Block->pucPhysBufAddr);
         Previous_Hw_cur = HW_memory_index;
-        PRINTK_AUD_AWB("[Auddrv] mtk_dl1_awb_pcm_pointer =0x%x HW_memory_index = 0x%x\n", HW_Cur_ReadIdx, HW_memory_index);
         return audio_bytes_to_frame(substream, Previous_Hw_cur);
     }
     return 0;
@@ -188,7 +179,6 @@ static void SetAWBBuffer(struct snd_pcm_substream *substream,
 {
     AFE_BLOCK_T *pblock = &Dl1_AWB_Control_context->rBlock;
     struct snd_pcm_runtime *runtime = substream->runtime;
-    printk("SetAWBBuffer\n");
     pblock->pucPhysBufAddr =  runtime->dma_addr;
     pblock->pucVirtBufAddr =  runtime->dma_area;
     pblock->u4BufferSize = runtime->dma_bytes;
@@ -198,8 +188,6 @@ static void SetAWBBuffer(struct snd_pcm_substream *substream,
     pblock->u4DataRemained  = 0;
     pblock->u4fsyncflag     = false;
     pblock->uResetFlag      = true;
-    printk("dma_bytes = %d dma_area = %p dma_addr = 0x%x\n",
-           pblock->u4BufferSize, pblock->pucVirtBufAddr, pblock->pucPhysBufAddr);
     // set sram address top hardware
     Afe_Set_Reg(AFE_AWB_BASE , pblock->pucPhysBufAddr , 0xffffffff);
     Afe_Set_Reg(AFE_AWB_END  , pblock->pucPhysBufAddr + (pblock->u4BufferSize - 1), 0xffffffff);
@@ -213,38 +201,28 @@ static int mtk_dl1_awb_pcm_hw_params(struct snd_pcm_substream *substream,
     struct snd_dma_buffer *dma_buf = &substream->dma_buffer;
     int ret = 0;
 
-    printk("mtk_dl1_awb_pcm_hw_params \n");
-
     dma_buf->dev.type = SNDRV_DMA_TYPE_DEV;
     dma_buf->dev.dev = substream->pcm->card->dev;
     dma_buf->private_data = NULL;
 
     if (Awb_Capture_dma_buf->area)
     {
-        printk("mtk_dl1_awb_pcm_hw_params Awb_Capture_dma_buf->area\n");
         runtime->dma_bytes = params_buffer_bytes(hw_params);
         runtime->dma_area = Awb_Capture_dma_buf->area;
         runtime->dma_addr = Awb_Capture_dma_buf->addr;
     }
     else
     {
-        printk("mtk_dl1_awb_pcm_hw_params snd_pcm_lib_malloc_pages\n");
         ret =  snd_pcm_lib_malloc_pages(substream, params_buffer_bytes(hw_params));
     }
-    printk("mtk_dl1_awb_pcm_hw_params dma_bytes = %zu dma_area = %p dma_addr = 0x%lx\n",
-           runtime->dma_bytes, runtime->dma_area, (long)runtime->dma_addr);
 
-    printk("runtime->hw.buffer_bytes_max = %zu \n", runtime->hw.buffer_bytes_max);
     SetAWBBuffer(substream, hw_params);
 
-    printk("dma_bytes = %zu dma_area = %p dma_addr = 0x%lx\n",
-           substream->runtime->dma_bytes, substream->runtime->dma_area, (long)substream->runtime->dma_addr);
     return ret;
 }
 
 static int mtk_dl1_capture_pcm_hw_free(struct snd_pcm_substream *substream)
 {
-    printk("mtk_dl1_capture_pcm_hw_free \n");
     if (Awb_Capture_dma_buf->area)
     {
         return 0;
@@ -265,7 +243,6 @@ static int mtk_dl1_awb_pcm_open(struct snd_pcm_substream *substream)
 {
     struct snd_pcm_runtime *runtime = substream->runtime;
     int ret = 0;
-    printk("mtk_dl1_awb_pcm_open\n");
     Dl1_AWB_Control_context = Get_Mem_ControlT(Soc_Aud_Digital_Block_MEM_AWB);
     runtime->hw = mtk_dl1_awb_hardware;
     memcpy((void *)(&(runtime->hw)), (void *)&mtk_dl1_awb_hardware , sizeof(struct snd_pcm_hardware));
@@ -276,21 +253,18 @@ static int mtk_dl1_awb_pcm_open(struct snd_pcm_substream *substream)
 
     if (ret < 0)
     {
-        printk("snd_pcm_hw_constraint_integer failed\n");
     }
 
     // here open audio clocks
     AudDrv_Clk_On();
 
     //print for hw pcm information
-    printk("mtk_dl1_awb_pcm_open runtime rate = %d channels = %d \n", runtime->rate, runtime->channels);
     runtime->hw.info |= SNDRV_PCM_INFO_INTERLEAVED;
     runtime->hw.info |= SNDRV_PCM_INFO_NONINTERLEAVED;
     runtime->hw.info |= SNDRV_PCM_INFO_MMAP_VALID;
 
     if (substream->stream == SNDRV_PCM_STREAM_CAPTURE)
     {
-        printk("SNDRV_PCM_STREAM_CAPTURE \n");
     }
     else
     {
@@ -299,12 +273,10 @@ static int mtk_dl1_awb_pcm_open(struct snd_pcm_substream *substream)
 
     if (ret < 0)
     {
-        printk("mtk_dl1_awb_pcm_close\n");
         mtk_dl1_awb_pcm_close(substream);
         return ret;
     }
     AudDrv_Emi_Clk_On();
-    printk("mtk_dl1_awb_pcm_open return\n");
     return 0;
 }
 
@@ -317,7 +289,6 @@ static int mtk_dl1_awb_pcm_close(struct snd_pcm_substream *substream)
 
 static int mtk_dl1_awb_alsa_start(struct snd_pcm_substream *substream)
 {
-    printk("mtk_dl1_awb_alsa_start \n");
     SetMemifSubStream(Soc_Aud_Digital_Block_MEM_AWB, substream);
     StartAudioDl1AWBHardware(substream);
     return 0;
@@ -325,7 +296,6 @@ static int mtk_dl1_awb_alsa_start(struct snd_pcm_substream *substream)
 
 static int mtk_dl1_awb_pcm_trigger(struct snd_pcm_substream *substream, int cmd)
 {
-    printk("mtk_dl1_awb_pcm_trigger cmd = %d\n", cmd);
 
     switch (cmd)
     {
@@ -343,7 +313,6 @@ static bool CheckNullPointer(void *pointer)
 {
     if (pointer == NULL)
     {
-        printk("CheckNullPointer pointer = NULL");
         return true;
     }
     return false;
@@ -372,7 +341,6 @@ static int mtk_dl1_awb_pcm_copy(struct snd_pcm_substream *substream,
 
     if (pAWB_MEM_ConTrol == NULL)
     {
-        printk("cannot find MEM control !!!!!!!\n");
         msleep(50);
         return 0;
     }
@@ -385,14 +353,12 @@ static int mtk_dl1_awb_pcm_copy(struct snd_pcm_substream *substream,
 
     if (CheckNullPointer((void *)Awb_Block->pucVirtBufAddr))
     {
-        printk("CheckNullPointer  pucVirtBufAddr = %p\n", Awb_Block->pucVirtBufAddr);
         return 0;
     }
 
     spin_lock_irqsave(&auddrv_Dl1AWBInCtl_lock, flags);
     if (Awb_Block->u4DataRemained >  Awb_Block->u4BufferSize)
     {
-        printk("mtk_dl1_awb_pcm_copy u4DataRemained=%x > u4BufferSize=%x" , Awb_Block->u4DataRemained, Awb_Block->u4BufferSize);
         Awb_Block->u4DataRemained = 0;
         Awb_Block->u4DMAReadIdx   = Awb_Block->u4WriteIdx;
     }
@@ -406,30 +372,22 @@ static int mtk_dl1_awb_pcm_copy(struct snd_pcm_substream *substream,
     }
 
     DMA_Read_Ptr = Awb_Block->u4DMAReadIdx + Get_Mem_CopySizeByStream(Soc_Aud_Digital_Block_MEM_AWB,substream);
-    PRINTK_AUD_AWB("mtk_dl1_awb_pcm_copy, Awb_Block->u4DMAReadIdx= 0x%x Get_Mem_CopySizeByStream = 0x%x \r\n",
-                    Awb_Block->u4DMAReadIdx ,Get_Mem_CopySizeByStream(Soc_Aud_Digital_Block_MEM_AWB,substream));
     if(DMA_Read_Ptr >=  Awb_Block->u4BufferSize )
     {
-         printk("mtk_dl1_awb_pcm_copy 1, DMA_Read_Ptr out of bound.\n");
          DMA_Read_Ptr %=Awb_Block->u4BufferSize;
     }
 
     spin_unlock_irqrestore(&auddrv_Dl1AWBInCtl_lock, flags);
-    PRINTK_AUD_AWB("mtk_dl1_awb_pcm_copy, Awb_Block = %p AudDrv_MEMIF_Read finish0, count:0x%x, read_size:0x%x, u4DataRemained:0x%x, u4DMAReadIdx:0x%x, u4WriteIdx:0x%x \r\n",
-                   Awb_Block,count, read_size, Awb_Block->u4DataRemained, Awb_Block->u4DMAReadIdx, Awb_Block->u4WriteIdx);
 
     if (DMA_Read_Ptr + read_size <= Awb_Block->u4BufferSize)
     {
         if (DMA_Read_Ptr != Awb_Block->u4DMAReadIdx)
         {
-            printk("mtk_dl1_awb_pcm_copy 1, read_size:%zu, DataRemained:0x%x, DMA_Read_Ptr:%zu, DMAReadIdx:0x%x \r\n",
-                   read_size, Awb_Block->u4DataRemained, DMA_Read_Ptr, Awb_Block->u4DMAReadIdx);
         }
 
         if (copy_to_user((void __user *)Read_Data_Ptr, (Awb_Block->pucVirtBufAddr + DMA_Read_Ptr), read_size))
         {
 
-            printk("mtk_dl1_awb_pcm_copy Fail 1 copy to user Read_Data_Ptr:%p, pucVirtBufAddr:%p, u4DMAReadIdx:0x%x, DMA_Read_Ptr:%zu,read_size:%zu", Read_Data_Ptr, Awb_Block->pucVirtBufAddr, Awb_Block->u4DMAReadIdx, DMA_Read_Ptr, read_size);
             return 0;
         }
 
@@ -439,9 +397,6 @@ static int mtk_dl1_awb_pcm_copy(struct snd_pcm_substream *substream,
         spin_unlock(&auddrv_Dl1AWBInCtl_lock);
         Read_Data_Ptr += read_size;
         count -= read_size;
-
-        PRINTK_AUD_AWB("mtk_dl1_awb_pcm_copy finish1, copy size:0x%x, u4DMAReadIdx:0x%x, u4WriteIdx:0x%x, u4DataRemained:0x%x u4MaxCopySize:0x%x \n",
-                       read_size, Awb_Block->u4DMAReadIdx, Awb_Block->u4WriteIdx, Awb_Block->u4DataRemained,Get_Mem_CopySizeByStream(Soc_Aud_Digital_Block_MEM_AWB,substream));
     }
     else
     {
@@ -449,16 +404,8 @@ static int mtk_dl1_awb_pcm_copy(struct snd_pcm_substream *substream,
         size_1 = Awb_Block->u4BufferSize - DMA_Read_Ptr;
         size_2 = read_size - size_1;
 
-        if (DMA_Read_Ptr != Awb_Block->u4DMAReadIdx)
-        {
-            printk("mtk_dl1_awb_pcm_copy 2, read_size1:0x%x, DataRemained:0x%x, DMA_Read_Ptr:%zu, DMAReadIdx:0x%x \r\n",
-                   size_1, Awb_Block->u4DataRemained, DMA_Read_Ptr, Awb_Block->u4DMAReadIdx);
-        }
         if (copy_to_user((void __user *)Read_Data_Ptr, (Awb_Block->pucVirtBufAddr + DMA_Read_Ptr), size_1))
         {
-
-            printk("mtk_dl1_awb_pcm_copy Fail 2 copy to user Read_Data_Ptr:%p, pucVirtBufAddr:%p, u4DMAReadIdx:0x%x, DMA_Read_Ptr:%zu,read_size:%zu",
-                   Read_Data_Ptr, Awb_Block->pucVirtBufAddr, Awb_Block->u4DMAReadIdx, DMA_Read_Ptr, read_size);
             return 0;
         }
 
@@ -468,23 +415,12 @@ static int mtk_dl1_awb_pcm_copy(struct snd_pcm_substream *substream,
         Set_Mem_CopySizeByStream(Soc_Aud_Digital_Block_MEM_AWB,substream,size_1);
         if(DMA_Read_Ptr >= Awb_Block->u4BufferSize )
         {
-            printk("mtk_dl1_awb_pcm_copy 2, DMA_Read_Ptr out of bound.\n");
             DMA_Read_Ptr %= Awb_Block->u4BufferSize;
         }
         spin_unlock(&auddrv_Dl1AWBInCtl_lock);
 
-        PRINTK_AUD_AWB("mtk_dl1_awb_pcm_copy finish2, copy size_1:0x%x, u4DMAReadIdx:0x%x, u4WriteIdx:0x%x, u4DataRemained:0x%x \r\n",
-                       size_1, Awb_Block->u4DMAReadIdx, Awb_Block->u4WriteIdx, Awb_Block->u4DataRemained);
-
-        if (DMA_Read_Ptr != Awb_Block->u4DMAReadIdx)
-        {
-
-            PRINTK_AUD_AWB("mtk_dl1_awb_pcm_copy 3, read_size2:%x, DataRemained:%x, DMA_Read_Ptr:0x%x, DMAReadIdx:%x \r\n",
-                   size_2, Awb_Block->u4DataRemained, DMA_Read_Ptr, Awb_Block->u4DMAReadIdx);
-        }
         if (copy_to_user((void __user *)(Read_Data_Ptr + size_1), (Awb_Block->pucVirtBufAddr + DMA_Read_Ptr), size_2))
         {
-            printk("mtk_dl1_awb_pcm_copy Fail 3 copy to user Read_Data_Ptr:%p, pucVirtBufAddr:%p, u4DMAReadIdx:0x%x , DMA_Read_Ptr:%zu, read_size:%zu", Read_Data_Ptr, Awb_Block->pucVirtBufAddr, Awb_Block->u4DMAReadIdx, DMA_Read_Ptr, read_size);
             return read_count << 2;
         }
 
@@ -496,9 +432,6 @@ static int mtk_dl1_awb_pcm_copy(struct snd_pcm_substream *substream,
 
         count -= read_size;
         Read_Data_Ptr += read_size;
-
-        PRINTK_AUD_AWB("mtk_dl1_awb_pcm_copy finish3, copy size_2:0x%x, u4DMAReadIdx:0x%x, u4WriteIdx:0x%x u4DataRemained:0x%x \r\n",
-                       size_2, Awb_Block->u4DMAReadIdx, Awb_Block->u4WriteIdx, Awb_Block->u4DataRemained);
     }
 
     return read_count >> 2;
@@ -508,7 +441,6 @@ static int mtk_capture_pcm_silence(struct snd_pcm_substream *substream,
                                    int channel, snd_pcm_uframes_t pos,
                                    snd_pcm_uframes_t count)
 {
-    printk("dummy_pcm_silence \n");
     return 0; /* do nothing */
 }
 
@@ -518,7 +450,6 @@ static void *dummy_page[2];
 static struct page *mtk_dl1_capture_pcm_page(struct snd_pcm_substream *substream,
                                              unsigned long offset)
 {
-    printk("dummy_pcm_page \n");
     return virt_to_page(dummy_page[substream->stream]); /* the same page */
 }
 
@@ -547,8 +478,6 @@ static struct snd_soc_platform_driver mtk_soc_platform =
 
 static int mtk_dl1_awb_probe(struct platform_device *pdev)
 {
-    printk("mtk_dl1_awb_probe\n");
-
     pdev->dev.coherent_dma_mask = DMA_BIT_MASK(64);
     if (pdev->dev.dma_mask == NULL)
     {
@@ -560,20 +489,17 @@ static int mtk_dl1_awb_probe(struct platform_device *pdev)
         dev_set_name(&pdev->dev, "%s", MT_SOC_DL1_AWB_PCM);
     }
 
-    printk("%s: dev name %s\n", __func__, dev_name(&pdev->dev));
     return snd_soc_register_platform(&pdev->dev,
                                      &mtk_soc_platform);
 }
 
 static int mtk_asoc_dl1_awb_pcm_new(struct snd_soc_pcm_runtime *rtd)
 {
-    printk("mtk_asoc_dl1_awb_pcm_new \n");
     return 0;
 }
 
 static int mtk_afe_dl1_awb_probe(struct snd_soc_platform *platform)
 {
-    printk("mtk_afe_dl1_awb_probe\n");
     AudDrv_Allocate_mem_Buffer(platform->dev, Soc_Aud_Digital_Block_MEM_AWB, AWB_MAX_BUFFER_SIZE);
     Awb_Capture_dma_buf =  Get_Mem_Buffer(Soc_Aud_Digital_Block_MEM_AWB);
     return 0;
@@ -581,7 +507,6 @@ static int mtk_afe_dl1_awb_probe(struct snd_soc_platform *platform)
 
 static int mtk_dl1_awb_remove(struct platform_device *pdev)
 {
-    pr_debug("%s\n", __func__);
     snd_soc_unregister_platform(&pdev->dev);
     return 0;
 }
@@ -614,7 +539,6 @@ static struct platform_device *soc_dl1_awb_capture_dev;
 static int __init mtk_soc_dl1_awb_platform_init(void)
 {
     int ret = 0;
-    printk("%s\n", __func__);
 	#ifndef CONFIG_OF
     soc_dl1_awb_capture_dev = platform_device_alloc(MT_SOC_DL1_AWB_PCM, -1);
     if (!soc_dl1_awb_capture_dev)
@@ -635,7 +559,6 @@ static int __init mtk_soc_dl1_awb_platform_init(void)
 
 static void __exit mtk_soc_dl1_awb_platform_exit(void)
 {
-    printk("%s\n", __func__);
     platform_driver_unregister(&mtk_dl1_awb_capture_driver);
 }
 
diff --git a/sound/soc/mediatek/mt_soc_audio_6580/mt_soc_pcm_dl1_bt.c b/sound/soc/mediatek/mt_soc_audio_6580/mt_soc_pcm_dl1_bt.c
index 4cae7f7dd..40cf32dbf 100644
--- a/sound/soc/mediatek/mt_soc_audio_6580/mt_soc_pcm_dl1_bt.c
+++ b/sound/soc/mediatek/mt_soc_audio_6580/mt_soc_pcm_dl1_bt.c
@@ -99,8 +99,6 @@ static struct snd_pcm_hardware mtk_dl1bt_pcm_hardware =
 static int mtk_pcm_dl1Bt_stop(struct snd_pcm_substream *substream)
 {
 
-    PRINTK_AUDDRV("mtk_pcm_dl1Bt_stop \n");
-
     SetIrqEnable(Soc_Aud_IRQ_MCU_MODE_IRQ1_MCU_MODE, false);
 
     // here to turn off digital part
@@ -133,7 +131,6 @@ static snd_pcm_uframes_t mtk_dl1bt_pcm_pointer(struct snd_pcm_substream *substre
 
     AFE_BLOCK_T *Afe_Block = &pdl1btMemControl->rBlock;
     //struct snd_pcm_runtime *runtime = substream->runtime;
-    PRINTK_AUD_DL1(" %s Afe_Block->u4DMAReadIdx = 0x%x\n", __func__, Afe_Block->u4DMAReadIdx);
 
     spin_lock_irqsave(&pdl1btMemControl->substream_lock, flags);
 
@@ -146,7 +143,6 @@ static snd_pcm_uframes_t mtk_dl1bt_pcm_pointer(struct snd_pcm_substream *substre
         HW_Cur_ReadIdx = Afe_Get_Reg(AFE_DL1_CUR);
         if (HW_Cur_ReadIdx == 0)
         {
-            PRINTK_AUDDRV("[Auddrv] HW_Cur_ReadIdx ==0 \n");
             HW_Cur_ReadIdx = Afe_Block->pucPhysBufAddr;
         }
 
@@ -167,7 +163,6 @@ static snd_pcm_uframes_t mtk_dl1bt_pcm_pointer(struct snd_pcm_substream *substre
         Afe_Block->u4DataRemained -= Afe_consumed_bytes;
         Afe_Block->u4DMAReadIdx += Afe_consumed_bytes;
         Afe_Block->u4DMAReadIdx %= Afe_Block->u4BufferSize;
-        PRINTK_AUD_DL1("[Auddrv] HW_Cur_ReadIdx =0x%x HW_memory_index = 0x%x Afe_consumed_bytes  = 0x%x\n", HW_Cur_ReadIdx, HW_memory_index, Afe_consumed_bytes);
         spin_unlock_irqrestore(&pdl1btMemControl->substream_lock, flags);
 
         return audio_bytes_to_frame(substream , Afe_Block->u4DMAReadIdx);
@@ -185,7 +180,6 @@ static int mtk_pcm_dl1bt_hw_params(struct snd_pcm_substream *substream,
                                    struct snd_pcm_hw_params *hw_params)
 {
     int ret = 0;
-    PRINTK_AUDDRV("mtk_pcm_dl1bt_hw_params \n");
 
     /* runtime->dma_bytes has to be set manually to allow mmap */
     substream->runtime->dma_bytes = params_buffer_bytes(hw_params);
@@ -196,14 +190,11 @@ static int mtk_pcm_dl1bt_hw_params(struct snd_pcm_substream *substream,
     substream->runtime->dma_area = (unsigned char *)Get_Afe_SramBase_Pointer();
     substream->runtime->dma_addr = AFE_INTERNAL_SRAM_PHY_BASE;
 
-    PRINTK_AUDDRV(" dma_bytes = %zu dma_area = %p dma_addr = 0x%lx\n",
-                  substream->runtime->dma_bytes, substream->runtime->dma_area, (long)substream->runtime->dma_addr);
     return ret;
 }
 
 static int mtk_pcm_dl1bt_hw_free(struct snd_pcm_substream *substream)
 {
-    PRINTK_AUDDRV("mtk_pcm_dl1bt_hw_free \n");
     return 0;
 }
 
@@ -234,7 +225,6 @@ static int mtk_dl1bt_pcm_open(struct snd_pcm_substream *substream)
     }
     AfeControlSramUnLock();
 
-    PRINTK_AUDDRV("mtk_dl1bt_pcm_open\n");
     AudDrv_Clk_On();
 
     // get dl1 memconptrol and record substream
@@ -255,21 +245,10 @@ static int mtk_dl1bt_pcm_open(struct snd_pcm_substream *substream)
         PRINTK_AUDDRV("snd_pcm_hw_constraint_integer failed\n");
     }
     //print for hw pcm information
-    PRINTK_AUDDRV("mtk_dl1bt_pcm_open runtime rate = %d channels = %d substream->pcm->device = %d\n",
-                  runtime->rate, runtime->channels, substream->pcm->device);
 
-    if (substream->stream == SNDRV_PCM_STREAM_PLAYBACK)
-    {
-        PRINTK_AUDDRV("SNDRV_PCM_STREAM_PLAYBACK mtkalsa_playback_constraints\n");
-    }
-    else
-    {
-
-    }
 
     if (ret < 0)
     {
-        PRINTK_AUDDRV("mtk_Dl1Bt_close\n");
         mtk_Dl1Bt_close(substream);
         return ret;
     }
@@ -278,7 +257,6 @@ static int mtk_dl1bt_pcm_open(struct snd_pcm_substream *substream)
 
 static int mtk_Dl1Bt_close(struct snd_pcm_substream *substream)
 {
-    PRINTK_AUDDRV("%s \n", __func__);
     AfeControlSramLock();
     ClearSramState(mPlaybackSramState);
     mPlaybackSramState = GetSramState();
@@ -368,7 +346,6 @@ static int mtk_pcm_dl1bt_start(struct snd_pcm_substream *substream)
 
 static int mtk_pcm_trigger(struct snd_pcm_substream *substream, int cmd)
 {
-    PRINTK_AUDDRV("mtk_pcm_trigger cmd = %d\n", cmd);
     switch (cmd)
     {
         case SNDRV_PCM_TRIGGER_START:
@@ -389,7 +366,6 @@ static int mtk_pcm_dl1bt_copy(struct snd_pcm_substream *substream,
     unsigned long flags;
     char *data_w_ptr = (char *)dst;
     int copy_size = 0, Afe_WriteIdx_tmp;
-    PRINTK_AUD_DL1("mtk_pcm_dl1bt_copy pos = %lu count = %lu\n ", pos, count);
 
     // get total bytes to copy
     count = audio_frame_to_bytes(substream , count);
@@ -399,9 +375,6 @@ static int mtk_pcm_dl1bt_copy(struct snd_pcm_substream *substream,
 
     // handle for buffer management
 
-    PRINTK_AUD_DL1("AudDrv_write WriteIdx=0x%x, ReadIdx=0x%x, DataRemained=0x%x \n",
-                   Afe_Block->u4WriteIdx, Afe_Block->u4DMAReadIdx, Afe_Block->u4DataRemained);
-
     if (Afe_Block->u4BufferSize == 0)
     {
         printk("AudDrv_write: u4BufferSize=0 Error");
@@ -427,8 +400,6 @@ static int mtk_pcm_dl1bt_copy(struct snd_pcm_substream *substream,
     copy_size = Align64ByteSize(copy_size);
     #endif
     
-    PRINTK_AUD_DL1("copy_size=0x%x, count=0x%x \n", copy_size, (unsigned int)count);
-
     if (copy_size != 0)
     {
         spin_lock_irqsave(&auddrv_DL1BTCtl_lock, flags);
@@ -444,8 +415,6 @@ static int mtk_pcm_dl1bt_copy(struct snd_pcm_substream *substream,
             }
             else
             {
-                PRINTK_AUD_DL1("memcpy Afe_Block->pucVirtBufAddr+Afe_WriteIdx= %p data_w_ptr = %p copy_size = 0x%x\n",
-                               Afe_Block->pucVirtBufAddr + Afe_WriteIdx_tmp, data_w_ptr, copy_size);
                 if (copy_from_user((Afe_Block->pucVirtBufAddr + Afe_WriteIdx_tmp), data_w_ptr, copy_size))
                 {
                     PRINTK_AUDDRV("AudDrv_write Fail copy from user \n");
@@ -460,10 +429,6 @@ static int mtk_pcm_dl1bt_copy(struct snd_pcm_substream *substream,
             spin_unlock_irqrestore(&auddrv_DL1BTCtl_lock, flags);
             data_w_ptr += copy_size;
             count -= copy_size;
-
-            PRINTK_AUD_DL1("AudDrv_write finish1, copy_size:%x, WriteIdx:%x, ReadIdx=%x, DataRemained:%x, count=%lu \r\n",
-                           copy_size, Afe_Block->u4WriteIdx, Afe_Block->u4DMAReadIdx, Afe_Block->u4DataRemained, count);
-
         }
         else  // copy twice
         {
@@ -475,7 +440,6 @@ static int mtk_pcm_dl1bt_copy(struct snd_pcm_substream *substream,
             size_1 = Afe_Block->u4BufferSize - Afe_WriteIdx_tmp;
             size_2 = copy_size - size_1;
             #endif
-            PRINTK_AUD_DL1("size_1=0x%x, size_2=0x%x \n", size_1, size_2);
             if (!access_ok(VERIFY_READ, data_w_ptr, size_1))
             {
                 printk("AudDrv_write 1ptr invalid data_w_ptr=%p, size_1=%d", data_w_ptr, size_1);
@@ -483,9 +447,6 @@ static int mtk_pcm_dl1bt_copy(struct snd_pcm_substream *substream,
             }
             else
             {
-
-                PRINTK_AUD_DL1("mcmcpy Afe_Block->pucVirtBufAddr+Afe_WriteIdx= %p data_w_ptr = %p size_1 = %x\n",
-                               Afe_Block->pucVirtBufAddr + Afe_WriteIdx_tmp, data_w_ptr, size_1);
                 if ((copy_from_user((Afe_Block->pucVirtBufAddr + Afe_WriteIdx_tmp), data_w_ptr , size_1)))
                 {
                     PRINTK_AUDDRV("AudDrv_write Fail 1 copy from user");
@@ -506,9 +467,6 @@ static int mtk_pcm_dl1bt_copy(struct snd_pcm_substream *substream,
             }
             else
             {
-
-                PRINTK_AUD_DL1("mcmcpy Afe_Block->pucVirtBufAddr+Afe_WriteIdx= %p data_w_ptr+size_1 = %p size_2 = %x\n",
-                               Afe_Block->pucVirtBufAddr + Afe_WriteIdx_tmp, data_w_ptr + size_1, size_2);
                 if ((copy_from_user((Afe_Block->pucVirtBufAddr + Afe_WriteIdx_tmp), (data_w_ptr + size_1), size_2)))
                 {
                     PRINTK_AUDDRV("AudDrv_write Fail 2  copy from user");
@@ -523,20 +481,15 @@ static int mtk_pcm_dl1bt_copy(struct snd_pcm_substream *substream,
             spin_unlock_irqrestore(&auddrv_DL1BTCtl_lock, flags);
             count -= copy_size;
             data_w_ptr += copy_size;
-
-            PRINTK_AUD_DL1("AudDrv_write finish2, copy size:%x, WriteIdx:%x,ReadIdx=%x DataRemained:%x \r\n",
-                           copy_size, Afe_Block->u4WriteIdx, Afe_Block->u4DMAReadIdx, Afe_Block->u4DataRemained);
         }
     }
     return 0;
-    PRINTK_AUD_DL1("pcm_copy return \n");
 }
 
 static int mtk_pcm_dl1bt_silence(struct snd_pcm_substream *substream,
                                  int channel, snd_pcm_uframes_t pos,
                                  snd_pcm_uframes_t count)
 {
-    PRINTK_AUDDRV("%s \n", __func__);
     return 0; /* do nothing */
 }
 
@@ -545,7 +498,6 @@ static void *dummy_page[2];
 static struct page *mtk_pcm_page(struct snd_pcm_substream *substream,
                                  unsigned long offset)
 {
-    PRINTK_AUDDRV("%s \n", __func__);
     return virt_to_page(dummy_page[substream->stream]); /* the same page */
 }
 
@@ -573,7 +525,6 @@ static struct snd_soc_platform_driver mtk_soc_dl1bt_platform =
 
 static int mtk_dl1bt_probe(struct platform_device *pdev)
 {
-    PRINTK_AUDDRV("%s \n", __func__);
     
     pdev->dev.coherent_dma_mask = DMA_BIT_MASK(64);
     if (pdev->dev.dma_mask == NULL)
@@ -586,7 +537,6 @@ static int mtk_dl1bt_probe(struct platform_device *pdev)
         dev_set_name(&pdev->dev, "%s", MT_SOC_VOIP_BT_OUT);
     }
 
-    PRINTK_AUDDRV("%s: dev name %s\n", __func__, dev_name(&pdev->dev));
 
     mDev = &pdev->dev;
 
@@ -597,20 +547,17 @@ static int mtk_dl1bt_probe(struct platform_device *pdev)
 static int mtk_asoc_Dl1Bt_pcm_new(struct snd_soc_pcm_runtime *rtd)
 {
     int ret = 0;
-    PRINTK_AUDDRV("%s\n", __func__);
     return ret;
 }
 
 
 static int mtk_asoc_dl1bt_probe(struct snd_soc_platform *platform)
 {
-    PRINTK_AUDDRV("mtk_asoc_dl1bt_probe\n");
     return 0;
 }
 
 static int mtk_asoc_dl1bt_remove(struct platform_device *pdev)
 {
-    PRINTK_AUDDRV("%s \n", __func__);
     snd_soc_unregister_platform(&pdev->dev);
     return 0;
 }
@@ -643,7 +590,6 @@ static struct platform_device *soc_mtk_dl1bt_dev;
 static int __init mtk_soc_dl1bt_platform_init(void)
 {
     int ret;
-    PRINTK_AUDDRV("%s \n", __func__);
 #ifndef CONFIG_OF
     soc_mtk_dl1bt_dev = platform_device_alloc(MT_SOC_VOIP_BT_OUT, -1);
     if (!soc_mtk_dl1bt_dev)
@@ -666,7 +612,6 @@ module_init(mtk_soc_dl1bt_platform_init);
 
 static void __exit mtk_soc_dl1bt_platform_exit(void)
 {
-    PRINTK_AUDDRV("%s \n", __func__);
 
     platform_driver_unregister(&mtk_dl1bt_driver);
 }
diff --git a/sound/soc/mediatek/mt_soc_audio_6580/mt_soc_pcm_dl1_i2s0.c b/sound/soc/mediatek/mt_soc_audio_6580/mt_soc_pcm_dl1_i2s0.c
index 09dac0c47..4594112b4 100644
--- a/sound/soc/mediatek/mt_soc_audio_6580/mt_soc_pcm_dl1_i2s0.c
+++ b/sound/soc/mediatek/mt_soc_audio_6580/mt_soc_pcm_dl1_i2s0.c
@@ -88,7 +88,6 @@ static const struct soc_enum Audio_i2s0_Enum[] =
 static int Audio_i2s0_SideGen_Get(struct snd_kcontrol *kcontrol,
                                   struct snd_ctl_elem_value *ucontrol)
 {
-    printk("Audio_AmpR_Get = %d\n", mi2s0_sidegen_control);
     ucontrol->value.integer.value[0] = mi2s0_sidegen_control;
     return 0;
 }
@@ -100,7 +99,6 @@ static int Audio_i2s0_SideGen_Set(struct snd_kcontrol *kcontrol, struct snd_ctl_
     uint32 Audio_I2S_Dac;
     AudDrv_Clk_On();
 
-    printk("%s() samplerate = %d mi2s0_hdoutput_control = %d\n", __func__, samplerate, mi2s0_hdoutput_control);
     if (ucontrol->value.enumerated.item[0] > ARRAY_SIZE(i2s0_SIDEGEN))
     {
         printk("return -EINVAL\n");
@@ -181,7 +179,6 @@ static int Audio_i2s0_SideGen_Set(struct snd_kcontrol *kcontrol, struct snd_ctl_
         }
         else
         {
-            printk("%s(), mi2s0_sidegen_control=%d, write AFE_I2S_CON (0x%x), AFE_I2S_CON3(0x%x)\n", __func__, mi2s0_sidegen_control, Audio_I2S_Dac, u32AudioI2S);
             Afe_Set_Reg(AFE_I2S_CON, 0x0, 0x1);
             SetMemoryPathEnable(Soc_Aud_Digital_Block_I2S_OUT_2, true);
             Afe_Set_Reg(AFE_I2S_CON, Audio_I2S_Dac | 0x1, MASK_ALL);
@@ -212,14 +209,12 @@ static int Audio_i2s0_SideGen_Set(struct snd_kcontrol *kcontrol, struct snd_ctl_
 static int Audio_i2s0_hdoutput_Get(struct snd_kcontrol *kcontrol,
                                    struct snd_ctl_elem_value *ucontrol)
 {
-    printk("Audio_i2s0_hdoutput_Get = %d\n", mi2s0_hdoutput_control);
     ucontrol->value.integer.value[0] = mi2s0_hdoutput_control;
     return 0;
 }
 
 static int Audio_i2s0_hdoutput_Set(struct snd_kcontrol *kcontrol, struct snd_ctl_elem_value *ucontrol)
 {
-    printk("+%s()\n", __func__);
     if (ucontrol->value.enumerated.item[0] > ARRAY_SIZE(i2s0_HD_output))
     {
         printk("return -EINVAL\n");
@@ -278,7 +273,6 @@ static int mtk_pcm_i2s0_stop(struct snd_pcm_substream *substream)
 {
     AFE_BLOCK_T *Afe_Block = &(pI2s0MemControl->rBlock);
 
-    printk("mtk_pcm_i2s0_stop \n");
     SetIrqEnable(Soc_Aud_IRQ_MCU_MODE_IRQ1_MCU_MODE, false);
 
     // here start digital part
@@ -307,7 +301,6 @@ static snd_pcm_uframes_t mtk_pcm_i2s0_pointer(struct snd_pcm_substream *substrea
     kal_int32 Afe_consumed_bytes = 0;
     AFE_BLOCK_T *Afe_Block = &pI2s0MemControl->rBlock;
     //struct snd_pcm_runtime *runtime = substream->runtime;
-    PRINTK_AUD_DL1(" %s Afe_Block->u4DMAReadIdx = 0x%x\n", __func__, Afe_Block->u4DMAReadIdx);
 
     Auddrv_Dl1_Spinlock_lock();
 
@@ -320,7 +313,6 @@ static snd_pcm_uframes_t mtk_pcm_i2s0_pointer(struct snd_pcm_substream *substrea
         HW_Cur_ReadIdx = Afe_Get_Reg(AFE_DL1_CUR);
         if (HW_Cur_ReadIdx == 0)
         {
-            PRINTK_AUDDRV("[Auddrv] HW_Cur_ReadIdx ==0 \n");
             HW_Cur_ReadIdx = Afe_Block->pucPhysBufAddr;
         }
 
@@ -341,7 +333,6 @@ static snd_pcm_uframes_t mtk_pcm_i2s0_pointer(struct snd_pcm_substream *substrea
         Afe_Block->u4DataRemained -= Afe_consumed_bytes;
         Afe_Block->u4DMAReadIdx += Afe_consumed_bytes;
         Afe_Block->u4DMAReadIdx %= Afe_Block->u4BufferSize;
-        PRINTK_AUD_DL1("[Auddrv] HW_Cur_ReadIdx =0x%x HW_memory_index = 0x%x Afe_consumed_bytes  = 0x%x\n", HW_Cur_ReadIdx, HW_memory_index, Afe_consumed_bytes);
         Auddrv_Dl1_Spinlock_unlock();
 
         return audio_bytes_to_frame(substream , Afe_Block->u4DMAReadIdx);
@@ -360,8 +351,6 @@ static int mtk_pcm_i2s0_hw_params(struct snd_pcm_substream *substream,
 {
     int ret = 0;
 
-    PRINTK_AUDDRV("mtk_pcm_hw_params \n");
-
     /* runtime->dma_bytes has to be set manually to allow mmap */
     substream->runtime->dma_bytes = params_buffer_bytes(hw_params);
 
@@ -371,10 +360,6 @@ static int mtk_pcm_i2s0_hw_params(struct snd_pcm_substream *substream,
     substream->runtime->dma_area = (unsigned char *)Get_Afe_SramBase_Pointer();
     substream->runtime->dma_addr = AFE_INTERNAL_SRAM_PHY_BASE;
 
-    // -------------------------------------------------------
-    PRINTK_AUDDRV("1 dma_bytes = %zu dma_area = %p dma_addr = 0x%lx\n",
-                  substream->runtime->dma_bytes, substream->runtime->dma_area, (long)substream->runtime->dma_addr);
-
     return ret;
 }
 
@@ -419,8 +404,6 @@ static int mtk_pcm_i2s0_open(struct snd_pcm_substream *substream)
     AfeControlSramUnLock();
     runtime->hw = mtk_i2s0_hardware;
 
-    printk("mtk_pcm_i2s0_open\n");
-
     AudDrv_Clk_On();
     memcpy((void *)(&(runtime->hw)), (void *)&mtk_i2s0_hardware , sizeof(struct snd_pcm_hardware));
     pI2s0MemControl = Get_Mem_ControlT(Soc_Aud_Digital_Block_MEM_DL1);
@@ -436,32 +419,18 @@ static int mtk_pcm_i2s0_open(struct snd_pcm_substream *substream)
     }
 
     //print for hw pcm information
-    printk("mtk_pcm_i2s0_open runtime rate = %d channels = %d substream->pcm->device = %d\n",
-           runtime->rate, runtime->channels, substream->pcm->device);
-
-    if (substream->stream == SNDRV_PCM_STREAM_PLAYBACK)
-    {
-        printk("SNDRV_PCM_STREAM_PLAYBACK mtkalsa_i2s0_playback_constraints\n");
-    }
-    else
-    {
-
-    }
 
     if (ret < 0)
     {
-        printk("mtk_pcm_i2s0_close\n");
         mtk_pcm_i2s0_close(substream);
         return ret;
     }
-    printk("mtk_pcm_i2s0_open return\n");
     AudDrv_Clk_Off();
     return 0;
 }
 
 static int mtk_pcm_i2s0_close(struct snd_pcm_substream *substream)
 {
-    printk("%s \n", __func__);
     AfeControlSramLock();
     ClearSramState(mPlaybackSramState);
     mPlaybackSramState = GetSramState();
@@ -510,7 +479,6 @@ static int mtk_pcm_i2s0_start(struct snd_pcm_substream *substream)
         u32AudioI2S |= Soc_Aud_LOW_JITTER_CLOCK << 12 ; //Low jitter mode
     }
 
-    printk(" u32AudioI2S= 0x%x\n", u32AudioI2S);
     Afe_Set_Reg(AFE_I2S_CON3, u32AudioI2S | 1, AFE_MASK_ALL);
 
     SetSampleRate(Soc_Aud_Digital_Block_MEM_DL1, runtime->rate);
@@ -529,8 +497,6 @@ static int mtk_pcm_i2s0_start(struct snd_pcm_substream *substream)
 
 static int mtk_pcm_i2s0_trigger(struct snd_pcm_substream *substream, int cmd)
 {
-    printk("mtk_pcm_i2s0_trigger cmd = %d\n", cmd);
-
     switch (cmd)
     {
         case SNDRV_PCM_TRIGGER_START:
@@ -552,7 +518,6 @@ static int mtk_pcm_i2s0_copy(struct snd_pcm_substream *substream,
     unsigned long flags;
     char *data_w_ptr = (char *)dst;
     //struct snd_pcm_runtime *runtime = substream->runtime;
-    PRINTK_AUD_DL1("%s  pos = 0x%x count = 0x%x\n ", __func__,(unsigned int) pos,(unsigned int)count);
 
     count = audio_frame_to_bytes(substream , count);
 
@@ -560,8 +525,6 @@ static int mtk_pcm_i2s0_copy(struct snd_pcm_substream *substream,
     Afe_Block = &pI2s0MemControl->rBlock;
 
     // handle for buffer management
-    PRINTK_AUD_DL1(" WriteIdx=0x%x, ReadIdx=0x%x, DataRemained=0x%x \n",
-                   Afe_Block->u4WriteIdx, Afe_Block->u4DMAReadIdx, Afe_Block->u4DataRemained);
     if (Afe_Block->u4BufferSize == 0)
     {
         printk(" u4BufferSize=0 Error");
@@ -586,7 +549,6 @@ static int mtk_pcm_i2s0_copy(struct snd_pcm_substream *substream,
     #ifdef AUDIO_64BYTE_ALIGN
     copy_size = Align64ByteSize(copy_size);
     #endif
-    PRINTK_AUD_DL1("copy_size=0x%x, count=0x%x \n", (unsigned int)copy_size, (unsigned int)count);
 
     if (copy_size != 0)
     {
@@ -603,9 +565,6 @@ static int mtk_pcm_i2s0_copy(struct snd_pcm_substream *substream,
             }
             else
             {
-
-                PRINTK_AUD_DL1("memcpy Afe_Block->pucVirtBufAddr+Afe_WriteIdx= %p data_w_ptr = %p copy_size = 0x%x\n",
-                               Afe_Block->pucVirtBufAddr + Afe_WriteIdx_tmp, data_w_ptr, copy_size);
                 if (copy_from_user((Afe_Block->pucVirtBufAddr + Afe_WriteIdx_tmp), data_w_ptr, copy_size))
                 {
                     PRINTK_AUDDRV(" Fail copy from user \n");
@@ -620,10 +579,6 @@ static int mtk_pcm_i2s0_copy(struct snd_pcm_substream *substream,
             spin_unlock_irqrestore(&auddrv_I2S0_lock, flags);
             data_w_ptr += copy_size;
             count -= copy_size;
-
-            PRINTK_AUD_DL1(" finish1, copy_size:%x, WriteIdx:%x, ReadIdx=%x, DataRemained:%x, count=%x \r\n",
-                           copy_size, Afe_Block->u4WriteIdx, Afe_Block->u4DMAReadIdx, Afe_Block->u4DataRemained, (unsigned int)count);
-
         }
         else  // copy twice
         {
@@ -635,7 +590,6 @@ static int mtk_pcm_i2s0_copy(struct snd_pcm_substream *substream,
             size_1 = Afe_Block->u4BufferSize - Afe_WriteIdx_tmp;
             size_2 = copy_size - size_1;
             #endif
-            PRINTK_AUD_DL1("size_1=0x%x, size_2=0x%x \n", size_1, size_2);
             if (!access_ok(VERIFY_READ, data_w_ptr, size_1))
             {
                 printk(" 1ptr invalid data_w_ptr=%p, size_1=%d", data_w_ptr, size_1);
@@ -643,9 +597,6 @@ static int mtk_pcm_i2s0_copy(struct snd_pcm_substream *substream,
             }
             else
             {
-
-                PRINTK_AUD_DL1("mcmcpy Afe_Block->pucVirtBufAddr+Afe_WriteIdx= %p data_w_ptr = %p size_1 = %x\n",
-                               Afe_Block->pucVirtBufAddr + Afe_WriteIdx_tmp, data_w_ptr, size_1);
                 if ((copy_from_user((Afe_Block->pucVirtBufAddr + Afe_WriteIdx_tmp), data_w_ptr , size_1)))
                 {
                     PRINTK_AUDDRV(" Fail 1 copy from user");
@@ -666,9 +617,6 @@ static int mtk_pcm_i2s0_copy(struct snd_pcm_substream *substream,
             }
             else
             {
-
-                PRINTK_AUD_DL1("mcmcpy Afe_Block->pucVirtBufAddr+Afe_WriteIdx= %p data_w_ptr+size_1 = %p size_2 = %x\n",
-                               Afe_Block->pucVirtBufAddr + Afe_WriteIdx_tmp, data_w_ptr + size_1, size_2);
                 if ((copy_from_user((Afe_Block->pucVirtBufAddr + Afe_WriteIdx_tmp), (data_w_ptr + size_1), size_2)))
                 {
                     PRINTK_AUDDRV("AudDrv_write Fail 2  copy from user");
@@ -683,13 +631,9 @@ static int mtk_pcm_i2s0_copy(struct snd_pcm_substream *substream,
             spin_unlock_irqrestore(&auddrv_I2S0_lock, flags);
             count -= copy_size;
             data_w_ptr += copy_size;
-
-            PRINTK_AUD_DL1(" finish2, copy size:%x, WriteIdx:%x,ReadIdx=%x DataRemained:%x \r\n",
-                           copy_size, Afe_Block->u4WriteIdx, Afe_Block->u4DMAReadIdx, Afe_Block->u4DataRemained);
         }
     }
     return 0;
-    PRINTK_AUD_DL1("pcm_copy return \n");
 
 }
 
@@ -697,7 +641,6 @@ static int mtk_pcm_i2s0_silence(struct snd_pcm_substream *substream,
                                 int channel, snd_pcm_uframes_t pos,
                                 snd_pcm_uframes_t count)
 {
-    printk("%s \n", __func__);
     return 0; /* do nothing */
 }
 
@@ -706,7 +649,6 @@ static void *dummy_page[2];
 static struct page *mtk_i2s0_pcm_page(struct snd_pcm_substream *substream,
                                       unsigned long offset)
 {
-    printk("%s \n", __func__);
     return virt_to_page(dummy_page[substream->stream]); /* the same page */
 }
 
@@ -734,7 +676,6 @@ static struct snd_soc_platform_driver mtk_i2s0_soc_platform =
 
 static int mtk_i2s0_probe(struct platform_device *pdev)
 {
-    printk("%s \n", __func__);
 
     pdev->dev.coherent_dma_mask = DMA_BIT_MASK(64);
     if (!pdev->dev.dma_mask)
@@ -747,7 +688,6 @@ static int mtk_i2s0_probe(struct platform_device *pdev)
         dev_set_name(&pdev->dev, "%s", MT_SOC_I2S0_PCM);
     }
 
-    printk("%s: dev name %s\n", __func__, dev_name(&pdev->dev));
 
     mDev = &pdev->dev;
 
@@ -758,14 +698,12 @@ static int mtk_i2s0_probe(struct platform_device *pdev)
 static int mtk_asoc_pcm_i2s0_new(struct snd_soc_pcm_runtime *rtd)
 {
     int ret = 0;
-    printk("%s\n", __func__);
     return ret;
 }
 
 
 static int mtk_afe_i2s0_probe(struct snd_soc_platform *platform)
 {
-    printk("mtk_afe_i2s0_probe\n");
     snd_soc_add_platform_controls(platform, Audio_snd_i2s0_controls,
                                   ARRAY_SIZE(Audio_snd_i2s0_controls));
     return 0;
@@ -773,7 +711,6 @@ static int mtk_afe_i2s0_probe(struct snd_soc_platform *platform)
 
 static int mtk_i2s0_remove(struct platform_device *pdev)
 {
-    printk("%s \n", __func__);
     snd_soc_unregister_platform(&pdev->dev);
     return 0;
 }
@@ -806,7 +743,6 @@ static struct platform_device *soc_mtki2s0_dev;
 static int __init mtk_i2s0_soc_platform_init(void)
 {
     int ret;
-    printk("%s \n", __func__);
 #ifndef CONFIG_OF
     soc_mtki2s0_dev = platform_device_alloc(MT_SOC_I2S0_PCM, -1);
     if (!soc_mtki2s0_dev)
@@ -830,7 +766,6 @@ module_init(mtk_i2s0_soc_platform_init);
 
 static void __exit mtk_i2s0_soc_platform_exit(void)
 {
-    printk("%s \n", __func__);
 
     platform_driver_unregister(&mtk_i2s0_driver);
 }
diff --git a/sound/soc/mediatek/mt_soc_audio_6580/mt_soc_pcm_dl1_i2s0Dl1.c b/sound/soc/mediatek/mt_soc_audio_6580/mt_soc_pcm_dl1_i2s0Dl1.c
index 1d8ec29fd..81f9d9217 100644
--- a/sound/soc/mediatek/mt_soc_audio_6580/mt_soc_pcm_dl1_i2s0Dl1.c
+++ b/sound/soc/mediatek/mt_soc_audio_6580/mt_soc_pcm_dl1_i2s0Dl1.c
@@ -91,17 +91,14 @@ static const struct soc_enum Audio_I2S0dl1_Enum[] =
 static int Audio_I2S0dl1_hdoutput_Get(struct snd_kcontrol *kcontrol,
                                       struct snd_ctl_elem_value *ucontrol)
 {
-    printk("Audio_I2S0dl1_hdoutput_Get = %d\n", mI2S0dl1_hdoutput_control);
     ucontrol->value.integer.value[0] = mI2S0dl1_hdoutput_control;
     return 0;
 }
 
 static int Audio_I2S0dl1_hdoutput_Set(struct snd_kcontrol *kcontrol, struct snd_ctl_elem_value *ucontrol)
 {
-    printk("%s(), not support this function\n", __func__);
     if (ucontrol->value.enumerated.item[0] > ARRAY_SIZE(I2S0dl1_HD_output))
     {
-        printk("return -EINVAL\n");
         return -EINVAL;
     }
     return 0;
@@ -137,7 +134,6 @@ static int mtk_pcm_I2S0dl1_stop(struct snd_pcm_substream *substream)
 {
     //AFE_BLOCK_T *Afe_Block = &(pI2S0dl1MemControl->rBlock);
 
-    printk("%s \n", __func__);
 
     SetIrqEnable(Soc_Aud_IRQ_MCU_MODE_IRQ1_MCU_MODE, false);
     SetMemoryPathEnable(Soc_Aud_Digital_Block_MEM_DL1, false);
@@ -164,7 +160,6 @@ static snd_pcm_uframes_t mtk_pcm_I2S0dl1_pointer(struct snd_pcm_substream *subst
     //struct snd_pcm_runtime *runtime = substream->runtime;
 
     spin_lock_irqsave(&pI2S0dl1MemControl->substream_lock, flags);
-    PRINTK_AUD_DL1(" %s Afe_Block->u4DMAReadIdx = 0x%x\n", __func__, Afe_Block->u4DMAReadIdx);
 
     // get total bytes to copy
     //Frameidx = audio_bytes_to_frame(substream , Afe_Block->u4DMAReadIdx);
@@ -175,7 +170,6 @@ static snd_pcm_uframes_t mtk_pcm_I2S0dl1_pointer(struct snd_pcm_substream *subst
         HW_Cur_ReadIdx = Afe_Get_Reg(AFE_DL1_CUR);
         if (HW_Cur_ReadIdx == 0)
         {
-            PRINTK_AUDDRV("[Auddrv] HW_Cur_ReadIdx ==0 \n");
             HW_Cur_ReadIdx = Afe_Block->pucPhysBufAddr;
         }
 
@@ -196,7 +190,6 @@ static snd_pcm_uframes_t mtk_pcm_I2S0dl1_pointer(struct snd_pcm_substream *subst
         Afe_Block->u4DataRemained -= Afe_consumed_bytes;
         Afe_Block->u4DMAReadIdx += Afe_consumed_bytes;
         Afe_Block->u4DMAReadIdx %= Afe_Block->u4BufferSize;
-        PRINTK_AUD_DL1("[Auddrv] HW_Cur_ReadIdx =0x%x HW_memory_index = 0x%x Afe_consumed_bytes  = 0x%x\n", HW_Cur_ReadIdx, HW_memory_index, Afe_consumed_bytes);
         spin_unlock_irqrestore(&pI2S0dl1MemControl->substream_lock, flags);
 
         return audio_bytes_to_frame(substream , Afe_Block->u4DMAReadIdx);
@@ -225,8 +218,6 @@ static void SetDL1Buffer(struct snd_pcm_substream *substream,
     pblock->u4DataRemained  = 0;
     pblock->u4fsyncflag     = false;
     pblock->uResetFlag      = true;
-    printk("SetDL1Buffer u4BufferSize = %d pucVirtBufAddr = %p pucPhysBufAddr = 0x%x\n",
-           pblock->u4BufferSize, pblock->pucVirtBufAddr, pblock->pucPhysBufAddr);
     // set dram address top hardware
     Afe_Set_Reg(AFE_DL1_BASE , pblock->pucPhysBufAddr , 0xffffffff);
     Afe_Set_Reg(AFE_DL1_END  , pblock->pucPhysBufAddr + (pblock->u4BufferSize - 1), 0xffffffff);
@@ -271,8 +262,6 @@ static int mtk_pcm_I2S0dl1_hw_params(struct snd_pcm_substream *substream,
 #endif
     // -------------------------------------------------------
 #endif
-    printk("1 dma_bytes = %zu dma_area = %p dma_addr = 0x%lx\n",
-                  substream->runtime->dma_bytes, substream->runtime->dma_area, (long)substream->runtime->dma_addr);
 
     return ret;
 }
@@ -311,7 +300,6 @@ static int mtk_pcm_I2S0dl1_open(struct snd_pcm_substream *substream)
         AudDrv_Emi_Clk_On();
     }
 
-    printk("mtk_I2S0dl1_hardware.buffer_bytes_max = %zu mPlaybackSramState = %d\n",mtk_I2S0dl1_hardware.buffer_bytes_max,mPlaybackSramState);
     runtime->hw = mtk_I2S0dl1_hardware;
 
     AudDrv_Clk_On();
@@ -326,18 +314,8 @@ static int mtk_pcm_I2S0dl1_open(struct snd_pcm_substream *substream)
         printk("snd_pcm_hw_constraint_integer failed\n");
     }
 
-    if (substream->stream == SNDRV_PCM_STREAM_PLAYBACK)
-    {
-        printk("SNDRV_PCM_STREAM_PLAYBACK mtkalsa_I2S0dl1_playback_constraints\n");
-    }
-    else
-    {
-        printk("SNDRV_PCM_STREAM_CAPTURE mtkalsa_I2S0dl1_playback_constraints\n");
-    }
-
     if (ret < 0)
     {
-        printk("ret < 0 mtk_pcm_I2S0dl1_close\n");
         mtk_pcm_I2S0dl1_close(substream);
         return ret;
     }
@@ -348,7 +326,6 @@ static int mtk_pcm_I2S0dl1_open(struct snd_pcm_substream *substream)
 
 static int mtk_pcm_I2S0dl1_close(struct snd_pcm_substream *substream)
 {
-    printk("%s \n", __func__);
 
     if (mPrepareDone == true)
     {
@@ -391,7 +368,6 @@ static int mtk_pcm_I2S0dl1_prepare(struct snd_pcm_substream *substream)
     bool mI2SWLen = Soc_Aud_I2S_WLEN_WLEN_16BITS;
     if (mPrepareDone == false)
     {
-        printk("%s format = %d SNDRV_PCM_FORMAT_S32_LE = %d SNDRV_PCM_FORMAT_U32_LE = %d \n", __func__, runtime->format, SNDRV_PCM_FORMAT_S32_LE, SNDRV_PCM_FORMAT_U32_LE);
         SetMemifSubStream(Soc_Aud_Digital_Block_MEM_DL1, substream);
 
         if (runtime->format == SNDRV_PCM_FORMAT_S32_LE || runtime->format == SNDRV_PCM_FORMAT_U32_LE)
@@ -479,7 +455,6 @@ static int mtk_pcm_I2S0dl1_prepare(struct snd_pcm_substream *substream)
 static int mtk_pcm_I2S0dl1_start(struct snd_pcm_substream *substream)
 {
     struct snd_pcm_runtime *runtime = substream->runtime;
-    printk("%s\n", __func__);
     // here start digital part
 
     SetConnection(Soc_Aud_InterCon_Connection, Soc_Aud_InterConnectionInput_I05, Soc_Aud_InterConnectionOutput_O00);
@@ -523,7 +498,6 @@ static int mtk_pcm_I2S0dl1_copy(struct snd_pcm_substream *substream,
     unsigned long flags;
     //struct snd_pcm_runtime *runtime = substream->runtime;
     char *data_w_ptr = (char *)dst;
-    PRINTK_AUD_DL1("mtk_pcm_copy pos = %lu count = %lu\n ", pos, count);
     // get total bytes to copy
     count = audio_frame_to_bytes(substream , count);
 
@@ -532,9 +506,6 @@ static int mtk_pcm_I2S0dl1_copy(struct snd_pcm_substream *substream,
 
     // handle for buffer management
 
-    PRINTK_AUD_DL1(" WriteIdx=0x%x, ReadIdx=0x%x, DataRemained=0x%x \n",
-                   Afe_Block->u4WriteIdx, Afe_Block->u4DMAReadIdx, Afe_Block->u4DataRemained);
-
     if (Afe_Block->u4BufferSize == 0)
     {
         printk(" u4BufferSize=0 Error");
@@ -560,7 +531,6 @@ static int mtk_pcm_I2S0dl1_copy(struct snd_pcm_substream *substream,
     #ifdef AUDIO_64BYTE_ALIGN
     copy_size = Align64ByteSize(copy_size);
     #endif
-    PRINTK_AUD_DL1("copy_size=0x%x, count=0x%x \n", copy_size, (unsigned int)count);
 
     if (copy_size != 0)
     {
@@ -578,8 +548,6 @@ static int mtk_pcm_I2S0dl1_copy(struct snd_pcm_substream *substream,
             else
             {
 
-                PRINTK_AUD_DL1("memcpy Afe_Block->pucVirtBufAddr+Afe_WriteIdx= %p data_w_ptr = %p copy_size = 0x%x\n",
-                               Afe_Block->pucVirtBufAddr + Afe_WriteIdx_tmp, data_w_ptr, copy_size);
                 if (copy_from_user((Afe_Block->pucVirtBufAddr + Afe_WriteIdx_tmp), data_w_ptr, copy_size))
                 {
                     PRINTK_AUDDRV(" Fail copy from user \n");
@@ -594,10 +562,6 @@ static int mtk_pcm_I2S0dl1_copy(struct snd_pcm_substream *substream,
             spin_unlock_irqrestore(&auddrv_I2S0dl1_lock, flags);
             data_w_ptr += copy_size;
             count -= copy_size;
-
-            PRINTK_AUD_DL1(" finish1, copy_size:%x, WriteIdx:%x, ReadIdx=%x, DataRemained:%x, count=%x \r\n",
-                           copy_size, Afe_Block->u4WriteIdx, Afe_Block->u4DMAReadIdx, Afe_Block->u4DataRemained, (unsigned int)count);
-
         }
         else  // copy twice
         {
@@ -609,7 +573,6 @@ static int mtk_pcm_I2S0dl1_copy(struct snd_pcm_substream *substream,
             size_1 = Afe_Block->u4BufferSize - Afe_WriteIdx_tmp;
             size_2 = copy_size - size_1;
             #endif
-            PRINTK_AUD_DL1("size_1=0x%x, size_2=0x%x \n", size_1, size_2);
             if (!access_ok(VERIFY_READ, data_w_ptr, size_1))
             {
                 printk(" 1ptr invalid data_w_ptr=%p, size_1=%d", data_w_ptr, size_1);
@@ -617,9 +580,6 @@ static int mtk_pcm_I2S0dl1_copy(struct snd_pcm_substream *substream,
             }
             else
             {
-
-                PRINTK_AUD_DL1("mcmcpy Afe_Block->pucVirtBufAddr+Afe_WriteIdx= %p data_w_ptr = %p size_1 = %x\n",
-                               Afe_Block->pucVirtBufAddr + Afe_WriteIdx_tmp, data_w_ptr, size_1);
                 if ((copy_from_user((Afe_Block->pucVirtBufAddr + Afe_WriteIdx_tmp), data_w_ptr , size_1)))
                 {
                     PRINTK_AUDDRV(" Fail 1 copy from user");
@@ -640,9 +600,6 @@ static int mtk_pcm_I2S0dl1_copy(struct snd_pcm_substream *substream,
             }
             else
             {
-
-                PRINTK_AUD_DL1("mcmcpy Afe_Block->pucVirtBufAddr+Afe_WriteIdx= %p data_w_ptr+size_1 = %p size_2 = %x\n",
-                               Afe_Block->pucVirtBufAddr + Afe_WriteIdx_tmp, data_w_ptr + size_1, size_2);
                 if ((copy_from_user((Afe_Block->pucVirtBufAddr + Afe_WriteIdx_tmp), (data_w_ptr + size_1), size_2)))
                 {
                     PRINTK_AUDDRV("AudDrv_write Fail 2  copy from user");
@@ -657,12 +614,8 @@ static int mtk_pcm_I2S0dl1_copy(struct snd_pcm_substream *substream,
             spin_unlock_irqrestore(&auddrv_I2S0dl1_lock, flags);
             count -= copy_size;
             data_w_ptr += copy_size;
-
-            PRINTK_AUD_DL1(" finish2, copy size:%x, WriteIdx:%x,ReadIdx=%x DataRemained:%x \r\n",
-                           copy_size, Afe_Block->u4WriteIdx, Afe_Block->u4DMAReadIdx, Afe_Block->u4DataRemained);
         }
     }
-    PRINTK_AUD_DL1("pcm_copy return \n");
     return 0;
 }
 
@@ -670,7 +623,6 @@ static int mtk_pcm_I2S0dl1_silence(struct snd_pcm_substream *substream,
                                    int channel, snd_pcm_uframes_t pos,
                                    snd_pcm_uframes_t count)
 {
-    printk("%s \n", __func__);
     return 0; /* do nothing */
 }
 
@@ -679,7 +631,6 @@ static void *dummy_page[2];
 static struct page *mtk_I2S0dl1_pcm_page(struct snd_pcm_substream *substream,
                                          unsigned long offset)
 {
-    printk("%s \n", __func__);
     return virt_to_page(dummy_page[substream->stream]); /* the same page */
 }
 
@@ -707,7 +658,6 @@ static struct snd_soc_platform_driver mtk_I2S0dl1_soc_platform =
 
 static int mtk_I2S0dl1_probe(struct platform_device *pdev)
 {
-    printk("%s \n", __func__);
 
     pdev->dev.coherent_dma_mask = DMA_BIT_MASK(64);
     if (!pdev->dev.dma_mask)
@@ -720,7 +670,6 @@ static int mtk_I2S0dl1_probe(struct platform_device *pdev)
         dev_set_name(&pdev->dev, "%s", MT_SOC_I2S0DL1_PCM);
     }
 
-    printk("%s: dev name %s\n", __func__, dev_name(&pdev->dev));
  
     mDev = &pdev->dev;
 
@@ -731,14 +680,12 @@ static int mtk_I2S0dl1_probe(struct platform_device *pdev)
 static int mtk_asoc_pcm_I2S0dl1_new(struct snd_soc_pcm_runtime *rtd)
 {
     int ret = 0;
-    printk("%s\n", __func__);
     return ret;
 }
 
 
 static int mtk_afe_I2S0dl1_probe(struct snd_soc_platform *platform)
 {
-    printk("mtk_afe_I2S0dl1_probe\n");
     snd_soc_add_platform_controls(platform, Audio_snd_I2S0dl1_controls,
                                   ARRAY_SIZE(Audio_snd_I2S0dl1_controls));
     // allocate dram
@@ -749,7 +696,6 @@ static int mtk_afe_I2S0dl1_probe(struct snd_soc_platform *platform)
 
 static int mtk_I2S0dl1_remove(struct platform_device *pdev)
 {
-    printk("%s \n", __func__);
     snd_soc_unregister_platform(&pdev->dev);
     return 0;
 }
@@ -782,7 +728,6 @@ static struct platform_device *soc_mtkI2S0dl1_dev;
 static int __init mtk_I2S0dl1_soc_platform_init(void)
 {
     int ret;
-    printk("%s \n", __func__);
 #ifndef CONFIG_OF
     soc_mtkI2S0dl1_dev = platform_device_alloc(MT_SOC_I2S0DL1_PCM, -1);
     if (!soc_mtkI2S0dl1_dev)
@@ -806,7 +751,6 @@ module_init(mtk_I2S0dl1_soc_platform_init);
 
 static void __exit mtk_I2S0dl1_soc_platform_exit(void)
 {
-    printk("%s \n", __func__);
 
     platform_driver_unregister(&mtk_I2S0dl1_driver);
 }
diff --git a/sound/soc/mediatek/mt_soc_audio_6580/mt_soc_pcm_dummy.c b/sound/soc/mediatek/mt_soc_audio_6580/mt_soc_pcm_dummy.c
index adb6b52e6..402b87745 100644
--- a/sound/soc/mediatek/mt_soc_audio_6580/mt_soc_pcm_dummy.c
+++ b/sound/soc/mediatek/mt_soc_audio_6580/mt_soc_pcm_dummy.c
@@ -83,7 +83,6 @@ static int mtk_pcm_open(struct snd_pcm_substream *substream)
 
     int err = 0;
     int ret = 0;
-    printk("mtk_pcm_open\n");
 
     ret = snd_pcm_hw_constraint_list(runtime, 0, SNDRV_PCM_HW_PARAM_RATE,
                                      &constraints_sample_rates);
@@ -96,7 +95,6 @@ static int mtk_pcm_open(struct snd_pcm_substream *substream)
     }
 
     //print for hw pcm information
-    printk("mtk_pcm_open runtime rate = %d channels = %d \n", runtime->rate, runtime->channels);
     if (substream->pcm->device & 1)
     {
         runtime->hw.info &= ~SNDRV_PCM_INFO_INTERLEAVED;
@@ -106,22 +104,11 @@ static int mtk_pcm_open(struct snd_pcm_substream *substream)
         runtime->hw.info &= ~(SNDRV_PCM_INFO_MMAP |
                               SNDRV_PCM_INFO_MMAP_VALID);
 
-    if (substream->stream == SNDRV_PCM_STREAM_PLAYBACK)
-    {
-        printk("SNDRV_PCM_STREAM_PLAYBACK mtkalsa_playback_constraints\n");
-    }
-    else
-    {
-
-    }
-
     if (err < 0)
     {
-        printk("mtk_dummypcm_close\n");
         mtk_dummypcm_close(substream);
         return err;
     }
-    printk("mtk_pcm_open return\n");
     return 0;
 }
 
@@ -132,8 +119,6 @@ static int mtk_dummypcm_close(struct snd_pcm_substream *substream)
 
 static int mtk_dummypcm_trigger(struct snd_pcm_substream *substream, int cmd)
 {
-    printk("dummy_pcm_trigger cmd = %d\n", cmd);
-
     switch (cmd)
     {
         case SNDRV_PCM_TRIGGER_START:
@@ -149,7 +134,6 @@ static int mtk_pcm_copy(struct snd_pcm_substream *substream,
                         int channel, snd_pcm_uframes_t pos,
                         void __user *dst, snd_pcm_uframes_t count)
 {
-    printk("dummy_pcm_copy pos = %lu count = %lu \n ", pos, count);
     return 0;
 }
 
@@ -157,7 +141,6 @@ static int mtk_pcm_silence(struct snd_pcm_substream *substream,
                            int channel, snd_pcm_uframes_t pos,
                            snd_pcm_uframes_t count)
 {
-    printk("dummy_pcm_silence \n");
     return 0; /* do nothing */
 }
 
@@ -167,13 +150,11 @@ static void *dummy_page[2];
 static struct page *mtk_pcm_page(struct snd_pcm_substream *substream,
                                  unsigned long offset)
 {
-    printk("dummy_pcm_page \n");
     return virt_to_page(dummy_page[substream->stream]); /* the same page */
 }
 
 static int mtk_pcm_prepare(struct snd_pcm_substream *substream)
 {
-    printk("mtk_alsa_prepare \n");
     return 0;
 }
 
@@ -181,13 +162,11 @@ static int mtk_pcm_hw_params(struct snd_pcm_substream *substream,
                              struct snd_pcm_hw_params *hw_params)
 {
     int ret = 0;
-    PRINTK_AUDDRV("mtk_pcm_hw_params \n");
     return ret;
 }
 
 static int mtk_dummy_pcm_hw_free(struct snd_pcm_substream *substream)
 {
-    PRINTK_AUDDRV("mtk_dummy_pcm_hw_free \n");
     return snd_pcm_lib_free_pages(substream);
 }
 
@@ -214,8 +193,6 @@ static struct snd_soc_platform_driver mtk_soc_dummy_platform =
 
 static int mtk_dummy_probe(struct platform_device *pdev)
 {
-    printk("mtk_dummy_probe\n");
-
     pdev->dev.coherent_dma_mask = DMA_BIT_MASK(64);
     if (!pdev->dev.dma_mask)
     {
@@ -227,7 +204,6 @@ static int mtk_dummy_probe(struct platform_device *pdev)
         dev_set_name(&pdev->dev, "%s", MT_SOC_DUMMY_PCM);
     }
 
-    printk("%s: dev name %s\n", __func__, dev_name(&pdev->dev));
     return snd_soc_register_platform(&pdev->dev,
                                      &mtk_soc_dummy_platform);
 }
@@ -236,20 +212,17 @@ static int mtk_asoc_dummypcm_new(struct snd_soc_pcm_runtime *rtd)
 {
     int ret = 0;
     pruntimepcm  = rtd;
-    printk("%s\n", __func__);
     return ret;
 }
 
 static int mtk_afe_dummy_probe(struct snd_soc_platform *platform)
 {
-    printk("mtk_afe_dummy_probe\n");
     return 0;
 }
 
 
 static int mtk_afedummy_remove(struct platform_device *pdev)
 {
-    pr_debug("%s\n", __func__);
     snd_soc_unregister_platform(&pdev->dev);
     return 0;
 }
@@ -282,7 +255,6 @@ static struct platform_device *soc_mtkafe_dummy_dev;
 static int __init mtk_soc_dummy_platform_init(void)
 {
     int ret =0;
-    printk("%s\n", __func__);
     #ifndef CONFIG_OF
     soc_mtkafe_dummy_dev = platform_device_alloc(MT_SOC_DUMMY_PCM , -1);
     if (!soc_mtkafe_dummy_dev)
@@ -307,7 +279,6 @@ module_init(mtk_soc_dummy_platform_init);
 static void __exit mtk_soc_dummy_platform_exit(void)
 {
 
-    printk("%s\n", __func__);
     platform_driver_unregister(&mtk_afedummy_driver);
 }
 module_exit(mtk_soc_dummy_platform_exit);
diff --git a/sound/soc/mediatek/mt_soc_audio_6580/mt_soc_pcm_fm_i2s.c b/sound/soc/mediatek/mt_soc_audio_6580/mt_soc_pcm_fm_i2s.c
index ec9e7ed09..3b92f1744 100644
--- a/sound/soc/mediatek/mt_soc_audio_6580/mt_soc_pcm_fm_i2s.c
+++ b/sound/soc/mediatek/mt_soc_audio_6580/mt_soc_pcm_fm_i2s.c
@@ -80,7 +80,6 @@ static bool mPrepareDone = false;
 static int Audio_fm_i2s_Volume_Get(struct snd_kcontrol *kcontrol,
                                   struct snd_ctl_elem_value *ucontrol)
 {
-    printk("Audio_AmpR_Get = %d\n", mfm_i2s_Volume);
     ucontrol->value.integer.value[0] = mfm_i2s_Volume;
     return 0;
 
@@ -89,7 +88,6 @@ static int Audio_fm_i2s_Volume_Get(struct snd_kcontrol *kcontrol,
 static int Audio_fm_i2s_Volume_Set(struct snd_kcontrol *kcontrol, struct snd_ctl_elem_value *ucontrol)
 {
     mfm_i2s_Volume = ucontrol->value.integer.value[0];
-    printk("%s mfm_i2s_Volume = 0x%x \n", __func__, mfm_i2s_Volume);
 
     if (GetMemoryPathEnable(Soc_Aud_Digital_Block_I2S_IN_2) == true)
     {
@@ -122,7 +120,6 @@ static int Audio_Wcn_Cmb_Set(struct snd_kcontrol *kcontrol, struct snd_ctl_elem_
 {
     #if 0//temp mark for early porting
     mAudio_Wcn_Cmb = ucontrol->value.integer.value[0];
-    printk("%s mAudio_Wcn_Cmb = 0x%x \n", __func__, mAudio_Wcn_Cmb);
     //mtk_wcn_cmb_stub_audio_ctrl((CMB_STUB_AIF_X)mAudio_Wcn_Cmb);//temp mark for early porting
     #endif	
     return 0;
@@ -155,7 +152,6 @@ static struct snd_pcm_hardware mtk_fm_i2s_hardware =
 
 static int mtk_pcm_fm_i2s_stop(struct snd_pcm_substream *substream)
 {
-    printk("mtk_pcm_fm_i2s_stop \n");
     return 0;
 }
 
@@ -170,13 +166,11 @@ static int mtk_pcm_fm_i2s_hw_params(struct snd_pcm_substream *substream,
                                    struct snd_pcm_hw_params *hw_params)
 {
     int ret = 0;
-    printk("mtk_pcm_fm_i2s_hw_params \n");
     return ret;
 }
 
 static int mtk_pcm_fm_i2s_hw_free(struct snd_pcm_substream *substream)
 {
-    printk("mtk_pcm_fm_i2s_hw_free \n");
     return snd_pcm_lib_free_pages(substream);
 }
 
@@ -195,7 +189,6 @@ static int mtk_pcm_fm_i2s_open(struct snd_pcm_substream *substream)
     AudDrv_Clk_On();
     AudDrv_I2S_Clk_On();
 
-    printk("mtk_pcm_fm_i2s_open\n");
     runtime->hw = mtk_fm_i2s_hardware;
     memcpy((void *)(&(runtime->hw)), (void *)&mtk_fm_i2s_hardware , sizeof(struct snd_pcm_hardware));
 
@@ -206,8 +199,6 @@ static int mtk_pcm_fm_i2s_open(struct snd_pcm_substream *substream)
     {
         printk("snd_pcm_hw_constraint_integer failed\n");
     }
-    printk("mtk_pcm_fm_i2s_open runtime rate = %d channels = %d substream->pcm->device = %d\n",
-           runtime->rate, runtime->channels, substream->pcm->device);
 
     if (substream->stream == SNDRV_PCM_STREAM_PLAYBACK)
     {
@@ -220,20 +211,17 @@ static int mtk_pcm_fm_i2s_open(struct snd_pcm_substream *substream)
 
     if (ret < 0)
     {
-        printk("mtk_pcm_fm_i2s_close\n");
         mtk_pcm_fm_i2s_close(substream);
         return ret;
     }
     
     SetFMEnableFlag(true);
-    printk("mtk_pcm_fm_i2s_open return\n");
     return 0;
 }
 
 static int mtk_pcm_fm_i2s_close(struct snd_pcm_substream *substream)
 {
     struct snd_pcm_runtime *runtime = substream->runtime;
-    printk("%s rate = %d\n", __func__, runtime->rate);
 
     //mtk_wcn_cmb_stub_audio_ctrl((CMB_STUB_AIF_X)CMB_STUB_AIF_0);//temp mark for early porting
 
@@ -273,7 +261,6 @@ static int mtk_pcm_fm_i2s_prepare(struct snd_pcm_substream *substream)
     AudioDigtalI2S m2ndI2SInAttribute;
 
     struct snd_pcm_runtime *runtime = substream->runtime;
-    printk("%s rate = %d\n", __func__, runtime->rate);
 
     if (mPrepareDone == false)
     {
@@ -286,7 +273,6 @@ static int mtk_pcm_fm_i2s_prepare(struct snd_pcm_substream *substream)
         SetConnection(Soc_Aud_InterCon_Connection, Soc_Aud_InterConnectionInput_I13, Soc_Aud_InterConnectionOutput_O04);
 
         // Set HW_GAIN
-        printk("%s Soc_Aud_Hw_Digital_Gain_HW_DIGITAL_GAIN2\n", __func__);
         SetHwDigitalGainMode(Soc_Aud_Hw_Digital_Gain_HW_DIGITAL_GAIN2, runtime->rate, 0x80);
         SetHwDigitalGainEnable(Soc_Aud_Hw_Digital_Gain_HW_DIGITAL_GAIN2, true);
         SetHwDigitalGain(mfm_i2s_Volume, Soc_Aud_Hw_Digital_Gain_HW_DIGITAL_GAIN2);
@@ -337,14 +323,11 @@ static int mtk_pcm_fm_i2s_prepare(struct snd_pcm_substream *substream)
 
 static int mtk_pcm_fm_i2s_start(struct snd_pcm_substream *substream)
 {
-    printk("%s\n", __func__);
     return 0;
 }
 
 static int mtk_pcm_fm_i2s_trigger(struct snd_pcm_substream *substream, int cmd)
 {
-    printk("mtk_pcm_fm_i2s_trigger cmd = %d\n", cmd);
-
     switch (cmd)
     {
         case SNDRV_PCM_TRIGGER_START:
@@ -369,7 +352,6 @@ static int mtk_pcm_fm_i2s_silence(struct snd_pcm_substream *substream,
                                  int channel, snd_pcm_uframes_t pos,
                                  snd_pcm_uframes_t count)
 {
-    printk("%s \n", __func__);
     return 0; /* do nothing */
 }
 
@@ -378,7 +360,6 @@ static void *dummy_page[2];
 static struct page *mtk_fm_i2s_pcm_page(struct snd_pcm_substream *substream,
                                        unsigned long offset)
 {
-    printk("%s \n", __func__);
     return virt_to_page(dummy_page[substream->stream]); /* the same page */
 }
 
@@ -406,13 +387,11 @@ static struct snd_soc_platform_driver mtk_fm_i2s_soc_platform =
 
 static int mtk_fm_i2s_probe(struct platform_device *pdev)
 {
-    printk("%s \n", __func__);
     if (pdev->dev.of_node)
     {
         dev_set_name(&pdev->dev, "%s", MT_SOC_FM_I2S_PCM);
     }
 
-    printk("%s: dev name %s\n", __func__, dev_name(&pdev->dev));
     return snd_soc_register_platform(&pdev->dev,
                                      &mtk_fm_i2s_soc_platform);
 }
@@ -420,14 +399,12 @@ static int mtk_fm_i2s_probe(struct platform_device *pdev)
 static int mtk_asoc_pcm_fm_i2s_new(struct snd_soc_pcm_runtime *rtd)
 {
     int ret = 0;
-    printk("%s\n", __func__);
     return ret;
 }
 
 
 static int mtk_afe_fm_i2s_probe(struct snd_soc_platform *platform)
 {
-    printk("mtk_afe_fm_i2s_probe\n");
     snd_soc_add_platform_controls(platform, Audio_snd_fm_i2s_controls,
                                   ARRAY_SIZE(Audio_snd_fm_i2s_controls));
     return 0;
@@ -435,7 +412,6 @@ static int mtk_afe_fm_i2s_probe(struct snd_soc_platform *platform)
 
 static int mtk_fm_i2s_remove(struct platform_device *pdev)
 {
-    printk("%s \n", __func__);
     snd_soc_unregister_platform(&pdev->dev);
     return 0;
 }
@@ -468,7 +444,6 @@ static struct platform_device *soc_mtkfm_i2s_dev;
 static int __init mtk_fm_i2s_soc_platform_init(void)
 {
     int ret = 0;
-    printk("%s \n", __func__);
 	#ifndef CONFIG_OF
     soc_mtkfm_i2s_dev = platform_device_alloc(MT_SOC_FM_I2S_PCM, -1);
     if (!soc_mtkfm_i2s_dev)
@@ -490,7 +465,6 @@ module_init(mtk_fm_i2s_soc_platform_init);
 
 static void __exit mtk_fm_i2s_soc_platform_exit(void)
 {
-    printk("%s \n", __func__);
 
     platform_driver_unregister(&mtk_fm_i2s_driver);
 }
diff --git a/sound/soc/mediatek/mt_soc_audio_6580/mt_soc_pcm_fm_i2s_awb.c b/sound/soc/mediatek/mt_soc_audio_6580/mt_soc_pcm_fm_i2s_awb.c
index f089b0522..eb675e4d9 100644
--- a/sound/soc/mediatek/mt_soc_audio_6580/mt_soc_pcm_fm_i2s_awb.c
+++ b/sound/soc/mediatek/mt_soc_audio_6580/mt_soc_pcm_fm_i2s_awb.c
@@ -96,8 +96,6 @@ static struct snd_pcm_hardware mtk_mgrrx_awb_hardware =
 
 static void StopAudioFMI2SAWBHardware(struct snd_pcm_substream *substream)
 {
-    printk("StopAudioFMI2SAWBHardware \n");
-
     SetMemoryPathEnable(Soc_Aud_Digital_Block_MEM_AWB, false);
 
     // here to set interrupt
@@ -119,8 +117,6 @@ static void StartAudioFMI2SAWBHardware(struct snd_pcm_substream *substream)
 {
     AudioDigtalI2S m2ndI2SInAttribute;
 
-    printk("StartAudioFMI2SAWBHardware \n");
-
     // here to set interrupt
     SetIrqMcuCounter(Soc_Aud_IRQ_MCU_MODE_IRQ2_MCU_MODE, substream->runtime->period_size >> 1);
     SetIrqMcuSampleRate(Soc_Aud_IRQ_MCU_MODE_IRQ2_MCU_MODE, substream->runtime->rate);
@@ -166,13 +162,11 @@ static void StartAudioFMI2SAWBHardware(struct snd_pcm_substream *substream)
 
 static int mtk_fm_i2s_awb_pcm_prepare(struct snd_pcm_substream *substream)
 {
-    printk("mtk_fm_i2s_awb_pcm_prepare substream->rate = %d  substream->channels = %d \n", substream->runtime->rate, substream->runtime->channels);
     return 0;
 }
 
 static int mtk_fm_i2s_awb_alsa_stop(struct snd_pcm_substream *substream)
 {
-    printk("mtk_fm_i2s_awb_alsa_stop \n");
     StopAudioFMI2SAWBHardware(substream);
     RemoveMemifSubStream(Soc_Aud_Digital_Block_MEM_AWB, substream);
 
@@ -194,7 +188,6 @@ static snd_pcm_uframes_t mtk_awb_pcm_pointer(struct snd_pcm_substream *substream
     kal_int32 HW_Cur_ReadIdx = 0;
     kal_uint32 Frameidx = 0;
     AFE_BLOCK_T *Awb_Block = &(FM_I2S_AWB_Control_context->rBlock);
-    PRINTK_AUD_AWB("mtk_awb_pcm_pointer Awb_Block->u4WriteIdx;= 0x%x \n", Awb_Block->u4WriteIdx);
     if (GetMemoryPathEnable(Soc_Aud_Digital_Block_MEM_AWB) == true)
     {
         // get total bytes to copysinewavetohdmi
@@ -215,12 +208,10 @@ static snd_pcm_uframes_t mtk_awb_pcm_pointer(struct snd_pcm_substream *substream
         
         if (HW_Cur_ReadIdx == 0)
         {
-            printk("[Auddrv] mtk_awb_pcm_pointer  HW_Cur_ReadIdx ==0 \n");
             HW_Cur_ReadIdx = Awb_Block->pucPhysBufAddr;
         }
         HW_memory_index = (HW_Cur_ReadIdx - Awb_Block->pucPhysBufAddr);
         Previous_Hw_cur = HW_memory_index;
-        PRINTK_AUD_AWB("[Auddrv] mtk_awb_pcm_pointer =0x%x HW_memory_index = 0x%x\n", HW_Cur_ReadIdx, HW_memory_index);
         return audio_bytes_to_frame(substream, Previous_Hw_cur);
     }
     return 0;
@@ -232,7 +223,6 @@ static void SetAWBBuffer(struct snd_pcm_substream *substream,
 {
     AFE_BLOCK_T *pblock = &FM_I2S_AWB_Control_context->rBlock;
     struct snd_pcm_runtime *runtime = substream->runtime;
-    printk("SetAWBBuffer\n");
     pblock->pucPhysBufAddr =  runtime->dma_addr;
     pblock->pucVirtBufAddr =  runtime->dma_area;
     pblock->u4BufferSize = runtime->dma_bytes;
@@ -242,8 +232,6 @@ static void SetAWBBuffer(struct snd_pcm_substream *substream,
     pblock->u4DataRemained  = 0;
     pblock->u4fsyncflag     = false;
     pblock->uResetFlag      = true;
-    printk("dma_bytes = %d dma_area = %p dma_addr = 0x%x\n",
-           pblock->u4BufferSize, pblock->pucVirtBufAddr, pblock->pucPhysBufAddr);
     // set sram address top hardware
     Afe_Set_Reg(AFE_AWB_BASE , pblock->pucPhysBufAddr , 0xffffffff);
     Afe_Set_Reg(AFE_AWB_END  , pblock->pucPhysBufAddr + (pblock->u4BufferSize - 1), 0xffffffff);
@@ -257,38 +245,28 @@ static int mtk_mgrrx_awb_pcm_hw_params(struct snd_pcm_substream *substream,
     struct snd_dma_buffer *dma_buf = &substream->dma_buffer;
     int ret = 0;
 
-    printk("mtk_mgrrx_awb_pcm_hw_params \n");
-
     dma_buf->dev.type = SNDRV_DMA_TYPE_DEV;
     dma_buf->dev.dev = substream->pcm->card->dev;
     dma_buf->private_data = NULL;
 
     if (Awb_Capture_dma_buf->area)
     {
-        printk("mtk_mgrrx_awb_pcm_hw_params Awb_Capture_dma_buf->area\n");
         runtime->dma_bytes = params_buffer_bytes(hw_params);
         runtime->dma_area = Awb_Capture_dma_buf->area;
         runtime->dma_addr = Awb_Capture_dma_buf->addr;
     }
     else
     {
-        printk("mtk_mgrrx_awb_pcm_hw_params snd_pcm_lib_malloc_pages\n");
         ret =  snd_pcm_lib_malloc_pages(substream, params_buffer_bytes(hw_params));
     }
-    printk("mtk_mgrrx_awb_pcm_hw_params dma_bytes = %zu dma_area = %p dma_addr = 0x%x\n",
-           runtime->dma_bytes, runtime->dma_area, (uint32)runtime->dma_addr);
 
-    printk("runtime->hw.buffer_bytes_max = 0x%zu \n", runtime->hw.buffer_bytes_max);
     SetAWBBuffer(substream, hw_params);
 
-    printk("dma_bytes = %zu dma_area = %p dma_addr = 0x%lx\n",
-           substream->runtime->dma_bytes, substream->runtime->dma_area, (long)substream->runtime->dma_addr);
     return ret;
 }
 
 static int mtk_fm_i2s_capture_pcm_hw_free(struct snd_pcm_substream *substream)
 {
-    printk("mtk_fm_i2s_capture_pcm_hw_free \n");
     if (Awb_Capture_dma_buf->area)
     {
         return 0;
@@ -309,7 +287,6 @@ static int mtk_fm_i2s_awb_pcm_open(struct snd_pcm_substream *substream)
 {
     struct snd_pcm_runtime *runtime = substream->runtime;
     int ret = 0;
-    printk("mtk_fm_i2s_awb_pcm_open\n");
     FM_I2S_AWB_Control_context = Get_Mem_ControlT(Soc_Aud_Digital_Block_MEM_AWB);
     runtime->hw = mtk_mgrrx_awb_hardware;
     memcpy((void *)(&(runtime->hw)), (void *)&mtk_mgrrx_awb_hardware , sizeof(struct snd_pcm_hardware));
@@ -320,14 +297,11 @@ static int mtk_fm_i2s_awb_pcm_open(struct snd_pcm_substream *substream)
 
     if (ret < 0)
     {
-        printk("snd_pcm_hw_constraint_integer failed\n");
     }
 
-    printk("mtk_fm_i2s_awb_pcm_open runtime rate = %d channels = %d \n", runtime->rate, runtime->channels);
 
     if (substream->stream == SNDRV_PCM_STREAM_CAPTURE)
     {
-        printk("SNDRV_PCM_STREAM_CAPTURE \n");
     }
     else
     {
@@ -340,11 +314,9 @@ static int mtk_fm_i2s_awb_pcm_open(struct snd_pcm_substream *substream)
 
     if (ret < 0)
     {
-        printk("mtk_fm_i2s_awb_pcm_close\n");
         mtk_fm_i2s_awb_pcm_close(substream);
         return ret;
     }
-    printk("mtk_fm_i2s_awb_pcm_open return\n");
     return 0;
 }
 
@@ -358,7 +330,6 @@ static int mtk_fm_i2s_awb_pcm_close(struct snd_pcm_substream *substream)
 
 static int mtk_fm_i2s_awb_alsa_start(struct snd_pcm_substream *substream)
 {
-    printk("mtk_fm_i2s_awb_alsa_start \n");
     SetMemifSubStream(Soc_Aud_Digital_Block_MEM_AWB, substream);
     StartAudioFMI2SAWBHardware(substream);
     return 0;
@@ -366,8 +337,6 @@ static int mtk_fm_i2s_awb_alsa_start(struct snd_pcm_substream *substream)
 
 static int mtk_capture_fm_i2s_pcm_trigger(struct snd_pcm_substream *substream, int cmd)
 {
-    printk("mtk_capture_fm_i2s_pcm_trigger cmd = %d\n", cmd);
-
     switch (cmd)
     {
         case SNDRV_PCM_TRIGGER_START:
@@ -384,7 +353,6 @@ static bool CheckNullPointer(void *pointer)
 {
     if (pointer == NULL)
     {
-        printk("CheckNullPointer pointer = NULL");
         return true;
     }
     return false;
@@ -407,8 +375,6 @@ static int mtk_fm_i2s_awb_pcm_copy(struct snd_pcm_substream *substream,
     count = audio_frame_to_bytes(substream , count);
     #endif
 
-    PRINTK_AUD_AWB("%s  pos = %lu count = %lu\n ", __func__, pos, count);
-
     // check which memif nned to be write
     pAWB_MEM_ConTrol = FM_I2S_AWB_Control_context;
     Awb_Block = &(pAWB_MEM_ConTrol->rBlock);
@@ -428,14 +394,12 @@ static int mtk_fm_i2s_awb_pcm_copy(struct snd_pcm_substream *substream,
 
     if (CheckNullPointer((void *)Awb_Block->pucVirtBufAddr))
     {
-        printk("CheckNullPointer  pucVirtBufAddr = %p\n", Awb_Block->pucVirtBufAddr);
         return 0;
     }
 
     spin_lock_irqsave(&auddrv_AWBInCtl_lock, flags);
     if (Awb_Block->u4DataRemained >  Awb_Block->u4BufferSize)
     {
-        printk("AudDrv_MEMIF_Read u4DataRemained=%x > u4BufferSize=%x" , Awb_Block->u4DataRemained, Awb_Block->u4BufferSize);
         Awb_Block->u4DataRemained = 0;
         Awb_Block->u4DMAReadIdx   = Awb_Block->u4WriteIdx;
     }
@@ -451,21 +415,15 @@ static int mtk_fm_i2s_awb_pcm_copy(struct snd_pcm_substream *substream,
     DMA_Read_Ptr = Awb_Block->u4DMAReadIdx;
     spin_unlock_irqrestore(&auddrv_AWBInCtl_lock, flags);
 
-    PRINTK_AUD_AWB("AudDrv_MEMIF_Read finish0, read_count:0x%x, read_size:0x%x, u4DataRemained:0x%x, u4DMAReadIdx:0x%x, u4WriteIdx:0x%x \r\n",
-                   read_count, read_size, Awb_Block->u4DataRemained, Awb_Block->u4DMAReadIdx, Awb_Block->u4WriteIdx);
-
     if (DMA_Read_Ptr + read_size < Awb_Block->u4BufferSize)
     {
         if (DMA_Read_Ptr != Awb_Block->u4DMAReadIdx)
         {
-            printk("AudDrv_MEMIF_Read 1, read_size:0x%zu, DataRemained:0x%x, DMA_Read_Ptr:0x%zu, DMAReadIdx:0x%x \r\n",
-                   read_size, Awb_Block->u4DataRemained, DMA_Read_Ptr, Awb_Block->u4DMAReadIdx);
         }
 
         if (copy_to_user((void __user *)Read_Data_Ptr, (Awb_Block->pucVirtBufAddr + DMA_Read_Ptr), read_size))
         {
 
-            printk("AudDrv_MEMIF_Read Fail 1 copy to user Read_Data_Ptr:%p, pucVirtBufAddr:%p, u4DMAReadIdx:0x%x, DMA_Read_Ptr:0x%zu,read_size:%zu", Read_Data_Ptr, Awb_Block->pucVirtBufAddr, Awb_Block->u4DMAReadIdx, DMA_Read_Ptr, read_size);
             return 0;
         }
 
@@ -479,9 +437,6 @@ static int mtk_fm_i2s_awb_pcm_copy(struct snd_pcm_substream *substream,
 
         Read_Data_Ptr += read_size;
         count -= read_size;
-
-        PRINTK_AUD_AWB("AudDrv_MEMIF_Read finish1, copy size:0x%x, u4DMAReadIdx:0x%x, u4WriteIdx:0x%x, u4DataRemained:0x%x \r\n",
-                       read_size, Awb_Block->u4DMAReadIdx, Awb_Block->u4WriteIdx, Awb_Block->u4DataRemained);
     }
 
     else
@@ -492,14 +447,10 @@ static int mtk_fm_i2s_awb_pcm_copy(struct snd_pcm_substream *substream,
         if (DMA_Read_Ptr != Awb_Block->u4DMAReadIdx)
         {
 
-            printk("AudDrv_MEMIF_Read 2, read_size1:0x%x, DataRemained:0x%x, DMA_Read_Ptr:0x%zu, DMAReadIdx:0x%x \r\n",
-                   size_1, Awb_Block->u4DataRemained, DMA_Read_Ptr, Awb_Block->u4DMAReadIdx);
         }
         if (copy_to_user((void __user *)Read_Data_Ptr, (Awb_Block->pucVirtBufAddr + DMA_Read_Ptr), size_1))
         {
 
-            printk("AudDrv_MEMIF_Read Fail 2 copy to user Read_Data_Ptr:%p, pucVirtBufAddr:%p, u4DMAReadIdx:0x%x, DMA_Read_Ptr:0x%zu,read_size:%zu",
-                   Read_Data_Ptr, Awb_Block->pucVirtBufAddr, Awb_Block->u4DMAReadIdx, DMA_Read_Ptr, read_size);
             return 0;
         }
 
@@ -511,19 +462,13 @@ static int mtk_fm_i2s_awb_pcm_copy(struct snd_pcm_substream *substream,
         DMA_Read_Ptr = Awb_Block->u4DMAReadIdx;
         spin_unlock(&auddrv_AWBInCtl_lock);
 
-        PRINTK_AUD_AWB("AudDrv_MEMIF_Read finish2, copy size_1:0x%x, u4DMAReadIdx:0x%x, u4WriteIdx:0x%x, u4DataRemained:0x%x \r\n",
-                       size_1, Awb_Block->u4DMAReadIdx, Awb_Block->u4WriteIdx, Awb_Block->u4DataRemained);
-
         if (DMA_Read_Ptr != Awb_Block->u4DMAReadIdx)
         {
 
-            printk("AudDrv_AWB_Read 3, read_size2:%x, DataRemained:%x, DMA_Read_Ptr:0x%zu, DMAReadIdx:%x \r\n",
-                   size_2, Awb_Block->u4DataRemained, DMA_Read_Ptr, Awb_Block->u4DMAReadIdx);
         }
         if (copy_to_user((void __user *)(Read_Data_Ptr + size_1), (Awb_Block->pucVirtBufAddr + DMA_Read_Ptr), size_2))
         {
 
-            printk("AudDrv_MEMIF_Read Fail 3 copy to user Read_Data_Ptr:%p, pucVirtBufAddr:%p, u4DMAReadIdx:0x%x , DMA_Read_Ptr:0x%zu, read_size:0x%zu", Read_Data_Ptr, Awb_Block->pucVirtBufAddr, Awb_Block->u4DMAReadIdx, DMA_Read_Ptr, read_size);
             return read_count << 2;
         }
 
@@ -537,8 +482,6 @@ static int mtk_fm_i2s_awb_pcm_copy(struct snd_pcm_substream *substream,
         count -= read_size;
         Read_Data_Ptr += read_size;
 
-        PRINTK_AUD_AWB("AudDrv_MEMIF_Read finish3, copy size_2:0x%x, u4DMAReadIdx:0x%x, u4WriteIdx:0x%x u4DataRemained:0x%x \r\n",
-                       size_2, Awb_Block->u4DMAReadIdx, Awb_Block->u4WriteIdx, Awb_Block->u4DataRemained);
     }
 
     return read_count >> 2;
@@ -548,7 +491,6 @@ static int mtk_capture_pcm_silence(struct snd_pcm_substream *substream,
                                    int channel, snd_pcm_uframes_t pos,
                                    snd_pcm_uframes_t count)
 {
-    printk("dummy_pcm_silence \n");
     return 0; /* do nothing */
 }
 
@@ -558,7 +500,6 @@ static void *dummy_page[2];
 static struct page *mtk_fm_i2s_capture_pcm_page(struct snd_pcm_substream *substream,
                                                unsigned long offset)
 {
-    printk("dummy_pcm_page \n");
     return virt_to_page(dummy_page[substream->stream]); /* the same page */
 }
 
@@ -587,7 +528,6 @@ static struct snd_soc_platform_driver mtk_soc_platform =
 
 static int mtk_fm_i2s_awb_probe(struct platform_device *pdev)
 {
-    printk("mtk_fm_i2s_awb_probe\n");
 
     pdev->dev.coherent_dma_mask = DMA_BIT_MASK(64);
     if (!pdev->dev.dma_mask)
@@ -600,21 +540,18 @@ static int mtk_fm_i2s_awb_probe(struct platform_device *pdev)
         dev_set_name(&pdev->dev, "%s", MT_SOC_FM_I2S_AWB_PCM);
     }
 
-    printk("%s: dev name %s\n", __func__, dev_name(&pdev->dev));
     return snd_soc_register_platform(&pdev->dev,
                                      &mtk_soc_platform);
 }
 
 static int mtk_asoc_fm_i2s_awb_pcm_new(struct snd_soc_pcm_runtime *rtd)
 {
-    printk("mtk_asoc_fm_i2s_awb_pcm_new \n");
     return 0;
 }
 
 
 static int mtk_afe_fm_i2s_awb_probe(struct snd_soc_platform *platform)
 {
-    printk("mtk_afe_fm_i2s_awb_probe\n");
     AudDrv_Allocate_mem_Buffer(platform->dev, Soc_Aud_Digital_Block_MEM_AWB, FM_I2S_MAX_BUFFER_SIZE);
     Awb_Capture_dma_buf =  Get_Mem_Buffer(Soc_Aud_Digital_Block_MEM_AWB);
     return 0;
@@ -623,7 +560,6 @@ static int mtk_afe_fm_i2s_awb_probe(struct snd_soc_platform *platform)
 
 static int mtk_fm_i2s_awb_remove(struct platform_device *pdev)
 {
-    pr_debug("%s\n", __func__);
     snd_soc_unregister_platform(&pdev->dev);
     return 0;
 }
@@ -656,7 +592,6 @@ static struct platform_device *soc_fm_i2s_capture_dev;
 static int __init mtk_soc_fm_i2s_awb_platform_init(void)
 {
     int ret = 0;
-    printk("%s\n", __func__);
 	#ifndef CONFIG_OF
     soc_fm_i2s_capture_dev = platform_device_alloc(MT_SOC_FM_I2S_AWB_PCM, -1);
     if (!soc_fm_i2s_capture_dev)
@@ -677,7 +612,6 @@ static int __init mtk_soc_fm_i2s_awb_platform_init(void)
 
 static void __exit mtk_soc_fm_i2s_awb_platform_exit(void)
 {
-    printk("%s\n", __func__);
     platform_driver_unregister(&mtk_fm_i2s_awb_capture_driver);
 }
 
diff --git a/sound/soc/mediatek/mt_soc_audio_6580/mt_soc_pcm_fmtx.c b/sound/soc/mediatek/mt_soc_audio_6580/mt_soc_pcm_fmtx.c
index 2578262b1..01b1b5d2c 100644
--- a/sound/soc/mediatek/mt_soc_audio_6580/mt_soc_pcm_fmtx.c
+++ b/sound/soc/mediatek/mt_soc_audio_6580/mt_soc_pcm_fmtx.c
@@ -104,7 +104,6 @@ static int Audio_fmtx_hdoutput_Get(struct snd_kcontrol *kcontrol,
 
 static int Audio_fmtx_hdoutput_Set(struct snd_kcontrol *kcontrol, struct snd_ctl_elem_value *ucontrol)
 {
-    printk("%s()\n", __func__);
     if (ucontrol->value.enumerated.item[0] > ARRAY_SIZE(fmtx_HD_output))
     {
         printk("return -EINVAL\n");
@@ -456,7 +455,6 @@ static int mtk_pcm_fmtx_open(struct snd_pcm_substream *substream)
 
 static int mtk_pcm_fmtx_close(struct snd_pcm_substream *substream)
 {
-    PRINTK_AUD_FMTX("%s \n", __func__);
     //   mtk_wcn_cmb_stub_audio_ctrl((CMB_STUB_AIF_X)CMB_STUB_AIF_0);
 
     if (mPlaybackSramState == SRAM_STATE_PLAYBACKDRAM)
@@ -698,7 +696,6 @@ static int mtk_pcm_fmtx_silence(struct snd_pcm_substream *substream,
                                 int channel, snd_pcm_uframes_t pos,
                                 snd_pcm_uframes_t count)
 {
-    PRINTK_AUD_FMTX("%s \n", __func__);
     return 0; /* do nothing */
 }
 
@@ -707,7 +704,6 @@ static void *dummy_page[2];
 static struct page *mtk_pcm_fmtx_page(struct snd_pcm_substream *substream,
                                       unsigned long offset)
 {
-    PRINTK_AUD_FMTX("%s \n", __func__);
     return virt_to_page(dummy_page[substream->stream]); /* the same page */
 }
 
@@ -736,7 +732,6 @@ static struct snd_soc_platform_driver mtk_fmtx_soc_platform =
 static int mtk_fmtx_probe(struct platform_device *pdev)
 {
     //int ret = 0;
-    PRINTK_AUD_FMTX("%s \n", __func__);
 
     pdev->dev.coherent_dma_mask = DMA_BIT_MASK(64);
     if (!pdev->dev.dma_mask)
@@ -749,7 +744,6 @@ static int mtk_fmtx_probe(struct platform_device *pdev)
         dev_set_name(&pdev->dev, "%s", MT_SOC_FM_MRGTX_PCM);
     }
 
-    PRINTK_AUD_FMTX("%s: dev name %s\n", __func__, dev_name(&pdev->dev));
 
     mDev = &pdev->dev;
 
@@ -760,7 +754,6 @@ static int mtk_fmtx_probe(struct platform_device *pdev)
 static int mtk_asoc_pcm_fmtx_new(struct snd_soc_pcm_runtime *rtd)
 {
     int ret = 0;
-    PRINTK_AUD_FMTX("%s\n", __func__);
     return ret;
 }
 
@@ -777,7 +770,6 @@ static int mtk_afe_fmtx_probe(struct snd_soc_platform *platform)
 
 static int mtk_fmtx_remove(struct platform_device *pdev)
 {
-    PRINTK_AUD_FMTX("%s \n", __func__);
     snd_soc_unregister_platform(&pdev->dev);
     return 0;
 }
@@ -810,7 +802,6 @@ static struct platform_device *soc_mtkfmtx_dev;
 static int __init mtk_soc_platform_init(void)
 {
     int ret;
-    PRINTK_AUD_FMTX("%s \n", __func__);
 #ifndef CONFIG_OF
     soc_mtkfmtx_dev = platform_device_alloc(MT_SOC_FM_MRGTX_PCM, -1);
     if (!soc_mtkfmtx_dev)
@@ -833,7 +824,6 @@ module_init(mtk_soc_platform_init);
 
 static void __exit mtk_soc_platform_exit(void)
 {
-    PRINTK_AUD_FMTX("%s \n", __func__);
 
     platform_driver_unregister(&mtk_fmtx_driver);
 }
diff --git a/sound/soc/mediatek/mt_soc_audio_6580/mt_soc_pcm_hdmi.c b/sound/soc/mediatek/mt_soc_audio_6580/mt_soc_pcm_hdmi.c
index ea23da786..fefc47e56 100644
--- a/sound/soc/mediatek/mt_soc_audio_6580/mt_soc_pcm_hdmi.c
+++ b/sound/soc/mediatek/mt_soc_audio_6580/mt_soc_pcm_hdmi.c
@@ -341,33 +341,21 @@ static void copysinewavetohdmi(unsigned int channels)
     if (channels == 0 )
     {
         memset((void *)(Bufferaddr ), 0x7f7f7f7f, Hhdmi_Buffer_length); // using for observe data
-        printk("use fix pattern Bufferaddr = %p Hhdmi_Buffer_length = %d\n",Bufferaddr,Hhdmi_Buffer_length);
         return;
     }
 
-    printk("%s buffer area = %p arraybytes = %d bufferlength = %zu\n", __func__,    HDMI_dma_buf->area , arraybytes, HDMI_dma_buf->bytes);
     for (i = 0; i < HDMI_dma_buf->bytes ; i += arraybytes)
     {
-        printk("Bufferaddr + i = %p arraybytes = %d \n",Bufferaddr + i,arraybytes);
         memcpy((void *)(Bufferaddr + i), (void *)SinewaveArr, arraybytes);
     }
-
-    for (i = 0; i < 512 ; i++ )
-    {
-        printk("Bufferaddr[%d] = %x \n",i, *(Bufferaddr + i));
-    }
-
-
 }
 
 static void SetHDMIAddress(void)
 {
 #if 0
-    printk("%s buffer length = %d\n", __func__,    HDMI_dma_buf->bytes);
     Afe_Set_Reg(AFE_HDMI_BASE , HDMI_dma_buf->addr , 0xffffffff);
     Afe_Set_Reg(AFE_HDMI_END  , HDMI_dma_buf->addr + (HDMI_dma_buf->bytes - 1), 0xffffffff);
 #else
-    printk("%s mt6572 not support!!!\n", __func__);
 #endif
 }
 
@@ -385,17 +373,14 @@ static const struct soc_enum Audio_Hdmi_Enum[] =
 static int Audio_hdmi_SideGen_Get(struct snd_kcontrol *kcontrol,
                                   struct snd_ctl_elem_value *ucontrol)
 {
-    printk("Audio_hdmi_SideGen_Get = %d\n", mHdmi_sidegen_control);
     ucontrol->value.integer.value[0] = mHdmi_sidegen_control;
     return 0;
 }
 
 static int Audio_hdmi_SideGen_Set(struct snd_kcontrol *kcontrol, struct snd_ctl_elem_value *ucontrol)
 {
-    printk("%s()\n", __func__);
     if (ucontrol->value.enumerated.item[0] > ARRAY_SIZE(HDMI_SIDEGEN))
     {
-        printk("return -EINVAL\n");
         return -EINVAL;
     }
 
@@ -514,8 +499,6 @@ static int mtk_pcm_hdmi_stop(struct snd_pcm_substream *substream)
 {
     AFE_BLOCK_T *Afe_Block = &(pMemControl->rBlock);
 
-    printk("mtk_pcm_hdmi_stop \n");
-
     SetIrqEnable(Soc_Aud_IRQ_MCU_MODE_IRQ5_MCU_MODE, false);
 
     SetMemoryPathEnable(Soc_Aud_Digital_Block_MEM_HDMI, false);
@@ -548,8 +531,6 @@ static snd_pcm_uframes_t mtk_pcm_hdmi_pointer(struct snd_pcm_substream *substrea
     kal_int32 HW_Cur_ReadIdx = 0;
     AFE_BLOCK_T *Afe_Block = &(pMemControl->rBlock);
 
-    PRINTK_AUD_HDMI("mtk_pcm_hdmi_pointer u4DMAReadIdx=%x\n",Afe_Block->u4DMAReadIdx);
-
     if (pMemControl->interruptTrigger == 1)
     {
     	#if 0
@@ -557,12 +538,10 @@ static snd_pcm_uframes_t mtk_pcm_hdmi_pointer(struct snd_pcm_substream *substrea
 		#endif
         if (HW_Cur_ReadIdx == 0)
         {
-            PRINTK_AUD_HDMI("[mtk_pcm_hdmi_pointer] HW_Cur_ReadIdx ==0 \n");
             HW_Cur_ReadIdx = Afe_Block->pucPhysBufAddr;
         }
         HW_memory_index = (HW_Cur_ReadIdx - Afe_Block->pucPhysBufAddr);
         Previous_Hw_cur = HW_memory_index;
-        PRINTK_AUD_HDMI("[mtk_pcm_hdmi_pointer] HW_Cur_ReadIdx =0x%x HW_memory_index = 0x%x pointer return = 0x%x \n", HW_Cur_ReadIdx, HW_memory_index,(HW_memory_index >> 2));
         pMemControl->interruptTrigger = 0;
         return (HW_memory_index >> 2);
     }
@@ -588,7 +567,6 @@ static void SetHDMIBuffer(struct snd_pcm_substream *substream,
     pblock->u4DataRemained  = 0;
     pblock->u4fsyncflag     = false;
     pblock->uResetFlag      = true;
-    PRINTK_AUD_HDMI("%s dma_bytes = %d dma_area = %p dma_addr = 0x%x\n", __func__, pblock->u4BufferSize, pblock->pucVirtBufAddr, pblock->pucPhysBufAddr);
 
 	#if 0
     Afe_Set_Reg(AFE_HDMI_BASE , pblock->pucPhysBufAddr , 0xffffffff);
@@ -597,9 +575,6 @@ static void SetHDMIBuffer(struct snd_pcm_substream *substream,
     u4tmpMrg1 = Afe_Get_Reg(AFE_HDMI_BASE);
 	#endif
     u4tmpMrg1 &= 0x00ffffff;
-
-    PRINTK_AUD_HDMI("SetHDMIBuffer AFE_HDMI_BASE =0x%x \n", u4tmpMrg1);
-
 }
 
 
@@ -610,7 +585,6 @@ static int mtk_pcm_hdmi_hw_params(struct snd_pcm_substream *substream,
     struct snd_dma_buffer *dma_buf = &substream->dma_buffer;
     int ret = 0;
 
-    PRINTK_AUD_HDMI("%s \n", __func__);
 
     dma_buf->dev.type = SNDRV_DMA_TYPE_DEV;
     dma_buf->dev.dev = substream->pcm->card->dev;
@@ -618,7 +592,6 @@ static int mtk_pcm_hdmi_hw_params(struct snd_pcm_substream *substream,
 
     if (fake_buffer)
     {
-        PRINTK_AUD_HDMI("[mtk_pcm_hdmi_hw_params] HDMI_dma_buf->area\n");
 
 #ifdef _NO_SRAM_USAGE_
         runtime->dma_bytes = HDMI_dma_buf->bytes;
@@ -635,11 +608,8 @@ static int mtk_pcm_hdmi_hw_params(struct snd_pcm_substream *substream,
     }
     else
     {
-        PRINTK_AUD_HDMI("[mtk_pcm_hdmi_hw_params] snd_pcm_lib_malloc_pages\n");
         ret =  snd_pcm_lib_malloc_pages(substream, params_buffer_bytes(hw_params));
     }
-    PRINTK_AUD_HDMI("2 dma_bytes = %zu dma_area = %p dma_addr = 0x%lx\n",
-                  substream->runtime->dma_bytes, substream->runtime->dma_area, (long)substream->runtime->dma_addr);
 
     SetHDMIBuffer(substream, hw_params);
     return ret;
@@ -648,7 +618,6 @@ static int mtk_pcm_hdmi_hw_params(struct snd_pcm_substream *substream,
 
 static int mtk_pcm_hdmi_hw_free(struct snd_pcm_substream *substream)
 {
-    PRINTK_AUD_HDMI("mtk_pcm_hdmi_hw_free \n");
     if (fake_buffer)
     {
         return 0;
@@ -678,8 +647,6 @@ static int mtk_pcm_hdmi_open(struct snd_pcm_substream *substream)
     int err = 0;
     int ret = 0;
 
-    PRINTK_AUD_HDMI("mtk_pcm_hdmi_open\n");
-
     pMemControl = Get_Mem_ControlT(Soc_Aud_Digital_Block_MEM_HDMI);
 
     runtime->hw = mtk_hdmi_hardware;
@@ -703,35 +670,21 @@ static int mtk_pcm_hdmi_open(struct snd_pcm_substream *substream)
     }
 
     //print for hw pcm information
-    PRINTK_AUD_HDMI("mtk_pcm_hdmi_open runtime rate = %d channels = %d substream->pcm->device = %d\n",
-                  runtime->rate, runtime->channels, substream->pcm->device);
     runtime->hw.info |= SNDRV_PCM_INFO_INTERLEAVED;
     runtime->hw.info |= SNDRV_PCM_INFO_NONINTERLEAVED;
     runtime->hw.info |= SNDRV_PCM_INFO_MMAP_VALID;
 
-    if (substream->stream == SNDRV_PCM_STREAM_PLAYBACK)
-    {
-        PRINTK_AUD_HDMI("SNDRV_PCM_STREAM_PLAYBACK mtkalsa_hdmi_playback_constraints\n");
-    }
-    else
-    {
-
-    }
-
     if (err < 0)
     {
-        PRINTK_AUD_HDMI("mtk_pcm_hdmi_close\n");
         mtk_pcm_hdmi_close(substream);
         return err;
     }
-    PRINTK_AUD_HDMI("mtk_pcm_hdmi_open return\n");
     return 0;
 }
 
 
 static int mtk_pcm_hdmi_close(struct snd_pcm_substream *substream)
 {
-    PRINTK_AUD_HDMI("%s \n", __func__);
 
 //    SetTDMEnable(false); //enable TDM
 //    SetHDMIEnable(false);
@@ -763,9 +716,6 @@ static int mtk_pcm_hdmi_prepare(struct snd_pcm_substream *substream)
     uint32 MclkDiv = 0;
     AFE_BLOCK_T *Afe_Block = &(pMemControl->rBlock);
 
-    PRINTK_AUD_HDMI("mtk_pcm_hdmi_prepare format =%d, rate = %d  channels = %d period_size = %lu\n",
-                  runtime->format, runtime->rate, runtime->channels, runtime->period_size);
-
     SetIrqEnable(Soc_Aud_IRQ_MCU_MODE_IRQ5_MCU_MODE, false);
 
     SetMemoryPathEnable(Soc_Aud_Digital_Block_MEM_HDMI, false);
@@ -807,8 +757,6 @@ static int mtk_pcm_hdmi_prepare(struct snd_pcm_substream *substream)
     if (runtime->format == SNDRV_PCM_FORMAT_S32_LE || runtime->format == SNDRV_PCM_FORMAT_U32_LE)
     {
 
-        PRINTK_AUD_HDMI("mtk_pcm_hdmi_prepare 32bit \n ");
-
         SetMemIfFetchFormatPerSample(Soc_Aud_Digital_Block_MEM_HDMI, AFE_WLEN_32_BIT_ALIGN_8BIT_0_24BIT_DATA);
         SetHDMIdatalength(Soc_Aud_I2S_WLEN_WLEN_32BITS);
         SetTDMDatalength(Soc_Aud_I2S_WLEN_WLEN_32BITS);
@@ -828,8 +776,6 @@ static int mtk_pcm_hdmi_prepare(struct snd_pcm_substream *substream)
     }
     else
     {
-        PRINTK_AUD_HDMI("mtk_pcm_hdmi_prepare 16bit \n ");
-
         SetMemIfFetchFormatPerSample(Soc_Aud_Digital_Block_MEM_HDMI, AFE_WLEN_16_BIT);
         SetHDMIdatalength(Soc_Aud_I2S_WLEN_WLEN_16BITS);
         SetTDMDatalength(Soc_Aud_I2S_WLEN_WLEN_16BITS);
@@ -970,8 +916,6 @@ static int mtk_pcm_hdmi_start(struct snd_pcm_substream *substream)
 
 static int mtk_pcm_hdmi_trigger(struct snd_pcm_substream *substream, int cmd)
 {
-    PRINTK_AUD_HDMI("mtk_pcm_hdmi_trigger cmd = %d\n", cmd);
-
     switch (cmd)
     {
         case SNDRV_PCM_TRIGGER_START:
@@ -1000,9 +944,6 @@ static int mtk_pcm_hdmi_copy(struct snd_pcm_substream *substream,
 
     // handle for buffer management
 
-    PRINTK_AUD_HDMI("[mtk_pcm_hdmi_copy] count = %d WriteIdx=%x, ReadIdx=%x, DataRemained=%x \n",
-            (kal_uint32)count, Afe_Block->u4WriteIdx, Afe_Block->u4DMAReadIdx, Afe_Block->u4DataRemained);
-
     if (Afe_Block->u4BufferSize == 0)
     {
         PRINTK_AUD_HDMI("AudDrv_write: u4BufferSize=0 Error");
@@ -1039,9 +980,6 @@ static int mtk_pcm_hdmi_copy(struct snd_pcm_substream *substream,
             }
             else
             {
-
-                PRINTK_AUD_HDMI2("[mtk_pcm_hdmi_copy]memcpy Afe_Block->pucVirtBufAddr+Afe_WriteIdx= 0x%x data_w_ptr = %p copy_size = 0x%x\n",
-                       Afe_Block->pucVirtBufAddr + Afe_WriteIdx_tmp, data_w_ptr, copy_size);
                 if (copy_from_user((Afe_Block->pucVirtBufAddr + Afe_WriteIdx_tmp), data_w_ptr, copy_size))
                 {
                     PRINTK_AUD_HDMI("AudDrv_write Fail copy from user \n");
@@ -1056,10 +994,6 @@ static int mtk_pcm_hdmi_copy(struct snd_pcm_substream *substream,
             spin_unlock_irqrestore(&auddrv_hdmi_lock, flags);
             data_w_ptr += copy_size;
             count -= copy_size;
-
-            PRINTK_AUD_HDMI2("[mtk_pcm_hdmi_copy] finish1, copy_size:%x, WriteIdx:%x, ReadIdx=%x, DataRemained:%x \r\n",
-                               copy_size, Afe_Block->u4WriteIdx, Afe_Block->u4DMAReadIdx, Afe_Block->u4DataRemained);
-
         }
         else  // copy twice
         {
@@ -1073,10 +1007,6 @@ static int mtk_pcm_hdmi_copy(struct snd_pcm_substream *substream,
             }
             else
             {
-
-                PRINTK_AUD_HDMI2("[mtk_pcm_hdmi_copy]mcmcpy Afe_Block->pucVirtBufAddr+Afe_WriteIdx= %x data_w_ptr = %p size_1 = %x\n",
-                    Afe_Block->pucVirtBufAddr+Afe_WriteIdx_tmp,data_w_ptr,size_1);
-
                 if ((copy_from_user((Afe_Block->pucVirtBufAddr + Afe_WriteIdx_tmp), data_w_ptr , size_1)))
                 {
                     PRINTK_AUD_HDMI("HDMI_write Fail 1 copy from user");
@@ -1097,9 +1027,6 @@ static int mtk_pcm_hdmi_copy(struct snd_pcm_substream *substream,
             }
             else
             {
-
-                PRINTK_AUD_HDMI2("[mtk_pcm_hdmi_copy]mcmcpy Afe_Block->pucVirtBufAddr+Afe_WriteIdx= %x data_w_ptr+size_1 = %p size_2 = %x\n",
-                    Afe_Block->pucVirtBufAddr+Afe_WriteIdx_tmp,data_w_ptr+size_1,size_2);
                 if ((copy_from_user((Afe_Block->pucVirtBufAddr + Afe_WriteIdx_tmp), (data_w_ptr + size_1), size_2)))
                 {
                     PRINTK_AUD_HDMI("[mtk_pcm_hdmi_copy] Fail 2  copy from user");
@@ -1114,9 +1041,6 @@ static int mtk_pcm_hdmi_copy(struct snd_pcm_substream *substream,
             spin_unlock_irqrestore(&auddrv_hdmi_lock, flags);
             count -= copy_size;
             data_w_ptr += copy_size;
-
-            PRINTK_AUD_HDMI2("[mtk_pcm_hdmi_copy] finish2, copy size:%x, WriteIdx:%x,ReadIdx=%x DataRemained:%x \r\n",
-                   copy_size, Afe_Block->u4WriteIdx, Afe_Block->u4DMAReadIdx, Afe_Block->u4DataRemained);
         }
     }
 
@@ -1128,7 +1052,6 @@ static int mtk_pcm_hdmi_silence(struct snd_pcm_substream *substream,
                                 int channel, snd_pcm_uframes_t pos,
                                 snd_pcm_uframes_t count)
 {
-    PRINTK_AUD_HDMI("%s \n", __func__);
     return 0; /* do nothing */
 }
 
@@ -1137,7 +1060,6 @@ static void *dummy_page[2];
 static struct page *mtk_pcm_page(struct snd_pcm_substream *substream,
                                  unsigned long offset)
 {
-    PRINTK_AUD_HDMI("%s \n", __func__);
     return virt_to_page(dummy_page[substream->stream]); /* the same page */
 }
 
@@ -1165,7 +1087,6 @@ static struct snd_soc_platform_driver mtk_hdmi_soc_platform =
 
 static int mtk_hdmi_probe(struct platform_device *pdev)
 {
-    PRINTK_AUD_HDMI("%s \n", __func__);
 
     pdev->dev.coherent_dma_mask = DMA_BIT_MASK(64);
     if (!pdev->dev.dma_mask)
@@ -1178,7 +1099,6 @@ static int mtk_hdmi_probe(struct platform_device *pdev)
         dev_set_name(&pdev->dev, "%s", MT_SOC_HDMI_PCM);
     }
 
-    PRINTK_AUD_HDMI("%s: dev name %s\n", __func__, dev_name(&pdev->dev));
 
 
     return snd_soc_register_platform(&pdev->dev,
@@ -1189,7 +1109,6 @@ static int mtk_asoc_pcm_hdmi_new(struct snd_soc_pcm_runtime *rtd)
 {
     int ret = 0;
     pruntimehdmi  = rtd;
-    PRINTK_AUD_HDMI("%s\n", __func__);
     return ret;
 }
 
@@ -1198,7 +1117,6 @@ static int mtk_afe_hdmi_probe(struct snd_soc_platform *platform)
 
     HDMI_dma_buf = kmalloc(sizeof(struct snd_dma_buffer), GFP_KERNEL);
     memset((void *)HDMI_dma_buf, 0, sizeof(struct snd_dma_buffer));
-    PRINTK_AUD_HDMI("mtk_afe_hdmi_probe dma_alloc_coherent HDMI_dma_buf->addr=0x%lx \n", (long)HDMI_dma_buf->addr);
 
     HDMI_dma_buf->area = dma_alloc_coherent(platform->dev,
                                             HDMI_MAX_BUFFER_SIZE,
@@ -1214,7 +1132,6 @@ static int mtk_afe_hdmi_probe(struct snd_soc_platform *platform)
 
 static int mtk_afe_remove(struct platform_device *pdev)
 {
-    PRINTK_AUD_HDMI("%s \n", __func__);
     snd_soc_unregister_platform(&pdev->dev);
     return 0;
 }
@@ -1247,7 +1164,6 @@ static struct platform_device *soc_mtkhdmi_dev;
 static int __init mtk_hdmi_soc_platform_init(void)
 {
     int ret;
-    PRINTK_AUD_HDMI("%s \n", __func__);
 	#ifndef CONFIG_OF
     soc_mtkhdmi_dev = platform_device_alloc(MT_SOC_HDMI_PCM, -1);
     if (!soc_mtkhdmi_dev)
@@ -1270,7 +1186,6 @@ module_init(mtk_hdmi_soc_platform_init);
 
 static void __exit mtk_hdmi_soc_platform_exit(void)
 {
-    PRINTK_AUD_HDMI("%s \n", __func__);
 
     platform_driver_unregister(&mtk_hdmi_driver);
 }
diff --git a/sound/soc/mediatek/mt_soc_audio_6580/mt_soc_pcm_hp_impedance.c b/sound/soc/mediatek/mt_soc_audio_6580/mt_soc_pcm_hp_impedance.c
index 2ea8a764e..815305e15 100644
--- a/sound/soc/mediatek/mt_soc_audio_6580/mt_soc_pcm_hp_impedance.c
+++ b/sound/soc/mediatek/mt_soc_audio_6580/mt_soc_pcm_hp_impedance.c
@@ -142,8 +142,6 @@ static void SetDL1Buffer(struct snd_pcm_substream *substream,
     pblock->u4DataRemained  = 0;
     pblock->u4fsyncflag     = false;
     pblock->uResetFlag      = true;
-    printk("SetDL1Buffer u4BufferSize = %d pucVirtBufAddr = %p pucPhysBufAddr = 0x%x\n",
-           pblock->u4BufferSize, pblock->pucVirtBufAddr, pblock->pucPhysBufAddr);
     // set dram address top hardware
     Afe_Set_Reg(AFE_DL1_BASE , pblock->pucPhysBufAddr , 0xffffffff);
     Afe_Set_Reg(AFE_DL1_END  , pblock->pucPhysBufAddr + (pblock->u4BufferSize - 1), 0xffffffff);
@@ -156,7 +154,6 @@ static int mtk_pcm_hp_impedance_params(struct snd_pcm_substream *substream,
                                        struct snd_pcm_hw_params *hw_params)
 {
     int ret = 0;
-    printk("mtk_pcm_hp_impedance_params \n");
 
     /* runtime->dma_bytes has to be set manually to allow mmap */
     substream->runtime->dma_bytes = params_buffer_bytes(hw_params);
@@ -165,14 +162,11 @@ static int mtk_pcm_hp_impedance_params(struct snd_pcm_substream *substream,
     substream->runtime->dma_addr = Dl1_Playback_dma_buf->addr;
     SetDL1Buffer(substream, hw_params);
 
-    PRINTK_AUDDRV("dma_bytes = %zu dma_area = %p dma_addr = 0x%lx\n",
-                  substream->runtime->dma_bytes, substream->runtime->dma_area, (long)substream->runtime->dma_addr);
     return ret;
 }
 
 static int mtk_pcm_hp_impedance_hw_free(struct snd_pcm_substream *substream)
 {
-    PRINTK_AUDDRV("mtk_pcm_hp_impedance_hw_free \n");
     return 0;
 }
 
@@ -188,7 +182,6 @@ static int mtk_pcm_hp_impedance_open(struct snd_pcm_substream *substream)
 {
     int ret = 0;
     struct snd_pcm_runtime *runtime = substream->runtime;
-    PRINTK_AUDDRV("mtk_pcm_hp_impedance_open\n");
     AudDrv_Clk_On();
     AudDrv_Emi_Clk_On();
     pHp_impedance_MemControl = Get_Mem_ControlT(Soc_Aud_Digital_Block_MEM_DL1);
@@ -204,18 +197,8 @@ static int mtk_pcm_hp_impedance_open(struct snd_pcm_substream *substream)
     }
 
 
-    if (substream->stream == SNDRV_PCM_STREAM_PLAYBACK)
-    {
-        PRINTK_AUDDRV("SNDRV_PCM_STREAM_PLAYBACK mtkalsa_playback_constraints\n");
-    }
-    else
-    {
-
-    }
-
     if (ret < 0)
     {
-        PRINTK_AUDDRV("mtk_soc_pcm_hp_impedance_close\n");
         mtk_soc_pcm_hp_impedance_close(substream);
         return ret;
     }
@@ -228,7 +211,6 @@ static int mtk_pcm_hp_impedance_prepare(struct snd_pcm_substream *substream)
 {
     bool mI2SWLen;
     struct snd_pcm_runtime *runtime = substream->runtime;
-    printk("mtk_pcm_hp_impedance_prepare \n");
     if (mPrepareDone == false)
     {
         if (runtime->format == SNDRV_PCM_FORMAT_S32_LE || runtime->format == SNDRV_PCM_FORMAT_U32_LE)
@@ -276,7 +258,6 @@ static int mtk_pcm_hp_impedance_prepare(struct snd_pcm_substream *substream)
 static int mtk_soc_pcm_hp_impedance_close(struct snd_pcm_substream *substream)
 {
     //struct snd_pcm_runtime *runtime = substream->runtime;
-    printk("%s \n", __func__);
     if (mPrepareDone == true)
     {
         mPrepareDone = false;
@@ -291,7 +272,6 @@ static int mtk_soc_pcm_hp_impedance_close(struct snd_pcm_substream *substream)
 
 static int mtk_pcm_hp_impedance_trigger(struct snd_pcm_substream *substream, int cmd)
 {
-    PRINTK_AUDDRV("mtk_pcm_hp_impedance_trigger cmd = %d\n", cmd);
     switch (cmd)
     {
         case SNDRV_PCM_TRIGGER_START:
@@ -314,7 +294,6 @@ static int mtk_pcm_hp_impedance_silence(struct snd_pcm_substream *substream,
                                         int channel, snd_pcm_uframes_t pos,
                                         snd_pcm_uframes_t count)
 {
-    PRINTK_AUDDRV("%s \n", __func__);
     return 0; /* do nothing */
 }
 
@@ -323,7 +302,6 @@ static void *dummy_page[2];
 static struct page *mtk_pcm_hp_impedance_page(struct snd_pcm_substream *substream,
                                               unsigned long offset)
 {
-    PRINTK_AUDDRV("%s \n", __func__);
     return virt_to_page(dummy_page[substream->stream]); /* the same page */
 }
 
@@ -334,12 +312,10 @@ static int Audio_HP_ImpeDance_Set(struct snd_kcontrol *kcontrol,
                                   struct snd_ctl_elem_value *ucontrol)
 {
     const int off_counter = 20;
-    printk("%s \n", __func__);
     AudDrv_Clk_On();
     // set dc value to hardware
     mhp_impedance = ucontrol->value.integer.value[0];
     msleep(1 * 1000);
-    printk("3 %s \n", __func__);
     // start get adc value
     if (mAuxAdc_Offset == 0)
     {
@@ -351,11 +327,8 @@ static int Audio_HP_ImpeDance_Set(struct snd_kcontrol *kcontrol,
 #ifdef RAINIER_NEED_CHECK   // 82 no
         mAuxAdc_Offset = PMIC_IMM_GetOneChannelValue(AUX_HP_AP, off_counter, 0);
 #endif        
-        printk("mAuxAdc_Offset= %d \n", mAuxAdc_Offset);
-
         memset((void *)Get_Afe_SramBase_Pointer(), ucontrol->value.integer.value[0], AFE_INTERNAL_SRAM_SIZE);
         msleep(5 * 1000);
-        printk("4 %s \n", __func__);
 
         EnableTrimbuffer(false);
         OpenAnalogTrimHardware(false);
@@ -363,7 +336,6 @@ static int Audio_HP_ImpeDance_Set(struct snd_kcontrol *kcontrol,
 
     if (mhp_impedance  == 1)
     {
-        printk("start open hp impedance setting\n");
         OpenHeadPhoneImpedanceSetting(true);
         setOffsetTrimMux(AUDIO_OFFSET_TRIM_MUX_HPR);
         setOffsetTrimBufferGain(3);
@@ -371,11 +343,9 @@ static int Audio_HP_ImpeDance_Set(struct snd_kcontrol *kcontrol,
         setHpGainZero();
         memset((void *)Get_Afe_SramBase_Pointer(), ucontrol->value.integer.value[0], AFE_INTERNAL_SRAM_SIZE);
         msleep(5 * 1000);
-        printk("5 %s  \n", __func__);
     }
     else if (mhp_impedance == 0)
     {
-        printk("stop hp impedance setting\n");
         OpenHeadPhoneImpedanceSetting(false);
         setOffsetTrimMux(AUDIO_OFFSET_TRIM_MUX_GROUND);
         EnableTrimbuffer(false);
@@ -390,7 +360,6 @@ static int Audio_HP_ImpeDance_Set(struct snd_kcontrol *kcontrol,
             static unsigned short dcoffset;
             volatile unsigned short *Sramdata;
             int i = 0;
-            printk("set sram to dc value = %d \n", temp);
             Sramdata = Get_Afe_SramBase_Pointer();
             for (i = 0; i < AFE_INTERNAL_SRAM_SIZE >> 1 ; i ++)
             {
@@ -398,18 +367,13 @@ static int Audio_HP_ImpeDance_Set(struct snd_kcontrol *kcontrol,
                 Sramdata++;
             }
             Sramdata = Get_Afe_SramBase_Pointer();
-            printk("Sramdata = %p \n", Sramdata);
-            printk("Sramdata = 0x%x Sramdata+1 = 0x%x Sramdata+2 = 0x%x Sramdata+3 = 0x%x\n", *Sramdata, *(Sramdata + 1), *(Sramdata + 2), *(Sramdata + 3));
             Sramdata += 4;
-            printk("Sramdata = %p \n", Sramdata);
-            printk("Sramdata = 0x%x Sramdata+1 = 0x%x Sramdata+2 = 0x%x Sramdata+3 = 0x%x\n", *Sramdata, *(Sramdata + 1), *(Sramdata + 2), *(Sramdata + 3));
             //memset((void *)Get_Afe_SramBase_Pointer(), ucontrol->value.integer.value[0], AFE_INTERNAL_SRAM_SIZE);
             msleep(20);
             dcoffset = 0;
 #ifdef RAINIER_NEED_CHECK // todo              
             dcoffset = PMIC_IMM_GetOneChannelValue(AUX_HP_AP, off_counter, 0);
 #endif
-            printk("dcoffset= %d \n", dcoffset);
             msleep(3 * 1000);
         }
     }
@@ -485,24 +449,20 @@ static void CheckDcinitValue(void)
 {
     if (dcinit_value > (DCoffsetDefault + DCoffsetVariance))
     {
-        printk("%s dcinit_value = %d\n", __func__, dcinit_value);
         dcinit_value = DCoffsetDefault;
     }
     else if (dcinit_value < (DCoffsetDefault - DCoffsetVariance))
     {
-        printk("%s dcinit_value = %d\n", __func__, dcinit_value);
         dcinit_value = DCoffsetDefault;
     }
 }
 
 static void ApplyDctoDl(void)
 {
-    printk("%s\n", __func__);
 }
 
 static int Audio_HP_ImpeDance_Get(struct snd_kcontrol *kcontrol, struct snd_ctl_elem_value *ucontrol)
 {
-    printk("+ %s()\n", __func__);
     AudDrv_Clk_On();
     if (OpenHeadPhoneImpedanceSetting(true) == true)
     {
@@ -518,13 +478,8 @@ static int Audio_HP_ImpeDance_Get(struct snd_kcontrol *kcontrol, struct snd_ctl_
         EnableTrimbuffer(false);
         SetSdmLevel(AUDIO_SDM_LEVEL_NORMAL);
     }
-    else
-    {
-        printk("Audio_HP_ImpeDance_Get just do nothing \n");
-    }
     AudDrv_Clk_Off();
     ucontrol->value.integer.value[0] = mhp_impedance;
-    printk("- %s()\n", __func__);
     return 0;
 }
 
@@ -558,7 +513,6 @@ static struct snd_soc_platform_driver mtk_soc_platform =
 
 static int mtk_soc_hp_impedance_probe(struct platform_device *pdev)
 {
-    PRINTK_AUDDRV("%s \n", __func__);
 
     pdev->dev.coherent_dma_mask = DMA_BIT_MASK(64);
     if (!pdev->dev.dma_mask)
@@ -570,7 +524,6 @@ static int mtk_soc_hp_impedance_probe(struct platform_device *pdev)
     {
         dev_set_name(&pdev->dev, "%s", MT_SOC_HP_IMPEDANCE_PCM);
     }
-    PRINTK_AUDDRV("%s: dev name %s\n", __func__, dev_name(&pdev->dev));
     return snd_soc_register_platform(&pdev->dev,
                                      &mtk_soc_platform);
 }
@@ -578,14 +531,12 @@ static int mtk_soc_hp_impedance_probe(struct platform_device *pdev)
 static int mtk_asoc_pcm_hp_impedance_new(struct snd_soc_pcm_runtime *rtd)
 {
     int ret = 0;
-    PRINTK_AUDDRV("%s\n", __func__);
     return ret;
 }
 
 
 static int mtk_asoc_dhp_impedance_probe(struct snd_soc_platform *platform)
 {
-    PRINTK_AUDDRV("mtk_asoc_dhp_impedance_probe\n");
     //add  controls
     snd_soc_add_platform_controls(platform, Audio_snd_hp_impedance_controls,
                                   ARRAY_SIZE(Audio_snd_hp_impedance_controls));
@@ -597,7 +548,6 @@ static int mtk_asoc_dhp_impedance_probe(struct snd_soc_platform *platform)
 
 static int mtk_hp_impedance_remove(struct platform_device *pdev)
 {
-    PRINTK_AUDDRV("%s \n", __func__);
     snd_soc_unregister_platform(&pdev->dev);
     return 0;
 }
@@ -630,7 +580,6 @@ static struct platform_device *soc_mtk_hp_impedance_dev;
 static int __init mtk_soc_hp_impedance_platform_init(void)
 {
     int ret;
-    PRINTK_AUDDRV("%s \n", __func__);
 #ifndef CONFIG_OF
     soc_mtk_hp_impedance_dev = platform_device_alloc(MT_SOC_HP_IMPEDANCE_PCM, -1);
     if (!soc_mtk_hp_impedance_dev)
@@ -653,7 +602,6 @@ module_init(mtk_soc_hp_impedance_platform_init);
 
 static void __exit mtk_soc_hp_impedance_platform_exit(void)
 {
-    PRINTK_AUDDRV("%s \n", __func__);
 
     platform_driver_unregister(&mtk_hp_impedance_driver);
 }
diff --git a/sound/soc/mediatek/mt_soc_audio_6580/mt_soc_pcm_i2s0_awb.c b/sound/soc/mediatek/mt_soc_audio_6580/mt_soc_pcm_i2s0_awb.c
index a4490347a..ae5b171aa 100644
--- a/sound/soc/mediatek/mt_soc_audio_6580/mt_soc_pcm_i2s0_awb.c
+++ b/sound/soc/mediatek/mt_soc_audio_6580/mt_soc_pcm_i2s0_awb.c
@@ -94,8 +94,6 @@ static struct snd_pcm_hardware mtk_I2S0_awb_hardware =
 
 static void StopAudioI2S0AWBHardware(struct snd_pcm_substream *substream)
 {
-    printk("StopAudioI2S0AWBHardware \n");
-
     SetMemoryPathEnable(Soc_Aud_Digital_Block_I2S_IN_2, false);
     SetMemoryPathEnable(Soc_Aud_Digital_Block_MEM_AWB, false);
 
@@ -121,8 +119,6 @@ static void StartAudioI2S0AWBHardware(struct snd_pcm_substream *substream)
 
     const bool bEnablePhaseShiftFix = true;
 
-    printk("StartAudioI2S0AWBHardware \n");
-
 
     MclkDiv0 = SetCLkMclk(Soc_Aud_I2S0, runtime->rate); //select I2S
     SetCLkBclk(MclkDiv0,  runtime->rate, runtime->channels, Soc_Aud_I2S_WLEN_WLEN_32BITS);
@@ -156,14 +152,12 @@ static void StartAudioI2S0AWBHardware(struct snd_pcm_substream *substream)
 
 static int mtk_i2s0_awb_pcm_prepare(struct snd_pcm_substream *substream)
 {
-    printk("mtk_i2s0_awb_pcm_prepare substream->rate = %d  substream->channels = %d \n", substream->runtime->rate, substream->runtime->channels);
     return 0;
 }
 
 static int mtk_i2s0_awb_alsa_stop(struct snd_pcm_substream *substream)
 {
     //AFE_BLOCK_T *Awb_Block = &(I2S0_AWB_Control_context->rBlock);
-    printk("mtk_i2s0_awb_alsa_stop \n");
     StopAudioI2S0AWBHardware(substream);
     RemoveMemifSubStream(Soc_Aud_Digital_Block_MEM_AWB, substream);
     return 0;
@@ -176,7 +170,6 @@ static snd_pcm_uframes_t mtk_i2s0_awb_pcm_pointer(struct snd_pcm_substream *subs
     kal_int32 HW_Cur_ReadIdx = 0;
     kal_uint32 Frameidx =0;
     AFE_BLOCK_T *Awb_Block = &(I2S0_AWB_Control_context->rBlock);
-    PRINTK_AUD_AWB("mtk_i2s0_awb_pcm_pointer Awb_Block->u4WriteIdx;= 0x%x \n",Awb_Block->u4WriteIdx);
     if (GetMemoryPathEnable(Soc_Aud_Digital_Block_MEM_AWB) == true)
     {
         // get total bytes to copysinewavetohdmi
@@ -208,7 +201,6 @@ static void SetAWBBuffer(struct snd_pcm_substream *substream,
 {
     AFE_BLOCK_T *pblock = &I2S0_AWB_Control_context->rBlock;
     struct snd_pcm_runtime *runtime = substream->runtime;
-    printk("SetAWBBuffer\n");
     pblock->pucPhysBufAddr =  runtime->dma_addr;
     pblock->pucVirtBufAddr =  runtime->dma_area;
     pblock->u4BufferSize = runtime->dma_bytes;
@@ -218,8 +210,6 @@ static void SetAWBBuffer(struct snd_pcm_substream *substream,
     pblock->u4DataRemained  = 0;
     pblock->u4fsyncflag     = false;
     pblock->uResetFlag      = true;
-    printk("dma_bytes = %d dma_area = %p dma_addr = 0x%x\n",
-           pblock->u4BufferSize, pblock->pucVirtBufAddr, pblock->pucPhysBufAddr);
     // set sram address top hardware
     Afe_Set_Reg(AFE_AWB_BASE , pblock->pucPhysBufAddr , 0xffffffff);
     Afe_Set_Reg(AFE_AWB_END  , pblock->pucPhysBufAddr + (pblock->u4BufferSize - 1), 0xffffffff);
@@ -233,38 +223,25 @@ static int mtk_i2s0_awb_pcm_hw_params(struct snd_pcm_substream *substream,
     struct snd_dma_buffer *dma_buf = &substream->dma_buffer;
     int ret = 0;
 
-    printk("mtk_i2s0_awb_pcm_hw_params \n");
-
     dma_buf->dev.type = SNDRV_DMA_TYPE_DEV;
     dma_buf->dev.dev = substream->pcm->card->dev;
     dma_buf->private_data = NULL;
 
     if (Awb_Capture_dma_buf->area)
     {
-        printk("mtk_i2s0_awb_pcm_hw_params Awb_Capture_dma_buf->area\n");
         runtime->dma_bytes = params_buffer_bytes(hw_params);
         runtime->dma_area = Awb_Capture_dma_buf->area;
         runtime->dma_addr = Awb_Capture_dma_buf->addr;
     }
     else
     {
-        printk("mtk_i2s0_awb_pcm_hw_params snd_pcm_lib_malloc_pages\n");
         ret =  snd_pcm_lib_malloc_pages(substream, params_buffer_bytes(hw_params));
     }
-    printk("mtk_i2s0_awb_pcm_hw_params dma_bytes = %zu dma_area = %p dma_addr = 0x%lx\n",
-           runtime->dma_bytes, runtime->dma_area, (long)runtime->dma_addr);
-
-    printk("runtime->hw.buffer_bytes_max = %zu \n", runtime->hw.buffer_bytes_max);
-    SetAWBBuffer(substream, hw_params);
-
-    printk("dma_bytes = %zu dma_area = %p dma_addr = 0x%lx\n",
-           substream->runtime->dma_bytes, substream->runtime->dma_area, (long)substream->runtime->dma_addr);
     return ret;
 }
 
 static int mtk_i2s0_capture_pcm_hw_free(struct snd_pcm_substream *substream)
 {
-    printk("mtk_i2s0_capture_pcm_hw_free \n");
     if (Awb_Capture_dma_buf->area)
     {
         return 0;
@@ -285,7 +262,6 @@ static int mtk_i2s0_awb_pcm_open(struct snd_pcm_substream *substream)
 {
     struct snd_pcm_runtime *runtime = substream->runtime;
     int ret = 0;
-    printk("mtk_i2s0_awb_pcm_open\n");
     I2S0_AWB_Control_context = Get_Mem_ControlT(Soc_Aud_Digital_Block_MEM_AWB);
     runtime->hw = mtk_I2S0_awb_hardware;
     memcpy((void *)(&(runtime->hw)), (void *)&mtk_I2S0_awb_hardware , sizeof(struct snd_pcm_hardware));
@@ -303,14 +279,12 @@ static int mtk_i2s0_awb_pcm_open(struct snd_pcm_substream *substream)
     AudDrv_Clk_On();
 
     //print for hw pcm information
-    printk("mtk_i2s0_awb_pcm_open runtime rate = %d channels = %d \n", runtime->rate, runtime->channels);
     runtime->hw.info |= SNDRV_PCM_INFO_INTERLEAVED;
     runtime->hw.info |= SNDRV_PCM_INFO_NONINTERLEAVED;
     runtime->hw.info |= SNDRV_PCM_INFO_MMAP_VALID;
 
     if (substream->stream == SNDRV_PCM_STREAM_CAPTURE)
     {
-        printk("SNDRV_PCM_STREAM_CAPTURE \n");
     }
     else
     {
@@ -319,11 +293,9 @@ static int mtk_i2s0_awb_pcm_open(struct snd_pcm_substream *substream)
 
     if (ret < 0)
     {
-        printk("mtk_i2s0_awb_pcm_close\n");
         mtk_i2s0_awb_pcm_close(substream);
         return ret;
     }
-    printk("mtk_i2s0_awb_pcm_open return\n");
     return 0;
 }
 
@@ -335,7 +307,6 @@ static int mtk_i2s0_awb_pcm_close(struct snd_pcm_substream *substream)
 
 static int mtk_i2s0_awb_alsa_start(struct snd_pcm_substream *substream)
 {
-    printk("mtk_i2s0_awb_alsa_start \n");
     SetMemifSubStream(Soc_Aud_Digital_Block_MEM_AWB, substream);
     StartAudioI2S0AWBHardware(substream);
     return 0;
@@ -343,7 +314,6 @@ static int mtk_i2s0_awb_alsa_start(struct snd_pcm_substream *substream)
 
 static int mtk_i2s0_awb_pcm_trigger(struct snd_pcm_substream *substream, int cmd)
 {
-    printk("mtk_i2s0_awb_pcm_trigger cmd = %d\n", cmd);
 
     switch (cmd)
     {
@@ -361,7 +331,6 @@ static bool CheckNullPointer(void *pointer)
 {
     if (pointer == NULL)
     {
-        printk("CheckNullPointer pointer = NULL");
         return true;
     }
     return false;
@@ -384,7 +353,6 @@ static int mtk_i2s0_awb_pcm_copy(struct snd_pcm_substream *substream,
     count = audio_frame_to_bytes(substream , count);
     #endif
 
-    printk("%s  pos = %lu count = %lu\n ", __func__, pos, count);
 
     // check which memif nned to be write
     pAWB_MEM_ConTrol = I2S0_AWB_Control_context;
@@ -405,14 +373,12 @@ static int mtk_i2s0_awb_pcm_copy(struct snd_pcm_substream *substream,
 
     if (CheckNullPointer((void *)Awb_Block->pucVirtBufAddr))
     {
-        printk("CheckNullPointer  pucVirtBufAddr = %p\n", Awb_Block->pucVirtBufAddr);
         return 0;
     }
 
     spin_lock_irqsave(&auddrv_Dl1AWBInCtl_lock, flags);
     if (Awb_Block->u4DataRemained >  Awb_Block->u4BufferSize)
     {
-        printk("mtk_i2s0_awb_pcm_copy u4DataRemained=%x > u4BufferSize=%x" , Awb_Block->u4DataRemained, Awb_Block->u4BufferSize);
         Awb_Block->u4DataRemained = 0;
         Awb_Block->u4DMAReadIdx   = Awb_Block->u4WriteIdx;
     }
@@ -428,21 +394,15 @@ static int mtk_i2s0_awb_pcm_copy(struct snd_pcm_substream *substream,
     DMA_Read_Ptr = Awb_Block->u4DMAReadIdx;
     spin_unlock_irqrestore(&auddrv_Dl1AWBInCtl_lock, flags);
 
-    PRINTK_AUD_AWB("mtk_i2s0_awb_pcm_copy finish0, read_count:0x%x, read_size:0x%x, u4DataRemained:0x%x, u4DMAReadIdx:0x%x, u4WriteIdx:0x%x \r\n",
-           read_count, read_size, Awb_Block->u4DataRemained, Awb_Block->u4DMAReadIdx, Awb_Block->u4WriteIdx);
-
     if (DMA_Read_Ptr + read_size < Awb_Block->u4BufferSize)
     {
         if (DMA_Read_Ptr != Awb_Block->u4DMAReadIdx)
         {
-            printk("mtk_i2s0_awb_pcm_copy 1, read_size:%zu, DataRemained:0x%x, DMA_Read_Ptr:%zu, DMAReadIdx:0x%x \r\n",
-                   read_size, Awb_Block->u4DataRemained, DMA_Read_Ptr, Awb_Block->u4DMAReadIdx);
         }
 
         if (copy_to_user((void __user *)Read_Data_Ptr, (Awb_Block->pucVirtBufAddr + DMA_Read_Ptr), read_size))
         {
 
-            printk("mtk_i2s0_awb_pcm_copy Fail 1 copy to user Read_Data_Ptr:%p, pucVirtBufAddr:%p, u4DMAReadIdx:0x%x, DMA_Read_Ptr:%zu,read_size:%zu", Read_Data_Ptr, Awb_Block->pucVirtBufAddr, Awb_Block->u4DMAReadIdx, DMA_Read_Ptr, read_size);
             return 0;
         }
 
@@ -456,9 +416,6 @@ static int mtk_i2s0_awb_pcm_copy(struct snd_pcm_substream *substream,
 
         Read_Data_Ptr += read_size;
         count -= read_size;
-
-        PRINTK_AUD_AWB("mtk_i2s0_awb_pcm_copy finish1, copy size:0x%x, u4DMAReadIdx:0x%x, u4WriteIdx:0x%x, u4DataRemained:0x%x \r\n",
-               read_size, Awb_Block->u4DMAReadIdx, Awb_Block->u4WriteIdx, Awb_Block->u4DataRemained);
     }
 
     else
@@ -469,14 +426,10 @@ static int mtk_i2s0_awb_pcm_copy(struct snd_pcm_substream *substream,
         if (DMA_Read_Ptr != Awb_Block->u4DMAReadIdx)
         {
 
-            printk("mtk_i2s0_awb_pcm_copy 2, read_size1:0x%x, DataRemained:0x%x, DMA_Read_Ptr:%zu, DMAReadIdx:0x%x \r\n",
-                   size_1, Awb_Block->u4DataRemained, DMA_Read_Ptr, Awb_Block->u4DMAReadIdx);
         }
         if (copy_to_user((void __user *)Read_Data_Ptr, (Awb_Block->pucVirtBufAddr + DMA_Read_Ptr), size_1))
         {
 
-            printk("mtk_i2s0_awb_pcm_copy Fail 2 copy to user Read_Data_Ptr:%p, pucVirtBufAddr:%p, u4DMAReadIdx:0x%x, DMA_Read_Ptr:%zu,read_size:%zu",
-                   Read_Data_Ptr, Awb_Block->pucVirtBufAddr, Awb_Block->u4DMAReadIdx, DMA_Read_Ptr, read_size);
             return 0;
         }
 
@@ -488,19 +441,13 @@ static int mtk_i2s0_awb_pcm_copy(struct snd_pcm_substream *substream,
         DMA_Read_Ptr = Awb_Block->u4DMAReadIdx;
         spin_unlock(&auddrv_Dl1AWBInCtl_lock);
 
-        PRINTK_AUD_AWB("mtk_i2s0_awb_pcm_copy finish2, copy size_1:0x%x, u4DMAReadIdx:0x%x, u4WriteIdx:0x%x, u4DataRemained:0x%x \r\n",
-               size_1, Awb_Block->u4DMAReadIdx, Awb_Block->u4WriteIdx, Awb_Block->u4DataRemained);
-
         if (DMA_Read_Ptr != Awb_Block->u4DMAReadIdx)
         {
 
-            printk("mtk_i2s0_awb_pcm_copy 3, read_size2:%x, DataRemained:%x, DMA_Read_Ptr:%zu, DMAReadIdx:%x \r\n",
-                   size_2, Awb_Block->u4DataRemained, DMA_Read_Ptr, Awb_Block->u4DMAReadIdx);
         }
         if (copy_to_user((void __user *)(Read_Data_Ptr + size_1), (Awb_Block->pucVirtBufAddr + DMA_Read_Ptr), size_2))
         {
 
-            printk("mtk_i2s0_awb_pcm_copy Fail 3 copy to user Read_Data_Ptr:%p, pucVirtBufAddr:%p, u4DMAReadIdx:0x%x , DMA_Read_Ptr:%zu, read_size:%zu", Read_Data_Ptr, Awb_Block->pucVirtBufAddr, Awb_Block->u4DMAReadIdx, DMA_Read_Ptr, read_size);
             return read_count << 2;
         }
 
@@ -513,9 +460,6 @@ static int mtk_i2s0_awb_pcm_copy(struct snd_pcm_substream *substream,
 
         count -= read_size;
         Read_Data_Ptr += read_size;
-
-        PRINTK_AUD_AWB("mtk_i2s0_awb_pcm_copy finish3, copy size_2:0x%x, u4DMAReadIdx:0x%x, u4WriteIdx:0x%x u4DataRemained:0x%x \r\n",
-               size_2, Awb_Block->u4DMAReadIdx, Awb_Block->u4WriteIdx, Awb_Block->u4DataRemained);
     }
 
     return read_count >> 2;
@@ -525,7 +469,6 @@ static int mtk_capture_pcm_silence(struct snd_pcm_substream *substream,
                                    int channel, snd_pcm_uframes_t pos,
                                    snd_pcm_uframes_t count)
 {
-    printk("dummy_pcm_silence \n");
     return 0; /* do nothing */
 }
 
@@ -535,7 +478,6 @@ static void *dummy_page[2];
 static struct page *mtk_i2s0_capture_pcm_page(struct snd_pcm_substream *substream,
                                              unsigned long offset)
 {
-    printk("dummy_pcm_page \n");
     return virt_to_page(dummy_page[substream->stream]); /* the same page */
 }
 
@@ -564,8 +506,6 @@ static struct snd_soc_platform_driver mtk_soc_platform =
 
 static int mtk_i2s0_awb_probe(struct platform_device *pdev)
 {
-    printk("mtk_i2s0_awb_probe\n");
-
     pdev->dev.coherent_dma_mask = DMA_BIT_MASK(64);
     if (!pdev->dev.dma_mask)
     {
@@ -577,20 +517,17 @@ static int mtk_i2s0_awb_probe(struct platform_device *pdev)
         dev_set_name(&pdev->dev, "%s", MT_SOC_I2S0_AWB_PCM);
     }
 
-    printk("%s: dev name %s\n", __func__, dev_name(&pdev->dev));
     return snd_soc_register_platform(&pdev->dev,
                                      &mtk_soc_platform);
 }
 
 static int mtk_asoc_i2s0_awb_pcm_new(struct snd_soc_pcm_runtime *rtd)
 {
-    printk("mtk_asoc_i2s0_awb_pcm_new \n");
     return 0;
 }
 
 static int mtk_i2s0_dl1_awb_probe(struct snd_soc_platform *platform)
 {
-    printk("mtk_i2s0_dl1_awb_probe\n");
     AudDrv_Allocate_mem_Buffer(platform->dev, Soc_Aud_Digital_Block_MEM_AWB, AWB_MAX_BUFFER_SIZE);
     Awb_Capture_dma_buf =  Get_Mem_Buffer(Soc_Aud_Digital_Block_MEM_AWB);
     return 0;
@@ -598,7 +535,6 @@ static int mtk_i2s0_dl1_awb_probe(struct snd_soc_platform *platform)
 
 static int mtk_dl1_awb_remove(struct platform_device *pdev)
 {
-    pr_debug("%s\n", __func__);
     snd_soc_unregister_platform(&pdev->dev);
     return 0;
 }
@@ -631,7 +567,6 @@ static struct platform_device *soc_i2s0_awb_capture_dev;
 static int __init mtk_soc_i2s0_awb_platform_init(void)
 {
     int ret = 0;
-    printk("%s\n", __func__);
 	#ifndef CONFIG_OF
     soc_i2s0_awb_capture_dev = platform_device_alloc(MT_SOC_I2S0_AWB_PCM, -1);
     if (!soc_i2s0_awb_capture_dev)
@@ -652,7 +587,6 @@ static int __init mtk_soc_i2s0_awb_platform_init(void)
 
 static void __exit mtk_soc_i2s0_awb_platform_exit(void)
 {
-    printk("%s\n", __func__);
     platform_driver_unregister(&mtk_i2s0_awb_capture_driver);
 }
 
diff --git a/sound/soc/mediatek/mt_soc_audio_6580/mt_soc_pcm_mrgrx.c b/sound/soc/mediatek/mt_soc_audio_6580/mt_soc_pcm_mrgrx.c
index 0b7a9f688..544e9e601 100644
--- a/sound/soc/mediatek/mt_soc_audio_6580/mt_soc_pcm_mrgrx.c
+++ b/sound/soc/mediatek/mt_soc_audio_6580/mt_soc_pcm_mrgrx.c
@@ -81,7 +81,6 @@ static bool mPrepareDone = false;
 static int Audio_mrgrx_Volume_Get(struct snd_kcontrol *kcontrol,
                                   struct snd_ctl_elem_value *ucontrol)
 {
-    printk("Audio_AmpR_Get = %d\n", mmrgrx_Volume);
     ucontrol->value.integer.value[0] = mmrgrx_Volume;
     return 0;
 
@@ -90,7 +89,6 @@ static int Audio_mrgrx_Volume_Get(struct snd_kcontrol *kcontrol,
 static int Audio_mrgrx_Volume_Set(struct snd_kcontrol *kcontrol, struct snd_ctl_elem_value *ucontrol)
 {
     mmrgrx_Volume = ucontrol->value.integer.value[0];
-    printk("%s mmrgrx_Volume = 0x%x \n", __func__, mmrgrx_Volume);
     if (GetMemoryPathEnable(Soc_Aud_Digital_Block_MRG_I2S_OUT) == true)
     {
         SetHwDigitalGain(mmrgrx_Volume, Soc_Aud_Hw_Digital_Gain_HW_DIGITAL_GAIN1);
@@ -110,7 +108,6 @@ static int mAudio_Wcn_Cmb = CMB_STUB_AIF_3;
 static int Audio_Wcn_Cmb_Get(struct snd_kcontrol *kcontrol,
                              struct snd_ctl_elem_value *ucontrol)
 {
-    printk("Audio_Wcn_Cmb_Get = %d\n", mAudio_Wcn_Cmb);
     ucontrol->value.integer.value[0] = mAudio_Wcn_Cmb;
     return 0;
 }
@@ -118,7 +115,6 @@ static int Audio_Wcn_Cmb_Get(struct snd_kcontrol *kcontrol,
 static int Audio_Wcn_Cmb_Set(struct snd_kcontrol *kcontrol, struct snd_ctl_elem_value *ucontrol)
 {
     mAudio_Wcn_Cmb = ucontrol->value.integer.value[0];
-    printk("%s mAudio_Wcn_Cmb = 0x%x \n", __func__, mAudio_Wcn_Cmb);
     mtk_wcn_cmb_stub_audio_ctrl((CMB_STUB_AIF_X)mAudio_Wcn_Cmb);
     return 0;
 }
@@ -150,7 +146,6 @@ static struct snd_pcm_hardware mtk_mrgrx_hardware =
 
 static int mtk_pcm_mrgrx_stop(struct snd_pcm_substream *substream)
 {
-    printk("mtk_pcm_mrgrx_stop \n");
     return 0;
 }
 
@@ -165,13 +160,11 @@ static int mtk_pcm_mrgrx_hw_params(struct snd_pcm_substream *substream,
                                    struct snd_pcm_hw_params *hw_params)
 {
     int ret = 0;
-    printk("mtk_pcm_mrgrx_hw_params \n");
     return ret;
 }
 
 static int mtk_pcm_mrgrx_hw_free(struct snd_pcm_substream *substream)
 {
-    printk("mtk_pcm_mrgrx_hw_free \n");
     return snd_pcm_lib_free_pages(substream);
 }
 
@@ -188,7 +181,6 @@ static int mtk_pcm_mrgrx_open(struct snd_pcm_substream *substream)
     struct snd_pcm_runtime *runtime = substream->runtime;
     int ret = 0;
     AudDrv_Clk_On();
-    printk("mtk_pcm_mrgrx_open\n");
     runtime->hw = mtk_mrgrx_hardware;
     memcpy((void *)(&(runtime->hw)), (void *)&mtk_mrgrx_hardware , sizeof(struct snd_pcm_hardware));
 
@@ -199,34 +191,20 @@ static int mtk_pcm_mrgrx_open(struct snd_pcm_substream *substream)
     {
         printk("snd_pcm_hw_constraint_integer failed\n");
     }
-    printk("mtk_pcm_mrgrx_open runtime rate = %d channels = %d substream->pcm->device = %d\n",
-           runtime->rate, runtime->channels, substream->pcm->device);
-
-    if (substream->stream == SNDRV_PCM_STREAM_PLAYBACK)
-    {
-        printk("SNDRV_PCM_STREAM_PLAYBACK mtkalsa_mrgrx_playback_constraints\n");
-    }
-    else
-    {
-
-    }
 
     if (ret < 0)
     {
-        printk("mtk_pcm_mrgrx_close\n");
         mtk_pcm_mrgrx_close(substream);
         return ret;
     }
     SetFMEnableFlag(true);
     
-    printk("mtk_pcm_mrgrx_open return\n");
     return 0;
 }
 
 static int mtk_pcm_mrgrx_close(struct snd_pcm_substream *substream)
 {
     struct snd_pcm_runtime *runtime = substream->runtime;
-    printk("%s \n", __func__);
 
     mtk_wcn_cmb_stub_audio_ctrl((CMB_STUB_AIF_X)CMB_STUB_AIF_0);
 
@@ -262,7 +240,6 @@ static int mtk_pcm_mrgrx_close(struct snd_pcm_substream *substream)
 static int mtk_pcm_mrgrx_prepare(struct snd_pcm_substream *substream)
 {
     struct snd_pcm_runtime *runtime = substream->runtime;
-    printk("%s rate = %d\n", __func__, runtime->rate);
 
     if (mPrepareDone == false)
     {
@@ -311,14 +288,11 @@ static int mtk_pcm_mrgrx_prepare(struct snd_pcm_substream *substream)
 
 static int mtk_pcm_mrgrx_start(struct snd_pcm_substream *substream)
 {
-    printk("%s\n", __func__);
     return 0;
 }
 
 static int mtk_pcm_mrgrx_trigger(struct snd_pcm_substream *substream, int cmd)
 {
-    printk("mtk_pcm_mrgrx_trigger cmd = %d\n", cmd);
-
     switch (cmd)
     {
         case SNDRV_PCM_TRIGGER_START:
@@ -343,7 +317,6 @@ static int mtk_pcm_mrgrx_silence(struct snd_pcm_substream *substream,
                                  int channel, snd_pcm_uframes_t pos,
                                  snd_pcm_uframes_t count)
 {
-    printk("%s \n", __func__);
     return 0; /* do nothing */
 }
 
@@ -352,7 +325,6 @@ static void *dummy_page[2];
 static struct page *mtk_mrgrx_pcm_page(struct snd_pcm_substream *substream,
                                        unsigned long offset)
 {
-    printk("%s \n", __func__);
     return virt_to_page(dummy_page[substream->stream]); /* the same page */
 }
 
@@ -380,7 +352,6 @@ static struct snd_soc_platform_driver mtk_mrgrx_soc_platform =
 
 static int mtk_mrgrx_probe(struct platform_device *pdev)
 {
-    printk("%s \n", __func__);
 
     pdev->dev.coherent_dma_mask = DMA_BIT_MASK(64);
     if (!pdev->dev.dma_mask)
@@ -393,7 +364,6 @@ static int mtk_mrgrx_probe(struct platform_device *pdev)
         dev_set_name(&pdev->dev, "%s", MT_SOC_MRGRX_PCM);
     }
 
-    printk("%s: dev name %s\n", __func__, dev_name(&pdev->dev));
     return snd_soc_register_platform(&pdev->dev,
                                      &mtk_mrgrx_soc_platform);
 }
@@ -401,14 +371,12 @@ static int mtk_mrgrx_probe(struct platform_device *pdev)
 static int mtk_asoc_pcm_mrgrx_new(struct snd_soc_pcm_runtime *rtd)
 {
     int ret = 0;
-    printk("%s\n", __func__);
     return ret;
 }
 
 
 static int mtk_afe_mrgrx_probe(struct snd_soc_platform *platform)
 {
-    printk("mtk_afe_mrgrx_probe\n");
     snd_soc_add_platform_controls(platform, Audio_snd_mrgrx_controls,
                                   ARRAY_SIZE(Audio_snd_mrgrx_controls));
     return 0;
@@ -416,7 +384,6 @@ static int mtk_afe_mrgrx_probe(struct snd_soc_platform *platform)
 
 static int mtk_mrgrx_remove(struct platform_device *pdev)
 {
-    printk("%s \n", __func__);
     snd_soc_unregister_platform(&pdev->dev);
     return 0;
 }
@@ -449,7 +416,6 @@ static struct platform_device *soc_mtkmrgrx_dev;
 static int __init mtk_mrgrx_soc_platform_init(void)
 {
     int ret = 0;
-    printk("%s \n", __func__);
 	#ifndef CONFIG_OF
     soc_mtkmrgrx_dev = platform_device_alloc(MT_SOC_MRGRX_PCM, -1);
     if (!soc_mtkmrgrx_dev)
@@ -471,7 +437,6 @@ module_init(mtk_mrgrx_soc_platform_init);
 
 static void __exit mtk_mrgrx_soc_platform_exit(void)
 {
-    printk("%s \n", __func__);
 
     platform_driver_unregister(&mtk_mrgrx_driver);
 }
diff --git a/sound/soc/mediatek/mt_soc_audio_6580/mt_soc_pcm_mrgrx_awb.c b/sound/soc/mediatek/mt_soc_audio_6580/mt_soc_pcm_mrgrx_awb.c
index b16e2875d..6813dc877 100644
--- a/sound/soc/mediatek/mt_soc_audio_6580/mt_soc_pcm_mrgrx_awb.c
+++ b/sound/soc/mediatek/mt_soc_audio_6580/mt_soc_pcm_mrgrx_awb.c
@@ -97,8 +97,6 @@ static struct snd_pcm_hardware mtk_mgrrx_awb_hardware =
 
 static void StopAudioAWBHardware(struct snd_pcm_substream *substream)
 {
-    printk("StopAudioAWBHardware \n");
-
     SetMemoryPathEnable(Soc_Aud_Digital_Block_MEM_AWB, false);
 
     // here to set interrupt
@@ -118,8 +116,6 @@ static void StopAudioAWBHardware(struct snd_pcm_substream *substream)
 
 static void StartAudioMrgrxAWBHardware(struct snd_pcm_substream *substream)
 {
-    printk("StartAudioMrgrxAWBHardware \n");
-
     // here to set interrupt
     SetIrqMcuCounter(Soc_Aud_IRQ_MCU_MODE_IRQ2_MCU_MODE, substream->runtime->period_size >> 1);
     SetIrqMcuSampleRate(Soc_Aud_IRQ_MCU_MODE_IRQ2_MCU_MODE, substream->runtime->rate);
@@ -148,13 +144,11 @@ static void StartAudioMrgrxAWBHardware(struct snd_pcm_substream *substream)
 
 static int mtk_mrgrx_awb_pcm_prepare(struct snd_pcm_substream *substream)
 {
-    printk("mtk_mrgrx_awb_pcm_prepare substream->rate = %d  substream->channels = %d \n", substream->runtime->rate, substream->runtime->channels);
     return 0;
 }
 
 static int mtk_mrgrx_awb_alsa_stop(struct snd_pcm_substream *substream)
 {
-    printk("mtk_mrgrx_awb_alsa_stop \n");
     StopAudioAWBHardware(substream);
     RemoveMemifSubStream(Soc_Aud_Digital_Block_MEM_AWB, substream);
 
@@ -194,12 +188,10 @@ static snd_pcm_uframes_t mtk_awb_pcm_pointer(struct snd_pcm_substream *substream
         
         if (HW_Cur_ReadIdx == 0)
         {
-            printk("[Auddrv] mtk_awb_pcm_pointer  HW_Cur_ReadIdx ==0 \n");
             HW_Cur_ReadIdx = Awb_Block->pucPhysBufAddr;
         }
         HW_memory_index = (HW_Cur_ReadIdx - Awb_Block->pucPhysBufAddr);
         Previous_Hw_cur = HW_memory_index;
-        PRINTK_AUD_AWB("[Auddrv] mtk_awb_pcm_pointer =0x%x HW_memory_index = 0x%x\n", HW_Cur_ReadIdx, HW_memory_index);
         return audio_bytes_to_frame(substream, Previous_Hw_cur);
     }
     return 0;
@@ -211,7 +203,6 @@ static void SetAWBBuffer(struct snd_pcm_substream *substream,
 {
     AFE_BLOCK_T *pblock = &Mrgrx_AWB_Control_context->rBlock;
     struct snd_pcm_runtime *runtime = substream->runtime;
-    printk("SetAWBBuffer\n");
     pblock->pucPhysBufAddr =  runtime->dma_addr;
     pblock->pucVirtBufAddr =  runtime->dma_area;
     pblock->u4BufferSize = runtime->dma_bytes;
@@ -221,8 +212,6 @@ static void SetAWBBuffer(struct snd_pcm_substream *substream,
     pblock->u4DataRemained  = 0;
     pblock->u4fsyncflag     = false;
     pblock->uResetFlag      = true;
-    printk("dma_bytes = %d dma_area = %p dma_addr = 0x%x\n",
-           pblock->u4BufferSize, pblock->pucVirtBufAddr, pblock->pucPhysBufAddr);
     // set sram address top hardware
     Afe_Set_Reg(AFE_AWB_BASE , pblock->pucPhysBufAddr , 0xffffffff);
     Afe_Set_Reg(AFE_AWB_END  , pblock->pucPhysBufAddr + (pblock->u4BufferSize - 1), 0xffffffff);
@@ -236,38 +225,25 @@ static int mtk_mgrrx_awb_pcm_hw_params(struct snd_pcm_substream *substream,
     struct snd_dma_buffer *dma_buf = &substream->dma_buffer;
     int ret = 0;
 
-    printk("mtk_mgrrx_awb_pcm_hw_params \n");
-
     dma_buf->dev.type = SNDRV_DMA_TYPE_DEV;
     dma_buf->dev.dev = substream->pcm->card->dev;
     dma_buf->private_data = NULL;
 
     if (Awb_Capture_dma_buf->area)
     {
-        printk("mtk_mgrrx_awb_pcm_hw_params Awb_Capture_dma_buf->area\n");
         runtime->dma_bytes = params_buffer_bytes(hw_params);
         runtime->dma_area = Awb_Capture_dma_buf->area;
         runtime->dma_addr = Awb_Capture_dma_buf->addr;
     }
     else
     {
-        printk("mtk_mgrrx_awb_pcm_hw_params snd_pcm_lib_malloc_pages\n");
         ret =  snd_pcm_lib_malloc_pages(substream, params_buffer_bytes(hw_params));
     }
-    printk("mtk_mgrrx_awb_pcm_hw_params dma_bytes = %zu dma_area = %p dma_addr = 0x%lx\n",
-           runtime->dma_bytes, runtime->dma_area, (long)runtime->dma_addr);
-
-    printk("runtime->hw.buffer_bytes_max = %zu \n", runtime->hw.buffer_bytes_max);
-    SetAWBBuffer(substream, hw_params);
-
-    printk("dma_bytes = %zu dma_area = %p dma_addr = 0x%lx\n",
-           substream->runtime->dma_bytes, substream->runtime->dma_area, (long)substream->runtime->dma_addr);
     return ret;
 }
 
 static int mtk_mrgrx_capture_pcm_hw_free(struct snd_pcm_substream *substream)
 {
-    printk("mtk_mrgrx_capture_pcm_hw_free \n");
     if (Awb_Capture_dma_buf->area)
     {
         return 0;
@@ -288,7 +264,6 @@ static int mtk_mrgrx_awb_pcm_open(struct snd_pcm_substream *substream)
 {
     struct snd_pcm_runtime *runtime = substream->runtime;
     int ret = 0;
-    printk("mtk_mrgrx_awb_pcm_open\n");
     Mrgrx_AWB_Control_context = Get_Mem_ControlT(Soc_Aud_Digital_Block_MEM_AWB);
     runtime->hw = mtk_mgrrx_awb_hardware;
     memcpy((void *)(&(runtime->hw)), (void *)&mtk_mgrrx_awb_hardware , sizeof(struct snd_pcm_hardware));
@@ -302,11 +277,8 @@ static int mtk_mrgrx_awb_pcm_open(struct snd_pcm_substream *substream)
         printk("snd_pcm_hw_constraint_integer failed\n");
     }
 
-    printk("mtk_mrgrx_awb_pcm_open runtime rate = %d channels = %d \n", runtime->rate, runtime->channels);
-
     if (substream->stream == SNDRV_PCM_STREAM_CAPTURE)
     {
-        printk("SNDRV_PCM_STREAM_CAPTURE \n");
     }
     else
     {
@@ -318,11 +290,9 @@ static int mtk_mrgrx_awb_pcm_open(struct snd_pcm_substream *substream)
 
     if (ret < 0)
     {
-        printk("mtk_mrgrx_awb_pcm_close\n");
         mtk_mrgrx_awb_pcm_close(substream);
         return ret;
     }
-    printk("mtk_mrgrx_awb_pcm_open return\n");
     return 0;
 }
 
@@ -335,7 +305,6 @@ static int mtk_mrgrx_awb_pcm_close(struct snd_pcm_substream *substream)
 
 static int mtk_mrgrx_awb_alsa_start(struct snd_pcm_substream *substream)
 {
-    printk("mtk_mrgrx_awb_alsa_start \n");
     SetMemifSubStream(Soc_Aud_Digital_Block_MEM_AWB, substream);
     StartAudioMrgrxAWBHardware(substream);
     return 0;
@@ -343,8 +312,6 @@ static int mtk_mrgrx_awb_alsa_start(struct snd_pcm_substream *substream)
 
 static int mtk_capture_mrgrx_pcm_trigger(struct snd_pcm_substream *substream, int cmd)
 {
-    printk("mtk_capture_mrgrx_pcm_trigger cmd = %d\n", cmd);
-
     switch (cmd)
     {
         case SNDRV_PCM_TRIGGER_START:
@@ -361,7 +328,6 @@ static bool CheckNullPointer(void *pointer)
 {
     if (pointer == NULL)
     {
-        printk("CheckNullPointer pointer = NULL");
         return true;
     }
     return false;
@@ -385,7 +351,6 @@ static int mtk_mrgrx_awb_pcm_copy(struct snd_pcm_substream *substream,
     count = audio_frame_to_bytes(substream , count);
     #endif
 
-    PRINTK_AUD_AWB("%s  pos = %lu count = %lu\n ", __func__, pos, count);
 
     // check which memif nned to be write
     pAWB_MEM_ConTrol = Mrgrx_AWB_Control_context;
@@ -406,14 +371,12 @@ static int mtk_mrgrx_awb_pcm_copy(struct snd_pcm_substream *substream,
 
     if (CheckNullPointer((void *)Awb_Block->pucVirtBufAddr))
     {
-        printk("CheckNullPointer  pucVirtBufAddr = %p\n", Awb_Block->pucVirtBufAddr);
         return 0;
     }
 
     spin_lock_irqsave(&auddrv_AWBInCtl_lock, flags);
     if (Awb_Block->u4DataRemained >  Awb_Block->u4BufferSize)
     {
-        printk("AudDrv_MEMIF_Read u4DataRemained=%x > u4BufferSize=%x" , Awb_Block->u4DataRemained, Awb_Block->u4BufferSize);
         Awb_Block->u4DataRemained = 0;
         Awb_Block->u4DMAReadIdx   = Awb_Block->u4WriteIdx;
     }
@@ -427,26 +390,14 @@ static int mtk_mrgrx_awb_pcm_copy(struct snd_pcm_substream *substream,
     }
 
     DMA_Read_Ptr = Awb_Block->u4DMAReadIdx + Get_Mem_CopySizeByStream(Soc_Aud_Digital_Block_MEM_AWB,substream);
-    PRINTK_AUD_AWB("Awb_Block->u4DMAReadIdx= 0x%x Get_Mem_CopySizeByStream = 0x%x \r\n",
-                    Awb_Block->u4DMAReadIdx ,Get_Mem_CopySizeByStream(Soc_Aud_Digital_Block_MEM_AWB,substream));
     if(DMA_Read_Ptr >=  Awb_Block->u4BufferSize )
     {
-         printk("AudDrv_MEMIF_Read 1, DMA_Read_Ptr out of bound.\n");
          DMA_Read_Ptr %=Awb_Block->u4BufferSize;
     }
     spin_unlock_irqrestore(&auddrv_AWBInCtl_lock, flags);
 
-    PRINTK_AUD_AWB("AudDrv_MEMIF_Read finish0, read_count:0x%x, read_size:0x%x, u4DataRemained:0x%x, u4DMAReadIdx:0x%x, u4WriteIdx:0x%x \r\n",
-           read_count, read_size, Awb_Block->u4DataRemained, Awb_Block->u4DMAReadIdx, Awb_Block->u4WriteIdx);
-
     if (DMA_Read_Ptr + read_size <= Awb_Block->u4BufferSize)
     {
-        if (DMA_Read_Ptr != Awb_Block->u4DMAReadIdx)
-        {
-            printk("AudDrv_MEMIF_Read 1, read_size:%zu, DataRemained:0x%x, DMA_Read_Ptr:%zu, DMAReadIdx:0x%x \r\n",
-                   read_size, Awb_Block->u4DataRemained, DMA_Read_Ptr, Awb_Block->u4DMAReadIdx);
-        }
-
         if (copy_to_user((void __user *)Read_Data_Ptr, (Awb_Block->pucVirtBufAddr + DMA_Read_Ptr), read_size))
         {
             printk("AudDrv_MEMIF_Read Fail 1 copy to user Read_Data_Ptr:%p, pucVirtBufAddr:%p, u4DMAReadIdx:0x%x, DMA_Read_Ptr:%zu,read_size:%zu", Read_Data_Ptr, Awb_Block->pucVirtBufAddr, Awb_Block->u4DMAReadIdx, DMA_Read_Ptr, read_size);
@@ -459,9 +410,6 @@ static int mtk_mrgrx_awb_pcm_copy(struct snd_pcm_substream *substream,
         spin_unlock(&auddrv_AWBInCtl_lock);
         Read_Data_Ptr += read_size;
         count -= read_size;
-
-        PRINTK_AUD_AWB("AudDrv_MEMIF_Read finish1, copy size:0x%x, u4DMAReadIdx:0x%x, u4WriteIdx:0x%x, u4DataRemained:0x%x u4MaxCopySize:0x%x \n",
-                       read_size, Awb_Block->u4DMAReadIdx, Awb_Block->u4WriteIdx, Awb_Block->u4DataRemained,Get_Mem_CopySizeByStream(Soc_Aud_Digital_Block_MEM_AWB,substream));
     }
 
     else
@@ -470,12 +418,6 @@ static int mtk_mrgrx_awb_pcm_copy(struct snd_pcm_substream *substream,
         size_1 = Awb_Block->u4BufferSize - DMA_Read_Ptr;
         size_2 = read_size - size_1;
 
-        if (DMA_Read_Ptr != Awb_Block->u4DMAReadIdx)
-        {
-
-            printk("AudDrv_MEMIF_Read 2, read_size1:0x%x, DataRemained:0x%x, DMA_Read_Ptr:%zu, DMAReadIdx:0x%x \r\n",
-                   size_1, Awb_Block->u4DataRemained, DMA_Read_Ptr, Awb_Block->u4DMAReadIdx);
-        }
         if (copy_to_user((void __user *)Read_Data_Ptr, (Awb_Block->pucVirtBufAddr + DMA_Read_Ptr), size_1))
         {
 
@@ -490,21 +432,10 @@ static int mtk_mrgrx_awb_pcm_copy(struct snd_pcm_substream *substream,
         Set_Mem_CopySizeByStream(Soc_Aud_Digital_Block_MEM_AWB,substream,size_1);
         if(DMA_Read_Ptr >= Awb_Block->u4BufferSize )
         {
-            printk("AudDrv_MEMIF_Read 2, DMA_Read_Ptr out of bound.\n");
             DMA_Read_Ptr %= Awb_Block->u4BufferSize;
         }
         spin_unlock(&auddrv_AWBInCtl_lock);
 
-        PRINTK_AUD_AWB("AudDrv_MEMIF_Read finish2, copy size_1:0x%x, u4DMAReadIdx:0x%x, u4WriteIdx:0x%x, u4DataRemained:0x%x \r\n",
-               size_1, Awb_Block->u4DMAReadIdx, Awb_Block->u4WriteIdx, Awb_Block->u4DataRemained);
-
-        if (DMA_Read_Ptr != Awb_Block->u4DMAReadIdx)
-        {
-
-            PRINTK_AUD_AWB("AudDrv_AWB_Read 3, read_size2:%x, DataRemained:%x, DMA_Read_Ptr:0x%x, DMAReadIdx:%x \r\n",
-                   size_2, Awb_Block->u4DataRemained, DMA_Read_Ptr, Awb_Block->u4DMAReadIdx);
-        }
-
         if (copy_to_user((void __user *)(Read_Data_Ptr + size_1), (Awb_Block->pucVirtBufAddr + DMA_Read_Ptr), size_2))
         {
 
@@ -520,9 +451,6 @@ static int mtk_mrgrx_awb_pcm_copy(struct snd_pcm_substream *substream,
 
         count -= read_size;
         Read_Data_Ptr += read_size;
-
-        PRINTK_AUD_AWB("AudDrv_MEMIF_Read finish3, copy size_2:0x%x, u4DMAReadIdx:0x%x, u4WriteIdx:0x%x u4DataRemained:0x%x \r\n",
-               size_2, Awb_Block->u4DMAReadIdx, Awb_Block->u4WriteIdx, Awb_Block->u4DataRemained);
     }
 
     return read_count >> 2;
@@ -532,7 +460,6 @@ static int mtk_capture_pcm_silence(struct snd_pcm_substream *substream,
                                    int channel, snd_pcm_uframes_t pos,
                                    snd_pcm_uframes_t count)
 {
-    printk("dummy_pcm_silence \n");
     return 0; /* do nothing */
 }
 
@@ -542,7 +469,6 @@ static void *dummy_page[2];
 static struct page *mtk_mrgrx_capture_pcm_page(struct snd_pcm_substream *substream,
                                                unsigned long offset)
 {
-    printk("dummy_pcm_page \n");
     return virt_to_page(dummy_page[substream->stream]); /* the same page */
 }
 
@@ -571,8 +497,6 @@ static struct snd_soc_platform_driver mtk_soc_platform =
 
 static int mtk_mrgrx_awb_probe(struct platform_device *pdev)
 {
-    printk("mtk_mrgrx_awb_probe\n");
-
     pdev->dev.coherent_dma_mask = DMA_BIT_MASK(64);
     if (!pdev->dev.dma_mask)
     {
@@ -584,21 +508,18 @@ static int mtk_mrgrx_awb_probe(struct platform_device *pdev)
         dev_set_name(&pdev->dev, "%s", MT_SOC_MRGRX_AWB_PCM);
     }
 
-    printk("%s: dev name %s\n", __func__, dev_name(&pdev->dev));
     return snd_soc_register_platform(&pdev->dev,
                                      &mtk_soc_platform);
 }
 
 static int mtk_asoc_mrgrx_awb_pcm_new(struct snd_soc_pcm_runtime *rtd)
 {
-    printk("mtk_asoc_mrgrx_awb_pcm_new \n");
     return 0;
 }
 
 
 static int mtk_afe_mrgrx_awb_probe(struct snd_soc_platform *platform)
 {
-    printk("mtk_afe_mrgrx_awb_probe\n");
     AudDrv_Allocate_mem_Buffer(platform->dev, Soc_Aud_Digital_Block_MEM_AWB, MRGRX_MAX_BUFFER_SIZE);
     Awb_Capture_dma_buf =  Get_Mem_Buffer(Soc_Aud_Digital_Block_MEM_AWB);
     if (Mrgrx_Awb_Capture_dma_buf == NULL)
@@ -620,7 +541,6 @@ static int mtk_afe_mrgrx_awb_probe(struct snd_soc_platform *platform)
 
 static int mtk_mrgrx_awb_remove(struct platform_device *pdev)
 {
-    pr_debug("%s\n", __func__);
     snd_soc_unregister_platform(&pdev->dev);
     return 0;
 }
@@ -653,7 +573,6 @@ static struct platform_device *soc_mrgrx_capture_dev;
 static int __init mtk_soc_mrgrx_awb_platform_init(void)
 {
     int ret = 0;
-    printk("%s\n", __func__);
 	#ifndef CONFIG_OF
     soc_mrgrx_capture_dev = platform_device_alloc(MT_SOC_MRGRX_AWB_PCM, -1);
     if (!soc_mrgrx_capture_dev)
@@ -674,7 +593,6 @@ static int __init mtk_soc_mrgrx_awb_platform_init(void)
 
 static void __exit mtk_soc_mrgrx_awb_platform_exit(void)
 {
-    printk("%s\n", __func__);
     platform_driver_unregister(&mtk_mrgrx_awb_capture_driver);
 }
 
diff --git a/sound/soc/mediatek/mt_soc_audio_6580/mt_soc_pcm_routing.c b/sound/soc/mediatek/mt_soc_audio_6580/mt_soc_pcm_routing.c
index cc11ea3a3..8c46134c0 100755
--- a/sound/soc/mediatek/mt_soc_audio_6580/mt_soc_pcm_routing.c
+++ b/sound/soc/mediatek/mt_soc_audio_6580/mt_soc_pcm_routing.c
@@ -125,7 +125,6 @@ int Get_Audio_Mode(void)
 static int Audio_SideGen_Get(struct snd_kcontrol *kcontrol,
                              struct snd_ctl_elem_value *ucontrol)
 {
-    printk("Audio_AmpR_Get = %d\n", mDac_Sinegen);
     ucontrol->value.integer.value[0] = mDac_Sinegen;
     return 0;
 }
@@ -133,10 +132,8 @@ static int Audio_SideGen_Get(struct snd_kcontrol *kcontrol,
 static int Audio_SideGen_Set(struct snd_kcontrol *kcontrol, struct snd_ctl_elem_value *ucontrol)
 {
     int index = 0;
-    printk("%s()\n", __func__);
     if (ucontrol->value.enumerated.item[0] > ARRAY_SIZE(DAC_DL_SIDEGEN))
     {
-        printk("return -EINVAL\n");
         return -EINVAL;
     }
     index = ucontrol->value.integer.value[0];
@@ -245,7 +242,6 @@ static int Audio_SideGen_Set(struct snd_kcontrol *kcontrol, struct snd_ctl_elem_
 static int Audio_SideGen_SampleRate_Get(struct snd_kcontrol *kcontrol,
                                         struct snd_ctl_elem_value *ucontrol)
 {
-    printk("%s\n", __func__);
     ucontrol->value.integer.value[0] = mDac_SampleRate;
     return 0;
 }
@@ -253,11 +249,9 @@ static int Audio_SideGen_SampleRate_Get(struct snd_kcontrol *kcontrol,
 static int Audio_SideGen_SampleRate_Set(struct snd_kcontrol *kcontrol, struct snd_ctl_elem_value *ucontrol)
 {
     int index = 0;
-    printk("%s()\n", __func__);
 
     if (ucontrol->value.enumerated.item[0] > ARRAY_SIZE(DAC_DL_SIDEGEN_SAMEPLRATE))
     {
-        printk("return -EINVAL\n");
         return -EINVAL;
     }
     index = ucontrol->value.integer.value[0];
@@ -304,18 +298,15 @@ static int Audio_SideGen_SampleRate_Set(struct snd_kcontrol *kcontrol, struct sn
 static int Audio_SideGen_Amplitude_Get(struct snd_kcontrol *kcontrol,
                                        struct snd_ctl_elem_value *ucontrol)
 {
-    printk("Audio_AmpR_Get = %d\n", mDac_Sidegen_Amplitude);
     return 0;
 }
 
 static int Audio_SideGen_Amplitude_Set(struct snd_kcontrol *kcontrol, struct snd_ctl_elem_value *ucontrol)
 {
     int index = 0;
-    printk("%s()\n", __func__);
 
     if (ucontrol->value.enumerated.item[0] > ARRAY_SIZE(DAC_DL_SIDEGEN_AMPLITUE))
     {
-        printk("return -EINVAL\n");
         return -EINVAL;
     }
     index = ucontrol->value.integer.value[0];
@@ -326,7 +317,6 @@ static int Audio_SideGen_Amplitude_Set(struct snd_kcontrol *kcontrol, struct snd
 static int Audio_SideTone_Get(struct snd_kcontrol *kcontrol,
                               struct snd_ctl_elem_value *ucontrol)
 {
-    printk("Audio_SideTone_Get = %d\n", mEnableSidetone);
     ucontrol->value.integer.value[0] = mEnableSidetone;
     return 0;
 }
@@ -334,11 +324,9 @@ static int Audio_SideTone_Get(struct snd_kcontrol *kcontrol,
 static int Audio_SideTone_Set(struct snd_kcontrol *kcontrol, struct snd_ctl_elem_value *ucontrol)
 {
     int index = 0;
-    printk("%s()\n", __func__);
 
     if (ucontrol->value.enumerated.item[0] > ARRAY_SIZE(ENABLESIDETONE))
     {
-        printk("return -EINVAL\n");
         return -EINVAL;
     }
     index = ucontrol->value.integer.value[0];
@@ -353,7 +341,6 @@ static int Audio_SideTone_Set(struct snd_kcontrol *kcontrol, struct snd_ctl_elem
 static int Audio_ModemPcm_ASRC_Get(struct snd_kcontrol *kcontrol,
                                    struct snd_ctl_elem_value *ucontrol)
 {
-    printk("%s(), mModemPcm_ASRC_on=%d\n", __func__, mModemPcm_ASRC_on);
     ucontrol->value.integer.value[0] = mModemPcm_ASRC_on;
     return 0;
 }
@@ -361,19 +348,14 @@ static int Audio_ModemPcm_ASRC_Get(struct snd_kcontrol *kcontrol,
 
 static int AudioDebug_Setting_Set(struct snd_kcontrol *kcontrol, struct snd_ctl_elem_value *ucontrol)
 {
-    printk("%s()\n", __func__);
     if (ucontrol->value.enumerated.item[0] > ARRAY_SIZE(Audio_Debug_Setting))
     {
-        printk("return -EINVAL\n");
         return -EINVAL;
     }
     EnableSideGenHw(Soc_Aud_InterConnectionOutput_O03, Soc_Aud_MemIF_Direction_DIRECTION_OUTPUT, true);
     msleep(5 * 1000);
     EnableSideGenHw(Soc_Aud_InterConnectionOutput_O03, Soc_Aud_MemIF_Direction_DIRECTION_OUTPUT, false);
 
-    Ana_Log_Print();
-    Afe_Log_Print();
-
     return 0;
 }
 
@@ -391,28 +373,24 @@ void Auddrv_I2S1GpioSet(void)
     ret = GetGPIO_Info(6, &pin_i2s1clk, &pin_mode_i2s1clk);
     if (ret < 0)
     {
-        printk("Auddrv_I2S1GpioSet GetGPIO_Info FAIL1!!! \n");
         return;
     }
 
     ret = GetGPIO_Info(7, &pin_i2s1dat, &pin_mode_i2s1dat);
     if (ret < 0)
     {
-        printk("Auddrv_I2S1GpioSet GetGPIO_Info FAIL2!!! \n");
         return;
     }
 
     ret = GetGPIO_Info(8, &pin_i2s1mclk, &pin_mode_i2s1mclk);
     if (ret < 0)
     {
-        printk("Auddrv_I2S1GpioSet GetGPIO_Info FAIL3!!! \n");
         return;
     }
 
     ret = GetGPIO_Info(9, &pin_i2s1ws, &pin_mode_i2s1ws);
     if (ret < 0)
     {
-        printk("Auddrv_I2S1GpioSet GetGPIO_Info FAIL4!!! \n");
         return;
     }
 
@@ -455,28 +433,24 @@ void Auddrv_I2S1GpioReset(void)
     ret = GetGPIO_Info(6, &pin_i2s1clk, &pin_mode_i2s1clk);
     if (ret < 0)
     {
-        printk("Auddrv_I2S1GpioReset GetGPIO_Info FAIL1!!! \n");
         return;
     }
 
     ret = GetGPIO_Info(7, &pin_i2s1dat, &pin_mode_i2s1dat);
     if (ret < 0)
     {
-        printk("Auddrv_I2S1GpioReset GetGPIO_Info FAIL2!!! \n");
         return;
     }
 
     ret = GetGPIO_Info(8, &pin_i2s1mclk, &pin_mode_i2s1mclk);
     if (ret < 0)
     {
-        printk("Auddrv_I2S1GpioReset GetGPIO_Info FAIL3!!! \n");
         return;
     }
 
     ret = GetGPIO_Info(9, &pin_i2s1ws, &pin_mode_i2s1ws);
     if (ret < 0)
     {
-        printk("Auddrv_I2S1GpioReset GetGPIO_Info FAIL4!!! \n");
         return;
     }
 
@@ -498,16 +472,13 @@ void Auddrv_I2S1GpioReset(void)
 static int AudioDebug_Setting_Get(struct snd_kcontrol *kcontrol,
                                   struct snd_ctl_elem_value *ucontrol)
 {
-    printk("%s()\n", __func__);
     return 0;
 }
 
 static int AudioI2S1_Setting_Set(struct snd_kcontrol *kcontrol, struct snd_ctl_elem_value *ucontrol)
 {
-    printk("%s()\n", __func__);
     if (ucontrol->value.enumerated.item[0] > ARRAY_SIZE(Audio_I2S1_Setting))
     {
-        printk("return -EINVAL\n");
         return -EINVAL;
     }
     AudioI2S1Setting = ucontrol->value.enumerated.item[0];
@@ -525,7 +496,6 @@ static int AudioI2S1_Setting_Set(struct snd_kcontrol *kcontrol, struct snd_ctl_e
 static int AudioI2S1_Setting_Get(struct snd_kcontrol *kcontrol,
                                  struct snd_ctl_elem_value *ucontrol)
 {
-    printk("%s()\n", __func__);
     ucontrol->value.enumerated.item[0] = AudioI2S1Setting;
     return 0;
 }
@@ -533,15 +503,12 @@ static int AudioI2S1_Setting_Get(struct snd_kcontrol *kcontrol,
 #if 0
 static int Audio_ModemPcm_ASRC_Set(struct snd_kcontrol *kcontrol, struct snd_ctl_elem_value *ucontrol)
 {
-    printk("+%s()\n", __func__);
     if (ucontrol->value.enumerated.item[0] > ARRAY_SIZE(InterModemPcm_ASRC_Switch))
     {
-        printk("return -EINVAL\n");
         return -EINVAL;
     }
     mModemPcm_ASRC_on = (bool)ucontrol->value.integer.value[0];
     Audio_ModemPcm2_ASRC_Set(mModemPcm_ASRC_on);
-    printk("-%s(), mModemPcm_ASRC_on=%d\n", __func__, mModemPcm_ASRC_on);
     return 0;
 }
 #endif
@@ -549,17 +516,14 @@ static int Audio_ModemPcm_ASRC_Set(struct snd_kcontrol *kcontrol, struct snd_ctl
 static int Audio_Ipoh_Setting_Get(struct snd_kcontrol *kcontrol,
                                   struct snd_ctl_elem_value *ucontrol)
 {
-    printk("%s()\n", __func__);
     ucontrol->value.integer.value[0] = AudDrvSuspend_ipoh_Status;
     return 0;
 }
 
 static int Audio_Ipoh_Setting_Set(struct snd_kcontrol *kcontrol, struct snd_ctl_elem_value *ucontrol)
 {
-    printk("+%s()\n", __func__);
     if (ucontrol->value.enumerated.item[0] > ARRAY_SIZE(Audio_IPOH_State))
     {
-        printk("return -EINVAL\n");
         return -EINVAL;
     }
     AudDrvSuspend_ipoh_Status = ucontrol->value.integer.value[0];
@@ -569,18 +533,15 @@ static int Audio_Ipoh_Setting_Set(struct snd_kcontrol *kcontrol, struct snd_ctl_
 static int Audio_Mode_Get(struct snd_kcontrol *kcontrol,
                           struct snd_ctl_elem_value *ucontrol)
 {
-    printk("Audio_SideTone_Get = %d\n", mAudio_Mode);
     ucontrol->value.integer.value[0] = mAudio_Mode;
     return 0;
 }
 
 static int Audio_Mode_Set(struct snd_kcontrol *kcontrol, struct snd_ctl_elem_value *ucontrol)
 {
-    printk("%s()\n", __func__);
 
     if (ucontrol->value.enumerated.item[0] > ARRAY_SIZE(ANDROID_AUDIO_MODE))
     {
-        printk("return -EINVAL\n");
         return -EINVAL;
     }
     mAudio_Mode = ucontrol->value.integer.value[0];
@@ -590,7 +551,6 @@ static int Audio_Mode_Set(struct snd_kcontrol *kcontrol, struct snd_ctl_elem_val
 static int Audio_Irqcnt1_Get(struct snd_kcontrol *kcontrol,
                              struct snd_ctl_elem_value *ucontrol)
 {
-    printk("Audio_Irqcnt1_Get \n");
     AudDrv_Clk_On();
     ucontrol->value.integer.value[0] =   Afe_Get_Reg(AFE_IRQ_MCU_CNT1);
     AudDrv_Clk_Off();
@@ -600,7 +560,6 @@ static int Audio_Irqcnt1_Get(struct snd_kcontrol *kcontrol,
 static int Audio_Irqcnt1_Set(struct snd_kcontrol *kcontrol, struct snd_ctl_elem_value *ucontrol)
 {
     uint32 irq1_cnt =  ucontrol->value.integer.value[0];
-    printk("%s()\n", __func__);
     AudDrv_Clk_On();
     Afe_Set_Reg(AFE_IRQ_MCU_CNT1, irq1_cnt, 0xffffffff);
     AudDrv_Clk_Off();
@@ -610,7 +569,6 @@ static int Audio_Irqcnt1_Set(struct snd_kcontrol *kcontrol, struct snd_ctl_elem_
 static int Audio_Irqcnt2_Get(struct snd_kcontrol *kcontrol,
                              struct snd_ctl_elem_value *ucontrol)
 {
-    printk("Audio_Irqcnt2_Get \n");
     AudDrv_Clk_On();
     ucontrol->value.integer.value[0] =   Afe_Get_Reg(AFE_IRQ_MCU_CNT2);
     AudDrv_Clk_Off();
@@ -620,7 +578,6 @@ static int Audio_Irqcnt2_Get(struct snd_kcontrol *kcontrol,
 static int Audio_Irqcnt2_Set(struct snd_kcontrol *kcontrol, struct snd_ctl_elem_value *ucontrol)
 {
     uint32 irq1_cnt =  ucontrol->value.integer.value[0];
-    printk("%s()\n", __func__);
     AudDrv_Clk_On();
     Afe_Set_Reg(AFE_IRQ_MCU_CNT2, irq1_cnt, 0xffffffff);
     AudDrv_Clk_Off();
@@ -635,7 +592,6 @@ static void GetAudioTrimOffset(int channels)
     int count = 0, countlimit = 5;
     int val_hpr_on_sum = 0, val_hpl_on_sum = 0;
     const int off_counter = 20, on_counter  = 20 , Const_DC_OFFSET = 0;//2048;
-    printk("%s channels = %d\n", __func__, channels);
     // open headphone and digital part
     AudDrv_Clk_On();
     AudDrv_Emi_Clk_On();
@@ -645,10 +601,8 @@ static void GetAudioTrimOffset(int channels)
     setHpDcCalibration(AUDIO_ANALOG_DEVICE_OUT_HEADSETL, 0);
     //get DC value when off
     Buffer_offl_value = PMIC_IMM_GetOneChannelValue(AUXADC_HP_L_CHANNEL, off_counter, 0);
-    printk("%s, Buffer_offl_value = %d \n",__func__, Buffer_offl_value);
 
     Buffer_offr_value = PMIC_IMM_GetOneChannelValue(AUXADC_HP_R_CHANNEL, off_counter, 0);
-    printk("%s, Buffer_offr_value = %d \n",__func__, Buffer_offr_value);
 
     OpenAnalogHeadphone(true);
     setHpDcCalibrationGain(AUDIO_ANALOG_DEVICE_OUT_HEADSETR,10);    // -1dB, (9-(-1) = 10)
@@ -658,15 +612,12 @@ static void GetAudioTrimOffset(int channels)
 	for (count=0; count<countlimit; count++) {
 		Buffer_on_value = PMIC_IMM_GetOneChannelValue(AUXADC_HP_L_CHANNEL, on_counter, 0);
 		val_hpl_on_sum += Buffer_on_value;
-		printk("%s, Buffer_on_value = %d, Buffer_offl_value = %d, val_hpl_on_sum = %d\n", __func__,Buffer_on_value, Buffer_offl_value, val_hpl_on_sum);
 
 		Buffer_on_value = PMIC_IMM_GetOneChannelValue(AUXADC_HP_R_CHANNEL, on_counter, 0);
 		val_hpr_on_sum += Buffer_on_value;
-		printk("%s, Buffer_on_value = %d, Buffer_offr_value = %d, val_hpr_on_sum = %d\n", __func__,Buffer_on_value, Buffer_offr_value, val_hpr_on_sum);
 	}
 	mHplOffset = (val_hpl_on_sum / countlimit) - Buffer_offl_value + Const_DC_OFFSET;
 	mHprOffset = (val_hpr_on_sum / countlimit) - Buffer_offr_value + Const_DC_OFFSET;
-	printk("%s, mHplOffset = %d, mHprOffset=%d \n",__func__, mHplOffset, mHprOffset);
 
     OpenAnalogHeadphone(false);
     
@@ -681,7 +632,6 @@ static int Audio_Hpl_Offset_Get(struct snd_kcontrol *kcontrol,
                                 struct snd_ctl_elem_value *ucontrol)
 {
 #ifndef EFUSE_HP_TRIM
-    printk("%s \n", __func__);
     AudDrv_Clk_On();
     if (mHplCalibrated == false)
     {
@@ -694,7 +644,6 @@ static int Audio_Hpl_Offset_Get(struct snd_kcontrol *kcontrol,
     ucontrol->value.integer.value[0] =   mHplOffset;
     AudDrv_Clk_Off();
 #else
-    printk("%s EFUSE_HP_TRIM\n", __func__);
     ucontrol->value.integer.value[0] = 2048;
 #endif
     return 0;
@@ -703,7 +652,6 @@ static int Audio_Hpl_Offset_Get(struct snd_kcontrol *kcontrol,
 static int Audio_Hpl_Offset_Set(struct snd_kcontrol *kcontrol, struct snd_ctl_elem_value *ucontrol)
 {
 #ifndef EFUSE_HP_TRIM
-    printk("%s()\n", __func__);
     mHplOffset = ucontrol->value.integer.value[0];
     SetHplTrimOffset(mHplOffset);
 #else
@@ -716,7 +664,6 @@ static int Audio_Hpr_Offset_Get(struct snd_kcontrol *kcontrol,
                                 struct snd_ctl_elem_value *ucontrol)
 {
 #ifndef EFUSE_HP_TRIM
-    printk("%s \n", __func__);
     AudDrv_Clk_On();
     if (mHprCalibrated == false)
     {
@@ -737,7 +684,6 @@ static int Audio_Hpr_Offset_Get(struct snd_kcontrol *kcontrol,
 static int Audio_Hpr_Offset_Set(struct snd_kcontrol *kcontrol, struct snd_ctl_elem_value *ucontrol)
 {
 #ifndef EFUSE_HP_TRIM
-    printk("%s()\n", __func__);
     mHprOffset = ucontrol->value.integer.value[0];
     SetHprTrimOffset(mHprOffset);
 #else
@@ -779,7 +725,6 @@ static const struct snd_kcontrol_new Audio_snd_routing_controls[] =
 
 void EnAble_Anc_Path(int state)
 {
-    printk("%s not supported!!!\n ", __func__);
 
 }
 
@@ -787,14 +732,12 @@ static int m_Anc_State = AUDIO_ANC_ON;
 static int Afe_Anc_Get(struct snd_kcontrol *kcontrol,
                        struct snd_ctl_elem_value *ucontrol)
 {
-    printk("%s()\n", __func__);
     ucontrol->value.integer.value[0] = m_Anc_State;
     return 0;
 }
 
 static int Afe_Anc_Set(struct snd_kcontrol *kcontrol, struct snd_ctl_elem_value *ucontrol)
 {
-    printk("%s()\n", __func__);
     EnAble_Anc_Path(ucontrol->value.integer.value[0]);
     m_Anc_State = ucontrol->value.integer.value[0];
     return 0;
@@ -827,17 +770,14 @@ static int mtk_routing_pcm_open(struct snd_pcm_substream *substream)
     struct snd_pcm_runtime *runtime = substream->runtime;
     int err = 0;
     int ret = 0;
-    printk("mtk_routing_pcm_open\n");
 
     ret = snd_pcm_hw_constraint_list(runtime, 0, SNDRV_PCM_HW_PARAM_RATE,
                                      &constraints_sample_rates);
     if (ret < 0)
     {
-        printk("snd_pcm_hw_constraint_integer failed\n");
     }
 
     //print for hw pcm information
-    printk("mtk_routing_pcm_open runtime rate = %d channels = %d \n", runtime->rate, runtime->channels);
     if (substream->pcm->device & 1)
     {
         runtime->hw.info &= ~SNDRV_PCM_INFO_INTERLEAVED;
@@ -849,7 +789,6 @@ static int mtk_routing_pcm_open(struct snd_pcm_substream *substream)
 
     if (substream->stream == SNDRV_PCM_STREAM_PLAYBACK)
     {
-        printk("SNDRV_PCM_STREAM_PLAYBACK mtkalsa_playback_constraints\n");
     }
     else
     {
@@ -858,11 +797,9 @@ static int mtk_routing_pcm_open(struct snd_pcm_substream *substream)
 
     if (err < 0)
     {
-        printk("mtk_routing_pcm_close\n");
         mtk_routing_pcm_close(substream);
         return err;
     }
-    printk("mtk_routing_pcm_open return\n");
     return 0;
 }
 
@@ -872,7 +809,6 @@ static int mtk_routing_pcm_close(struct snd_pcm_substream *substream)
 }
 static int mtk_routing_pcm_trigger(struct snd_pcm_substream *substream, int cmd)
 {
-    printk("%s cmd = %d\n", __func__, cmd);
     switch (cmd)
     {
         case SNDRV_PCM_TRIGGER_START:
@@ -896,7 +832,6 @@ static int mtk_routing_pcm_silence(struct snd_pcm_substream *substream,
                                    int channel, snd_pcm_uframes_t pos,
                                    snd_pcm_uframes_t count)
 {
-    printk("mtk_routing_pcm_silence \n");
     return 0; /* do nothing */
 }
 
@@ -906,13 +841,11 @@ static void *dummy_page[2];
 static struct page *mtk_routing_pcm_page(struct snd_pcm_substream *substream,
                                          unsigned long offset)
 {
-    printk("dummy_pcm_page \n");
     return virt_to_page(dummy_page[substream->stream]); /* the same page */
 }
 
 static int mtk_routing_pcm_prepare(struct snd_pcm_substream *substream)
 {
-    printk("mtk_alsa_prepare \n");
     return 0;
 }
 
@@ -920,13 +853,11 @@ static int mtk_routing_pcm_hw_params(struct snd_pcm_substream *substream,
                                      struct snd_pcm_hw_params *hw_params)
 {
     int ret = 0;
-    PRINTK_AUDDRV("mtk_routing_pcm_hw_params \n");
     return ret;
 }
 
 static int mtk_routing_pcm_hw_free(struct snd_pcm_substream *substream)
 {
-    PRINTK_AUDDRV("mtk_routing_pcm_hw_free \n");
     return snd_pcm_lib_free_pages(substream);
 }
 
@@ -953,7 +884,6 @@ static struct snd_soc_platform_driver mtk_soc_routing_platform =
 
 static int mtk_afe_routing_probe(struct platform_device *pdev)
 {
-    printk("mtk_afe_routing_probe\n");
 
     pdev->dev.coherent_dma_mask = DMA_BIT_MASK(64);
     if (!pdev->dev.dma_mask)
@@ -966,7 +896,6 @@ static int mtk_afe_routing_probe(struct platform_device *pdev)
         dev_set_name(&pdev->dev, "%s", MT_SOC_ROUTING_PCM);
     }
 
-    printk("%s: dev name %s\n", __func__, dev_name(&pdev->dev));
     return snd_soc_register_platform(&pdev->dev,
                                      &mtk_soc_routing_platform);
 }
@@ -975,13 +904,11 @@ static int mtk_asoc_routing_pcm_new(struct snd_soc_pcm_runtime *rtd)
 {
     int ret = 0;
     pruntimepcm  = rtd;
-    printk("%s\n", __func__);
     return ret;
 }
 
 static int mtk_afe_routing_platform_probe(struct snd_soc_platform *platform)
 {
-    printk("mtk_afe_routing_platform_probe\n");
 
     //add  controls
     snd_soc_add_platform_controls(platform, Audio_snd_routing_controls,
@@ -994,7 +921,6 @@ static int mtk_afe_routing_platform_probe(struct snd_soc_platform *platform)
 
 static int mtk_afe_routing_remove(struct platform_device *pdev)
 {
-    pr_debug("%s\n", __func__);
     snd_soc_unregister_platform(&pdev->dev);
     return 0;
 }
@@ -1002,7 +928,6 @@ static int mtk_afe_routing_remove(struct platform_device *pdev)
 //supend and resume function
 static int mtk_routing_pm_ops_suspend(struct device *device)
 {
-    printk("%s \n", __func__);
     if (get_voice_status() == true)
     {
         return 0;
@@ -1025,14 +950,12 @@ static int mtk_routing_pm_ops_suspend(struct device *device)
 
 static int mtk_pm_ops_suspend_ipo(struct device *device)
 {
-    printk("%s", __func__);
     AudDrvSuspend_ipoh_Status = true;
     return mtk_routing_pm_ops_suspend(device);
 }
 
 static int mtk_routing_pm_ops_resume(struct device *device)
 {
-    printk("%s \n ", __func__);
     if (AudDrvSuspendStatus == true)
     {
         AudDrv_Suspend_Clk_On();
@@ -1048,7 +971,6 @@ static int mtk_routing_pm_ops_resume(struct device *device)
 
 static int mtk_pm_ops_resume_ipo(struct device *device)
 {
-    printk("%s", __func__);
     return mtk_routing_pm_ops_resume(device);
 }
 
@@ -1094,7 +1016,6 @@ static struct platform_device *soc_mtkafe_routing_dev;
 static int __init mtk_soc_routing_platform_init(void)
 {
     int ret = 0;
-    printk("%s\n", __func__);
 #ifndef CONFIG_OF
     soc_mtkafe_routing_dev = platform_device_alloc(MT_SOC_ROUTING_PCM , -1);
     if (!soc_mtkafe_routing_dev)
@@ -1120,7 +1041,6 @@ module_init(mtk_soc_routing_platform_init);
 static void __exit mtk_soc_routing_platform_exit(void)
 {
 
-    printk("%s\n", __func__);
     platform_driver_unregister(&mtk_afe_routing_driver);
 }
 module_exit(mtk_soc_routing_platform_exit);
diff --git a/sound/soc/mediatek/mt_soc_audio_6580/mt_soc_pcm_uldlloopback.c b/sound/soc/mediatek/mt_soc_audio_6580/mt_soc_pcm_uldlloopback.c
index 4441c1f56..a55712a6c 100644
--- a/sound/soc/mediatek/mt_soc_audio_6580/mt_soc_pcm_uldlloopback.c
+++ b/sound/soc/mediatek/mt_soc_audio_6580/mt_soc_pcm_uldlloopback.c
@@ -101,12 +101,10 @@ static int mtk_uldlloopback_open(struct snd_pcm_substream *substream)
     int err = 0;
     int ret = 0;
 
-    printk("%s \n", __func__);
     AudDrv_Clk_On();
     AudDrv_ADC_Clk_On();	
     if (substream->stream == SNDRV_PCM_STREAM_CAPTURE)
     {
-        printk("%s  with mtk_uldlloopback_open \n",__func__);
         runtime->rate = 16000;
         return 0;
     }
@@ -149,10 +147,8 @@ static int mtk_uldlloopback_open(struct snd_pcm_substream *substream)
 
 static int mtk_uldlloopbackpcm_close(struct snd_pcm_substream *substream)
 {
-    printk("%s \n", __func__);
     if (substream->stream == SNDRV_PCM_STREAM_CAPTURE)
     {
-        printk("%s  with SNDRV_PCM_STREAM_CAPTURE \n",__func__);
         return 0;
     }
 
@@ -177,8 +173,6 @@ static int mtk_uldlloopbackpcm_close(struct snd_pcm_substream *substream)
 
 static int mtk_uldlloopbackpcm_trigger(struct snd_pcm_substream *substream, int cmd)
 {
-    printk("%s cmd = %d \n", __func__, cmd);
-
     switch (cmd)
     {
         case SNDRV_PCM_TRIGGER_START:
@@ -202,7 +196,6 @@ static int mtk_uldlloopback_silence(struct snd_pcm_substream *substream,
                                     int channel, snd_pcm_uframes_t pos,
                                     snd_pcm_uframes_t count)
 {
-    printk("dummy_pcm_silence \n");
     return 0; /* do nothing */
 }
 
@@ -212,7 +205,6 @@ static void *dummy_page[2];
 static struct page *mtk_uldlloopback_page(struct snd_pcm_substream *substream,
                                           unsigned long offset)
 {
-    printk("dummy_pcm_page \n");
     return virt_to_page(dummy_page[substream->stream]); /* the same page */
 }
 
@@ -229,11 +221,9 @@ static int mtk_uldlloopback_pcm_prepare(struct snd_pcm_substream *substream)
 
     if (substream->stream == SNDRV_PCM_STREAM_CAPTURE)
     {
-        printk("%s  with mtk_uldlloopback_pcm_prepare \n",__func__);
         return 0;
     }
 
-    printk("%s rate = %d\n", __func__,runtime->rate);
 
     Afe_Set_Reg(AFE_TOP_CON0, 0x00000000, 0xffffffff);
     if (runtime->format == SNDRV_PCM_FORMAT_S32_LE || runtime->format == SNDRV_PCM_FORMAT_U32_LE)
@@ -312,7 +302,6 @@ static int mtk_uldlloopback_pcm_prepare(struct snd_pcm_substream *substream)
     u32AudioI2S |= Soc_Aud_I2S_FORMAT_I2S << 3; // us3 I2s format
     u32AudioI2S |= Soc_Aud_I2S_WLEN_WLEN_32BITS << 1; // 32 BITS
 
-    printk("u32AudioI2S= 0x%x\n", u32AudioI2S);
     Afe_Set_Reg(AFE_I2S_CON3, u32AudioI2S | 1, AFE_MASK_ALL);
 
     EnableAfe (true);
@@ -357,8 +346,6 @@ static struct snd_soc_platform_driver mtk_soc_dummy_platform =
 
 static int mtk_uldlloopback_probe(struct platform_device *pdev)
 {
-    printk("mtk_uldlloopback_probe\n");
-
     pdev->dev.coherent_dma_mask = DMA_BIT_MASK(64);
     if (!pdev->dev.dma_mask)
     {
@@ -370,7 +357,6 @@ static int mtk_uldlloopback_probe(struct platform_device *pdev)
         dev_set_name(&pdev->dev, "%s", MT_SOC_ULDLLOOPBACK_PCM);
     }
 
-    printk("%s: dev name %s\n", __func__, dev_name(&pdev->dev));
     return snd_soc_register_platform(&pdev->dev,
                                      &mtk_soc_dummy_platform);
 }
@@ -379,21 +365,18 @@ static int mtk_asoc_uldlloopbackpcm_new(struct snd_soc_pcm_runtime *rtd)
 {
     int ret = 0;
     pruntimepcm  = rtd;
-    printk("%s\n", __func__);
     return ret;
 }
 
 
 static int mtk_afe_uldlloopback_probe(struct snd_soc_platform *platform)
 {
-    printk("mtk_afe_uldlloopback_probe\n");
     return 0;
 }
 
 
 static int mtk_afe_uldlloopback_remove(struct platform_device *pdev)
 {
-    pr_debug("%s\n", __func__);
     snd_soc_unregister_platform(&pdev->dev);
     return 0;
 }
@@ -426,7 +409,6 @@ static struct platform_device *soc_mtkafe_uldlloopback_dev;
 static int __init mtk_soc_uldlloopback_platform_init(void)
 {
     int ret = 0;
-    printk("%s\n", __func__);
     #ifndef CONFIG_OF
     soc_mtkafe_uldlloopback_dev = platform_device_alloc(MT_SOC_ULDLLOOPBACK_PCM , -1);
     if (!soc_mtkafe_uldlloopback_dev)
@@ -451,7 +433,6 @@ module_init(mtk_soc_uldlloopback_platform_init);
 static void __exit mtk_soc_uldlloopback_platform_exit(void)
 {
 
-    printk("%s\n", __func__);
     platform_driver_unregister(&mtk_afe_uldllopback_driver);
 }
 module_exit(mtk_soc_uldlloopback_platform_exit);
diff --git a/sound/soc/mediatek/mt_soc_audio_6580/mt_soc_pcm_voice_md1.c b/sound/soc/mediatek/mt_soc_audio_6580/mt_soc_pcm_voice_md1.c
index 2e31f88ce..79aa9f297 100644
--- a/sound/soc/mediatek/mt_soc_audio_6580/mt_soc_pcm_voice_md1.c
+++ b/sound/soc/mediatek/mt_soc_audio_6580/mt_soc_pcm_voice_md1.c
@@ -129,7 +129,6 @@ static const struct soc_enum Audio_Speech_Enum[] =
 static int Audio_Speech_MD_Control_Get(struct snd_kcontrol *kcontrol,
                                        struct snd_ctl_elem_value *ucontrol)
 {
-    printk("Audio_Speech_MD_Control_Get = %d\n", speech_md_usage_control);
     ucontrol->value.integer.value[0] = speech_md_usage_control;
     return 0;
 }
@@ -142,7 +141,6 @@ static int Audio_Speech_MD_Control_Set(struct snd_kcontrol *kcontrol, struct snd
         return -EINVAL;
     }
     speech_md_usage_control = ucontrol->value.integer.value[0];
-    printk("%s(), speech_md_usage_control=%d\n", __func__, speech_md_usage_control);
     return 0;
 }
 
@@ -159,11 +157,8 @@ static int mtk_voice_pcm_open(struct snd_pcm_substream *substream)
     AudDrv_Clk_On();
     AudDrv_ADC_Clk_On();
 
-    printk("mtk_voice_pcm_open\n");
-
     if (substream->stream == SNDRV_PCM_STREAM_CAPTURE)
     {
-        printk("%s  with SNDRV_PCM_STREAM_CAPTURE \n", __func__);
         runtime->rate = 16000;
         return 0;
     }
@@ -180,14 +175,12 @@ static int mtk_voice_pcm_open(struct snd_pcm_substream *substream)
     }
 
     //print for hw pcm information
-    printk("mtk_voice_pcm_open runtime rate = %d channels = %d \n", runtime->rate, runtime->channels);
 
     runtime->hw.info |= SNDRV_PCM_INFO_INTERLEAVED;
     runtime->hw.info |= SNDRV_PCM_INFO_NONINTERLEAVED;
 
     if (substream->stream == SNDRV_PCM_STREAM_PLAYBACK)
     {
-        printk("SNDRV_PCM_STREAM_PLAYBACK mtkalsa_voice_constraints\n");
         runtime->rate = 16000;
     }
     else
@@ -197,11 +190,9 @@ static int mtk_voice_pcm_open(struct snd_pcm_substream *substream)
 
     if (err < 0)
     {
-        printk("mtk_voice_close\n");
         mtk_voice_close(substream);
         return err;
     }
-    printk("mtk_voice_pcm_open return\n");
     return 0;
 }
 
@@ -220,11 +211,8 @@ static void ConfigAdcI2S(struct snd_pcm_substream *substream)
 
 static int mtk_voice_close(struct snd_pcm_substream *substream)
 {
-    printk("mtk_voice_close \n");
-
     if (substream->stream == SNDRV_PCM_STREAM_CAPTURE)
     {
-        printk("%s  with SNDRV_PCM_STREAM_CAPTURE \n", __func__);
 	AudDrv_ADC_Clk_Off();
         AudDrv_Clk_Off();
         return 0;
@@ -255,7 +243,6 @@ static int mtk_voice_close(struct snd_pcm_substream *substream)
 
 static int mtk_voice_trigger(struct snd_pcm_substream *substream, int cmd)
 {
-    printk("mtk_voice_trigger cmd = %d\n", cmd);
     switch (cmd)
     {
         case SNDRV_PCM_TRIGGER_START:
@@ -278,7 +265,6 @@ static int mtk_voice_pcm_silence(struct snd_pcm_substream *substream,
                                  int channel, snd_pcm_uframes_t pos,
                                  snd_pcm_uframes_t count)
 {
-    printk("mtk_voice_pcm_silence \n");
     return 0; /* do nothing */
 }
 
@@ -292,12 +278,9 @@ static struct page *mtk_pcm_page(struct snd_pcm_substream *substream,
 static int mtk_voice1_prepare(struct snd_pcm_substream *substream)
 {
     struct snd_pcm_runtime *runtimeStream = substream->runtime;
-    printk("mtk_voice1_prepare rate = %d  channels = %d period_size = %lu\n",
-           runtimeStream->rate, runtimeStream->channels, runtimeStream->period_size);
 
     if (substream->stream == SNDRV_PCM_STREAM_CAPTURE)
     {
-        printk("%s  with SNDRV_PCM_STREAM_CAPTURE \n", __func__);
         return 0;
     }
     // here start digital part
@@ -315,7 +298,6 @@ static int mtk_voice1_prepare(struct snd_pcm_substream *substream)
     SetI2SDacEnable(true);
 
 	#ifdef PMIC_RESET_WORKAROUND
-	printk("%s ,PMIC_RESET_WORKAROUND reset ABB_AFE_CON2/ABB_AFE_CON4 \n", __func__);
 	Ana_Set_Reg(ABB_AFE_CON2, 0x0, 0xffff); // reset to default value
 	Ana_Set_Reg(ABB_AFE_CON4, 0x0, 0xffff); // reset to default value
 	#endif
@@ -337,13 +319,11 @@ static int mtk_pcm_hw_params(struct snd_pcm_substream *substream,
                              struct snd_pcm_hw_params *hw_params)
 {
     int ret = 0;
-    printk("mtk_pcm_hw_params \n");
     return ret;
 }
 
 static int mtk_voice_hw_free(struct snd_pcm_substream *substream)
 {
-    PRINTK_AUDDRV("mtk_voice_hw_free \n");
     return snd_pcm_lib_free_pages(substream);
 }
 
@@ -370,8 +350,6 @@ static struct snd_soc_platform_driver mtk_soc_voice_platform =
 
 static int mtk_voice_probe(struct platform_device *pdev)
 {
-    printk("mtk_voice_probe\n");
-
     pdev->dev.coherent_dma_mask = DMA_BIT_MASK(64);
     if (!pdev->dev.dma_mask)
     {
@@ -382,7 +360,6 @@ static int mtk_voice_probe(struct platform_device *pdev)
     {
         dev_set_name(&pdev->dev, "%s", MT_SOC_VOICE_MD1);
     }
-    printk("%s: dev name %s\n", __func__, dev_name(&pdev->dev));
     return snd_soc_register_platform(&pdev->dev,
                                      &mtk_soc_voice_platform);
 }
@@ -390,14 +367,11 @@ static int mtk_voice_probe(struct platform_device *pdev)
 static int mtk_soc_voice_new(struct snd_soc_pcm_runtime *rtd)
 {
     int ret = 0;
-    printk("%s\n", __func__);
     return ret;
 }
 
 static int mtk_voice_platform_probe(struct snd_soc_platform *platform)
 {
-    printk("mtk_voice_platform_probe\n");
-
     snd_soc_add_platform_controls(platform, Audio_snd_speech_controls,
                                   ARRAY_SIZE(Audio_snd_speech_controls));
 
@@ -406,7 +380,6 @@ static int mtk_voice_platform_probe(struct snd_soc_platform *platform)
 
 static int mtk_voice_remove(struct platform_device *pdev)
 {
-    pr_debug("%s\n", __func__);
     snd_soc_unregister_platform(&pdev->dev);
     return 0;
 }
@@ -422,7 +395,6 @@ static int mtk_voice_pm_ops_suspend(struct device *device)
     b_modem1_speech_on = (bool)(Afe_Get_Reg(PCM2_INTF_CON) & 0x1);
     b_modem2_speech_on = (bool)(Afe_Get_Reg(PCM_INTF_CON) & 0x1);
     AudDrv_Clk_Off();//should enable clk for access reg
-    printk("mtk_voice_pm_ops_suspend, b_modem1_speech_on=%d, b_modem2_speech_on=%d, speech_md_usage_control=%d\n", b_modem1_speech_on, b_modem2_speech_on, speech_md_usage_control);
     if (b_modem1_speech_on == true || b_modem2_speech_on == true || speech_md_usage_control == true)
     {
         //select 26M
@@ -494,7 +466,6 @@ static struct platform_device *soc_mtk_voice_dev;
 static int __init mtk_soc_voice_platform_init(void)
 {
     int ret = 0;
-    printk("%s\n", __func__);
     #ifndef CONFIG_OF	
     soc_mtk_voice_dev = platform_device_alloc(MT_SOC_VOICE_MD1 , -1);
     if (!soc_mtk_voice_dev)
@@ -519,7 +490,6 @@ module_init(mtk_soc_voice_platform_init);
 static void __exit mtk_soc_voice_platform_exit(void)
 {
 
-    printk("%s\n", __func__);
     platform_driver_unregister(&mtk_voice_driver);
 }
 module_exit(mtk_soc_voice_platform_exit);
diff --git a/sound/soc/mediatek/mt_soc_audio_6580/mt_soc_pcm_voice_md1_bt.c b/sound/soc/mediatek/mt_soc_audio_6580/mt_soc_pcm_voice_md1_bt.c
index d7cd25223..99256c7d0 100644
--- a/sound/soc/mediatek/mt_soc_audio_6580/mt_soc_pcm_voice_md1_bt.c
+++ b/sound/soc/mediatek/mt_soc_audio_6580/mt_soc_pcm_voice_md1_bt.c
@@ -129,11 +129,8 @@ static int mtk_voice_bt_pcm_open(struct snd_pcm_substream *substream)
     int ret = 0;
     AudDrv_Clk_On();
 
-    printk("mtk_voice_bt_pcm_open\n");
-
     if (substream->stream == SNDRV_PCM_STREAM_CAPTURE)
     {
-        printk("%s  with SNDRV_PCM_STREAM_CAPTURE \n", __func__);
         runtime->rate = 16000;
         return 0;
     }
@@ -149,15 +146,11 @@ static int mtk_voice_bt_pcm_open(struct snd_pcm_substream *substream)
         printk("snd_pcm_hw_constraint_integer failed\n");
     }
 
-    //print for hw pcm information
-    printk("mtk_voice_bt_pcm_open runtime rate = %d channels = %d \n", runtime->rate, runtime->channels);
-
     runtime->hw.info |= SNDRV_PCM_INFO_INTERLEAVED;
     runtime->hw.info |= SNDRV_PCM_INFO_NONINTERLEAVED;
 
     if (substream->stream == SNDRV_PCM_STREAM_PLAYBACK)
     {
-        printk("SNDRV_PCM_STREAM_PLAYBACK mtkalsa_voice_bt_constraints\n");
         runtime->rate = 16000;
     }
     else
@@ -167,11 +160,9 @@ static int mtk_voice_bt_pcm_open(struct snd_pcm_substream *substream)
 
     if (err < 0)
     {
-        printk("mtk_voice_bt_close\n");
         mtk_voice_bt_close(substream);
         return err;
     }
-    printk("mtk_voice_bt_pcm_open return\n");
     return 0;
 }
 
@@ -192,10 +183,8 @@ static void ConfigAdcI2S(struct snd_pcm_substream *substream)
 
 static int mtk_voice_bt_close(struct snd_pcm_substream *substream)
 {
-    printk("mtk_voice_bt_close \n");
     if (substream->stream == SNDRV_PCM_STREAM_CAPTURE)
     {
-        printk("%s  with SNDRV_PCM_STREAM_CAPTURE \n", __func__);
         AudDrv_Clk_Off();
         return 0;
     }
@@ -219,7 +208,6 @@ static int mtk_voice_bt_close(struct snd_pcm_substream *substream)
 
 static int mtk_voice_bt_trigger(struct snd_pcm_substream *substream, int cmd)
 {
-    printk("mtk_voice_bt_trigger cmd = %d\n", cmd);
     switch (cmd)
     {
         case SNDRV_PCM_TRIGGER_START:
@@ -242,7 +230,6 @@ static int mtk_voice_bt_pcm_silence(struct snd_pcm_substream *substream,
                                     int channel, snd_pcm_uframes_t pos,
                                     snd_pcm_uframes_t count)
 {
-    printk("mtk_voice_bt_pcm_silence \n");
     return 0; /* do nothing */
 }
 
@@ -277,12 +264,9 @@ static bool  SetModemSpeechDAIBTAttribute(int sample_rate)
 static int mtk_voice_bt1_prepare(struct snd_pcm_substream *substream)
 {
     struct snd_pcm_runtime *runtimeStream = substream->runtime;
-    printk("mtk_alsa_prepare rate = %d  channels = %d period_size = %lu\n",
-           runtimeStream->rate, runtimeStream->channels, runtimeStream->period_size);
 
     if (substream->stream == SNDRV_PCM_STREAM_CAPTURE)
     {
-        printk("%s  with SNDRV_PCM_STREAM_CAPTURE \n", __func__);
         return 0;
     }
     AudDrv_Clk_On();
@@ -319,13 +303,11 @@ static int mtk_pcm_hw_params(struct snd_pcm_substream *substream,
                              struct snd_pcm_hw_params *hw_params)
 {
     int ret = 0;
-    printk("mtk_pcm_hw_params \n");
     return ret;
 }
 
 static int mtk_voice_bt_hw_free(struct snd_pcm_substream *substream)
 {
-    PRINTK_AUDDRV("mtk_voice_bt_hw_free \n");
     return snd_pcm_lib_free_pages(substream);
 }
 
@@ -352,8 +334,6 @@ static struct snd_soc_platform_driver mtk_soc_voice_bt_platform =
 
 static int mtk_voice_bt_probe(struct platform_device *pdev)
 {
-    printk("mtk_voice_bt_probe\n");
-
     pdev->dev.coherent_dma_mask = DMA_BIT_MASK(64);
     if (!pdev->dev.dma_mask)
     {
@@ -364,7 +344,6 @@ static int mtk_voice_bt_probe(struct platform_device *pdev)
     {
         dev_set_name(&pdev->dev, "%s", MT_SOC_VOICE_MD1_BT);
     }
-    printk("%s: dev name %s\n", __func__, dev_name(&pdev->dev));
     return snd_soc_register_platform(&pdev->dev,
                                      &mtk_soc_voice_bt_platform);
 }
@@ -372,19 +351,16 @@ static int mtk_voice_bt_probe(struct platform_device *pdev)
 static int mtk_soc_voice_bt_new(struct snd_soc_pcm_runtime *rtd)
 {
     int ret = 0;
-    printk("%s\n", __func__);
     return ret;
 }
 
 static int mtk_voice_bt_platform_probe(struct snd_soc_platform *platform)
 {
-    printk("mtk_voice_bt_platform_probe\n");
     return 0;
 }
 
 static int mtk_voice_bt_remove(struct platform_device *pdev)
 {
-    pr_debug("%s\n", __func__);
     snd_soc_unregister_platform(&pdev->dev);
     return 0;
 }
@@ -471,7 +447,6 @@ static struct platform_device *soc_mtk_voice_bt_dev;
 static int __init mtk_soc_voice_bt_platform_init(void)
 {
     int ret = 0;
-    printk("%s\n", __func__);
     #ifndef CONFIG_OF	
     soc_mtk_voice_bt_dev = platform_device_alloc(MT_SOC_VOICE_MD1_BT, -1);
     if (!soc_mtk_voice_bt_dev)
@@ -496,7 +471,6 @@ module_init(mtk_soc_voice_bt_platform_init);
 static void __exit mtk_soc_voice_bt_platform_exit(void)
 {
 
-    printk("%s\n", __func__);
     platform_driver_unregister(&mtk_voice_bt_driver);
 }
 module_exit(mtk_soc_voice_bt_platform_exit);
diff --git a/sound/soc/mediatek/mt_soc_audio_6580/mt_soc_pcm_voice_md2.c b/sound/soc/mediatek/mt_soc_audio_6580/mt_soc_pcm_voice_md2.c
index 782597022..c168d6ce8 100644
--- a/sound/soc/mediatek/mt_soc_audio_6580/mt_soc_pcm_voice_md2.c
+++ b/sound/soc/mediatek/mt_soc_audio_6580/mt_soc_pcm_voice_md2.c
@@ -152,11 +152,8 @@ static int mtk_voice_md2_pcm_open(struct snd_pcm_substream *substream)
     AudDrv_Clk_On();
     AudDrv_ADC_Clk_On();
 
-    printk("mtk_voice_md2_pcm_open\n");
-
     if (substream->stream == SNDRV_PCM_STREAM_CAPTURE)
     {
-        printk("%s  with SNDRV_PCM_STREAM_CAPTURE \n", __func__);
         runtime->rate = 16000;
         return 0;
     }
@@ -172,29 +169,19 @@ static int mtk_voice_md2_pcm_open(struct snd_pcm_substream *substream)
         printk("snd_pcm_hw_constraint_integer failed\n");
     }
 
-    //print for hw pcm information
-    printk("mtk_voice_md2_pcm_open runtime rate = %d channels = %d \n", runtime->rate, runtime->channels);
-
     runtime->hw.info |= SNDRV_PCM_INFO_INTERLEAVED;
     runtime->hw.info |= SNDRV_PCM_INFO_NONINTERLEAVED;
 
     if (substream->stream == SNDRV_PCM_STREAM_PLAYBACK)
     {
-        printk("SNDRV_PCM_STREAM_PLAYBACK mtkalsa_voice_md2_constraints\n");
         runtime->rate = 16000;
     }
-    else
-    {
-
-    }
 
     if (err < 0)
     {
-        printk("mtk_voice_md2_close\n");
         mtk_voice_md2_close(substream);
         return err;
     }
-    printk("mtk_voice_md2_pcm_open return\n");
     return 0;
 }
 
@@ -213,11 +200,8 @@ static void ConfigAdcI2S(struct snd_pcm_substream *substream)
 
 static int mtk_voice_md2_close(struct snd_pcm_substream *substream)
 {
-    printk("mtk_voice_md2_close \n");
-
     if (substream->stream == SNDRV_PCM_STREAM_CAPTURE)
     {
-        printk("%s  with SNDRV_PCM_STREAM_CAPTURE \n", __func__);
 	AudDrv_ADC_Clk_Off();
         AudDrv_Clk_Off();
         return 0;
@@ -248,7 +232,6 @@ static int mtk_voice_md2_close(struct snd_pcm_substream *substream)
 
 static int mtk_voice_md2_trigger(struct snd_pcm_substream *substream, int cmd)
 {
-    printk("mtk_voice_md2_trigger cmd = %d\n", cmd);
     switch (cmd)
     {
         case SNDRV_PCM_TRIGGER_START:
@@ -271,7 +254,6 @@ static int mtk_voice_md2_pcm_silence(struct snd_pcm_substream *substream,
                                      int channel, snd_pcm_uframes_t pos,
                                      snd_pcm_uframes_t count)
 {
-    printk("mtk_voice_md2_pcm_silence \n");
     return 0; /* do nothing */
 }
 
@@ -285,12 +267,9 @@ static struct page *mtk_pcm_page(struct snd_pcm_substream *substream,
 static int mtk_voice1_ext_prepare(struct snd_pcm_substream *substream)
 {
     struct snd_pcm_runtime *runtimeStream = substream->runtime;
-    printk("mtk_voice1_ext_prepare rate = %d  channels = %d period_size = %lu\n",
-           runtimeStream->rate, runtimeStream->channels, runtimeStream->period_size);
 
     if (substream->stream == SNDRV_PCM_STREAM_CAPTURE)
     {
-        printk("%s  with SNDRV_PCM_STREAM_CAPTURE \n", __func__);
         return 0;
     }
     // here start digital part
@@ -324,13 +303,11 @@ static int mtk_pcm_hw_params(struct snd_pcm_substream *substream,
                              struct snd_pcm_hw_params *hw_params)
 {
     int ret = 0;
-    printk("mtk_pcm_hw_params \n");
     return ret;
 }
 
 static int mtk_voice_md2_hw_free(struct snd_pcm_substream *substream)
 {
-    PRINTK_AUDDRV("mtk_voice_md2_hw_free \n");
     return snd_pcm_lib_free_pages(substream);
 }
 
@@ -357,7 +334,6 @@ static struct snd_soc_platform_driver mtk_soc_voice_md2_platform =
 
 static int mtk_voice_md2_probe(struct platform_device *pdev)
 {
-    printk("mtk_voice_md2_probe\n");
 
     pdev->dev.coherent_dma_mask = DMA_BIT_MASK(64);
     if (!pdev->dev.dma_mask)
@@ -369,7 +345,6 @@ static int mtk_voice_md2_probe(struct platform_device *pdev)
     {
         dev_set_name(&pdev->dev, "%s", MT_SOC_VOICE_MD2);
     }
-    printk("%s: dev name %s\n", __func__, dev_name(&pdev->dev));
     return snd_soc_register_platform(&pdev->dev,
                                      &mtk_soc_voice_md2_platform);
 }
@@ -377,19 +352,16 @@ static int mtk_voice_md2_probe(struct platform_device *pdev)
 static int mtk_soc_voice_md2_new(struct snd_soc_pcm_runtime *rtd)
 {
     int ret = 0;
-    printk("%s\n", __func__);
     return ret;
 }
 
 static int mtk_voice_md2_platform_probe(struct snd_soc_platform *platform)
 {
-    printk("mtk_voice_md2_platform_probe\n");
     return 0;
 }
 
 static int mtk_voice_md2_remove(struct platform_device *pdev)
 {
-    pr_debug("%s\n", __func__);
     snd_soc_unregister_platform(&pdev->dev);
     return 0;
 }
@@ -476,7 +448,6 @@ static struct platform_device *soc_mtk_voice_md2_dev;
 static int __init mtk_soc_voice_md2_platform_init(void)
 {
     int ret = 0;
-    printk("%s\n", __func__);
 	#ifndef CONFIG_OF
     soc_mtk_voice_md2_dev = platform_device_alloc(MT_SOC_VOICE_MD2 , -1);
     if (!soc_mtk_voice_md2_dev)
@@ -501,7 +472,6 @@ module_init(mtk_soc_voice_md2_platform_init);
 static void __exit mtk_soc_voice_md2_platform_exit(void)
 {
 
-    printk("%s\n", __func__);
     platform_driver_unregister(&mtk_voice_md2_driver);
 }
 module_exit(mtk_soc_voice_md2_platform_exit);
diff --git a/sound/soc/mediatek/mt_soc_audio_6580/mt_soc_pcm_voice_md2_bt.c b/sound/soc/mediatek/mt_soc_audio_6580/mt_soc_pcm_voice_md2_bt.c
index 83d3bcaee..97df71f78 100644
--- a/sound/soc/mediatek/mt_soc_audio_6580/mt_soc_pcm_voice_md2_bt.c
+++ b/sound/soc/mediatek/mt_soc_audio_6580/mt_soc_pcm_voice_md2_bt.c
@@ -130,11 +130,8 @@ static int mtk_voice_md2_bt_pcm_open(struct snd_pcm_substream *substream)
     int ret = 0;
     AudDrv_Clk_On();
 
-    printk("mtk_voice_md2_bt_pcm_open\n");
-
     if (substream->stream == SNDRV_PCM_STREAM_CAPTURE)
     {
-        printk("%s  with SNDRV_PCM_STREAM_CAPTURE \n", __func__);
         runtime->rate = 16000;
         return 0;
     }
@@ -151,14 +148,12 @@ static int mtk_voice_md2_bt_pcm_open(struct snd_pcm_substream *substream)
     }
 
     //print for hw pcm information
-    printk("mtk_voice_md2_bt_pcm_open runtime rate = %d channels = %d \n", runtime->rate, runtime->channels);
 
     runtime->hw.info |= SNDRV_PCM_INFO_INTERLEAVED;
     runtime->hw.info |= SNDRV_PCM_INFO_NONINTERLEAVED;
 
     if (substream->stream == SNDRV_PCM_STREAM_PLAYBACK)
     {
-        printk("SNDRV_PCM_STREAM_PLAYBACK mtkalsa_voice_md2_bt_constraints\n");
         runtime->rate = 16000;
     }
     else
@@ -168,11 +163,9 @@ static int mtk_voice_md2_bt_pcm_open(struct snd_pcm_substream *substream)
 
     if (err < 0)
     {
-        printk("mtk_voice_md2_bt_close\n");
         mtk_voice_md2_bt_close(substream);
         return err;
     }
-    printk("mtk_voice_md2_bt_pcm_open return\n");
     return 0;
 }
 
@@ -193,10 +186,8 @@ static void ConfigAdcI2S(struct snd_pcm_substream *substream)
 
 static int mtk_voice_md2_bt_close(struct snd_pcm_substream *substream)
 {
-    printk("mtk_voice_md2_bt_close \n");
     if (substream->stream == SNDRV_PCM_STREAM_CAPTURE)
     {
-        printk("%s  with SNDRV_PCM_STREAM_CAPTURE \n", __func__);
         AudDrv_Clk_Off();
         return 0;
     }
@@ -221,7 +212,6 @@ static int mtk_voice_md2_bt_close(struct snd_pcm_substream *substream)
 
 static int mtk_voice_md2_bt_trigger(struct snd_pcm_substream *substream, int cmd)
 {
-    printk("mtk_voice_md2_bt_trigger cmd = %d\n", cmd);
     switch (cmd)
     {
         case SNDRV_PCM_TRIGGER_START:
@@ -244,7 +234,6 @@ static int mtk_voice_md2_bt_pcm_silence(struct snd_pcm_substream *substream,
                                         int channel, snd_pcm_uframes_t pos,
                                         snd_pcm_uframes_t count)
 {
-    printk("mtk_voice_md2_bt_pcm_silence \n");
     return 0; /* do nothing */
 }
 
@@ -279,12 +268,9 @@ static bool  SetModemSpeechDAIBTAttribute(int sample_rate)
 static int mtk_voice_md2_bt_prepare(struct snd_pcm_substream *substream)
 {
     struct snd_pcm_runtime *runtimeStream = substream->runtime;
-    printk("mtk_alsa_prepare rate = %d  channels = %d period_size = %lu\n",
-           runtimeStream->rate, runtimeStream->channels, runtimeStream->period_size);
 
     if (substream->stream == SNDRV_PCM_STREAM_CAPTURE)
     {
-        printk("%s  with SNDRV_PCM_STREAM_CAPTURE \n", __func__);
         return 0;
     }
     AudDrv_Clk_On();
@@ -322,13 +308,11 @@ static int mtk_pcm_hw_params(struct snd_pcm_substream *substream,
                              struct snd_pcm_hw_params *hw_params)
 {
     int ret = 0;
-    printk("mtk_pcm_hw_params \n");
     return ret;
 }
 
 static int mtk_voice_md2_bt_hw_free(struct snd_pcm_substream *substream)
 {
-    PRINTK_AUDDRV("mtk_voice_md2_bt_hw_free \n");
     return snd_pcm_lib_free_pages(substream);
 }
 
@@ -355,8 +339,6 @@ static struct snd_soc_platform_driver mtk_soc_voice_md2_bt_platform =
 
 static int mtk_voice_md2_bt_probe(struct platform_device *pdev)
 {
-    printk("mtk_voice_md2_bt_probe\n");
-
     pdev->dev.coherent_dma_mask = DMA_BIT_MASK(64);
     if (!pdev->dev.dma_mask)
     {
@@ -367,7 +349,6 @@ static int mtk_voice_md2_bt_probe(struct platform_device *pdev)
     {
         dev_set_name(&pdev->dev, "%s", MT_SOC_VOICE_MD2_BT);
     }
-    printk("%s: dev name %s\n", __func__, dev_name(&pdev->dev));
     return snd_soc_register_platform(&pdev->dev,
                                      &mtk_soc_voice_md2_bt_platform);
 }
@@ -375,19 +356,16 @@ static int mtk_voice_md2_bt_probe(struct platform_device *pdev)
 static int mtk_soc_voice_md2_bt_new(struct snd_soc_pcm_runtime *rtd)
 {
     int ret = 0;
-    printk("%s\n", __func__);
     return ret;
 }
 
 static int mtk_voice_md2_bt_platform_probe(struct snd_soc_platform *platform)
 {
-    printk("mtk_voice_md2_bt_platform_probe\n");
     return 0;
 }
 
 static int mtk_voice_md2_bt_remove(struct platform_device *pdev)
 {
-    pr_debug("%s\n", __func__);
     snd_soc_unregister_platform(&pdev->dev);
     return 0;
 }
@@ -474,7 +452,6 @@ static struct platform_device *soc_mtk_voice_md2_bt_dev;
 static int __init mtk_soc_voice_md2_bt_platform_init(void)
 {
     int ret = 0;
-    printk("%s\n", __func__);
     #ifndef CONFIG_OF	
     soc_mtk_voice_md2_bt_dev = platform_device_alloc(MT_SOC_VOICE_MD2_BT, -1);
     if (!soc_mtk_voice_md2_bt_dev)
@@ -499,7 +476,6 @@ module_init(mtk_soc_voice_md2_bt_platform_init);
 static void __exit mtk_soc_voice_md2_bt_platform_exit(void)
 {
 
-    printk("%s\n", __func__);
     platform_driver_unregister(&mtk_voice_md2_bt_driver);
 }
 module_exit(mtk_soc_voice_md2_bt_platform_exit);
diff --git a/sound/soc/mediatek/mt_soc_audio_6580/mt_soc_tdm_capture.c b/sound/soc/mediatek/mt_soc_audio_6580/mt_soc_tdm_capture.c
index 03ad428ae..a3ac999a3 100644
--- a/sound/soc/mediatek/mt_soc_audio_6580/mt_soc_tdm_capture.c
+++ b/sound/soc/mediatek/mt_soc_audio_6580/mt_soc_tdm_capture.c
@@ -160,8 +160,6 @@ static struct snd_pcm_hardware mtk_capture_hardware =
 
 static void StopAudioCaptureHardware(struct snd_pcm_substream *substream)
 {
-    printk("StopAudioCaptureHardware \n");
-
     // here to set interrupt
     SetIrqEnable(Soc_Aud_IRQ_MCU_MODE_IRQ2_MCU_MODE, false);
 
@@ -195,8 +193,6 @@ static void ConfigAdcI2S(struct snd_pcm_substream *substream)
 
 static void StartAudioCaptureHardware(struct snd_pcm_substream *substream)
 {
-    printk("StartAudioCaptureHardware \n");
-
     ConfigAdcI2S(substream);
     SetI2SAdcIn(mAudioDigitalI2S);
 
@@ -238,14 +234,12 @@ static void StartAudioCaptureHardware(struct snd_pcm_substream *substream)
 
 static int mtk_capture_pcm_prepare(struct snd_pcm_substream *substream)
 {
-    printk("mtk_capture_pcm_prepare substream->rate = %d  substream->channels = %d \n", substream->runtime->rate, substream->runtime->channels);
     return 0;
 }
 
 static int mtk_capture_alsa_stop(struct snd_pcm_substream *substream)
 {
     AFE_BLOCK_T *Vul_Block = &(TDM_VUL_Control_context->rBlock);
-    printk("mtk_capture_alsa_stop \n");
     StopAudioCaptureHardware(substream);
     Vul_Block->u4DMAReadIdx  = 0;
     Vul_Block->u4WriteIdx  = 0;
@@ -260,7 +254,6 @@ static snd_pcm_uframes_t mtk_capture_pcm_pointer(struct snd_pcm_substream *subst
     kal_int32 HW_memory_index = 0;
     kal_int32 HW_Cur_ReadIdx = 0;
     AFE_BLOCK_T *Awb_Block = &(TDM_VUL_Control_context->rBlock);
-    PRINTK_AUD_UL1("mtk_capture_pcm_pointer Awb_Block->u4WriteIdx;= 0x%x \n", Awb_Block->u4WriteIdx);
     if (TDM_VUL_Control_context->interruptTrigger == 1)
     {
 
@@ -270,12 +263,10 @@ static snd_pcm_uframes_t mtk_capture_pcm_pointer(struct snd_pcm_substream *subst
         HW_Cur_ReadIdx = Afe_Get_Reg(AFE_AWB_CUR);
         if (HW_Cur_ReadIdx == 0)
         {
-            PRINTK_AUD_UL1("[Auddrv] mtk_capture_pcm_pointer  HW_Cur_ReadIdx ==0 \n");
             HW_Cur_ReadIdx = Awb_Block->pucPhysBufAddr;
         }
         HW_memory_index = (HW_Cur_ReadIdx - Awb_Block->pucPhysBufAddr);
         Previous_Hw_cur = HW_memory_index;
-        PRINTK_AUD_UL1("[Auddrv] mtk_capture_pcm_pointer =0x%x HW_memory_index = 0x%x\n", HW_Cur_ReadIdx, HW_memory_index);
         TDM_VUL_Control_context->interruptTrigger = 0;
         return (HW_memory_index >> 2);
     }
@@ -288,7 +279,6 @@ static void SetVULBuffer(struct snd_pcm_substream *substream,
 {
     struct snd_pcm_runtime *runtime = substream->runtime;
     AFE_BLOCK_T *pblock = &TDM_VUL_Control_context->rBlock;
-    printk("SetVULBuffer\n");
     pblock->pucPhysBufAddr =  runtime->dma_addr;
     pblock->pucVirtBufAddr =  runtime->dma_area;
     pblock->u4BufferSize = runtime->dma_bytes;
@@ -298,8 +288,6 @@ static void SetVULBuffer(struct snd_pcm_substream *substream,
     pblock->u4DataRemained  = 0;
     pblock->u4fsyncflag     = false;
     pblock->uResetFlag      = true;
-    printk("u4BufferSize = %d pucVirtBufAddr = %p pucPhysBufAddr = 0x%x\n",
-           pblock->u4BufferSize, pblock->pucVirtBufAddr, pblock->pucPhysBufAddr);
     // set dram address top hardware
     Afe_Set_Reg(AFE_VUL_BASE , pblock->pucPhysBufAddr , 0xffffffff);
     Afe_Set_Reg(AFE_VUL_END  , pblock->pucPhysBufAddr + (pblock->u4BufferSize - 1), 0xffffffff);
@@ -312,12 +300,10 @@ static int mtk_capture_pcm_hw_params(struct snd_pcm_substream *substream,
     struct snd_pcm_runtime *runtime = substream->runtime;
     struct snd_dma_buffer *dma_buf = &substream->dma_buffer;
     int ret = 0;
-    printk("mtk_capture_pcm_hw_params \n");
 
     dma_buf->dev.type = SNDRV_DMA_TYPE_DEV;
     dma_buf->dev.dev = substream->pcm->card->dev;
     dma_buf->private_data = NULL;
-    printk("Capture_dma_buf = %p Capture_dma_buf->area = %p\n", Capture_dma_buf, Capture_dma_buf->area);
 
     if (Capture_dma_buf->area)
     {
@@ -327,24 +313,14 @@ static int mtk_capture_pcm_hw_params(struct snd_pcm_substream *substream,
     }
     else
     {
-        printk("mtk_capture_pcm_hw_params snd_pcm_lib_malloc_pages\n");
         ret =  snd_pcm_lib_malloc_pages(substream, params_buffer_bytes(hw_params));
     }
 
-    printk("mtk_capture_pcm_hw_params dma_bytes = %zu dma_area = %p dma_addr = 0x%lx\n",
-           runtime->dma_bytes, runtime->dma_area, (long)runtime->dma_addr);
-
-    printk("runtime->hw.buffer_bytes_max = %zu \n", runtime->hw.buffer_bytes_max);
-    SetVULBuffer(substream, hw_params);
-
-    printk("dma_bytes = %zu dma_area = %p dma_addr = 0x%lx\n",
-           substream->runtime->dma_bytes, substream->runtime->dma_area, (long)substream->runtime->dma_addr);
     return ret;
 }
 
 static int mtk_capture_pcm_hw_free(struct snd_pcm_substream *substream)
 {
-    printk("mtk_capture_pcm_hw_free \n");
     if (Capture_dma_buf->area)
     {
         return 0;
@@ -374,12 +350,10 @@ static int mtk_capture_pcm_open(struct snd_pcm_substream *substream)
     AudDrv_Clk_On();
     AudDrv_ADC_Clk_On();
 
-    printk("%s \n", __func__);
     TDM_VUL_Control_context = Get_Mem_ControlT(Soc_Aud_Digital_Block_MEM_VUL);
 
     runtime->hw = mtk_capture_hardware;
     memcpy((void *)(&(runtime->hw)), (void *)&mtk_capture_hardware , sizeof(struct snd_pcm_hardware));
-    printk("runtime->hw->rates = 0x%x \n ", runtime->hw.rates);
 
     ret = snd_pcm_hw_constraint_list(runtime, 0, SNDRV_PCM_HW_PARAM_RATE,
                                      &constraints_sample_rates);
@@ -389,27 +363,15 @@ static int mtk_capture_pcm_open(struct snd_pcm_substream *substream)
         printk("snd_pcm_hw_constraint_integer failed\n");
     }
 
-    printk("mtk_capture_pcm_open runtime rate = %d channels = %d \n", runtime->rate, runtime->channels);
     runtime->hw.info |= SNDRV_PCM_INFO_INTERLEAVED;
     runtime->hw.info |= SNDRV_PCM_INFO_NONINTERLEAVED;
     runtime->hw.info |= SNDRV_PCM_INFO_MMAP_VALID;
 
-    if (substream->stream == SNDRV_PCM_STREAM_CAPTURE)
-    {
-        printk("SNDRV_PCM_STREAM_CAPTURE mtkalsa_capture_constraints\n");
-    }
-    else
-    {
-
-    }
-
     if (ret < 0)
     {
-        printk("mtk_capture_pcm_close\n");
         mtk_capture_pcm_close(substream);
         return ret;
     }
-    printk("mtk_capture_pcm_open return\n");
     return 0;
 }
 
@@ -422,7 +384,6 @@ static int mtk_capture_pcm_close(struct snd_pcm_substream *substream)
 
 static int mtk_capture_alsa_start(struct snd_pcm_substream *substream)
 {
-    printk("mtk_capture_alsa_start \n");
     SetMemifSubStream(Soc_Aud_Digital_Block_MEM_VUL, substream);
     StartAudioCaptureHardware(substream);
     return 0;
@@ -430,8 +391,6 @@ static int mtk_capture_alsa_start(struct snd_pcm_substream *substream)
 
 static int mtk_capture_pcm_trigger(struct snd_pcm_substream *substream, int cmd)
 {
-    printk("mtk_capture_pcm_trigger cmd = %d\n", cmd);
-
     switch (cmd)
     {
         case SNDRV_PCM_TRIGGER_START:
@@ -448,7 +407,6 @@ static bool CheckNullPointer(void *pointer)
 {
     if (pointer == NULL)
     {
-        printk("CheckNullPointer pointer = NULL");
         return true;
     }
     return false;
@@ -465,7 +423,6 @@ static int mtk_capture_pcm_copy(struct snd_pcm_substream *substream,
     ssize_t DMA_Read_Ptr = 0 , read_size = 0, read_count = 0;
     unsigned long flags;
 
-    PRINTK_AUD_UL1("mtk_capture_pcm_copy pos = %lucount = %lu \n ", pos, count);
     count = count << 2;
 
     // check which memif nned to be write
@@ -482,20 +439,17 @@ static int mtk_capture_pcm_copy(struct snd_pcm_substream *substream,
     if (Vul_Block->u4BufferSize <= 0)
     {
         msleep(50);
-        printk("Vul_Block->u4BufferSize <= 0  =%d\n", Vul_Block->u4BufferSize);
         return 0;
     }
 
     if (CheckNullPointer((void *)Vul_Block->pucVirtBufAddr))
     {
-        printk("CheckNullPointer  pucVirtBufAddr = %p\n", Vul_Block->pucVirtBufAddr);
         return 0;
     }
 
     spin_lock_irqsave(&auddrv_ULInCtl_lock, flags);
     if (Vul_Block->u4DataRemained >  Vul_Block->u4BufferSize)
     {
-        PRINTK_AUD_UL1("AudDrv_MEMIF_Read u4DataRemained=%x > u4BufferSize=%x" , Vul_Block->u4DataRemained, Vul_Block->u4BufferSize);
         Vul_Block->u4DataRemained = 0;
         Vul_Block->u4DMAReadIdx   = Vul_Block->u4WriteIdx;
     }
@@ -511,17 +465,8 @@ static int mtk_capture_pcm_copy(struct snd_pcm_substream *substream,
     DMA_Read_Ptr = Vul_Block->u4DMAReadIdx;
     spin_unlock_irqrestore(&auddrv_ULInCtl_lock, flags);
 
-    PRINTK_AUD_UL1("AudDrv_MEMIF_Read finish0, read_count:%x, read_size:%x, u4DataRemained:%x, u4DMAReadIdx:0x%x, u4WriteIdx:%x \r\n",
-                   (unsigned int)read_count, (unsigned int)read_size, Vul_Block->u4DataRemained, Vul_Block->u4DMAReadIdx, Vul_Block->u4WriteIdx);
-
     if (DMA_Read_Ptr + read_size < Vul_Block->u4BufferSize)
     {
-        if (DMA_Read_Ptr != Vul_Block->u4DMAReadIdx)
-        {
-            printk("AudDrv_MEMIF_Read 1, read_size:%zu, DataRemained:%x, DMA_Read_Ptr:%zu, DMAReadIdx:%x \r\n",
-                   read_size, Vul_Block->u4DataRemained, DMA_Read_Ptr, Vul_Block->u4DMAReadIdx);
-        }
-
         if (copy_to_user((void __user *)Read_Data_Ptr, (Vul_Block->pucVirtBufAddr + DMA_Read_Ptr), read_size))
         {
 
@@ -539,9 +484,6 @@ static int mtk_capture_pcm_copy(struct snd_pcm_substream *substream,
 
         Read_Data_Ptr += read_size;
         count -= read_size;
-
-        PRINTK_AUD_UL1("AudDrv_MEMIF_Read finish1, copy size:%x, u4DMAReadIdx:0x%x, u4WriteIdx:%x, u4DataRemained:%x \r\n",
-                       (unsigned int)read_size, Vul_Block->u4DMAReadIdx, Vul_Block->u4WriteIdx, Vul_Block->u4DataRemained);
     }
 
     else
@@ -549,12 +491,6 @@ static int mtk_capture_pcm_copy(struct snd_pcm_substream *substream,
         uint32 size_1 = Vul_Block->u4BufferSize - DMA_Read_Ptr;
         uint32 size_2 = read_size - size_1;
 
-        if (DMA_Read_Ptr != Vul_Block->u4DMAReadIdx)
-        {
-
-            printk("AudDrv_MEMIF_Read 2, read_size1:0x%x, DataRemained:%x, DMA_Read_Ptr:%zu, DMAReadIdx:%x \r\n",
-                   size_1, Vul_Block->u4DataRemained, DMA_Read_Ptr, Vul_Block->u4DMAReadIdx);
-        }
         if (copy_to_user((void __user *)Read_Data_Ptr, (Vul_Block->pucVirtBufAddr + DMA_Read_Ptr), size_1))
         {
 
@@ -571,16 +507,6 @@ static int mtk_capture_pcm_copy(struct snd_pcm_substream *substream,
         DMA_Read_Ptr = Vul_Block->u4DMAReadIdx;
         spin_unlock(&auddrv_ULInCtl_lock);
 
-
-        PRINTK_AUD_UL1("AudDrv_MEMIF_Read finish2, copy size_1:%x, u4DMAReadIdx:0x%x, u4WriteIdx:0x%x, u4DataRemained:%x \r\n",
-                       size_1, Vul_Block->u4DMAReadIdx, Vul_Block->u4WriteIdx, Vul_Block->u4DataRemained);
-
-        if (DMA_Read_Ptr != Vul_Block->u4DMAReadIdx)
-        {
-
-            printk("AudDrv_AWB_Read 3, read_size2:%x, DataRemained:%x, DMA_Read_Ptr:%zu, DMAReadIdx:%x \r\n",
-                   size_2, Vul_Block->u4DataRemained, DMA_Read_Ptr, Vul_Block->u4DMAReadIdx);
-        }
         if (copy_to_user((void __user *)(Read_Data_Ptr + size_1), (Vul_Block->pucVirtBufAddr + DMA_Read_Ptr), size_2))
         {
 
@@ -597,9 +523,6 @@ static int mtk_capture_pcm_copy(struct snd_pcm_substream *substream,
 
         count -= read_size;
         Read_Data_Ptr += read_size;
-
-        PRINTK_AUD_UL1("AudDrv_MEMIF_Read finish3, copy size_2:%x, u4DMAReadIdx:0x%x, u4WriteIdx:0x%x u4DataRemained:%x \r\n",
-                       size_2, Vul_Block->u4DMAReadIdx, Vul_Block->u4WriteIdx, Vul_Block->u4DataRemained);
     }
 
     return read_count >> 2;
@@ -609,7 +532,6 @@ static int mtk_capture_pcm_silence(struct snd_pcm_substream *substream,
                                    int channel, snd_pcm_uframes_t pos,
                                    snd_pcm_uframes_t count)
 {
-    printk("dummy_pcm_silence \n");
     return 0; /* do nothing */
 }
 
@@ -619,7 +541,6 @@ static void *dummy_page[2];
 static struct page *mtk_capture_pcm_page(struct snd_pcm_substream *substream,
                                          unsigned long offset)
 {
-    printk("%s \n", __func__);
     return virt_to_page(dummy_page[substream->stream]); /* the same page */
 }
 
@@ -648,8 +569,6 @@ static struct snd_soc_platform_driver mtk_soc_platform =
 
 static int mtk_capture_probe(struct platform_device *pdev)
 {
-    printk("tdm mtk_capture_probe\n");
-
     pdev->dev.coherent_dma_mask = DMA_BIT_MASK(64);
     if (!pdev->dev.dma_mask)
     {
@@ -661,21 +580,18 @@ static int mtk_capture_probe(struct platform_device *pdev)
         dev_set_name(&pdev->dev, "%s", MT_SOC_TDMRX_PCM);
     }
 
-    printk("%s: dev name %s\n", __func__, dev_name(&pdev->dev));
     return snd_soc_register_platform(&pdev->dev,
                                      &mtk_soc_platform);
 }
 
 static int mtk_asoc_capture_pcm_new(struct snd_soc_pcm_runtime *rtd)
 {
-    printk("mtk_asoc_capture_pcm_new \n");
     return 0;
 }
 
 
 static int mtk_afe_capture_probe(struct snd_soc_platform *platform)
 {
-    printk("mtk_afe_capture_probe TODO\n");
     AudDrv_Allocate_mem_Buffer(platform->dev, Soc_Aud_Digital_Block_MEM_VUL, UL1_MAX_BUFFER_SIZE);
     Capture_dma_buf =  Get_Mem_Buffer(Soc_Aud_Digital_Block_MEM_VUL);
     /*
@@ -699,7 +615,6 @@ static int mtk_afe_capture_probe(struct snd_soc_platform *platform)
 
 static int mtk_capture_remove(struct platform_device *pdev)
 {
-    pr_debug("%s\n", __func__);
     snd_soc_unregister_platform(&pdev->dev);
     return 0;
 }
@@ -732,7 +647,6 @@ static struct platform_device *soc_mtkafe_capture_dev;
 static int __init mtk_soc_capture_platform_init(void)
 {
     int ret = 0;
-    printk("%s\n", __func__);
 	#ifndef CONFIG_OF
     soc_mtkafe_capture_dev = platform_device_alloc(MT_SOC_TDMRX_PCM, -1);
     if (!soc_mtkafe_capture_dev)
@@ -755,7 +669,6 @@ module_init(mtk_soc_capture_platform_init);
 static void __exit mtk_soc_platform_exit(void)
 {
 
-    printk("%s\n", __func__);
     platform_driver_unregister(&mtk_afe_capture_driver);
 }
 
diff --git a/sound/soc/mediatek/mt_soc_audio_8163/AudDrv_Ana.c b/sound/soc/mediatek/mt_soc_audio_8163/AudDrv_Ana.c
index 9244395dd..d20cfd333 100644
--- a/sound/soc/mediatek/mt_soc_audio_8163/AudDrv_Ana.c
+++ b/sound/soc/mediatek/mt_soc_audio_8163/AudDrv_Ana.c
@@ -69,7 +69,6 @@ void Ana_Set_Reg(uint32 offset, uint32 value, uint32 mask)
     int ret = 0;
     uint32 Reg_Value;
 
-    PRINTK_ANA_REG("Ana_Set_Reg offset= 0x%x , value = 0x%x mask = 0x%x\n", offset, value, mask);
 #ifdef AUDIO_USING_WRAP_DRIVER
     Reg_Value = Ana_Get_Reg(offset);
     Reg_Value &= (~mask);
@@ -91,7 +90,6 @@ uint32 Ana_Get_Reg(uint32 offset)
 #ifdef AUDIO_USING_WRAP_DRIVER
     ret = pwrap_read(offset, &Rdata);
 #endif
-    PRINTK_ANA_REG("Ana_Get_Reg offset= 0x%x  Rdata = 0x%x ret = %d\n", offset, Rdata, ret);
     return Rdata;
 }
 
diff --git a/sound/soc/mediatek/mt_soc_audio_8163/mt_soc_codec_63xx.c b/sound/soc/mediatek/mt_soc_audio_8163/mt_soc_codec_63xx.c
index a68cdda72..09cb91cd7 100644
--- a/sound/soc/mediatek/mt_soc_audio_8163/mt_soc_codec_63xx.c
+++ b/sound/soc/mediatek/mt_soc_audio_8163/mt_soc_codec_63xx.c
@@ -204,10 +204,8 @@ static bool GetULStatus(void)
 static bool mAnaSuspend = false;
 void SetAnalogSuspend(bool bEnable)
 {
-    printk("%s bEnable ==%d mAnaSuspend = %d \n", __func__, bEnable, mAnaSuspend);
     if ((bEnable == true) && (mAnaSuspend == false))
     {
-        Ana_Log_Print();
         SavePowerState();
         if (mCodec_data->mAudio_Ana_DevicePower[AUDIO_ANALOG_DEVICE_OUT_HEADSETL] == true)
         {
@@ -229,12 +227,10 @@ void SetAnalogSuspend(bool bEnable)
             mCodec_data->mAudio_Ana_DevicePower[AUDIO_ANALOG_DEVICE_OUT_SPEAKERL] = false;
             Speaker_Amp_Change(false);
         }
-        Ana_Log_Print();
         mAnaSuspend = true;
     }
     else if ((bEnable == false) && (mAnaSuspend == true))
     {
-        Ana_Log_Print();
         if (mCodec_data->mAudio_BackUpAna_DevicePower[AUDIO_ANALOG_DEVICE_OUT_HEADSETL] == true)
         {
             Audio_Amp_Change(AUDIO_ANALOG_CHANNELS_LEFT1 , true);
@@ -256,7 +252,6 @@ void SetAnalogSuspend(bool bEnable)
             mCodec_data->mAudio_Ana_DevicePower[AUDIO_ANALOG_DEVICE_OUT_SPEAKERL] = false;
         }
         RestorePowerState();
-        Ana_Log_Print();
         mAnaSuspend = false;
     }
 }
@@ -264,7 +259,6 @@ void SetAnalogSuspend(bool bEnable)
 static int audck_buf_Count = 0;
 void audckbufEnable(bool enable)
 {
-    printk("audckbufEnable audck_buf_Count = %d enable = %d, 82 no need \n", audck_buf_Count, enable);
 #if 0 //Sammodi 82 no need
     mutex_lock(&Ana_buf_Ctrl_Mutex);
     if (enable)
@@ -299,7 +293,6 @@ void audckbufEnable(bool enable)
 static int ClsqCount = 0;
 static void ClsqEnable(bool enable)
 {
-    printk("ClsqEnable ClsqCount = %d enable = %d \n", ClsqCount, enable);
 #if 0 //Sammodi 82 no need
     mutex_lock(& AudAna_lock);
     if (enable)
@@ -332,8 +325,6 @@ static void ClsqEnable(bool enable)
 static int TopCkCount = 0;
 static void Topck_Enable(bool enable)
 {
-    printk("Topck_Enable enable = %d TopCkCount = %d \n", enable, TopCkCount);
-
     mutex_lock(&Ana_Clk_Mutex);
     if (enable == true)
     {
@@ -352,20 +343,15 @@ static void Topck_Enable(bool enable)
         }
         if (TopCkCount <= 0)
         {
-            printk("TopCkCount <0 =%d\n ", TopCkCount);
             TopCkCount = 0;
         }
     }
     mutex_unlock(&Ana_Clk_Mutex);
-
-    printk("Topck_Enable enable 82 no this\n");
-
 }
 
 static int NvRegCount = 0;
 static void NvregEnable(bool enable)
 {
-    printk("NvregEnable NvRegCount == %d enable = %d \n", NvRegCount, enable);
 #if 0   //Sammodi 82 no
     mutex_lock(&Ana_Clk_Mutex);
     if (enable == true)
@@ -391,15 +377,12 @@ static void NvregEnable(bool enable)
     }
     mutex_unlock(&Ana_Clk_Mutex);
 #else
-    printk("NvregEnable enable 82 no this\n");
 #endif
 }
 
 static int VOW12MCKCount = 0;
 static void VOW12MCK_Enable(bool enable)
 {
-    printk("VOW12MCK_Enable VOW12MCKCount == %d enable = %d \n", VOW12MCKCount, enable);
-    printk("VOW12MCK_Enable enable 82 no this\n");
 }
 
 static void TopCtlChangeTrigger(void)
@@ -424,7 +407,6 @@ void Auddrv_Read_Efuse_HPOffset(void)
     int i = 0, j = 0;
     U32 efusevalue[3];
 
-    printk("Auddrv_Read_Efuse_HPOffset(+)\n");
 #ifdef RAINIER_NEED_CHECK
 
     //1. enable efuse ctrl engine clock
@@ -462,14 +444,12 @@ void Auddrv_Read_Efuse_HPOffset(void)
         while (reg_val == 1)
         {
             ret = pmic_read_interface(0xC1A, &reg_val, 0x1, 0);
-            printk("Auddrv_Read_Efuse_HPOffset polling 0xC1A=0x%x\n", reg_val);
         }
 
         udelay(1000);//Need to delay at least 1ms for 0xC1A and than can read 0xC18
 
         //6. read data
         efusevalue[j] = upmu_get_reg_value(0x0C18);
-        printk("HPoffset : efuse[%d]=0x%x\n", j, efusevalue[j]);
         j++;
     }
 
@@ -486,18 +466,8 @@ void Auddrv_Read_Efuse_HPOffset(void)
     RG_AUDHPLFINETRIM_VAUDP15_SPKHP = ((efusevalue[1] >> 15) & 0x1) + ((efusevalue[2] & 0x1) << 1);
     RG_AUDHPRFINETRIM_VAUDP15_SPKHP = ((efusevalue[2] >> 1) & 0x3);
 
-    printk("RG_AUDHPLTRIM_VAUDP15 = %x\n", RG_AUDHPLTRIM_VAUDP15);
-    printk("RG_AUDHPRTRIM_VAUDP15 = %x\n", RG_AUDHPRTRIM_VAUDP15);
-    printk("RG_AUDHPLFINETRIM_VAUDP15 = %x\n", RG_AUDHPLFINETRIM_VAUDP15);
-    printk("RG_AUDHPRFINETRIM_VAUDP15 = %x\n", RG_AUDHPRFINETRIM_VAUDP15);
-    printk("RG_AUDHPLTRIM_VAUDP15_SPKHP = %x\n", RG_AUDHPLTRIM_VAUDP15_SPKHP);
-    printk("RG_AUDHPRTRIM_VAUDP15_SPKHP = %x\n", RG_AUDHPRTRIM_VAUDP15_SPKHP);
-    printk("RG_AUDHPLFINETRIM_VAUDP15_SPKHP = %x\n", RG_AUDHPLFINETRIM_VAUDP15_SPKHP);
-    printk("RG_AUDHPRFINETRIM_VAUDP15_SPKHP = %x\n", RG_AUDHPRFINETRIM_VAUDP15_SPKHP);
 #else
-    printk("Auddrv_Read_Efuse_HPOffset not support\n");
 #endif
-    printk("Auddrv_Read_Efuse_HPOffset(-)\n");
 }
 
 EXPORT_SYMBOL(Auddrv_Read_Efuse_HPOffset);
@@ -505,7 +475,6 @@ EXPORT_SYMBOL(Auddrv_Read_Efuse_HPOffset);
 #ifdef CONFIG_MTK_SPEAKER
 static void Apply_Speaker_Gain(void)
 {
-    printk("%s Speaker_pga_gain= %d\n", __func__, Speaker_pga_gain);
     int index = Speaker_pga_gain;
     if (index > 11)
     {
@@ -517,8 +486,6 @@ static void Apply_Speaker_Gain(void)
         index = 1;    // min to 0dB
     }
 
-    printk("%s(), index = %d\n", __func__, index);
-
     Ana_Set_Reg(SPK_CON9, index << 8, 0x00000f00);
 }
 #else
@@ -530,7 +497,6 @@ static void Apply_Speaker_Gain(void)
 
 void setHpDcCalibration(unsigned int type, int dc_cali_value)
 {
-    printk("%s ,type=%d, value = %d\n", __func__, type, dc_cali_value);
     if (type == AUDIO_ANALOG_DEVICE_OUT_HEADSETR)
     {
         mHpRightDcCalibration = dc_cali_value;
@@ -567,13 +533,11 @@ static int mHprTrimOffset = 2048;
 
 void SetHplTrimOffset(int Offset)
 {
-    printk("%s Offset = %d\n", __func__, Offset);
     setHpDcCalibration(AUDIO_ANALOG_DEVICE_OUT_HEADSETL, (Offset * 18) / 10);
 }
 
 void SetHprTrimOffset(int Offset)
 {
-    printk("%s Offset = %d\n", __func__, Offset);
     setHpDcCalibration(AUDIO_ANALOG_DEVICE_OUT_HEADSETR, (Offset * 18) / 10);
 }
 
@@ -590,7 +554,6 @@ void EnableTrimbuffer(bool benable)
         Ana_Set_Reg(AUDDEC_ANA_CON3 , 0x0, 0x1); // Audio offset trimming buffer disable
     }
 #else
-    printk("%s , 82 no this\n", __func__);
 #endif
 }
 
@@ -702,7 +665,6 @@ void OpenAnalogTrimHardware(bool enable)
 
 void setHpDcCalibrationGain(unsigned int type, int gain_value)
 {
-    printk("%s ,type=%d, gain_value = %d\n", __func__, type, gain_value);
     // this will base on hw spec.
     uint32 index = 7;
     //const int HWgain[] = {-5, -3, -1, 1, 3, 5, 7, 9};
@@ -729,7 +691,6 @@ void setHpDcCalibrationGain(unsigned int type, int gain_value)
 
 void OpenAnalogHeadphone(bool bEnable)
 {
-    printk("OpenAnalogHeadphone bEnable = %d", bEnable);
     if (bEnable)
     {
         //SetHplTrimOffset(2048);
@@ -751,7 +712,6 @@ void OpenAnalogHeadphone(bool bEnable)
 
 bool OpenHeadPhoneImpedanceSetting(bool bEnable)
 {
-    printk("%s benable = %d\n", __func__, bEnable);
 #if 0 //Todo Sam
 
     if (GetDLStatus() == true)
@@ -819,15 +779,11 @@ static void SetHprOffset(int OffsetTrimming)
     short Dccompsentation = 0;
     int DCoffsetValue = 0;
     unsigned short RegValue = 0;
-    printk("%s OffsetTrimming = %d \n", __func__, OffsetTrimming);
     DCoffsetValue = OffsetTrimming *  1000000;
     DCoffsetValue = (DCoffsetValue / DC1devider);  // in uv
-    printk("%s DCoffsetValue = %d \n", __func__, DCoffsetValue);
     DCoffsetValue = (DCoffsetValue / DC1unit_in_uv);
-    printk("%s DCoffsetValue = %d \n", __func__, DCoffsetValue);
     Dccompsentation = DCoffsetValue;
     RegValue = Dccompsentation;
-    printk("%s RegValue = 0x%x\n", __func__, RegValue);
 #if 0 //Todo Sam
 
     Ana_Set_Reg(AFE_DL_DC_COMP_CFG1, RegValue , 0xffff);
@@ -839,15 +795,11 @@ static void SetHplOffset(int OffsetTrimming)
     short Dccompsentation = 0;
     int DCoffsetValue = 0;
     unsigned short RegValue = 0;
-    printk("%s OffsetTrimming = %d \n", __func__, OffsetTrimming);
     DCoffsetValue = OffsetTrimming * 1000000;
     DCoffsetValue = (DCoffsetValue / DC1devider);  // in uv
-    printk("%s DCoffsetValue = %d \n", __func__, DCoffsetValue);
     DCoffsetValue = (DCoffsetValue / DC1unit_in_uv);
-    printk("%s DCoffsetValue = %d \n", __func__, DCoffsetValue);
     Dccompsentation = DCoffsetValue;
     RegValue = Dccompsentation;
-    printk("%s RegValue = 0x%x\n", __func__, RegValue);
 #if 0 //Todo Sam
 
     Ana_Set_Reg(AFE_DL_DC_COMP_CFG0, RegValue  , 0xffff);
@@ -867,14 +819,12 @@ static void EnableDcCompensation(bool bEnable)
 static void SetHprOffsetTrim(void)
 {
     int OffsetTrimming = mHprTrimOffset - TrimOffset;
-    printk("%s mHprTrimOffset = %d TrimOffset = %d \n", __func__, mHprTrimOffset, TrimOffset);
     SetHprOffset(OffsetTrimming);
 }
 
 static void SetHpLOffsetTrim(void)
 {
     int OffsetTrimming = mHplTrimOffset - TrimOffset;
-    printk("%s mHprTrimOffset = %d TrimOffset = %d \n", __func__, mHplTrimOffset, TrimOffset);
     SetHplOffset(OffsetTrimming);
 }
 
@@ -912,7 +862,6 @@ static void SetDcCompenSation_SPKHP(void)
 
 static void SetDCcoupleNP(int MicBias, int mode)
 {
-    printk("%s MicBias= %d mode = %d\n", __func__, MicBias, mode);
 #if 0 //Todo Sam
 
     switch (mode)
@@ -964,7 +913,6 @@ static void SetDCcoupleNP(int MicBias, int mode)
 uint32 GetULFrequency(uint32 frequency)
 {
     uint32 Reg_value = 0;
-    printk("%s frequency =%d\n", __func__, frequency);
     switch (frequency)
     {
         case 8000:
@@ -983,7 +931,6 @@ uint32 GetULFrequency(uint32 frequency)
 
 uint32 GetDLFrequency(uint32 frequency)
 {
-    printk("%s frequency =%d\n", __func__, frequency);
     uint32 Reg_value = 0;
     switch (frequency)
     {
@@ -1013,8 +960,6 @@ uint32 GetDLFrequency(uint32 frequency)
             break;
         case 48000:
             Reg_value = 10;
-        default:
-            printk("GetDLFrequency with frequency = %d", frequency);
     }
     return Reg_value;
 }
@@ -1061,13 +1006,11 @@ static int mt63xx_codec_prepare(struct snd_pcm_substream *substream , struct snd
 {
     if (substream->stream == SNDRV_PCM_STREAM_CAPTURE)
     {
-        printk("mt63xx_codec_prepare set up SNDRV_PCM_STREAM_CAPTURE rate = %d\n", substream->runtime->rate);
         mBlockSampleRate[AUDIO_ANALOG_DEVICE_IN_ADC] = substream->runtime->rate;
 
     }
     else if (substream->stream == SNDRV_PCM_STREAM_PLAYBACK)
     {
-        printk("mt63xx_codec_prepare set up SNDRV_PCM_STREAM_PLAYBACK rate = %d\n", substream->runtime->rate);
         mBlockSampleRate[AUDIO_ANALOG_DEVICE_OUT_DAC] = substream->runtime->rate;
     }
     return 0;
@@ -1337,8 +1280,6 @@ uint32 GetDLNewIFFrequency(unsigned int frequency)
             break;
         case 48000:
             Reg_value = 8;
-        default:
-            printk("ApplyDLNewIFFrequency with frequency = %d", frequency);
     }
     return Reg_value;
 }
@@ -1356,15 +1297,12 @@ uint32 GetULNewIFFrequency(unsigned int frequency)
         case 48000:
             Reg_value = 3;
         default:
-            printk("GetULNewIFFrequency with frequency = %d", frequency);
     }
-    printk("GetULNewIFFrequency Reg_value = %d", Reg_value);
     return Reg_value;
 }
 
 static void TurnOnDacPower(void)
 {
-    printk("TurnOnDacPower\n");
     uint32 dlFreq;
     audckbufEnable(true);
     ClsqEnable(true);
@@ -1412,7 +1350,6 @@ static void TurnOnDacPower(void)
 
 static void TurnOffDacPower(void)
 {
-    printk("TurnOffDacPower\n");
 
 #if 0 //Sammodi todo
     Ana_Set_Reg(AFE_DL_SRC2_CON0_L , 0x0000 , 0xffff); //bit0, Turn off down-link
@@ -1445,7 +1382,6 @@ static void TurnOffDacPower(void)
 static void HeadsetVoloumeRestore(void)
 {
     int index = 0, oldindex = 0, offset = 0, count = 1;
-    printk("%s\n", __func__);
 #if 0 //Sammodi todo
     index =   8 ;
     oldindex = mCodec_data->mAudio_Ana_Volume[AUDIO_ANALOG_VOLUME_HPOUTR];
@@ -1475,7 +1411,6 @@ static void HeadsetVoloumeRestore(void)
     }
     Ana_Set_Reg(ZCD_CON2, 0x0489, 0xf9f);
 #else
-    printk("%s 82 no this\n", __func__);
 #endif
 }
 
@@ -1485,7 +1420,6 @@ static void HeadsetVolumeSet(void)
     int index = mCodec_data->mAudio_Ana_Volume[AUDIO_ANALOG_VOLUME_HPOUTL];
     int index2 = 7;
 
-    printk("%s(), Lindex = %d\n", __func__, index);
 
     //gain[] = {-5, -3, -1, 1, 3, 5, 7, 9};
 
@@ -1495,8 +1429,6 @@ static void HeadsetVolumeSet(void)
     }
     index2 -= index;
 
-    printk("%s(), Lindex = %d, Lindex2 = %d \n", __func__, index,index2);
-
     Ana_Set_Reg(AUDTOP_CON5, index2 << 12, 0x00007000);
 
     //right channel
@@ -1504,8 +1436,6 @@ static void HeadsetVolumeSet(void)
     index2 = 7;
     //gain[] = {-5, -3, -1, 1, 3, 5, 7, 9};
 
-    printk("%s(), Rindex = %d\n", __func__, index);
-
     if (index > index2)
     {
         index = index2;
@@ -1531,11 +1461,8 @@ static void Audio_Amp_Change(int channels , bool enable)
         if (mCodec_data->mAudio_Ana_DevicePower[AUDIO_ANALOG_DEVICE_OUT_HEADSETL] == false &&
             mCodec_data->mAudio_Ana_DevicePower[AUDIO_ANALOG_DEVICE_OUT_HEADSETR] == false)
         {
-            printk("%s \n", __func__);
-
             //need to modify sequence
             //DC compensation setting
-            printk("%s, mHpRightDcCalibration [%d] mHpLeftDcCalibration [%d]",__func__, mHpRightDcCalibration, mHpLeftDcCalibration);
             Ana_Set_Reg(ABB_AFE_CON3, mHpLeftDcCalibration, 0xffff); // LCH cpmpensation value
             Ana_Set_Reg(ABB_AFE_CON4, mHpRightDcCalibration, 0xffff); // RCH cpmpensation value
             Ana_Set_Reg(ABB_AFE_CON10, 0x0001, 0x0001); // enable DC cpmpensation
@@ -1564,7 +1491,6 @@ static void Audio_Amp_Change(int channels , bool enable)
         if (mCodec_data->mAudio_Ana_DevicePower[AUDIO_ANALOG_DEVICE_OUT_HEADSETL] == false &&
             mCodec_data->mAudio_Ana_DevicePower[AUDIO_ANALOG_DEVICE_OUT_HEADSETR] == false)
         {
-            printk("Audio_Amp_Change off amp\n");
             HeadsetVoloumeRestore();// Set HPR/HPL gain as -1dB, step by step
             //Ana_Set_Reg(ZCD_CON2, 0x0F9F, 0xffff); //Set HPR/HPL gain as minimum (~ -40dB)
 #if 0 //Sammodi todo
@@ -1613,7 +1539,6 @@ static void Audio_Amp_Change(int channels , bool enable)
 static int Audio_AmpL_Get(struct snd_kcontrol *kcontrol,
                           struct snd_ctl_elem_value *ucontrol)
 {
-    printk("Audio_AmpL_Get = %d\n", mCodec_data->mAudio_Ana_DevicePower[AUDIO_ANALOG_DEVICE_OUT_HEADSETL]);
     ucontrol->value.integer.value[0] = mCodec_data->mAudio_Ana_DevicePower[AUDIO_ANALOG_DEVICE_OUT_HEADSETL];
     return 0;
 }
@@ -1622,7 +1547,6 @@ static int Audio_AmpL_Set(struct snd_kcontrol *kcontrol, struct snd_ctl_elem_val
 {
     mutex_lock(&Ana_Ctrl_Mutex);
 
-    printk("%s() gain = %ld \n ", __func__, ucontrol->value.integer.value[0]);
     if ((ucontrol->value.integer.value[0]  == true) && (mCodec_data->mAudio_Ana_DevicePower[AUDIO_ANALOG_DEVICE_OUT_HEADSETL]  == false))
     {
         Audio_Amp_Change(AUDIO_ANALOG_CHANNELS_LEFT1 , true);
@@ -1640,7 +1564,6 @@ static int Audio_AmpL_Set(struct snd_kcontrol *kcontrol, struct snd_ctl_elem_val
 static int Audio_AmpR_Get(struct snd_kcontrol *kcontrol,
                           struct snd_ctl_elem_value *ucontrol)
 {
-    printk("Audio_AmpR_Get = %d\n", mCodec_data->mAudio_Ana_DevicePower[AUDIO_ANALOG_DEVICE_OUT_HEADSETR]);
     ucontrol->value.integer.value[0] = mCodec_data->mAudio_Ana_DevicePower[AUDIO_ANALOG_DEVICE_OUT_HEADSETR];
     return 0;
 }
@@ -1649,7 +1572,6 @@ static int Audio_AmpR_Set(struct snd_kcontrol *kcontrol, struct snd_ctl_elem_val
 {
     mutex_lock(&Ana_Ctrl_Mutex);
 
-    printk("%s()\n", __func__);
     if ((ucontrol->value.integer.value[0]  == true) && (mCodec_data->mAudio_Ana_DevicePower[AUDIO_ANALOG_DEVICE_OUT_HEADSETR]  == false))
     {
         Audio_Amp_Change(AUDIO_ANALOG_CHANNELS_RIGHT1 , true);
@@ -1679,11 +1601,9 @@ static void Voice_Amp_Change(bool enable)
     uint16 i = 3;
     if (enable)
     {
-        printk("%s \n", __func__);
         if (GetDLStatus() == false)
         {
             TurnOnDacPower();
-            printk("Voice_Amp_Change on amp\n");
 
             //set analog part (voice HS playback)
             Ana_Set_Reg(AUDTOP_CON7, 0x2430, 0xffff); // Set voice buffer to smallest -22dB.
@@ -1702,7 +1622,6 @@ static void Voice_Amp_Change(bool enable)
     }
     else
     {
-        printk("Voice_Amp_Change turn off \n");
         uint16 i;
         i = (Ana_Get_Reg(AUDTOP_CON7) & 0xf0) >> 4;
         i = (i < 4) ? 4 : i;
@@ -1731,7 +1650,6 @@ static void Voice_Amp_Change(bool enable)
 static int Voice_Amp_Get(struct snd_kcontrol *kcontrol,
                          struct snd_ctl_elem_value *ucontrol)
 {
-    printk("Voice_Amp_Get = %d\n", mCodec_data->mAudio_Ana_DevicePower[AUDIO_ANALOG_DEVICE_OUT_EARPIECEL]);
     ucontrol->value.integer.value[0] = mCodec_data->mAudio_Ana_DevicePower[AUDIO_ANALOG_DEVICE_OUT_EARPIECEL];
     return 0;
 }
@@ -1739,7 +1657,6 @@ static int Voice_Amp_Get(struct snd_kcontrol *kcontrol,
 static int Voice_Amp_Set(struct snd_kcontrol *kcontrol, struct snd_ctl_elem_value *ucontrol)
 {
     mutex_lock(&Ana_Ctrl_Mutex);
-    printk("%s()\n", __func__);
     if ((ucontrol->value.integer.value[0]  == true) && (mCodec_data->mAudio_Ana_DevicePower[AUDIO_ANALOG_DEVICE_OUT_EARPIECEL]  == false))
     {
         Voice_Amp_Change(true);
@@ -1763,7 +1680,6 @@ static void Speaker_Amp_Change(bool enable)
         {
             TurnOnDacPower();
         }
-        printk("%s \n", __func__);
 
         Ana_Set_Reg(AUDTOP_CON7, 0x2400, 0xffff); // Set voice buffer to smallest -22dB.
         Ana_Set_Reg(AUDTOP_CON6, 0xB7F6, 0xffff); // enable input short of HP to prevent voice signal leakage . Enable 2.4V.
@@ -1816,7 +1732,6 @@ static void Speaker_Amp_Change(bool enable)
     }
     else
     {
-        printk("turn off Speaker_Amp_Change \n");
 #ifdef CONFIG_MTK_SPEAKER
         if (Speaker_mode != AUDIO_SPEAKER_MODE_RECEIVER)    //2in1 speaker do not need this
         {
@@ -1866,14 +1781,12 @@ static void Speaker_Amp_Change(bool enable)
 static int Speaker_Amp_Get(struct snd_kcontrol *kcontrol,
                            struct snd_ctl_elem_value *ucontrol)
 {
-    printk("%s()\n", __func__);
     ucontrol->value.integer.value[0] = mCodec_data->mAudio_Ana_DevicePower[AUDIO_ANALOG_DEVICE_OUT_SPEAKERL] ;
     return 0;
 }
 
 static int Speaker_Amp_Set(struct snd_kcontrol *kcontrol, struct snd_ctl_elem_value *ucontrol)
 {
-    printk("%s() value = %ld \n ", __func__, ucontrol->value.integer.value[0]);
     if ((ucontrol->value.integer.value[0] == true) && (mCodec_data->mAudio_Ana_DevicePower[AUDIO_ANALOG_DEVICE_OUT_SPEAKERL]  == false))
     {
         Speaker_Amp_Change(true);
@@ -1910,15 +1823,12 @@ static void Ext_Speaker_Amp_Change(bool enable)
     ret = GetGPIO_Info(5, &pin_extspkamp, &pin_mode_extspkamp);
     if (ret < 0)
     {
-        printk("Ext_Speaker_Amp_Change GetGPIO_Info FAIL!!! \n");
         return;
     }
 
     if (enable)
     {
-        printk("Ext_Speaker_Amp_Change ON+ \n");
 #ifndef CONFIG_MTK_SPEAKER
-        printk("Ext_Speaker_Amp_Change ON set GPIO \n");
         mt_set_gpio_mode(pin_extspkamp, GPIO_MODE_00); //GPIO117: DPI_D3, mode 0
         mt_set_gpio_pull_enable(pin_extspkamp, GPIO_PULL_ENABLE);
         mt_set_gpio_dir(pin_extspkamp, GPIO_DIR_OUT); // output
@@ -1933,18 +1843,15 @@ static void Ext_Speaker_Amp_Change(bool enable)
 #endif
         msleep(SPK_WARM_UP_TIME);
 #endif
-        printk("Ext_Speaker_Amp_Change ON- \n");
     }
     else
     {
-        printk("Ext_Speaker_Amp_Change OFF+ \n");
 #ifndef CONFIG_MTK_SPEAKER
         //mt_set_gpio_mode(pin_extspkamp, GPIO_MODE_00); //GPIO117: DPI_D3, mode 0
         mt_set_gpio_dir(pin_extspkamp, GPIO_DIR_OUT); // output
         mt_set_gpio_out(pin_extspkamp, GPIO_OUT_ZERO); // low disbale
         udelay(500);
 #endif
-        printk("Ext_Speaker_Amp_Change OFF- \n");
     }
 }
 
@@ -1997,9 +1904,7 @@ static void Ext_Speaker_Amp_Change(bool enable)
 
     if (enable)
     {
-        printk("Ext_Speaker_Amp_Change ON+ \n");
 #ifndef CONFIG_MTK_SPEAKER
-        printk("Ext_Speaker_Amp_Change ON set GPIO \n");
         mt_set_gpio_mode(GPIO_EXT_SPKAMP_EN_PIN, GPIO_MODE_00); //GPIO117: DPI_D3, mode 0
         mt_set_gpio_pull_enable(GPIO_EXT_SPKAMP_EN_PIN, GPIO_PULL_ENABLE);
         mt_set_gpio_dir(GPIO_EXT_SPKAMP_EN_PIN, GPIO_DIR_OUT); // output
@@ -2014,18 +1919,15 @@ static void Ext_Speaker_Amp_Change(bool enable)
 #endif
         msleep(SPK_WARM_UP_TIME);
 #endif
-        printk("Ext_Speaker_Amp_Change ON- \n");
     }
     else
     {
-        printk("Ext_Speaker_Amp_Change OFF+ \n");
 #ifndef CONFIG_MTK_SPEAKER
         //mt_set_gpio_mode(GPIO_EXT_SPKAMP_EN_PIN, GPIO_MODE_00); //GPIO117: DPI_D3, mode 0
         mt_set_gpio_dir(GPIO_EXT_SPKAMP_EN_PIN, GPIO_DIR_OUT); // output
         mt_set_gpio_out(GPIO_EXT_SPKAMP_EN_PIN, GPIO_OUT_ZERO); // low disbale
         udelay(500);
 #endif
-        printk("Ext_Speaker_Amp_Change OFF- \n");
     }
 }
 #endif
@@ -2033,7 +1935,6 @@ static void Ext_Speaker_Amp_Change(bool enable)
 static int Ext_Speaker_Amp_Get(struct snd_kcontrol *kcontrol,
                                struct snd_ctl_elem_value *ucontrol)
 {
-    printk("%s()\n", __func__);
     ucontrol->value.integer.value[0] = mCodec_data->mAudio_Ana_DevicePower[AUDIO_ANALOG_DEVICE_OUT_EXTSPKAMP] ;
     return 0;
 }
@@ -2041,7 +1942,6 @@ static int Ext_Speaker_Amp_Get(struct snd_kcontrol *kcontrol,
 static int Ext_Speaker_Amp_Set(struct snd_kcontrol *kcontrol, struct snd_ctl_elem_value *ucontrol)
 {
 
-    printk("%s() gain = %ld \n ", __func__, ucontrol->value.integer.value[0]);
     if (ucontrol->value.integer.value[0])
     {
         Ext_Speaker_Amp_Change(true);
@@ -2057,17 +1957,14 @@ static int Ext_Speaker_Amp_Set(struct snd_kcontrol *kcontrol, struct snd_ctl_ele
 
 static void Headset_Speaker_Amp_Change(bool enable)
 {
-    printk("%s() 82\n ", __func__);
     if (enable)
     {
         if (GetDLStatus() == false)
         {
             TurnOnDacPower();
         }
-        printk("turn on Speaker_Amp_Change \n");
 
         //DC compensation setting
-        printk("%s, mHpRightDcCalibration [%d] mHpLeftDcCalibration [%d]", __func__,mHpRightDcCalibration, mHpLeftDcCalibration);
         Ana_Set_Reg(ABB_AFE_CON3, mHpLeftDcCalibration, 0xffff); // LCH cpmpensation value
         Ana_Set_Reg(ABB_AFE_CON4, mHpRightDcCalibration, 0xffff); // RCH cpmpensation value
         Ana_Set_Reg(ABB_AFE_CON10, 0x0001, 0x0001); // enable DC cpmpensation
@@ -2162,7 +2059,6 @@ static void Headset_Speaker_Amp_Change(bool enable)
 static int Headset_Speaker_Amp_Get(struct snd_kcontrol *kcontrol,
                                    struct snd_ctl_elem_value *ucontrol)
 {
-    printk("%s()\n", __func__);
     ucontrol->value.integer.value[0] = mCodec_data->mAudio_Ana_DevicePower[AUDIO_ANALOG_DEVICE_OUT_SPEAKER_HEADSET_R] ;
     return 0;
 }
@@ -2171,7 +2067,6 @@ static int Headset_Speaker_Amp_Set(struct snd_kcontrol *kcontrol, struct snd_ctl
 {
     //struct snd_soc_codec *codec = snd_kcontrol_chip(kcontrol);
 
-    printk("%s() gain = %lu \n ", __func__, ucontrol->value.integer.value[0]);
     if ((ucontrol->value.integer.value[0]  == true) && (mCodec_data->mAudio_Ana_DevicePower[AUDIO_ANALOG_DEVICE_OUT_SPEAKER_HEADSET_R]  == false))
     {
         Headset_Speaker_Amp_Change(true);
@@ -2213,7 +2108,6 @@ static int Audio_Speaker_Pga_Gain_Set(struct snd_kcontrol *kcontrol, struct snd_
 {
     Speaker_pga_gain = ucontrol->value.integer.value[0];
 
-    printk("%s Speaker_pga_gain= %d\n", __func__, Speaker_pga_gain);
     //    struct snd_soc_codec *codec = snd_kcontrol_chip(kcontrol);
     int index = 0;
     // this will base on hw spec, use 15dB for
@@ -2222,7 +2116,6 @@ static int Audio_Speaker_Pga_Gain_Set(struct snd_kcontrol *kcontrol, struct snd_
 
     if (ucontrol->value.enumerated.item[0] > ARRAY_SIZE(speaker_PGA_function))
     {
-        printk("return -EINVAL\n");
         return -EINVAL;
     }
     index = Speaker_pga_gain;
@@ -2237,7 +2130,6 @@ static int Audio_Speaker_Pga_Gain_Set(struct snd_kcontrol *kcontrol, struct snd_
         index = 1;    // min to 0dB
     }
 
-    printk("%s(), index = %d\n", __func__, index);
 
     Ana_Set_Reg(SPK_CON9, index << 8, 0x00000f00);
 
@@ -2255,7 +2147,6 @@ static int Audio_Speaker_OcFlag_Get(struct snd_kcontrol *kcontrol,
 
 static int Audio_Speaker_OcFlag_Set(struct snd_kcontrol *kcontrol, struct snd_ctl_elem_value *ucontrol)
 {
-    printk("%s is not support setting \n", __func__);
     return 0;
 }
 
@@ -2333,10 +2224,8 @@ int Audio_AuxAdcData_Get_ext(void)
 #ifdef RAINIER_NEED_CHECK // todo
     //int dRetValue = PMIC_IMM_GetOneChannelValue(AUX_ICLASSAB_AP, 1, 0);
     //int dRetValue = PMIC_IMM_GetOneChannelValue(MT6323_AUX_CH9, 1, 0);
-    printk("%s dRetValue 0x%x \n", __func__, dRetValue);
     return dRetValue;
 #else
-    printk("%s , 82 todo\n", __func__);
 #endif
     return 0;
 }
@@ -2353,7 +2242,6 @@ static int Audio_AuxAdcData_Get(struct snd_kcontrol *kcontrol,
 #else
     ucontrol->value.integer.value[0] = 0;
 #endif
-    printk("%s dMax = 0x%lx \n", __func__, ucontrol->value.integer.value[0]);
     return 0;
 
 }
@@ -2361,7 +2249,6 @@ static int Audio_AuxAdcData_Get(struct snd_kcontrol *kcontrol,
 static int Audio_AuxAdcData_Set(struct snd_kcontrol *kcontrol, struct snd_ctl_elem_value *ucontrol)
 {
     dAuxAdcChannel = ucontrol->value.integer.value[0];
-    printk("%s dAuxAdcChannel = 0x%x \n", __func__, dAuxAdcChannel);
     return 0;
 }
 
@@ -2390,7 +2277,6 @@ static const char *DAC_DL_PGA_Speaker_GAIN[] = {"8Db", "7Db", "6Db", "5Db", "4Db
 static int Lineout_PGAL_Get(struct snd_kcontrol *kcontrol,
                             struct snd_ctl_elem_value *ucontrol)
 {
-    printk("Speaker_PGA_Get = %d\n", mCodec_data->mAudio_Ana_Volume[AUDIO_ANALOG_VOLUME_SPKL]);
     ucontrol->value.integer.value[0] = mCodec_data->mAudio_Ana_Volume[AUDIO_ANALOG_VOLUME_SPKL];
     return 0;
 }
@@ -2398,11 +2284,9 @@ static int Lineout_PGAL_Get(struct snd_kcontrol *kcontrol,
 static int Lineout_PGAL_Set(struct snd_kcontrol *kcontrol, struct snd_ctl_elem_value *ucontrol)
 {
     int index = 0;
-    printk("%s(), index = %d\n", __func__, ucontrol->value.enumerated.item[0]);
 
     if (ucontrol->value.enumerated.item[0] > ARRAY_SIZE(DAC_DL_PGA_Speaker_GAIN))
     {
-        printk("return -EINVAL\n");
         return -EINVAL;
     }
     index = ucontrol->value.integer.value[0];
@@ -2420,7 +2304,6 @@ static int Lineout_PGAL_Set(struct snd_kcontrol *kcontrol, struct snd_ctl_elem_v
 static int Lineout_PGAR_Get(struct snd_kcontrol *kcontrol,
                             struct snd_ctl_elem_value *ucontrol)
 {
-    printk("%s  = %d\n", __func__, mCodec_data->mAudio_Ana_Volume[AUDIO_ANALOG_VOLUME_SPKR]);
     ucontrol->value.integer.value[0] = mCodec_data->mAudio_Ana_Volume[AUDIO_ANALOG_VOLUME_SPKR];
     return 0;
 }
@@ -2429,11 +2312,9 @@ static int Lineout_PGAR_Set(struct snd_kcontrol *kcontrol, struct snd_ctl_elem_v
 {
     //    struct snd_soc_codec *codec = snd_kcontrol_chip(kcontrol);
     int index = 0;
-    printk("%s(), index = %d\n", __func__, ucontrol->value.enumerated.item[0]);
 
     if (ucontrol->value.enumerated.item[0] > ARRAY_SIZE(DAC_DL_PGA_Speaker_GAIN))
     {
-        printk("return -EINVAL\n");
         return -EINVAL;
     }
     index = ucontrol->value.integer.value[0];
@@ -2451,7 +2332,6 @@ static int Lineout_PGAR_Set(struct snd_kcontrol *kcontrol, struct snd_ctl_elem_v
 static int Handset_PGA_Get(struct snd_kcontrol *kcontrol,
                            struct snd_ctl_elem_value *ucontrol)
 {
-    printk("Handset_PGA_Get = %d\n", mCodec_data->mAudio_Ana_Volume[AUDIO_ANALOG_VOLUME_HSOUTL]);
     ucontrol->value.integer.value[0] = mCodec_data->mAudio_Ana_Volume[AUDIO_ANALOG_VOLUME_HSOUTL];
     return 0;
 }
@@ -2462,11 +2342,9 @@ static int Handset_PGA_Set(struct snd_kcontrol *kcontrol, struct snd_ctl_elem_va
     int index = 0;
     int index2 = 15;
     //gain[] =  {-21, -19, -17, -15, -13, -11, -9, -7, -5, -3, -1, 1, 3, 5, 7, 9};
-    printk("%s(), index = %d\n", __func__, ucontrol->value.enumerated.item[0]);
 
     if (ucontrol->value.enumerated.item[0] > ARRAY_SIZE(DAC_DL_PGA_Handset_GAIN))
     {
-        printk("return -EINVAL\n");
         return -EINVAL;
     }
     index = ucontrol->value.integer.value[0];
@@ -2476,7 +2354,6 @@ static int Handset_PGA_Set(struct snd_kcontrol *kcontrol, struct snd_ctl_elem_va
         index = index2;
     }
 
-    printk("%s(), index = %d, index2 = %d \n", __func__, index,index2);
 
     Ana_Set_Reg(AUDTOP_CON7, index << 4, 0x000000f0);
 
@@ -2487,7 +2364,6 @@ static int Handset_PGA_Set(struct snd_kcontrol *kcontrol, struct snd_ctl_elem_va
 static int Headset_PGAL_Get(struct snd_kcontrol *kcontrol,
                             struct snd_ctl_elem_value *ucontrol)
 {
-    printk("Headset_PGAL_Get = %d\n", mCodec_data->mAudio_Ana_Volume[AUDIO_ANALOG_VOLUME_HPOUTL]);
     ucontrol->value.integer.value[0] = mCodec_data->mAudio_Ana_Volume[AUDIO_ANALOG_VOLUME_HPOUTL];
     return 0;
 }
@@ -2502,7 +2378,6 @@ static int Headset_PGAL_Set(struct snd_kcontrol *kcontrol, struct snd_ctl_elem_v
 
     if (ucontrol->value.enumerated.item[0] > ARRAY_SIZE(DAC_DL_PGA_Headset_GAIN))
     {
-        printk("return -EINVAL\n");
         return -EINVAL;
     }
     index = ucontrol->value.integer.value[0];
@@ -2512,7 +2387,6 @@ static int Headset_PGAL_Set(struct snd_kcontrol *kcontrol, struct snd_ctl_elem_v
     }
     index2 -= index;
 
-    printk("%s(), index = %d, index2 = %d \n", __func__, index,index2);
 
     Ana_Set_Reg(AUDTOP_CON5, index2 << 12, 0x00007000);
 
@@ -2523,7 +2397,6 @@ static int Headset_PGAL_Set(struct snd_kcontrol *kcontrol, struct snd_ctl_elem_v
 static int Headset_PGAR_Get(struct snd_kcontrol *kcontrol,
                             struct snd_ctl_elem_value *ucontrol)
 {
-    printk("Headset_PGAR_Get = %d\n", mCodec_data->mAudio_Ana_Volume[AUDIO_ANALOG_VOLUME_HPOUTR]);
     ucontrol->value.integer.value[0] = mCodec_data->mAudio_Ana_Volume[AUDIO_ANALOG_VOLUME_HPOUTR];
     return 0;
 }
@@ -2536,11 +2409,9 @@ static int Headset_PGAR_Set(struct snd_kcontrol *kcontrol, struct snd_ctl_elem_v
     int index2 = 7;
     //gain[] = {-5, -3, -1, 1, 3, 5, 7, 9};
 
-    printk("%s(), index = %d\n", __func__, ucontrol->value.enumerated.item[0]);
 
     if (ucontrol->value.enumerated.item[0] > ARRAY_SIZE(DAC_DL_PGA_Headset_GAIN))
     {
-        printk("return -EINVAL\n");
         return -EINVAL;
     }
     index = ucontrol->value.integer.value[0];
@@ -2550,8 +2421,6 @@ static int Headset_PGAR_Set(struct snd_kcontrol *kcontrol, struct snd_ctl_elem_v
     }
     index2 -= index;
 
-    printk("%s(), index = %d, index2 = %d \n", __func__, index,index2);
-
     Ana_Set_Reg(AUDTOP_CON5, index2 << 8, 0x000000700);
 
     mCodec_data->mAudio_Ana_Volume[AUDIO_ANALOG_VOLUME_HPOUTR] = ucontrol->value.integer.value[0];
@@ -2563,7 +2432,6 @@ static uint32 mHp_Impedance = 32;
 static int Audio_Hp_Impedance_Get(struct snd_kcontrol *kcontrol,
                                   struct snd_ctl_elem_value *ucontrol)
 {
-    printk("Audio_Hp_Impedance_Get = %d\n", mHp_Impedance);
     ucontrol->value.integer.value[0] = mHp_Impedance;
     return 0;
 
@@ -2572,21 +2440,18 @@ static int Audio_Hp_Impedance_Get(struct snd_kcontrol *kcontrol,
 static int Audio_Hp_Impedance_Set(struct snd_kcontrol *kcontrol, struct snd_ctl_elem_value *ucontrol)
 {
     mHp_Impedance = ucontrol->value.integer.value[0];
-    printk("%s Audio_Hp_Impedance_Set = 0x%x \n", __func__, mHp_Impedance);
     return 0;
 }
 
 static int Aud_Clk_Buf_Get(struct snd_kcontrol *kcontrol,
                            struct snd_ctl_elem_value *ucontrol)
 {
-    printk("\%s n", __func__);
     ucontrol->value.integer.value[0] = audck_buf_Count;
     return 0;
 }
 
 static int Aud_Clk_Buf_Set(struct snd_kcontrol *kcontrol, struct snd_ctl_elem_value *ucontrol)
 {
-    printk("%s(), value = %d\n", __func__, ucontrol->value.enumerated.item[0]);
     if (ucontrol->value.integer.value[0])
     {
         audckbufEnable(true);
@@ -2645,7 +2510,6 @@ void SetMicPGAGain(void)
 
     //set mic1 PGA gain
     index = mCodec_data->mAudio_Ana_Volume[AUDIO_ANALOG_VOLUME_MICAMP1];
-    printk("%s(),mic1 index=%d,index2=%d\n", __func__,index,index2);
     if (index > index2)
     {
         index = index2;
@@ -2656,7 +2520,6 @@ void SetMicPGAGain(void)
 
     //set mic2 PGA gain
     index = mCodec_data->mAudio_Ana_Volume[AUDIO_ANALOG_VOLUME_MICAMP2];
-    printk("%s(),mic2 index=%d,index2=%d\n", __func__,index,index2);
     if (index > index2)
     {
         index = index2;
@@ -2695,7 +2558,6 @@ static bool GetDacStatus(void)
 static bool TurnOnADcPowerACC(int ADCType, bool enable)
 {
     bool refmic_using_ADC_L;
-    printk("%s 82 ADCType=%d, enable=%x,AdcStatus=%x ,DLStatus=%x \n", __func__, ADCType,enable,GetAdcStatus(),GetDLStatus());
     if (enable)
     {
         uint32 SampleRate_VUL1 = mBlockSampleRate[AUDIO_ANALOG_DEVICE_IN_ADC];
@@ -2805,7 +2667,6 @@ static bool TurnOnADcPowerACC(int ADCType, bool enable)
 
 static bool TurnOnADcPowerDmic(int ADCType, bool enable)
 {
-    printk("%s ADCType = %d enable = %d, AdcStatus=%x \n", __func__, ADCType, enable, GetAdcStatus());
 
     if (enable)
     {
@@ -2844,7 +2705,6 @@ static bool TurnOnADcPowerDmic(int ADCType, bool enable)
 
 static bool TurnOnADcPowerDCC(int ADCType, bool enable)
 {
-    printk("%s ADCType = %d enable = %d, not support \n", __func__, ADCType, enable);
 
     return true;
 }
@@ -2859,14 +2719,12 @@ static bool TurnOnADcPowerDCCECM(int ADCType, bool enable)
 
 static bool TurnOnVOWDigitalHW(bool enable)
 {
-    printk("%s enable = %d 82 no this\n", __func__, enable);
 
     return true;
 }
 
 static bool TurnOnVOWADcPowerACC(int MicType, bool enable)
 {
-    printk("%s, MicType=%d, enable = %d 82 no this\n", __func__, MicType,enable);
     return true;
 }
 
@@ -2918,14 +2776,12 @@ static const struct soc_enum Audio_UL_Enum[] =
 static int Audio_ADC1_Get(struct snd_kcontrol *kcontrol,
                           struct snd_ctl_elem_value *ucontrol)
 {
-    printk("Audio_ADC1_Get = %d\n", mCodec_data->mAudio_Ana_DevicePower[AUDIO_ANALOG_DEVICE_IN_ADC1]);
     ucontrol->value.integer.value[0] = mCodec_data->mAudio_Ana_DevicePower[AUDIO_ANALOG_DEVICE_IN_ADC1];
     return 0;
 }
 
 static int Audio_ADC1_Set(struct snd_kcontrol *kcontrol, struct snd_ctl_elem_value *ucontrol)
 {
-    printk("%s()\n", __func__);
     mutex_lock(&Ana_Power_Mutex);
     if (ucontrol->value.integer.value[0])
     {
@@ -2974,14 +2830,12 @@ static int Audio_ADC1_Set(struct snd_kcontrol *kcontrol, struct snd_ctl_elem_val
 static int Audio_ADC2_Get(struct snd_kcontrol *kcontrol,
                           struct snd_ctl_elem_value *ucontrol)
 {
-    printk("Audio_ADC2_Get = %d\n", mCodec_data->mAudio_Ana_DevicePower[AUDIO_ANALOG_DEVICE_IN_ADC2]);
     ucontrol->value.integer.value[0] = mCodec_data->mAudio_Ana_DevicePower[AUDIO_ANALOG_DEVICE_IN_ADC2];
     return 0;
 }
 
 static int Audio_ADC2_Set(struct snd_kcontrol *kcontrol, struct snd_ctl_elem_value *ucontrol)
 {
-    printk("%s()\n", __func__);
     mutex_lock(&Ana_Power_Mutex);
     if (ucontrol->value.integer.value[0])
     {
@@ -3056,18 +2910,15 @@ static int Audio_ADC4_Set(struct snd_kcontrol *kcontrol, struct snd_ctl_elem_val
 static int Audio_ADC1_Sel_Get(struct snd_kcontrol *kcontrol,
                               struct snd_ctl_elem_value *ucontrol)
 {
-    printk("%s() = %d\n", __func__, mCodec_data->mAudio_Ana_Mux[AUDIO_ANALOG_MUX_IN_MIC1]);
     ucontrol->value.integer.value[0] = mCodec_data->mAudio_Ana_Mux[AUDIO_ANALOG_MUX_IN_MIC1];
     return 0;
 }
 
 static int Audio_ADC1_Sel_Set(struct snd_kcontrol *kcontrol, struct snd_ctl_elem_value *ucontrol)
 {
-    printk("%s()\n", __func__);
 
     if (ucontrol->value.enumerated.item[0] > ARRAY_SIZE(Adc_Input_Sel))
     {
-        printk("return -EINVAL\n");
         return -EINVAL;
     }
 #if 0 //Sammodi todo
@@ -3089,7 +2940,6 @@ static int Audio_ADC1_Sel_Set(struct snd_kcontrol *kcontrol, struct snd_ctl_elem
         printk("%s() warning \n ", __func__);
     }
 #endif
-    printk("%s() done \n", __func__);
     mCodec_data->mAudio_Ana_Mux[AUDIO_ANALOG_MUX_IN_MIC1] = ucontrol->value.integer.value[0];
     return 0;
 }
@@ -3097,17 +2947,14 @@ static int Audio_ADC1_Sel_Set(struct snd_kcontrol *kcontrol, struct snd_ctl_elem
 static int Audio_ADC2_Sel_Get(struct snd_kcontrol *kcontrol,
                               struct snd_ctl_elem_value *ucontrol)
 {
-    printk("%s() = %d\n", __func__, mCodec_data->mAudio_Ana_Mux[AUDIO_ANALOG_MUX_IN_MIC2]);
     ucontrol->value.integer.value[0] = mCodec_data->mAudio_Ana_Mux[AUDIO_ANALOG_MUX_IN_MIC2];
     return 0;
 }
 
 static int Audio_ADC2_Sel_Set(struct snd_kcontrol *kcontrol, struct snd_ctl_elem_value *ucontrol)
 {
-    printk("%s()\n", __func__);
     if (ucontrol->value.enumerated.item[0] > ARRAY_SIZE(Adc_Input_Sel))
     {
-        printk("return -EINVAL\n");
         return -EINVAL;
     }
 #if 0 //Sammodi todo
@@ -3128,7 +2975,6 @@ static int Audio_ADC2_Sel_Set(struct snd_kcontrol *kcontrol, struct snd_ctl_elem
         printk("%s() warning \n ", __func__);
     }
 #endif
-    printk("%s() done \n", __func__);
     mCodec_data->mAudio_Ana_Mux[AUDIO_ANALOG_MUX_IN_MIC2] = ucontrol->value.integer.value[0];
     return 0;
 }
@@ -3162,7 +3008,6 @@ static int Audio_ADC4_Sel_Set(struct snd_kcontrol *kcontrol, struct snd_ctl_elem
 
 static bool AudioPreAmp1_Sel(int Mul_Sel)
 {
-    printk("%s Mul_Sel = %d ", __func__, Mul_Sel);
 #if 0 //Sammodi todo
     if (Mul_Sel == 0)
     {
@@ -3192,29 +3037,23 @@ static bool AudioPreAmp1_Sel(int Mul_Sel)
 static int Audio_PreAmp1_Get(struct snd_kcontrol *kcontrol,
                              struct snd_ctl_elem_value *ucontrol)
 {
-    printk("%s() mCodec_data->mAudio_Ana_Mux[AUDIO_ANALOG_MUX_IN_PREAMP_1]; = %d\n", __func__, mCodec_data->mAudio_Ana_Mux[AUDIO_ANALOG_MUX_IN_PREAMP_1]);
     ucontrol->value.integer.value[0] = mCodec_data->mAudio_Ana_Mux[AUDIO_ANALOG_MUX_IN_PREAMP_1];
     return 0;
 }
 
 static int Audio_PreAmp1_Set(struct snd_kcontrol *kcontrol, struct snd_ctl_elem_value *ucontrol)
 {
-    printk("%s()\n", __func__);
-
     if (ucontrol->value.enumerated.item[0] > ARRAY_SIZE(PreAmp_Mux_function))
     {
-        printk("return -EINVAL\n");
         return -EINVAL;
     }
     mCodec_data->mAudio_Ana_Mux[AUDIO_ANALOG_MUX_IN_PREAMP_1] = ucontrol->value.integer.value[0];
     AudioPreAmp1_Sel(mCodec_data->mAudio_Ana_Mux[AUDIO_ANALOG_MUX_IN_PREAMP_1]);
-    printk("%s() done \n", __func__);
     return 0;
 }
 
 static bool AudioPreAmp2_Sel(int Mul_Sel)
 {
-    printk("%s Mul_Sel = %d ", __func__, Mul_Sel);
 #if 0 //Sammodi todo
     if (Mul_Sel == 0)
     {
@@ -3244,23 +3083,19 @@ static bool AudioPreAmp2_Sel(int Mul_Sel)
 static int Audio_PreAmp2_Get(struct snd_kcontrol *kcontrol,
                              struct snd_ctl_elem_value *ucontrol)
 {
-    printk("%s() mCodec_data->mAudio_Ana_Mux[AUDIO_ANALOG_MUX_IN_PREAMP_2]; = %d\n", __func__, mCodec_data->mAudio_Ana_Mux[AUDIO_ANALOG_MUX_IN_PREAMP_2]);
     ucontrol->value.integer.value[0] = mCodec_data->mAudio_Ana_Mux[AUDIO_ANALOG_MUX_IN_PREAMP_2];
     return 0;
 }
 
 static int Audio_PreAmp2_Set(struct snd_kcontrol *kcontrol, struct snd_ctl_elem_value *ucontrol)
 {
-    printk("%s()\n", __func__);
 
     if (ucontrol->value.enumerated.item[0] > ARRAY_SIZE(PreAmp_Mux_function))
     {
-        printk("return -EINVAL\n");
         return -EINVAL;
     }
     mCodec_data->mAudio_Ana_Mux[AUDIO_ANALOG_MUX_IN_PREAMP_2] = ucontrol->value.integer.value[0];
     AudioPreAmp2_Sel(mCodec_data->mAudio_Ana_Mux[AUDIO_ANALOG_MUX_IN_PREAMP_2]);
-    printk("%s() done \n", __func__);
     return 0;
 }
 
@@ -3268,7 +3103,6 @@ static int Audio_PreAmp2_Set(struct snd_kcontrol *kcontrol, struct snd_ctl_elem_
 static int Audio_PGA1_Get(struct snd_kcontrol *kcontrol,
                           struct snd_ctl_elem_value *ucontrol)
 {
-    printk("Audio_PGA1_Get = %d\n", mCodec_data->mAudio_Ana_Volume[AUDIO_ANALOG_VOLUME_MICAMP1]);
     ucontrol->value.integer.value[0] = mCodec_data->mAudio_Ana_Volume[AUDIO_ANALOG_VOLUME_MICAMP1];
     return 0;
 }
@@ -3277,14 +3111,11 @@ static int Audio_PGA1_Set(struct snd_kcontrol *kcontrol, struct snd_ctl_elem_val
 {
     int index = 0;
     int index2 = 5;
-    printk("%s()\n", __func__);
     if (ucontrol->value.enumerated.item[0] > ARRAY_SIZE(ADC_UL_PGA_GAIN))
     {
-        printk("return -EINVAL\n");
         return -EINVAL;
     }
     index = ucontrol->value.integer.value[0];
-    printk("%s(),index=%d\n", __func__,index);
     //index = index / 6;
     if (index > index2)
     {
@@ -3292,7 +3123,6 @@ static int Audio_PGA1_Set(struct snd_kcontrol *kcontrol, struct snd_ctl_elem_val
     }
     //const int PreAmpGain[] = {-6, 0, 6, 12, 18, 24};
     //index2 -= index;
-    printk("%s(),index=%d,index2=%d\n", __func__,index,index2);
 
     Ana_Set_Reg(AUDTOP_CON0, index << 4, 0x00000070);
 
@@ -3304,7 +3134,6 @@ static int Audio_PGA1_Set(struct snd_kcontrol *kcontrol, struct snd_ctl_elem_val
 static int Audio_PGA2_Get(struct snd_kcontrol *kcontrol,
                           struct snd_ctl_elem_value *ucontrol)
 {
-    printk("Audio_PGA2_Get = %d\n", mCodec_data->mAudio_Ana_Volume[AUDIO_ANALOG_VOLUME_MICAMP2]);
     ucontrol->value.integer.value[0] = mCodec_data->mAudio_Ana_Volume[AUDIO_ANALOG_VOLUME_MICAMP2];
     return 0;
 }
@@ -3313,14 +3142,11 @@ static int Audio_PGA2_Set(struct snd_kcontrol *kcontrol, struct snd_ctl_elem_val
 {
     int index = 0;
     int index2 = 5;
-    printk("%s()\n", __func__);
     if (ucontrol->value.enumerated.item[0] > ARRAY_SIZE(ADC_UL_PGA_GAIN))
     {
-        printk("return -EINVAL\n");
         return -EINVAL;
     }
     index = ucontrol->value.integer.value[0];
-    printk("%s(),index=%d\n", __func__,index);
 
     if (index > index2)
     {
@@ -3328,7 +3154,6 @@ static int Audio_PGA2_Set(struct snd_kcontrol *kcontrol, struct snd_ctl_elem_val
     }
     //const int PreAmpGain[] = {-6, 0, 6, 12, 18, 24};
 
-    printk("%s(),index=%d\n", __func__,index);
 
     Ana_Set_Reg(AUDTOP_CON1, index << 8, 0x00000700);
 
@@ -3365,7 +3190,6 @@ static int Audio_PGA4_Set(struct snd_kcontrol *kcontrol, struct snd_ctl_elem_val
 static int Audio_MicSource1_Get(struct snd_kcontrol *kcontrol,
                                 struct snd_ctl_elem_value *ucontrol)
 {
-    printk("Audio_MicSource1_Get = %d\n", mCodec_data->mAudio_Ana_Mux[AUDIO_MICSOURCE_MUX_IN_1]);
     ucontrol->value.integer.value[0] = mCodec_data->mAudio_Ana_Mux[AUDIO_MICSOURCE_MUX_IN_1];
     return 0;
 }
@@ -3374,14 +3198,11 @@ static int Audio_MicSource1_Set(struct snd_kcontrol *kcontrol, struct snd_ctl_el
 {
     //80 used for ADC1 Mic source selection, "ADC1" is main_mic, "ADC2" is headset_mic, "ADC3" is ref main
     int index = 0;
-    printk("%s()\n", __func__);
     if (ucontrol->value.enumerated.item[0] > ARRAY_SIZE(Pmic_Digital_Mux))
     {
-        printk("return -EINVAL\n");
         return -EINVAL;
     }
     index = ucontrol->value.integer.value[0];
-    printk("%s() index = %d done \n", __func__, index);
     mCodec_data->mAudio_Ana_Mux[AUDIO_MICSOURCE_MUX_IN_1] = ucontrol->value.integer.value[0];
 
     return 0;
@@ -3390,7 +3211,6 @@ static int Audio_MicSource1_Set(struct snd_kcontrol *kcontrol, struct snd_ctl_el
 static int Audio_MicSource2_Get(struct snd_kcontrol *kcontrol,
                                 struct snd_ctl_elem_value *ucontrol)
 {
-    printk("Audio_MicSource2_Get = %d\n", mCodec_data->mAudio_Ana_Mux[AUDIO_MICSOURCE_MUX_IN_2]);
     ucontrol->value.integer.value[0] = mCodec_data->mAudio_Ana_Mux[AUDIO_MICSOURCE_MUX_IN_2];
     return 0;
 }
@@ -3398,14 +3218,11 @@ static int Audio_MicSource2_Get(struct snd_kcontrol *kcontrol,
 static int Audio_MicSource2_Set(struct snd_kcontrol *kcontrol, struct snd_ctl_elem_value *ucontrol)
 {
     int index = 0;
-    printk("%s()\n", __func__);
     if (ucontrol->value.enumerated.item[0] > ARRAY_SIZE(Pmic_Digital_Mux))
     {
-        printk("return -EINVAL\n");
         return -EINVAL;
     }
     index = ucontrol->value.integer.value[0];
-    printk("%s() index = %d done \n", __func__, index);
     mCodec_data->mAudio_Ana_Mux[AUDIO_MICSOURCE_MUX_IN_2] = ucontrol->value.integer.value[0];
 
     return 0;
@@ -3442,42 +3259,34 @@ static int Audio_MicSource4_Set(struct snd_kcontrol *kcontrol, struct snd_ctl_el
 static int Audio_Mic1_Mode_Select_Get(struct snd_kcontrol *kcontrol,
                                       struct snd_ctl_elem_value *ucontrol)
 {
-    printk("%s() mAudio_Analog_Mic1_mode = %d\n", __func__, mAudio_Analog_Mic1_mode);
     ucontrol->value.integer.value[0] = mAudio_Analog_Mic1_mode;
     return 0;
 }
 
 static int Audio_Mic1_Mode_Select_Set(struct snd_kcontrol *kcontrol, struct snd_ctl_elem_value *ucontrol)
 {
-    printk("%s()\n", __func__);
     if (ucontrol->value.enumerated.item[0] > ARRAY_SIZE(Audio_AnalogMic_Mode))
     {
-        printk("return -EINVAL\n");
         return -EINVAL;
     }
     mAudio_Analog_Mic1_mode = ucontrol->value.integer.value[0];
-    printk("%s() mAudio_Analog_Mic1_mode = %d \n", __func__, mAudio_Analog_Mic1_mode);
     return 0;
 }
 
 static int Audio_Mic2_Mode_Select_Get(struct snd_kcontrol *kcontrol,
                                       struct snd_ctl_elem_value *ucontrol)
 {
-    printk("%s()  = %d\n", __func__, mAudio_Analog_Mic2_mode);
     ucontrol->value.integer.value[0] = mAudio_Analog_Mic2_mode;
     return 0;
 }
 
 static int Audio_Mic2_Mode_Select_Set(struct snd_kcontrol *kcontrol, struct snd_ctl_elem_value *ucontrol)
 {
-    printk("%s()\n", __func__);
     if (ucontrol->value.enumerated.item[0] > ARRAY_SIZE(Audio_AnalogMic_Mode))
     {
-        printk("return -EINVAL\n");
         return -EINVAL;
     }
     mAudio_Analog_Mic2_mode = ucontrol->value.integer.value[0];
-    printk("%s() mAudio_Analog_Mic2_mode = %d \n", __func__, mAudio_Analog_Mic2_mode);
     return 0;
 }
 
@@ -3485,63 +3294,51 @@ static int Audio_Mic2_Mode_Select_Set(struct snd_kcontrol *kcontrol, struct snd_
 static int Audio_Mic3_Mode_Select_Get(struct snd_kcontrol *kcontrol,
                                       struct snd_ctl_elem_value *ucontrol)
 {
-    printk("%s()  = %d\n", __func__, mAudio_Analog_Mic3_mode);
     ucontrol->value.integer.value[0] = mAudio_Analog_Mic3_mode;
     return 0;
 }
 
 static int Audio_Mic3_Mode_Select_Set(struct snd_kcontrol *kcontrol, struct snd_ctl_elem_value *ucontrol)
 {
-    printk("%s()\n", __func__);
     if (ucontrol->value.enumerated.item[0] > ARRAY_SIZE(Audio_AnalogMic_Mode))
     {
-        printk("return -EINVAL\n");
         return -EINVAL;
     }
     mAudio_Analog_Mic3_mode = ucontrol->value.integer.value[0];
-    printk("%s() mAudio_Analog_Mic3_mode = %d \n", __func__, mAudio_Analog_Mic3_mode);
     return 0;
 }
 
 static int Audio_Mic4_Mode_Select_Get(struct snd_kcontrol *kcontrol,
                                       struct snd_ctl_elem_value *ucontrol)
 {
-    printk("%s()  = %d\n", __func__, mAudio_Analog_Mic4_mode);
     ucontrol->value.integer.value[0] = mAudio_Analog_Mic4_mode;
     return 0;
 }
 
 static int Audio_Mic4_Mode_Select_Set(struct snd_kcontrol *kcontrol, struct snd_ctl_elem_value *ucontrol)
 {
-    printk("%s()\n", __func__);
     if (ucontrol->value.enumerated.item[0] > ARRAY_SIZE(Audio_AnalogMic_Mode))
     {
-        printk("return -EINVAL\n");
         return -EINVAL;
     }
     mAudio_Analog_Mic4_mode = ucontrol->value.integer.value[0];
-    printk("%s() mAudio_Analog_Mic4_mode = %d \n", __func__, mAudio_Analog_Mic4_mode);
     return 0;
 }
 
 static int Audio_Adc_Power_Mode_Get(struct snd_kcontrol *kcontrol,
                                     struct snd_ctl_elem_value *ucontrol)
 {
-    printk("%s()  = %d\n", __func__, mAdc_Power_Mode);
     ucontrol->value.integer.value[0] = mAdc_Power_Mode;
     return 0;
 }
 
 static int Audio_Adc_Power_Mode_Set(struct snd_kcontrol *kcontrol, struct snd_ctl_elem_value *ucontrol)
 {
-    printk("%s()\n", __func__);
     if (ucontrol->value.enumerated.item[0] > ARRAY_SIZE(ADC_power_mode))
     {
-        printk("return -EINVAL\n");
         return -EINVAL;
     }
     mAdc_Power_Mode = ucontrol->value.integer.value[0];
-    printk("%s() mAdc_Power_Mode = %d \n", __func__, mAdc_Power_Mode);
     return 0;
 }
 
@@ -3549,17 +3346,14 @@ static int Audio_Adc_Power_Mode_Set(struct snd_kcontrol *kcontrol, struct snd_ct
 static int Audio_Vow_ADC_Func_Switch_Get(struct snd_kcontrol *kcontrol,
                                          struct snd_ctl_elem_value *ucontrol)
 {
-    printk("%s()  = %d\n", __func__, mAudio_Vow_Analog_Func_Enable);
     ucontrol->value.integer.value[0] = mAudio_Vow_Analog_Func_Enable;
     return 0;
 }
 
 static int Audio_Vow_ADC_Func_Switch_Set(struct snd_kcontrol *kcontrol, struct snd_ctl_elem_value *ucontrol)
 {
-    printk("%s()\n", __func__);
     if (ucontrol->value.enumerated.item[0] > ARRAY_SIZE(Audio_VOW_ADC_Function))
     {
-        printk("return -EINVAL\n");
         return -EINVAL;
     }
 
@@ -3573,24 +3367,20 @@ static int Audio_Vow_ADC_Func_Switch_Set(struct snd_kcontrol *kcontrol, struct s
     }
 
     mAudio_Vow_Analog_Func_Enable = ucontrol->value.integer.value[0];
-    printk("%s() mAudio_Vow_Analog_Func_Enable = %d \n", __func__, mAudio_Vow_Analog_Func_Enable);
     return 0;
 }
 
 static int Audio_Vow_Digital_Func_Switch_Get(struct snd_kcontrol *kcontrol,
                                              struct snd_ctl_elem_value *ucontrol)
 {
-    printk("%s()  = %d\n", __func__, mAudio_Vow_Digital_Func_Enable);
     ucontrol->value.integer.value[0] = mAudio_Vow_Digital_Func_Enable;
     return 0;
 }
 
 static int Audio_Vow_Digital_Func_Switch_Set(struct snd_kcontrol *kcontrol, struct snd_ctl_elem_value *ucontrol)
 {
-    printk("%s()\n", __func__);
     if (ucontrol->value.enumerated.item[0] > ARRAY_SIZE(Audio_VOW_Digital_Function))
     {
-        printk("return -EINVAL\n");
         return -EINVAL;
     }
 
@@ -3604,7 +3394,6 @@ static int Audio_Vow_Digital_Func_Switch_Set(struct snd_kcontrol *kcontrol, stru
     }
 
     mAudio_Vow_Digital_Func_Enable = ucontrol->value.integer.value[0];
-    printk("%s() mAudio_Vow_Digital_Func_Enable = %d \n", __func__, mAudio_Vow_Digital_Func_Enable);
     return 0;
 }
 
@@ -3612,21 +3401,17 @@ static int Audio_Vow_Digital_Func_Switch_Set(struct snd_kcontrol *kcontrol, stru
 static int Audio_Vow_MIC_Type_Select_Get(struct snd_kcontrol *kcontrol,
                                          struct snd_ctl_elem_value *ucontrol)
 {
-    printk("%s()  = %d\n", __func__, mAudio_VOW_Mic_type);
     ucontrol->value.integer.value[0] = mAudio_VOW_Mic_type;
     return 0;
 }
 
 static int Audio_Vow_MIC_Type_Select_Set(struct snd_kcontrol *kcontrol, struct snd_ctl_elem_value *ucontrol)
 {
-    printk("%s()\n", __func__);
     if (ucontrol->value.enumerated.item[0] > ARRAY_SIZE(Audio_VOW_MIC_Type))
     {
-        printk("return -EINVAL\n");
         return -EINVAL;
     }
     mAudio_VOW_Mic_type = ucontrol->value.integer.value[0];
-    printk("%s() mAudio_VOW_Mic_type = %d \n", __func__, mAudio_VOW_Mic_type);
     return 0;
 }
 
@@ -3635,7 +3420,6 @@ static int Audio_Vow_Cfg0_Get(struct snd_kcontrol *kcontrol,
                               struct snd_ctl_elem_value *ucontrol)
 {
     int value = /*Ana_Get_Reg(AFE_VOW_CFG0)*/reg_AFE_VOW_CFG0;
-    printk("%s()  = %d\n", __func__, value);
     ucontrol->value.integer.value[0] = value;
     return 0;
 }
@@ -3643,7 +3427,6 @@ static int Audio_Vow_Cfg0_Get(struct snd_kcontrol *kcontrol,
 static int Audio_Vow_Cfg0_Set(struct snd_kcontrol *kcontrol,
                               struct snd_ctl_elem_value *ucontrol)
 {
-    printk("%s()  = %d\n", __func__, (int)(ucontrol->value.integer.value[0]));
     //Ana_Set_Reg(AFE_VOW_CFG0, ucontrol->value.integer.value[0], 0xffff);
     reg_AFE_VOW_CFG0 = ucontrol->value.integer.value[0];
     return 0;
@@ -3653,7 +3436,6 @@ static int Audio_Vow_Cfg1_Get(struct snd_kcontrol *kcontrol,
                               struct snd_ctl_elem_value *ucontrol)
 {
     int value = /*Ana_Get_Reg(AFE_VOW_CFG1)*/reg_AFE_VOW_CFG1;
-    printk("%s()  = %d\n", __func__, value);
     ucontrol->value.integer.value[0] = value;
     return 0;
 }
@@ -3661,7 +3443,6 @@ static int Audio_Vow_Cfg1_Get(struct snd_kcontrol *kcontrol,
 static int Audio_Vow_Cfg1_Set(struct snd_kcontrol *kcontrol,
                               struct snd_ctl_elem_value *ucontrol)
 {
-    printk("%s()  = %ld\n", __func__, ucontrol->value.integer.value[0]);
     //Ana_Set_Reg(AFE_VOW_CFG1, ucontrol->value.integer.value[0], 0xffff);
     reg_AFE_VOW_CFG1 = ucontrol->value.integer.value[0];
     return 0;
@@ -3671,7 +3452,6 @@ static int Audio_Vow_Cfg2_Get(struct snd_kcontrol *kcontrol,
                               struct snd_ctl_elem_value *ucontrol)
 {
     int value = /*Ana_Get_Reg(AFE_VOW_CFG2)*/reg_AFE_VOW_CFG2;
-    printk("%s()  = %d\n", __func__, value);
     ucontrol->value.integer.value[0] = value;
     return 0;
 }
@@ -3679,7 +3459,6 @@ static int Audio_Vow_Cfg2_Get(struct snd_kcontrol *kcontrol,
 static int Audio_Vow_Cfg2_Set(struct snd_kcontrol *kcontrol,
                               struct snd_ctl_elem_value *ucontrol)
 {
-    printk("%s()  = %ld\n", __func__, ucontrol->value.integer.value[0]);
     //Ana_Set_Reg(AFE_VOW_CFG2, ucontrol->value.integer.value[0], 0xffff);
     reg_AFE_VOW_CFG2 = ucontrol->value.integer.value[0];
     return 0;
@@ -3689,7 +3468,6 @@ static int Audio_Vow_Cfg3_Get(struct snd_kcontrol *kcontrol,
                               struct snd_ctl_elem_value *ucontrol)
 {
     int value = /*Ana_Get_Reg(AFE_VOW_CFG3)*/reg_AFE_VOW_CFG3;
-    printk("%s()  = %d\n", __func__, value);
     ucontrol->value.integer.value[0] = value;
     return 0;
 }
@@ -3697,7 +3475,6 @@ static int Audio_Vow_Cfg3_Get(struct snd_kcontrol *kcontrol,
 static int Audio_Vow_Cfg3_Set(struct snd_kcontrol *kcontrol,
                               struct snd_ctl_elem_value *ucontrol)
 {
-    printk("%s()  = %ld\n", __func__, ucontrol->value.integer.value[0]);
     //Ana_Set_Reg(AFE_VOW_CFG3, ucontrol->value.integer.value[0], 0xffff);
     reg_AFE_VOW_CFG3 = ucontrol->value.integer.value[0];
     return 0;
@@ -3707,7 +3484,6 @@ static int Audio_Vow_Cfg4_Get(struct snd_kcontrol *kcontrol,
                               struct snd_ctl_elem_value *ucontrol)
 {
     int value = /*Ana_Get_Reg(AFE_VOW_CFG4)*/reg_AFE_VOW_CFG4;
-    printk("%s()  = %d\n", __func__, value);
     ucontrol->value.integer.value[0] = value;
     return 0;
 }
@@ -3715,7 +3491,6 @@ static int Audio_Vow_Cfg4_Get(struct snd_kcontrol *kcontrol,
 static int Audio_Vow_Cfg4_Set(struct snd_kcontrol *kcontrol,
                               struct snd_ctl_elem_value *ucontrol)
 {
-    printk("%s()  = %ld\n", __func__, ucontrol->value.integer.value[0]);
     //Ana_Set_Reg(AFE_VOW_CFG4, ucontrol->value.integer.value[0], 0xffff);
     reg_AFE_VOW_CFG4 = ucontrol->value.integer.value[0];
     return 0;
@@ -3725,7 +3500,6 @@ static int Audio_Vow_Cfg5_Get(struct snd_kcontrol *kcontrol,
                               struct snd_ctl_elem_value *ucontrol)
 {
     int value = /*Ana_Get_Reg(AFE_VOW_CFG5)*/reg_AFE_VOW_CFG5;
-    printk("%s()  = %d\n", __func__, value);
     ucontrol->value.integer.value[0] = value;
     return 0;
 }
@@ -3733,7 +3507,6 @@ static int Audio_Vow_Cfg5_Get(struct snd_kcontrol *kcontrol,
 static int Audio_Vow_Cfg5_Set(struct snd_kcontrol *kcontrol,
                               struct snd_ctl_elem_value *ucontrol)
 {
-    printk("%s()  = %ld\n", __func__, ucontrol->value.integer.value[0]);
     //Ana_Set_Reg(AFE_VOW_CFG5, ucontrol->value.integer.value[0], 0xffff);
     reg_AFE_VOW_CFG5 = ucontrol->value.integer.value[0];
     return 0;
@@ -3743,7 +3516,6 @@ static int Audio_Vow_State_Get(struct snd_kcontrol *kcontrol,
                                struct snd_ctl_elem_value *ucontrol)
 {
     int value = mIsVOWOn;
-    printk("%s()  = %d\n", __func__, value);
     ucontrol->value.integer.value[0] = value;
     return 0;
 }
@@ -3751,7 +3523,6 @@ static int Audio_Vow_State_Get(struct snd_kcontrol *kcontrol,
 static int Audio_Vow_State_Set(struct snd_kcontrol *kcontrol,
                                struct snd_ctl_elem_value *ucontrol)
 {
-    //printk("%s()  = %ld\n", __func__, ucontrol->value.integer.value[0]);
     //reg_AFE_VOW_CFG5 = ucontrol->value.integer.value[0];
     return 0;
 }
@@ -3782,7 +3553,6 @@ static int SineTable_UL2_Set(struct snd_kcontrol *kcontrol, struct snd_ctl_elem_
 static int SineTable_UL2_Get(struct snd_kcontrol *kcontrol,
                              struct snd_ctl_elem_value *ucontrol)
 {
-    printk("%s()\n", __func__);
     ucontrol->value.integer.value[0] = SineTable_UL2_flag;
     return 0;
 }
@@ -3790,7 +3560,6 @@ static int SineTable_UL2_Get(struct snd_kcontrol *kcontrol,
 static int SineTable_DAC_HP_Get(struct snd_kcontrol *kcontrol,
                                 struct snd_ctl_elem_value *ucontrol)
 {
-    printk("%s()\n", __func__);
     ucontrol->value.integer.value[0] = SineTable_DAC_HP_flag;
     return 0;
 }
@@ -3798,7 +3567,6 @@ static int SineTable_DAC_HP_Get(struct snd_kcontrol *kcontrol,
 static int SineTable_DAC_HP_Set(struct snd_kcontrol *kcontrol, struct snd_ctl_elem_value *ucontrol)
 {
     //6752 TODO?
-    printk("%s()\n", __func__);
     return 0;
 }
 
@@ -3811,14 +3579,12 @@ static bool DAC_LOOP_DAC_HS_flag = false;
 static int ADC_LOOP_DAC_HS_Get(struct snd_kcontrol *kcontrol,
                                struct snd_ctl_elem_value *ucontrol)
 {
-    printk("%s()\n", __func__);
     ucontrol->value.integer.value[0] = DAC_LOOP_DAC_HS_flag;
     return 0;
 }
 
 static int ADC_LOOP_DAC_HS_Set(struct snd_kcontrol *kcontrol, struct snd_ctl_elem_value *ucontrol)
 {
-    printk("%s()\n", __func__);
     if (ucontrol->value.integer.value[0])
     {
         DAC_LOOP_DAC_HS_flag = ucontrol->value.integer.value[0];
@@ -3836,7 +3602,6 @@ static bool DAC_LOOP_DAC_HP_flag = false;
 static int ADC_LOOP_DAC_HP_Get(struct snd_kcontrol *kcontrol,
                                struct snd_ctl_elem_value *ucontrol)
 {
-    printk("%s()\n", __func__);
     ucontrol->value.integer.value[0] = DAC_LOOP_DAC_HP_flag;
     return 0;
 }
@@ -3844,7 +3609,6 @@ static int ADC_LOOP_DAC_HP_Get(struct snd_kcontrol *kcontrol,
 static int ADC_LOOP_DAC_HP_Set(struct snd_kcontrol *kcontrol, struct snd_ctl_elem_value *ucontrol)
 {
 
-    printk("%s()\n", __func__);
     if (ucontrol->value.integer.value[0])
     {
         DAC_LOOP_DAC_HP_flag = ucontrol->value.integer.value[0];
@@ -3862,7 +3626,6 @@ static bool Voice_Call_DAC_DAC_HS_flag = false;
 static int Voice_Call_DAC_DAC_HS_Get(struct snd_kcontrol *kcontrol,
                                      struct snd_ctl_elem_value *ucontrol)
 {
-    printk("%s()\n", __func__);
     ucontrol->value.integer.value[0] = Voice_Call_DAC_DAC_HS_flag;
     return 0;
 }
@@ -3870,7 +3633,6 @@ static int Voice_Call_DAC_DAC_HS_Get(struct snd_kcontrol *kcontrol,
 static int Voice_Call_DAC_DAC_HS_Set(struct snd_kcontrol *kcontrol, struct snd_ctl_elem_value *ucontrol)
 {
     //6752 TODO
-    printk("%s()\n", __func__);
     return 0;
 }
 
@@ -3953,7 +3715,6 @@ static const struct snd_soc_dapm_route mtk_audio_map[] =
 
 static void mt6323_codec_init_reg(struct snd_soc_codec *codec)
 {
-    printk("%s  \n", __func__);
 #if 0 //Sammodi todo
     Ana_Set_Reg(TOP_CLKSQ, 0x0 , 0x0001); //Disable CLKSQ 26MHz
     Ana_Set_Reg(AUDDEC_ANA_CON8, 0x0002, 0x0002); // disable AUDGLB
@@ -3973,7 +3734,6 @@ static void mt6323_codec_init_reg(struct snd_soc_codec *codec)
 
 void InitCodecDefault(void)
 {
-    printk("%s\n", __func__);
     mCodec_data->mAudio_Ana_Volume[AUDIO_ANALOG_VOLUME_MICAMP1] = 3;
     mCodec_data->mAudio_Ana_Volume[AUDIO_ANALOG_VOLUME_MICAMP2] = 3;
     mCodec_data->mAudio_Ana_Volume[AUDIO_ANALOG_VOLUME_MICAMP3] = 3;
@@ -3990,7 +3750,6 @@ void InitCodecDefault(void)
 static int mt6323_codec_probe(struct snd_soc_codec *codec)
 {
     struct snd_soc_dapm_context *dapm = &codec->dapm;
-    printk("%s()\n", __func__);
     if (mInitCodec == true)
     {
         return 0;
@@ -4038,14 +3797,12 @@ static int mt6323_codec_probe(struct snd_soc_codec *codec)
 
 static int mt6323_codec_remove(struct snd_soc_codec *codec)
 {
-    printk("%s()\n", __func__);
     return 0;
 }
 
 static unsigned int mt6323_read(struct snd_soc_codec *codec,
                                 unsigned int reg)
 {
-    printk("mt6323_read reg = 0x%x", reg);
     Ana_Get_Reg(reg);
     return 0;
 }
@@ -4053,7 +3810,6 @@ static unsigned int mt6323_read(struct snd_soc_codec *codec,
 static int mt6323_write(struct snd_soc_codec *codec, unsigned int reg,
                         unsigned int value)
 {
-    printk("mt6323_write reg = 0x%x  value= 0x%x\n", reg, value);
     Ana_Set_Reg(reg , value , 0xffffffff);
     return 0;
 }
@@ -4105,15 +3861,12 @@ static int mtk_mt6323_codec_dev_probe(struct platform_device *pdev)
         dev_set_name(&pdev->dev, "%s", MT_SOC_CODEC_NAME);
     }
 
-    printk("%s: dev name %s\n", __func__, dev_name(&pdev->dev));
     return snd_soc_register_codec(&pdev->dev,
                                   &soc_mtk_codec, mtk_6323_dai_codecs, ARRAY_SIZE(mtk_6323_dai_codecs));
 }
 
 static int mtk_mt6323_codec_dev_remove(struct platform_device *pdev)
 {
-    printk("%s:\n", __func__);
-
     snd_soc_unregister_codec(&pdev->dev);
     return 0;
 
@@ -4203,7 +3956,6 @@ static struct platform_device *soc_mtk_codec6323_dev;
 static int __init mtk_mt6323_codec_init(void)
 {
     int ret = 0;
-    printk("%s:\n", __func__);
 #ifdef CONFIG_OF
     //Auddrv_getGPIO_info();
 #else
@@ -4227,7 +3979,6 @@ module_init(mtk_mt6323_codec_init);
 
 static void __exit mtk_mt6323_codec_exit(void)
 {
-    printk("%s:\n", __func__);
 
     platform_driver_unregister(&mtk_codec_6323_driver);
 }
diff --git a/sound/soc/mediatek/mt_soc_audio_8163/mt_soc_pcm_routing.c b/sound/soc/mediatek/mt_soc_audio_8163/mt_soc_pcm_routing.c
index fe704db14..acca37c24 100644
--- a/sound/soc/mediatek/mt_soc_audio_8163/mt_soc_pcm_routing.c
+++ b/sound/soc/mediatek/mt_soc_audio_8163/mt_soc_pcm_routing.c
@@ -126,7 +126,6 @@ int Get_Audio_Mode(void)
 static int Audio_SideGen_Get(struct snd_kcontrol *kcontrol,
                              struct snd_ctl_elem_value *ucontrol)
 {
-    printk("Audio_AmpR_Get = %d\n", mDac_Sinegen);
     ucontrol->value.integer.value[0] = mDac_Sinegen;
     return 0;
 }
@@ -134,10 +133,8 @@ static int Audio_SideGen_Get(struct snd_kcontrol *kcontrol,
 static int Audio_SideGen_Set(struct snd_kcontrol *kcontrol, struct snd_ctl_elem_value *ucontrol)
 {
     int index = 0;
-    printk("%s()\n", __func__);
     if (ucontrol->value.enumerated.item[0] > ARRAY_SIZE(DAC_DL_SIDEGEN))
     {
-        printk("return -EINVAL\n");
         return -EINVAL;
     }
     index = ucontrol->value.integer.value[0];
@@ -240,7 +237,6 @@ static int Audio_SideGen_Set(struct snd_kcontrol *kcontrol, struct snd_ctl_elem_
 static int Audio_SideGen_SampleRate_Get(struct snd_kcontrol *kcontrol,
                                         struct snd_ctl_elem_value *ucontrol)
 {
-    printk("%s\n", __func__);
     ucontrol->value.integer.value[0] = mDac_SampleRate;
     return 0;
 }
@@ -248,11 +244,9 @@ static int Audio_SideGen_SampleRate_Get(struct snd_kcontrol *kcontrol,
 static int Audio_SideGen_SampleRate_Set(struct snd_kcontrol *kcontrol, struct snd_ctl_elem_value *ucontrol)
 {
     int index = 0;
-    printk("%s()\n", __func__);
 
     if (ucontrol->value.enumerated.item[0] > ARRAY_SIZE(DAC_DL_SIDEGEN_SAMEPLRATE))
     {
-        printk("return -EINVAL\n");
         return -EINVAL;
     }
     index = ucontrol->value.integer.value[0];
@@ -299,18 +293,15 @@ static int Audio_SideGen_SampleRate_Set(struct snd_kcontrol *kcontrol, struct sn
 static int Audio_SideGen_Amplitude_Get(struct snd_kcontrol *kcontrol,
                                        struct snd_ctl_elem_value *ucontrol)
 {
-    printk("Audio_AmpR_Get = %d\n", mDac_Sidegen_Amplitude);
     return 0;
 }
 
 static int Audio_SideGen_Amplitude_Set(struct snd_kcontrol *kcontrol, struct snd_ctl_elem_value *ucontrol)
 {
     int index = 0;
-    printk("%s()\n", __func__);
 
     if (ucontrol->value.enumerated.item[0] > ARRAY_SIZE(DAC_DL_SIDEGEN_AMPLITUE))
     {
-        printk("return -EINVAL\n");
         return -EINVAL;
     }
     index = ucontrol->value.integer.value[0];
@@ -321,7 +312,6 @@ static int Audio_SideGen_Amplitude_Set(struct snd_kcontrol *kcontrol, struct snd
 static int Audio_SideTone_Get(struct snd_kcontrol *kcontrol,
                               struct snd_ctl_elem_value *ucontrol)
 {
-    printk("Audio_SideTone_Get = %d\n", mEnableSidetone);
     ucontrol->value.integer.value[0] = mEnableSidetone;
     return 0;
 }
@@ -329,11 +319,9 @@ static int Audio_SideTone_Get(struct snd_kcontrol *kcontrol,
 static int Audio_SideTone_Set(struct snd_kcontrol *kcontrol, struct snd_ctl_elem_value *ucontrol)
 {
     int index = 0;
-    printk("%s()\n", __func__);
 
     if (ucontrol->value.enumerated.item[0] > ARRAY_SIZE(ENABLESIDETONE))
     {
-        printk("return -EINVAL\n");
         return -EINVAL;
     }
     index = ucontrol->value.integer.value[0];
@@ -356,10 +344,8 @@ static int Audio_ModemPcm_ASRC_Get(struct snd_kcontrol *kcontrol,
 
 static int AudioDebug_Setting_Set(struct snd_kcontrol *kcontrol, struct snd_ctl_elem_value *ucontrol)
 {
-    printk("%s()\n", __func__);
     if (ucontrol->value.enumerated.item[0] > ARRAY_SIZE(Audio_Debug_Setting))
     {
-        printk("return -EINVAL\n");
         return -EINVAL;
     }
     EnableSideGenHw(Soc_Aud_InterConnectionOutput_O03, Soc_Aud_MemIF_Direction_DIRECTION_OUTPUT, true);
@@ -369,9 +355,6 @@ static int AudioDebug_Setting_Set(struct snd_kcontrol *kcontrol, struct snd_ctl_
     msleep(5 * 1000);
     EnableSideGenHw(Soc_Aud_InterConnectionInput_I03, Soc_Aud_MemIF_Direction_DIRECTION_INPUT, false);
 
-    Ana_Log_Print();
-    Afe_Log_Print();
-
     return 0;
 }
 
@@ -430,16 +413,13 @@ static void Auddrv_I2S1GpioReset(void)
 static int AudioDebug_Setting_Get(struct snd_kcontrol *kcontrol,
                                   struct snd_ctl_elem_value *ucontrol)
 {
-    printk("%s()\n", __func__);
     return 0;
 }
 
 static int AudioI2S1_Setting_Set(struct snd_kcontrol *kcontrol, struct snd_ctl_elem_value *ucontrol)
 {
-    printk("%s()\n", __func__);
     if (ucontrol->value.enumerated.item[0] > ARRAY_SIZE(Audio_I2S1_Setting))
     {
-        printk("return -EINVAL\n");
         return -EINVAL;
     }
     AudioI2S1Setting = ucontrol->value.enumerated.item[0];
@@ -457,7 +437,6 @@ static int AudioI2S1_Setting_Set(struct snd_kcontrol *kcontrol, struct snd_ctl_e
 static int AudioI2S1_Setting_Get(struct snd_kcontrol *kcontrol,
                                  struct snd_ctl_elem_value *ucontrol)
 {
-    printk("%s()\n", __func__);
     ucontrol->value.enumerated.item[0] = AudioI2S1Setting;
     return 0;
 }
@@ -481,17 +460,14 @@ static int Audio_ModemPcm_ASRC_Set(struct snd_kcontrol *kcontrol, struct snd_ctl
 static int Audio_Ipoh_Setting_Get(struct snd_kcontrol *kcontrol,
                                   struct snd_ctl_elem_value *ucontrol)
 {
-    printk("%s()\n", __func__);
     ucontrol->value.integer.value[0] = AudDrvSuspend_ipoh_Status;
     return 0;
 }
 
 static int Audio_Ipoh_Setting_Set(struct snd_kcontrol *kcontrol, struct snd_ctl_elem_value *ucontrol)
 {
-    printk("+%s()\n", __func__);
     if (ucontrol->value.enumerated.item[0] > ARRAY_SIZE(Audio_IPOH_State))
     {
-        printk("return -EINVAL\n");
         return -EINVAL;
     }
     AudDrvSuspend_ipoh_Status = ucontrol->value.integer.value[0];
@@ -501,18 +477,15 @@ static int Audio_Ipoh_Setting_Set(struct snd_kcontrol *kcontrol, struct snd_ctl_
 static int Audio_Mode_Get(struct snd_kcontrol *kcontrol,
                           struct snd_ctl_elem_value *ucontrol)
 {
-    printk("Audio_SideTone_Get = %d\n", mAudio_Mode);
     ucontrol->value.integer.value[0] = mAudio_Mode;
     return 0;
 }
 
 static int Audio_Mode_Set(struct snd_kcontrol *kcontrol, struct snd_ctl_elem_value *ucontrol)
 {
-    printk("%s()\n", __func__);
 
     if (ucontrol->value.enumerated.item[0] > ARRAY_SIZE(ANDROID_AUDIO_MODE))
     {
-        printk("return -EINVAL\n");
         return -EINVAL;
     }
     mAudio_Mode = ucontrol->value.integer.value[0];
@@ -522,7 +495,6 @@ static int Audio_Mode_Set(struct snd_kcontrol *kcontrol, struct snd_ctl_elem_val
 static int Audio_Irqcnt1_Get(struct snd_kcontrol *kcontrol,
                              struct snd_ctl_elem_value *ucontrol)
 {
-    printk("Audio_Irqcnt1_Get \n");
 	AudDrv_ANA_Clk_On();
     AudDrv_Clk_On();
     ucontrol->value.integer.value[0] =   Afe_Get_Reg(AFE_IRQ_MCU_CNT1);
@@ -534,7 +506,6 @@ static int Audio_Irqcnt1_Get(struct snd_kcontrol *kcontrol,
 static int Audio_Irqcnt1_Set(struct snd_kcontrol *kcontrol, struct snd_ctl_elem_value *ucontrol)
 {
     uint32 irq1_cnt =  ucontrol->value.integer.value[0];
-    printk("%s()\n", __func__);
 	AudDrv_ANA_Clk_On();
     AudDrv_Clk_On();
     Afe_Set_Reg(AFE_IRQ_MCU_CNT1, irq1_cnt, 0xffffffff);
@@ -546,7 +517,6 @@ static int Audio_Irqcnt1_Set(struct snd_kcontrol *kcontrol, struct snd_ctl_elem_
 static int Audio_Irqcnt2_Get(struct snd_kcontrol *kcontrol,
                              struct snd_ctl_elem_value *ucontrol)
 {
-    printk("Audio_Irqcnt2_Get \n");
 	AudDrv_ANA_Clk_On();
     AudDrv_Clk_On();
     ucontrol->value.integer.value[0] =   Afe_Get_Reg(AFE_IRQ_MCU_CNT2);
@@ -558,7 +528,6 @@ static int Audio_Irqcnt2_Get(struct snd_kcontrol *kcontrol,
 static int Audio_Irqcnt2_Set(struct snd_kcontrol *kcontrol, struct snd_ctl_elem_value *ucontrol)
 {
     uint32 irq1_cnt =  ucontrol->value.integer.value[0];
-    printk("%s()\n", __func__);
 	AudDrv_ANA_Clk_On();
     AudDrv_Clk_On();
     Afe_Set_Reg(AFE_IRQ_MCU_CNT2, irq1_cnt, 0xffffffff);
@@ -573,7 +542,6 @@ static void GetAudioTrimOffset(int channels)
 {
     int Buffer_on_value = 0 , Buffer_offl_value = 0, Buffer_offr_value = 0;
     const int off_counter = 20, on_counter  = 20 , Const_DC_OFFSET = 2048;
-    printk("%s channels = %d\n", __func__, channels);
     // open headphone and digital part
     AudDrv_ANA_Clk_On();
     AudDrv_Clk_On();
@@ -604,7 +572,6 @@ static void GetAudioTrimOffset(int channels)
     #else
     Buffer_offl_value = 0;
     #endif
-    printk("Buffer_offl_value = %d \n", Buffer_offl_value);
     EnableTrimbuffer(false);
 
     // Get HPR off offset
@@ -618,7 +585,6 @@ static void GetAudioTrimOffset(int channels)
     #else
     Buffer_offr_value = 0;
     #endif
-    printk("Buffer_offr_value = %d \n", Buffer_offr_value);
     EnableTrimbuffer(false);
 
     switch (channels)
@@ -662,7 +628,6 @@ static void GetAudioTrimOffset(int channels)
     #endif
 
     mHplOffset = Buffer_on_value - Buffer_offl_value + Const_DC_OFFSET;
-    printk("Buffer_on_value = %d Buffer_offl_value = %d mHplOffset = %d \n", Buffer_on_value, Buffer_offl_value, mHplOffset);
 
     EnableTrimbuffer(false);
 
@@ -677,7 +642,6 @@ static void GetAudioTrimOffset(int channels)
     Buffer_on_value = 0;
     #endif
     mHprOffset = Buffer_on_value - Buffer_offr_value + Const_DC_OFFSET;
-    printk("Buffer_on_value = %d Buffer_offr_value = %d mHprOffset = %d \n", Buffer_on_value, Buffer_offr_value, mHprOffset);
 
     switch (channels)
     {
@@ -702,7 +666,6 @@ static int Audio_Hpl_Offset_Get(struct snd_kcontrol *kcontrol,
                                 struct snd_ctl_elem_value *ucontrol)
 {
 #ifndef EFUSE_HP_TRIM
-    printk("%s \n", __func__);
 	AudDrv_ANA_Clk_On();
     AudDrv_Clk_On();
     if (mHplCalibrated == false)
@@ -725,7 +688,6 @@ static int Audio_Hpl_Offset_Get(struct snd_kcontrol *kcontrol,
 static int Audio_Hpl_Offset_Set(struct snd_kcontrol *kcontrol, struct snd_ctl_elem_value *ucontrol)
 {
 #ifndef EFUSE_HP_TRIM
-    printk("%s()\n", __func__);
     mHplOffset = ucontrol->value.integer.value[0];
     SetHplTrimOffset(mHplOffset);
 #else
@@ -738,7 +700,6 @@ static int Audio_Hpr_Offset_Get(struct snd_kcontrol *kcontrol,
                                 struct snd_ctl_elem_value *ucontrol)
 {
 #ifndef EFUSE_HP_TRIM
-    printk("%s \n", __func__);
 	AudDrv_ANA_Clk_On();
     AudDrv_Clk_On();
     if (mHprCalibrated == false)
@@ -761,7 +722,6 @@ static int Audio_Hpr_Offset_Get(struct snd_kcontrol *kcontrol,
 static int Audio_Hpr_Offset_Set(struct snd_kcontrol *kcontrol, struct snd_ctl_elem_value *ucontrol)
 {
 #ifndef EFUSE_HP_TRIM
-    printk("%s()\n", __func__);
     mHprOffset = ucontrol->value.integer.value[0];
     SetHprTrimOffset(mHprOffset);
 #else
@@ -804,7 +764,6 @@ static const struct snd_kcontrol_new Audio_snd_routing_controls[] =
 void EnAble_Anc_Path(int state)
 {
     //6752 todo?
-    printk("%s not supported in 6752!!!\n ", __func__);
 
 }
 
@@ -812,14 +771,12 @@ static int m_Anc_State = AUDIO_ANC_ON;
 static int Afe_Anc_Get(struct snd_kcontrol *kcontrol,
                        struct snd_ctl_elem_value *ucontrol)
 {
-    printk("%s()\n", __func__);
     ucontrol->value.integer.value[0] = m_Anc_State;
     return 0;
 }
 
 static int Afe_Anc_Set(struct snd_kcontrol *kcontrol, struct snd_ctl_elem_value *ucontrol)
 {
-    printk("%s()\n", __func__);
     EnAble_Anc_Path(ucontrol->value.integer.value[0]);
     m_Anc_State = ucontrol->value.integer.value[0];
     return 0;
@@ -852,17 +809,14 @@ static int mtk_routing_pcm_open(struct snd_pcm_substream *substream)
     struct snd_pcm_runtime *runtime = substream->runtime;
     int err = 0;
     int ret = 0;
-    printk("mtk_routing_pcm_open\n");
 
     ret = snd_pcm_hw_constraint_list(runtime, 0, SNDRV_PCM_HW_PARAM_RATE,
                                      &constraints_sample_rates);
     if (ret < 0)
     {
-        printk("snd_pcm_hw_constraint_integer failed\n");
     }
 
     //print for hw pcm information
-    printk("mtk_routing_pcm_open runtime rate = %d channels = %d \n", runtime->rate, runtime->channels);
     if (substream->pcm->device & 1)
     {
         runtime->hw.info &= ~SNDRV_PCM_INFO_INTERLEAVED;
@@ -874,7 +828,6 @@ static int mtk_routing_pcm_open(struct snd_pcm_substream *substream)
 
     if (substream->stream == SNDRV_PCM_STREAM_PLAYBACK)
     {
-        printk("SNDRV_PCM_STREAM_PLAYBACK mtkalsa_playback_constraints\n");
     }
     else
     {
@@ -883,11 +836,9 @@ static int mtk_routing_pcm_open(struct snd_pcm_substream *substream)
 
     if (err < 0)
     {
-        printk("mtk_routing_pcm_close\n");
         mtk_routing_pcm_close(substream);
         return err;
     }
-    printk("mtk_routing_pcm_open return\n");
     return 0;
 }
 
@@ -897,7 +848,6 @@ static int mtk_routing_pcm_close(struct snd_pcm_substream *substream)
 }
 static int mtk_routing_pcm_trigger(struct snd_pcm_substream *substream, int cmd)
 {
-    printk("%s cmd = %d\n", __func__, cmd);
     switch (cmd)
     {
         case SNDRV_PCM_TRIGGER_START:
@@ -921,7 +871,6 @@ static int mtk_routing_pcm_silence(struct snd_pcm_substream *substream,
                                    int channel, snd_pcm_uframes_t pos,
                                    snd_pcm_uframes_t count)
 {
-    printk("mtk_routing_pcm_silence \n");
     return 0; /* do nothing */
 }
 
@@ -931,13 +880,11 @@ static void *dummy_page[2];
 static struct page *mtk_routing_pcm_page(struct snd_pcm_substream *substream,
                                          unsigned long offset)
 {
-    printk("dummy_pcm_page \n");
     return virt_to_page(dummy_page[substream->stream]); /* the same page */
 }
 
 static int mtk_routing_pcm_prepare(struct snd_pcm_substream *substream)
 {
-    printk("mtk_alsa_prepare \n");
     return 0;
 }
 
@@ -945,13 +892,11 @@ static int mtk_routing_pcm_hw_params(struct snd_pcm_substream *substream,
                                      struct snd_pcm_hw_params *hw_params)
 {
     int ret = 0;
-    PRINTK_AUDDRV("mtk_routing_pcm_hw_params \n");
     return ret;
 }
 
 static int mtk_routing_pcm_hw_free(struct snd_pcm_substream *substream)
 {
-    PRINTK_AUDDRV("mtk_routing_pcm_hw_free \n");
     return snd_pcm_lib_free_pages(substream);
 }
 
@@ -978,7 +923,6 @@ static struct snd_soc_platform_driver mtk_soc_routing_platform =
 
 static int mtk_afe_routing_probe(struct platform_device *pdev)
 {
-    printk("mtk_afe_routing_probe\n");
 
     pdev->dev.coherent_dma_mask = DMA_BIT_MASK(64);
     if (!pdev->dev.dma_mask)
@@ -991,7 +935,6 @@ static int mtk_afe_routing_probe(struct platform_device *pdev)
         dev_set_name(&pdev->dev, "%s", MT_SOC_ROUTING_PCM);
     }
 
-    printk("%s: dev name %s\n", __func__, dev_name(&pdev->dev));
     return snd_soc_register_platform(&pdev->dev,
                                      &mtk_soc_routing_platform);
 }
@@ -1000,13 +943,11 @@ static int mtk_asoc_routing_pcm_new(struct snd_soc_pcm_runtime *rtd)
 {
     int ret = 0;
     pruntimepcm  = rtd;
-    printk("%s\n", __func__);
     return ret;
 }
 
 static int mtk_afe_routing_platform_probe(struct snd_soc_platform *platform)
 {
-    printk("mtk_afe_routing_platform_probe\n");
 
     //add  controls
     snd_soc_add_platform_controls(platform, Audio_snd_routing_controls,
@@ -1028,7 +969,6 @@ static int mtk_afe_routing_remove(struct platform_device *pdev)
 //supend and resume function
 static int mtk_routing_pm_ops_suspend(struct device *device)
 {
-    printk("%s \n", __func__);
     if (get_voice_status() == true)
     {
         return 0;
@@ -1051,14 +991,12 @@ static int mtk_routing_pm_ops_suspend(struct device *device)
 
 static int mtk_pm_ops_suspend_ipo(struct device *device)
 {
-    printk("%s", __func__);
     AudDrvSuspend_ipoh_Status = true;
     return mtk_routing_pm_ops_suspend(device);
 }
 
 static int mtk_routing_pm_ops_resume(struct device *device)
 {
-    printk("%s \n ", __func__);
     if (AudDrvSuspendStatus == true)
     {
         AudDrv_Suspend_Clk_On();
@@ -1074,7 +1012,6 @@ static int mtk_routing_pm_ops_resume(struct device *device)
 
 static int mtk_pm_ops_resume_ipo(struct device *device)
 {
-    printk("%s", __func__);
     return mtk_routing_pm_ops_resume(device);
 }
 
@@ -1120,7 +1057,6 @@ static struct platform_device *soc_mtkafe_routing_dev;
 static int __init mtk_soc_routing_platform_init(void)
 {
     int ret = 0;
-    printk("%s\n", __func__);
 #ifndef CONFIG_OF
     soc_mtkafe_routing_dev = platform_device_alloc(MT_SOC_ROUTING_PCM , -1);
     if (!soc_mtkafe_routing_dev)
@@ -1146,7 +1082,6 @@ module_init(mtk_soc_routing_platform_init);
 static void __exit mtk_soc_routing_platform_exit(void)
 {
 
-    printk("%s\n", __func__);
     platform_driver_unregister(&mtk_afe_routing_driver);
 }
 module_exit(mtk_soc_routing_platform_exit);
diff --git a/sound/soc/soc-compress.c b/sound/soc/soc-compress.c
index 06a8000aa..ee4fe21a0 100644
--- a/sound/soc/soc-compress.c
+++ b/sound/soc/soc-compress.c
@@ -429,8 +429,6 @@ int soc_new_compress(struct snd_soc_pcm_runtime *rtd, int num)
 	rtd->compr = compr;
 	compr->private_data = rtd;
 
-	printk(KERN_INFO "compress asoc: %s <-> %s mapping ok\n", codec_dai->name,
-		cpu_dai->name);
 	return ret;
 
 compr_err:
diff --git a/sound/soc/soc-pcm.c b/sound/soc/soc-pcm.c
index 02d26915b..bb7b74d0c 100644
--- a/sound/soc/soc-pcm.c
+++ b/sound/soc/soc-pcm.c
@@ -2111,8 +2111,6 @@ int soc_new_pcm(struct snd_soc_pcm_runtime *rtd, int num)
 
 	pcm->private_free = platform->driver->pcm_free;
 out:
-	dev_info(rtd->card->dev, " %s <-> %s mapping ok\n", codec_dai->name,
-		cpu_dai->name);
 	return ret;
 }
 
-- 
2.19.0

